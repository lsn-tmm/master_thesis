/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf/lib/misc.py:46: H5pyDeprecationWarning: Using default_file_mode other than 'r' is deprecated. Pass the mode to h5py.File() instead.
  h5py.get_config().default_file_mode = 'a'
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/aqua/__init__.py:86: DeprecationWarning: The package qiskit.aqua is deprecated. It was moved/refactored to qiskit-terra For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_package('aqua', 'qiskit-terra')
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/__init__.py:170: DeprecationWarning: The package qiskit.chemistry is deprecated. It was moved/refactored to qiskit_nature (pip install qiskit-nature). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_package('chemistry', 'qiskit_nature', 'qiskit-nature')
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.10)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 12:57:32 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.100000000000 AA    0.000000000000   0.000000000000   2.078698737022 Bohr

nuclear repulsion = 3.84856153396364
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         3.34
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/tmpovnmte9h
max_memory 4000 MB (current use 244 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/tmpovnmte9h
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 244 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.418630626518806  LUMO (A1) = 0.0206095452814904
Initial guess E= -75.385360704429  |g|= 0.213468
macro= 0  E= -75.3974120868206  delta_E= -0.0120514  |g|= 0.213468  2 KF 5 JK
macro= 1  E= -75.397803642161  delta_E= -0.000391555  |g|= 0.0885315  2 KF 5 JK
macro= 2  E= -75.3962355842661  delta_E= 0.00156806  |g|= 0.0610426  2 KF 5 JK
macro= 3  E= -75.3975925092762  delta_E= -0.00135693  |g|= 0.104969  2 KF 5 JK
macro= 4  E= -75.3961828815294  delta_E= 0.00140963  |g|= 0.0596994  2 KF 5 JK
macro= 5  E= -75.397610267306  delta_E= -0.00142739  |g|= 0.104938  2 KF 5 JK
macro= 6  E= -75.396430300875  delta_E= 0.00117997  |g|= 0.0613215  2 KF 5 JK
macro= 7  E= -75.3976614469242  delta_E= -0.00123115  |g|= 0.101732  2 KF 5 JK
macro= 8  E= -75.3962581682711  delta_E= 0.00140328  |g|= 0.0605645  2 KF 5 JK
macro= 9  E= -75.3976558623047  delta_E= -0.00139769  |g|= 0.10474  2 KF 5 JK
macro= 10  E= -75.3962940249011  delta_E= 0.00136184  |g|= 0.0607054  2 KF 5 JK
macro= 11  E= -75.397667436905  delta_E= -0.00137341  |g|= 0.10429  2 KF 5 JK
macro= 12  E= -75.3962414623761  delta_E= 0.00142597  |g|= 0.0604123  2 KF 5 JK
macro= 13  E= -75.3976712514669  delta_E= -0.00142979  |g|= 0.105169  2 KF 5 JK
macro= 14  E= -75.3962273122266  delta_E= 0.00144394  |g|= 0.0603293  2 KF 5 JK
macro= 15  E= -75.3976784644345  delta_E= -0.00145115  |g|= 0.105444  2 KF 5 JK
macro= 16  E= -75.3961968118414  delta_E= 0.00148165  |g|= 0.0601446  2 KF 5 JK
macro= 17  E= -75.3976842458312  delta_E= -0.00148743  |g|= 0.105955  2 KF 5 JK
macro= 18  E= -75.3961735614699  delta_E= 0.00151068  |g|= 0.0599997  2 KF 5 JK
macro= 19  E= -75.3976907096491  delta_E= -0.00151715  |g|= 0.106351  2 KF 5 JK
macro= 20  E= -75.3961474555275  delta_E= 0.00154325  |g|= 0.0598305  2 KF 5 JK
macro= 21  E= -75.3976969280027  delta_E= -0.00154947  |g|= 0.106783  2 KF 5 JK
macro= 22  E= -75.3961228743294  delta_E= 0.00157405  |g|= 0.0596656  2 KF 5 JK
macro= 23  E= -75.3977032923067  delta_E= -0.00158042  |g|= 0.107187  2 KF 5 JK
macro= 24  E= -75.3960979883303  delta_E= 0.0016053  |g|= 0.0594924  2 KF 5 JK
macro= 25  E= -75.3977096219908  delta_E= -0.00161163  |g|= 0.107591  2 KF 5 JK
macro= 26  E= -75.3960736217724  delta_E= 0.001636  |g|= 0.0593168  2 KF 5 JK
macro= 27  E= -75.3977159829622  delta_E= -0.00164236  |g|= 0.107982  2 KF 5 JK
macro= 28  E= -75.396049464004  delta_E= 0.00166652  |g|= 0.0591364  2 KF 5 JK
macro= 29  E= -75.3977223349393  delta_E= -0.00167287  |g|= 0.108365  2 KF 5 JK
macro= 30  E= -75.3960256842696  delta_E= 0.00169665  |g|= 0.0589526  2 KF 5 JK
macro= 31  E= -75.3977286829705  delta_E= -0.001703  |g|= 0.108739  2 KF 5 JK
macro= 32  E= -75.3960022452476  delta_E= 0.00172644  |g|= 0.0587651  2 KF 5 JK
macro= 33  E= -75.3977350127209  delta_E= -0.00173277  |g|= 0.109103  2 KF 5 JK
macro= 34  E= -75.3959791939138  delta_E= 0.00175582  |g|= 0.0585745  2 KF 5 JK
macro= 35  E= -75.3977413181233  delta_E= -0.00176212  |g|= 0.109457  2 KF 5 JK
macro= 36  E= -75.3959565386262  delta_E= 0.00178478  |g|= 0.058381  2 KF 5 JK
macro= 37  E= -75.3977475897358  delta_E= -0.00179105  |g|= 0.109802  2 KF 5 JK
macro= 38  E= -75.3959343009048  delta_E= 0.00181329  |g|= 0.0581848  2 KF 5 JK
macro= 39  E= -75.3977538197475  delta_E= -0.00181952  |g|= 0.110137  2 KF 5 JK
macro= 40  E= -75.3959124937133  delta_E= 0.00184133  |g|= 0.0579864  2 KF 5 JK
macro= 41  E= -75.3977599999516  delta_E= -0.00184751  |g|= 0.110463  2 KF 5 JK
macro= 42  E= -75.3958911306097  delta_E= 0.00186887  |g|= 0.0577861  2 KF 5 JK
macro= 43  E= -75.397766122675  delta_E= -0.00187499  |g|= 0.110779  2 KF 5 JK
macro= 44  E= -75.3958702219981  delta_E= 0.0018959  |g|= 0.0575841  2 KF 5 JK
macro= 45  E= -75.3955500016104  delta_E= 0.00032022  |g|= 0.111085  2 KF 5 JK
macro= 46  E= -75.3969962193153  delta_E= -0.00144622  |g|= 0.101073  2 KF 5 JK
macro= 47  E= -75.3953716532053  delta_E= 0.00162457  |g|= 0.0943282  2 KF 5 JK
macro= 48  E= -75.3968396946074  delta_E= -0.00146804  |g|= 0.103408  2 KF 5 JK
macro= 49  E= -75.3953002007294  delta_E= 0.00153949  |g|= 0.0981369  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3953002007294  |g|= 0.0981369  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3953002007294

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/tmpovnmte9h
max_memory 4000 MB (current use 274 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/tmpovnmte9h
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 274 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.279070168560003  LUMO (A1) = 0.0278899555705998
Initial guess E= -75.3982891974821  |g|= 0.078722
macro= 0  E= -75.3993196957093  delta_E= -0.0010305  |g|= 0.078722  2 KF 5 JK
macro= 1  E= -75.3993437385083  delta_E= -2.40428e-05  |g|= 0.0226809  2 KF 5 JK
macro= 2  E= -75.3991678565729  delta_E= 0.000175882  |g|= 0.0158509  2 KF 5 JK
macro= 3  E= -75.3993469179908  delta_E= -0.000179061  |g|= 0.0332175  2 KF 5 JK
macro= 4  E= -75.399205425969  delta_E= 0.000141492  |g|= 0.0115955  2 KF 5 JK
macro= 5  E= -75.3993102226683  delta_E= -0.000104797  |g|= 0.0302505  2 KF 5 JK
macro= 6  E= -75.3992622388308  delta_E= 4.79838e-05  |g|= 0.0184051  2 KF 5 JK
macro= 7  E= -75.3993306457976  delta_E= -6.8407e-05  |g|= 0.0264182  2 KF 5 JK
macro= 8  E= -75.3992425677027  delta_E= 8.80781e-05  |g|= 0.0158328  2 KF 5 JK
macro= 9  E= -75.399330525014  delta_E= -8.79573e-05  |g|= 0.027492  2 KF 5 JK
macro= 10  E= -75.3992397167671  delta_E= 9.08082e-05  |g|= 0.0161273  2 KF 5 JK
macro= 11  E= -75.3993308491653  delta_E= -9.11324e-05  |g|= 0.0277906  2 KF 5 JK
macro= 12  E= -75.3992386385617  delta_E= 9.22106e-05  |g|= 0.0161878  2 KF 5 JK
macro= 13  E= -75.3993309317162  delta_E= -9.22932e-05  |g|= 0.0279069  2 KF 5 JK
macro= 14  E= -75.3992385472825  delta_E= 9.23844e-05  |g|= 0.0161894  2 KF 5 JK
macro= 15  E= -75.3993309528006  delta_E= -9.24055e-05  |g|= 0.0279351  2 KF 5 JK
macro= 16  E= -75.3992386047274  delta_E= 9.23481e-05  |g|= 0.0161726  2 KF 5 JK
macro= 17  E= -75.3993309817873  delta_E= -9.23771e-05  |g|= 0.0279435  2 KF 5 JK
macro= 18  E= -75.3992385617115  delta_E= 9.24201e-05  |g|= 0.0161578  2 KF 5 JK
macro= 19  E= -75.3993310267476  delta_E= -9.2465e-05  |g|= 0.0279558  2 KF 5 JK
macro= 20  E= -75.3992384309984  delta_E= 9.25957e-05  |g|= 0.0161477  2 KF 5 JK
macro= 21  E= -75.3993310799485  delta_E= -9.2649e-05  |g|= 0.0279736  2 KF 5 JK
macro= 22  E= -75.3992382663113  delta_E= 9.28136e-05  |g|= 0.01614  2 KF 5 JK
macro= 23  E= -75.3993311354303  delta_E= -9.28691e-05  |g|= 0.0279939  2 KF 5 JK
macro= 24  E= -75.3992380964912  delta_E= 9.30389e-05  |g|= 0.016133  2 KF 5 JK
macro= 25  E= -75.3993311910432  delta_E= -9.30946e-05  |g|= 0.0280147  2 KF 5 JK
macro= 26  E= -75.3992379287927  delta_E= 9.32623e-05  |g|= 0.0161257  2 KF 5 JK
macro= 27  E= -75.3993312465922  delta_E= -9.33178e-05  |g|= 0.0280354  2 KF 5 JK
macro= 28  E= -75.3992377623555  delta_E= 9.34842e-05  |g|= 0.0161182  2 KF 5 JK
macro= 29  E= -75.3993313023541  delta_E= -9.354e-05  |g|= 0.0280561  2 KF 5 JK
macro= 30  E= -75.3992375954077  delta_E= 9.37069e-05  |g|= 0.0161104  2 KF 5 JK
macro= 31  E= -75.3993313585251  delta_E= -9.37631e-05  |g|= 0.0280768  2 KF 5 JK
macro= 32  E= -75.3992374270987  delta_E= 9.39314e-05  |g|= 0.0161025  2 KF 5 JK
macro= 33  E= -75.3993314151623  delta_E= -9.39881e-05  |g|= 0.0280977  2 KF 5 JK
macro= 34  E= -75.3992372572783  delta_E= 9.41579e-05  |g|= 0.0160945  2 KF 5 JK
macro= 35  E= -75.3993314722546  delta_E= -9.4215e-05  |g|= 0.0281186  2 KF 5 JK
macro= 36  E= -75.3992370860372  delta_E= 9.43862e-05  |g|= 0.0160863  2 KF 5 JK
macro= 37  E= -75.3993315297767  delta_E= -9.44437e-05  |g|= 0.0281397  2 KF 5 JK
macro= 38  E= -75.3992369134766  delta_E= 9.46163e-05  |g|= 0.0160779  2 KF 5 JK
macro= 39  E= -75.3993315877084  delta_E= -9.46742e-05  |g|= 0.0281609  2 KF 5 JK
macro= 40  E= -75.3992367396583  delta_E= 9.48481e-05  |g|= 0.0160694  2 KF 5 JK
macro= 41  E= -75.3993316460345  delta_E= -9.49064e-05  |g|= 0.0281822  2 KF 5 JK
macro= 42  E= -75.3992365646208  delta_E= 9.50814e-05  |g|= 0.0160608  2 KF 5 JK
macro= 43  E= -75.3993317047423  delta_E= -9.51401e-05  |g|= 0.0282035  2 KF 5 JK
macro= 44  E= -75.3992363883949  delta_E= 9.53163e-05  |g|= 0.016052  2 KF 5 JK
macro= 45  E= -75.3993317638193  delta_E= -9.53754e-05  |g|= 0.028225  2 KF 5 JK
macro= 46  E= -75.3992362110129  delta_E= 9.55528e-05  |g|= 0.0160431  2 KF 5 JK
macro= 47  E= -75.3993318232527  delta_E= -9.56122e-05  |g|= 0.0282465  2 KF 5 JK
macro= 48  E= -75.3992360325095  delta_E= 9.57907e-05  |g|= 0.0160341  2 KF 5 JK
macro= 49  E= -75.3993318830288  delta_E= -9.58505e-05  |g|= 0.0282681  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3993318830288  |g|= 0.0282681  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3993318830288
**** SCF Summaries ****
Total Energy =                         -75.399331883028793
Nuclear Repulsion Energy =               3.848561533963636
One-electron Energy =                 -111.699039208867362
Two-electron Energy =                   32.451145791874936
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    0    1    0    0    0    0
single occ                     0    1    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6386335920951  | -20.6555605707806  | -20.6217066134097  occ= 2
MO #2   (A1  #2 ) energy= -1.27671210182542  | -1.34913627743004  | -1.20428792622081  occ= 2
MO #3   (A1  #3 ) energy= -0.626800478480615 | -0.645177992197041 | -0.608422964764189 occ= 2
MO #4   (E1y #1 ) energy= -0.534515218142984 | -0.553709926937021 | -0.515320509348947 occ= 2
MO #5   (E1x #1 ) energy= -0.244934953356888 | -0.643424844029083 | 0.153554937315303  occ= 1
MO #6   (A1  #4 ) energy= 0.0285010727465862 | 0.0277230279954786 | 0.0292791174976921 occ= 0
MO #7   (A1  #5 ) energy= 0.134702348522989  | 0.133068882885125  | 0.136335814160857  occ= 0
MO #8   (E1x #2 ) energy= 0.161899546763807  | 0.155959626085647  | 0.167839467441967  occ= 0
MO #9   (E1y #2 ) energy= 0.166076015206294  | 0.165254581901202  | 0.166897448511386  occ= 0
MO #10  (A1  #6 ) energy= 0.17738732522374   | 0.175007592600408  | 0.179767057847074  occ= 0
MO #11  (A1  #7 ) energy= 0.258911323999203  | 0.256569765853608  | 0.261252882144799  occ= 0
MO #12  (E1x #3 ) energy= 0.267403781938514  | 0.264800695662509  | 0.27000686821452   occ= 0
MO #13  (E1y #3 ) energy= 0.270811779798612  | 0.270471812339891  | 0.271151747257331  occ= 0
MO #14  (A1  #8 ) energy= 0.403166354999291  | 0.398763414083049  | 0.407569295915517  occ= 0
MO #15  (A1  #9 ) energy= 0.621310804036008  | 0.616851225623589  | 0.625770382448417  occ= 0
MO #16  (E2x #1 ) energy= 0.646049783002758  | 0.636850059435888  | 0.655249506569628  occ= 0
MO #17  (E2y #1 ) energy= 0.646049783002756  | 0.636850059435885  | 0.655249506569626  occ= 0
MO #18  (E1x #4 ) energy= 0.730040587115013  | 0.720982103578144  | 0.739099070651884  occ= 0
MO #19  (E1y #4 ) energy= 0.735832827296516  | 0.734612305692191  | 0.737053348900839  occ= 0
MO #20  (A1  #10) energy= 0.84730107210717   | 0.844647545115126  | 0.849954599099216  occ= 0
MO #21  (E1x #5 ) energy= 0.895372239227331  | 0.876592731738668  | 0.914151746715997  occ= 0
MO #22  (E1y #5 ) energy= 0.898182442198712  | 0.895766002600645  | 0.900598881796777  occ= 0
MO #23  (E2x #2 ) energy= 0.926789809956839  | 0.925055226353899  | 0.92852439355978   occ= 0
MO #24  (E2y #2 ) energy= 0.926789809956838  | 0.925055226353898  | 0.928524393559779  occ= 0
MO #25  (A1  #11) energy= 0.969217181895691  | 0.965001151566324  | 0.973433212225086  occ= 0
MO #26  (A1  #12) energy= 0.978707979692605  | 0.973511471003346  | 0.983904488381865  occ= 0
MO #27  (E1x #6 ) energy= 0.986088119331024  | 0.953490302218641  | 1.01868593644341   occ= 0
MO #28  (E1y #6 ) energy= 0.990966766659988  | 0.987003287330029  | 0.994930245989947  occ= 0
MO #29  (E1x #7 ) energy= 1.44149317882482   | 1.43431207824193   | 1.44867427940771   occ= 0
MO #30  (E1y #7 ) energy= 1.45033340108297   | 1.4492342336823    | 1.45143256848364   occ= 0
MO #31  (A1  #13) energy= 1.73819533750568   | 1.73029769485135   | 1.74609298015994   occ= 0
MO #32  (A1  #14) energy= 1.87047436919956   | 1.85895213403356   | 1.88199660436554   occ= 0
MO #33  (E3x #1 ) energy= 2.05746944778987   | 2.04728766781446   | 2.06765122776528   occ= 0
MO #34  (E3y #1 ) energy= 2.05746944778987   | 2.04728766781446   | 2.06765122776528   occ= 0
MO #35  (E2x #3 ) energy= 2.13382187030546   | 2.1008726675184    | 2.16677107309252   occ= 0
MO #36  (E2y #3 ) energy= 2.13382187030546   | 2.1008726675184    | 2.16677107309252   occ= 0
MO #37  (E1x #8 ) energy= 2.25020903467984   | 2.22313384892616   | 2.27728422043351   occ= 0
MO #38  (E1y #8 ) energy= 2.26576573813156   | 2.26160768495513   | 2.26992379130799   occ= 0
MO #39  (E2x #4 ) energy= 2.2942571442868    | 2.28363914804418   | 2.30487514052941   occ= 0
MO #40  (E2y #4 ) energy= 2.29425714428679   | 2.28363914804418   | 2.30487514052941   occ= 0
MO #41  (A1  #15) energy= 2.41300145522472   | 2.40488956718346   | 2.42111334326596   occ= 0
MO #42  (A1  #16) energy= 2.67273397924241   | 2.66332060768178   | 2.68214735080306   occ= 0
MO #43  (E1x #9 ) energy= 2.71536567209684   | 2.70130857353561   | 2.72942277065807   occ= 0
MO #44  (E1y #9 ) energy= 2.73607997399517   | 2.73327160970532   | 2.738888338285     occ= 0
MO #45  (A1  #17) energy= 3.36261491789369   | 3.35901419579343   | 3.36621563999395   occ= 0
MO #46  (E2x #5 ) energy= 3.94057493514318   | 3.93878457116078   | 3.94236529912558   occ= 0
MO #47  (E2y #5 ) energy= 3.94057493514318   | 3.93878457116078   | 3.94236529912558   occ= 0
MO #48  (E1x #10) energy= 4.02342609987122   | 3.96919951165597   | 4.07765268808646   occ= 0
MO #49  (E1y #10) energy= 4.0346609971851    | 4.02740601776568   | 4.04191597660452   occ= 0
MO #50  (E1x #11) energy= 4.2684693038279    | 4.26666246486371   | 4.27027614279209   occ= 0
MO #51  (E1y #11) energy= 4.27582448525384   | 4.27546999791039   | 4.27617897259729   occ= 0
MO #52  (A1  #18) energy= 4.38031694563822   | 4.3748734196452    | 4.38576047163124   occ= 0
MO #53  (A1  #19) energy= 4.86883722048551   | 4.86406648723594   | 4.87360795373509   occ= 0
MO #54  (E1x #12) energy= 4.92150778847825   | 4.90080283018768   | 4.94221274676882   occ= 0
MO #55  (E1y #12) energy= 4.94004998334186   | 4.93641246613052   | 4.94368750055321   occ= 0
MO #56  (A1  #20) energy= 6.24144725627728   | 6.23142830836641   | 6.25146620418816   occ= 0
MO #57  (E3x #2 ) energy= 6.46131249496989   | 6.43630441537021   | 6.48632057456957   occ= 0
MO #58  (E3y #2 ) energy= 6.46131249496989   | 6.43630441537021   | 6.48632057456957   occ= 0
MO #59  (E2x #6 ) energy= 6.57316095326597   | 6.55512503359541   | 6.59119687293653   occ= 0
MO #60  (E2y #6 ) energy= 6.57316095326597   | 6.55512503359541   | 6.59119687293653   occ= 0
MO #61  (E1x #13) energy= 6.90668261614647   | 6.88590542995165   | 6.9274598023413    occ= 0
MO #62  (E1y #13) energy= 6.94212972997052   | 6.93742838657884   | 6.94683107336217   occ= 0
MO #63  (E2x #7 ) energy= 7.0069400601483    | 6.96522910416661   | 7.04865101612999   occ= 0
MO #64  (E2y #7 ) energy= 7.00694006014831   | 6.96522910416661   | 7.04865101613      occ= 0
MO #65  (E1x #14) energy= 7.19343289506666   | 7.1542735836566    | 7.23259220647672   occ= 0
MO #66  (E1y #14) energy= 7.22438874204986   | 7.21787103101027   | 7.23090645308943   occ= 0
MO #67  (A1  #21) energy= 7.25607448576518   | 7.2473243246471    | 7.2648246468833    occ= 0
MO #68  (A1  #22) energy= 7.49829261681626   | 7.48427875819657   | 7.51230647543597   occ= 0
MO #69  (A1  #23) energy= 11.0204178016405   | 11.0051953953589   | 11.0356402079224   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.86663
pop of  0 O 3s        0.00315
pop of  0 O 4s        0.00093
pop of  0 O 5s        0.00022
pop of  0 O 2px       0.99741
pop of  0 O 2py       1.99296
pop of  0 O 2pz       1.46265
pop of  0 O 3px       0.00018
pop of  0 O 3py       0.00145
pop of  0 O 3pz       0.00051
pop of  0 O 4px       0.00068
pop of  0 O 4py       0.00049
pop of  0 O 4pz       0.00159
pop of  0 O 5px       0.00010
pop of  0 O 5py       0.00025
pop of  0 O 5pz       0.00008
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00133
pop of  0 O 3dz^2     0.00571
pop of  0 O 3dxz      0.00066
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00032
pop of  0 O 4dz^2     0.00045
pop of  0 O 4dxz      0.00015
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00005
pop of  0 O 5dz^2     0.00009
pop of  0 O 5dxz      0.00002
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00015
pop of  0 O 4f 0      0.00051
pop of  0 O 4f 1      0.00001
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00005
pop of  0 O 5f 0      0.00009
pop of  0 O 5f 1      0.00001
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.64511
pop of  1 H 2s        0.00825
pop of  1 H 3s        0.00217
pop of  1 H 4s        0.00011
pop of  1 H 2px       0.00034
pop of  1 H 2py       0.00279
pop of  1 H 2pz       0.00106
pop of  1 H 3px       0.00027
pop of  1 H 3py       0.00001
pop of  1 H 3pz       0.00055
pop of  1 H 4px       0.00010
pop of  1 H 4py       0.00001
pop of  1 H 4pz       0.00003
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00014
pop of  1 H 3dz^2     0.00010
pop of  1 H 3dxz      0.00006
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00000
pop of  1 H 4dz^2     0.00002
pop of  1 H 4dxz      0.00000
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.33888
charge of  1H =      0.33888
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.86221
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.10)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 12:59:32 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       953.08

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Overwritten attributes  get_ovlp get_hcore  of <class 'pyscf.soscf.newton_ah.newton.<locals>.SecondOrderROHF'>
Overwritten attributes  get_ovlp get_hcore  of <class 'pyscf.scf.rohf.ROHF'>




******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/tmpwqugh615
max_memory 4000 MB (current use 379 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/tmpwqugh615
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 379 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.24493495335689  LUMO = 0.317678580506855
Initial guess E= -75.3993370618799  |g|= 0.000351861
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf/gto/mole.py:1089: UserWarning: Function mol.dumps drops attribute nao_nr because it is not JSON-serializable
  warnings.warn(msg)
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf/gto/mole.py:1089: UserWarning: Function mol.dumps drops attribute energy_nuc because it is not JSON-serializable
  warnings.warn(msg)
macro= 0  E= -75.3993371192011  delta_E= -5.73212e-08  |g|= 0.000351861  1 KF 4 JK
macro= 1  E= -75.3993371192011  delta_E= 0  |g|= 1.24553e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3993371192011  |g|= 1.24553e-08  total 3 KF 9 JK
converged SCF energy = -75.3993371192011
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.10)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 12:59:35 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       975.61

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/tmpsxz4er23
max_memory 4000 MB (current use 392 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/tmpsxz4er23
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 392 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.244935010246981  LUMO = 0.317678607228057
Initial guess E= -75.3993370618774  |g|= 0.000351881
macro= 0  E= -75.399337119201  delta_E= -5.73236e-08  |g|= 0.000351881  1 KF 3 JK
macro= 1  E= -75.399337119201  delta_E= 0  |g|= 1.2438e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.399337119201  |g|= 1.2438e-08  total 3 KF 8 JK
converged SCF energy = -75.399337119201
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf/fci/direct_nosym.py:179: UserWarning: direct_nosym.kernel is not able to diagonalize non-Hermitian Hamiltonian. If h1e and h2e is not hermtian, calling symmetric diagonlization in eig can lead to wrong results.
  warnings.warn('direct_nosym.kernel is not able to diagonalize '
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.10)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 12:59:38 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       996.19

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/tmpjx3rq4ii
max_memory 4000 MB (current use 565 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/tmpjx3rq4ii
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 565 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.245336149360992  LUMO = 0.0284947745711104
Initial guess E= -75.3999787199748  |g|= 0.00865088
macro= 0  E= -75.3999979677327  delta_E= -1.92478e-05  |g|= 0.000369108  2 KF 7 JK
macro= 1  E= -75.3999979677327  delta_E= -4.26326e-14  |g|= 7.74095e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3999979677327  |g|= 7.74095e-06  total 4 KF 12 JK
converged SCF energy = -75.3999979677327
u+d contributions  -0.05772615550652736
uu+dd contributions  -0.08808945100054512
ud contributions  -0.1814958341402511
u+d contributions  -0.008313871891176626
uu+dd contributions  -0.038573005939148135
ud contributions  -0.13178697575043063
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.10)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 12:59:45 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:      1044.31

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/tmpms575_rp
max_memory 4000 MB (current use 564 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/tmpms575_rp
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 564 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.24460763681302  LUMO = 0.317765488055372
Initial guess E= -75.3993370371019  |g|= 0.000359541
macro= 0  E= -75.399337119201  delta_E= -8.20991e-08  |g|= 0.000359541  1 KF 2 JK
macro= 1  E= -75.399337119201  delta_E= 0  |g|= 3.16805e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.399337119201  |g|= 3.16805e-08  total 3 KF 7 JK
converged SCF energy = -75.399337119201
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.10)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 12:59:48 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:      1062.46

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/tmpssh_6i4s
max_memory 4000 MB (current use 728 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/tmpssh_6i4s
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 728 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.245007270398787  LUMO = 0.0284921057485709
Initial guess E= -75.3999310149413  |g|= 0.00628945
macro= 0  E= -75.3999446513492  delta_E= -1.36364e-05  |g|= 0.000275313  2 KF 7 JK
macro= 1  E= -75.3999446513491  delta_E= 1.42109e-14  |g|= 4.72141e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3999446513491  |g|= 4.72141e-06  total 4 KF 12 JK
converged SCF energy = -75.3999446513491
/home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/../../../src/qiskit_subroutines.py:25: DeprecationWarning: The package qiskit.aqua.operators is deprecated. It was moved/refactored to qiskit.opflow (pip install qiskit-terra). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  c_list = [WeightedPauliOperator([(0.5,a1),(-0.5j,a2)]) for a1,a2 in a_list]
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/fermionic_operator.py:394: DeprecationWarning: The variable qiskit.aqua.aqua_globals is deprecated. It was moved/refactored to qiskit.utils.algorithm_globals (pip install qiskit-terra). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  task_args=(threshold,), num_processes=aqua_globals.num_processes)
/home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/../../../src/qiskit_subroutines.py:19: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  a_x = np.asarray(zmask,dtype=np.bool)
/home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.10/../../../src/qiskit_subroutines.py:20: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  a_z = np.asarray(zeros,dtype=np.bool)
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/quantum_info/operators/symplectic/pauli.py:195: DeprecationWarning: Initializing Pauli from `Pauli(z=z, x=x)` kwargs is deprecated as of version 0.17.0 and will be removed no earlier than 3 months after the release date. Use tuple initialization `Pauli((z, x))` instead.
  base_z, base_x, base_phase = self._from_array_deprecated(z, x)
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/aqua/components/optimizers/optimizer.py:49: DeprecationWarning: The package qiskit.aqua.components.optimizers is deprecated. It was moved/refactored to qiskit.algorithms.optimizers (pip install qiskit-terra). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_package('aqua.components.optimizers',
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/aqua/quantum_instance.py:135: DeprecationWarning: The class qiskit.aqua.QuantumInstance is deprecated. It was moved/refactored to qiskit.utils.QuantumInstance (pip install qiskit-terra). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_class('aqua.QuantumInstance',
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/components/initial_states/hartree_fock.py:56: UserWarning: two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
  warnings.warn('two_qubit_reduction only works with parity qubit mapping '
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/components/initial_states/hartree_fock.py:61: DeprecationWarning: The HartreeFock class is deprecated as of Aqua 0.9 and will be removed no earlier than 3 months after the release date. Instead, all algorithms and circuits accept a plain QuantumCircuit. 
  super().__init__()
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/aqua/components/variational_forms/variational_form.py:48: DeprecationWarning: The package qiskit.aqua.components.variational_forms is deprecated. For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_package('aqua.components.variational_forms')
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/aqua/algorithms/vq_algorithm.py:70: DeprecationWarning: The class qiskit.aqua.algorithms.VQAlgorithm is deprecated. It was moved/refactored to qiskit.algorithms.VariationalAlgorithm (pip install qiskit-terra). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_class('aqua.algorithms.VQAlgorithm',
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/components/initial_states/hartree_fock.py:56: UserWarning: two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
  warnings.warn('two_qubit_reduction only works with parity qubit mapping '
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/components/initial_states/hartree_fock.py:61: DeprecationWarning: The HartreeFock class is deprecated as of Aqua 0.9 and will be removed no earlier than 3 months after the release date. Instead, all algorithms and circuits accept a plain QuantumCircuit. 
  super().__init__()
u+d contributions  -0.02476608715291345
uu+dd contributions  -0.047579028241898455
ud contributions  -0.1064330946541306
u+d contributions  -0.0057410082474450815
uu+dd contributions  -0.028524321094605388
ud contributions  -0.08736344144548346
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.966437, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.240800, i_min=0
In the tapering subroutine, i=2, E(i)=-75.399337, i_min=1
In the tapering subroutine, i=3, E(i)=-75.069930, i_min=2
In the tapering subroutine, i=4, E(i)=-75.394842, i_min=2
In the tapering subroutine, i=5, E(i)=-75.058302, i_min=2
In the tapering subroutine, i=6, E(i)=-74.846667, i_min=2
In the tapering subroutine, i=7, E(i)=-75.096274, i_min=2
In the tapering subroutine, i=8, E(i)=-75.240800, i_min=2
In the tapering subroutine, i=9, E(i)=-75.244701, i_min=2
In the tapering subroutine, i=10, E(i)=-75.093253, i_min=2
In the tapering subroutine, i=11, E(i)=-75.399337, i_min=2
In the tapering subroutine, i=12, E(i)=-75.080886, i_min=2
In the tapering subroutine, i=13, E(i)=-75.394842, i_min=2
In the tapering subroutine, i=14, E(i)=-75.096274, i_min=2
In the tapering subroutine, i=15, E(i)=-74.885057, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
overlap matrix condition number 0.013529924203 0.999684834173 
overlap matrix condition number 0.000490159458 0.999684834173 
overlap matrix condition number 0.000805325285 0.999194674715 
overlap matrix condition number 0.000000000000 0.986470075797 
overlap matrix condition number -0.000000000000 1.003732979750 
u+d contributions  -0.005740996532011344
uu+dd contributions  -0.028524339291935357
ud contributions  -0.08734115624441008
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
overlap matrix condition number 0.013474381018 0.999700547605 
overlap matrix condition number 0.000423735979 0.999700547605 
overlap matrix condition number 0.000714084999 0.999281363221 
overlap matrix condition number 0.000000089946 0.986525487403 
overlap matrix condition number -0.000000000000 1.003637348146 
u+d contributions  -0.005743441288271439
uu+dd contributions  -0.028527701369045394
ud contributions  -0.0873464415520141
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
overlap matrix condition number 0.013474381018 0.999700547605 
overlap matrix condition number 0.000423735979 0.999700547605 
overlap matrix condition number 0.000714084999 0.999281363221 
overlap matrix condition number 0.000000089946 0.986525487403 
overlap matrix condition number -0.000000000000 1.003637348146 
u+d contributions  -0.005743441288271439
uu+dd contributions  -0.028527701369045394
ud contributions  -0.0873464415520141
