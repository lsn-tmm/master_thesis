/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf/lib/misc.py:46: H5pyDeprecationWarning: Using default_file_mode other than 'r' is deprecated. Pass the mode to h5py.File() instead.
  h5py.get_config().default_file_mode = 'a'
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/aqua/__init__.py:86: DeprecationWarning: The package qiskit.aqua is deprecated. It was moved/refactored to qiskit-terra For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_package('aqua', 'qiskit-terra')
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/__init__.py:170: DeprecationWarning: The package qiskit.chemistry is deprecated. It was moved/refactored to qiskit_nature (pip install qiskit-nature). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_package('chemistry', 'qiskit_nature', 'qiskit-nature')
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.20)]],basis='aug-cc-pvqz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 13:45:48 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.200000000000 AA    0.000000000000   0.000000000000   2.267671349478 Bohr

nuclear repulsion = 3.5278480728
point group symmetry = Coov
num. orbitals of irrep A1 = 34
num. orbitals of irrep E1x = 23
num. orbitals of irrep E1y = 23
num. orbitals of irrep E2x = 14
num. orbitals of irrep E2y = 14
num. orbitals of irrep E3x = 7
num. orbitals of irrep E3y = 7
num. orbitals of irrep E4x = 2
num. orbitals of irrep E4y = 2
number of shells = 33
number of NR pGTOs = 141
number of NR cGTOs = 126
basis = aug-cc-pvqz
ecp = {}
CPU time:         4.89
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y E4x E4y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/tmporbd8vai
max_memory 4000 MB (current use 243 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/tmporbd8vai
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 243 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.411392192464715  LUMO (A1) = 0.00984871121321182
Initial guess E= -75.365251026655  |g|= 0.220852
macro= 0  E= -75.3800127577398  delta_E= -0.0147617  |g|= 0.220852  2 KF 5 JK
macro= 1  E= -75.3763553187497  delta_E= 0.00365744  |g|= 0.0884616  2 KF 5 JK
macro= 2  E= -75.3794859664222  delta_E= -0.00313065  |g|= 0.127523  2 KF 5 JK
macro= 3  E= -75.3795773127565  delta_E= -9.13463e-05  |g|= 0.0818946  2 KF 5 JK
macro= 4  E= -75.3798883176453  delta_E= -0.000311005  |g|= 0.0906523  2 KF 5 JK
macro= 5  E= -75.3783686501407  delta_E= 0.00151967  |g|= 0.0612016  2 KF 5 JK
macro= 6  E= -75.3798510637921  delta_E= -0.00148241  |g|= 0.114142  2 KF 5 JK
macro= 7  E= -75.3782658339608  delta_E= 0.00158523  |g|= 0.0614817  2 KF 5 JK
macro= 8  E= -75.3798578658597  delta_E= -0.00159203  |g|= 0.115666  2 KF 5 JK
macro= 9  E= -75.3786323289802  delta_E= 0.00122554  |g|= 0.0630262  2 KF 5 JK
macro= 10  E= -75.3798900217722  delta_E= -0.00125769  |g|= 0.109557  2 KF 5 JK
macro= 11  E= -75.3785659100507  delta_E= 0.00132411  |g|= 0.0622533  2 KF 5 JK
macro= 12  E= -75.3798925640425  delta_E= -0.00132665  |g|= 0.110425  2 KF 5 JK
macro= 13  E= -75.3785396671135  delta_E= 0.0013529  |g|= 0.0620679  2 KF 5 JK
macro= 14  E= -75.3798992560117  delta_E= -0.00135959  |g|= 0.110855  2 KF 5 JK
macro= 15  E= -75.3785116588355  delta_E= 0.0013876  |g|= 0.0619328  2 KF 5 JK
macro= 16  E= -75.3799057657911  delta_E= -0.00139411  |g|= 0.111338  2 KF 5 JK
macro= 17  E= -75.3784827403628  delta_E= 0.00142303  |g|= 0.0617878  2 KF 5 JK
macro= 18  E= -75.3799123227936  delta_E= -0.00142958  |g|= 0.111826  2 KF 5 JK
macro= 19  E= -75.3784542794895  delta_E= 0.00145804  |g|= 0.0616451  2 KF 5 JK
macro= 20  E= -75.3799189496873  delta_E= -0.00146467  |g|= 0.112295  2 KF 5 JK
macro= 21  E= -75.3784259616246  delta_E= 0.00149299  |g|= 0.0614996  2 KF 5 JK
macro= 22  E= -75.3799256174831  delta_E= -0.00149966  |g|= 0.112754  2 KF 5 JK
macro= 23  E= -75.3783979102028  delta_E= 0.00152771  |g|= 0.0613506  2 KF 5 JK
macro= 24  E= -75.3799323181149  delta_E= -0.00153441  |g|= 0.1132  2 KF 5 JK
macro= 25  E= -75.3783701477237  delta_E= 0.00156217  |g|= 0.0611974  2 KF 5 JK
macro= 26  E= -75.3799390414171  delta_E= -0.00156889  |g|= 0.113634  2 KF 5 JK
macro= 27  E= -75.3783427180356  delta_E= 0.00159632  |g|= 0.0610402  2 KF 5 JK
macro= 28  E= -75.3799457779696  delta_E= -0.00160306  |g|= 0.114055  2 KF 5 JK
macro= 29  E= -75.3783156533095  delta_E= 0.00163012  |g|= 0.0608788  2 KF 5 JK
macro= 30  E= -75.3799525182061  delta_E= -0.00163686  |g|= 0.114465  2 KF 5 JK
macro= 31  E= -75.3782889856115  delta_E= 0.00166353  |g|= 0.0607135  2 KF 5 JK
macro= 32  E= -75.379959252536  delta_E= -0.00167027  |g|= 0.114863  2 KF 5 JK
macro= 33  E= -75.3782627430556  delta_E= 0.00169651  |g|= 0.0605445  2 KF 5 JK
macro= 34  E= -75.3799659713669  delta_E= -0.00170323  |g|= 0.115248  2 KF 5 JK
macro= 35  E= -75.3782369512814  delta_E= 0.00172902  |g|= 0.060372  2 KF 5 JK
macro= 36  E= -75.3799726651638  delta_E= -0.00173571  |g|= 0.115621  2 KF 5 JK
macro= 37  E= -75.3782116329665  delta_E= 0.00176103  |g|= 0.0601964  2 KF 5 JK
macro= 38  E= -75.3799793245298  delta_E= -0.00176769  |g|= 0.115982  2 KF 5 JK
macro= 39  E= -75.3781868080635  delta_E= 0.00179252  |g|= 0.060018  2 KF 5 JK
macro= 40  E= -75.379985940273  delta_E= -0.00179913  |g|= 0.116331  2 KF 5 JK
macro= 41  E= -75.3781624937763  delta_E= 0.00182345  |g|= 0.0598371  2 KF 5 JK
macro= 42  E= -75.3799925034775  delta_E= -0.00183001  |g|= 0.116668  2 KF 5 JK
macro= 43  E= -75.3781387046646  delta_E= 0.0018538  |g|= 0.0596541  2 KF 5 JK
macro= 44  E= -75.3799990055678  delta_E= -0.0018603  |g|= 0.116994  2 KF 5 JK
macro= 45  E= -75.378115452715  delta_E= 0.00188355  |g|= 0.0594693  2 KF 5 JK
macro= 46  E= -75.3800054383648  delta_E= -0.00188999  |g|= 0.117308  2 KF 5 JK
macro= 47  E= -75.3780927474512  delta_E= 0.00191269  |g|= 0.059283  2 KF 5 JK
macro= 48  E= -75.3800117941362  delta_E= -0.00191905  |g|= 0.11761  2 KF 5 JK
macro= 49  E= -75.3780705960442  delta_E= 0.0019412  |g|= 0.0590956  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3780705960442  |g|= 0.0590956  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3780705960442

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y E4x E4y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/tmporbd8vai
max_memory 4000 MB (current use 512 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/tmporbd8vai
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 512 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.208998058762629  LUMO (A1) = 0.0250910569282036
Initial guess E= -75.380812127118  |g|= 0.0615528
macro= 0  E= -75.3799832320717  delta_E= 0.000828895  |g|= 0.0615528  2 KF 5 JK
macro= 1  E= -75.3813708822484  delta_E= -0.00138765  |g|= 0.073172  2 KF 5 JK
macro= 2  E= -75.3799188724533  delta_E= 0.00145201  |g|= 0.027449  2 KF 5 JK
macro= 3  E= -75.3813502847856  delta_E= -0.00143141  |g|= 0.0753328  2 KF 5 JK
macro= 4  E= -75.3799167415312  delta_E= 0.00143354  |g|= 0.027942  2 KF 5 JK
macro= 5  E= -75.3813460162341  delta_E= -0.00142927  |g|= 0.0753712  2 KF 5 JK
macro= 6  E= -75.3799140713237  delta_E= 0.00143194  |g|= 0.0288653  2 KF 5 JK
macro= 7  E= -75.3813431971157  delta_E= -0.00142913  |g|= 0.0754251  2 KF 5 JK
macro= 8  E= -75.3799116492476  delta_E= 0.00143155  |g|= 0.0290211  2 KF 5 JK
macro= 9  E= -75.3813371240381  delta_E= -0.00142547  |g|= 0.0756013  2 KF 5 JK
macro= 10  E= -75.3799142690699  delta_E= 0.00142285  |g|= 0.0294892  2 KF 5 JK
macro= 11  E= -75.3813334499513  delta_E= -0.00141918  |g|= 0.0755568  2 KF 5 JK
macro= 12  E= -75.3799131953963  delta_E= 0.00142025  |g|= 0.0298204  2 KF 5 JK
macro= 13  E= -75.3813284488768  delta_E= -0.00141525  |g|= 0.0756649  2 KF 5 JK
macro= 14  E= -75.3799149277927  delta_E= 0.00141352  |g|= 0.0301893  2 KF 5 JK
macro= 15  E= -75.3813238593011  delta_E= -0.00140893  |g|= 0.0756767  2 KF 5 JK
macro= 16  E= -75.3799157805269  delta_E= 0.00140808  |g|= 0.0305555  2 KF 5 JK
macro= 17  E= -75.3813190323711  delta_E= -0.00140325  |g|= 0.0757232  2 KF 5 JK
macro= 18  E= -75.3799174169193  delta_E= 0.00140162  |g|= 0.0309209  2 KF 5 JK
macro= 19  E= -75.3813141627939  delta_E= -0.00139675  |g|= 0.0757482  2 KF 5 JK
macro= 20  E= -75.3799191873574  delta_E= 0.00139498  |g|= 0.0312894  2 KF 5 JK
macro= 21  E= -75.381309210298  delta_E= -0.00139002  |g|= 0.0757723  2 KF 5 JK
macro= 22  E= -75.3799212880799  delta_E= 0.00138792  |g|= 0.0316582  2 KF 5 JK
macro= 23  E= -75.3813041830938  delta_E= -0.0013829  |g|= 0.0757895  2 KF 5 JK
macro= 24  E= -75.3799236515024  delta_E= 0.00138053  |g|= 0.0320281  2 KF 5 JK
macro= 25  E= -75.3812990835147  delta_E= -0.00137543  |g|= 0.0758014  2 KF 5 JK
macro= 26  E= -75.3812026034983  delta_E= 9.648e-05  |g|= 0.0323986  2 KF 5 JK
macro= 27  E= -75.3813045840854  delta_E= -0.000101981  |g|= 0.0372195  2 KF 5 JK
macro= 28  E= -75.3812182335467  delta_E= 8.63505e-05  |g|= 0.0270415  2 KF 5 JK
macro= 29  E= -75.381308517015  delta_E= -9.02835e-05  |g|= 0.0361777  2 KF 5 JK
macro= 30  E= -75.381226634783  delta_E= 8.18822e-05  |g|= 0.027335  2 KF 5 JK
macro= 31  E= -75.3812961040639  delta_E= -6.94693e-05  |g|= 0.0361744  2 KF 5 JK
macro= 32  E= -75.3812343588704  delta_E= 6.17452e-05  |g|= 0.0280086  2 KF 5 JK
macro= 33  E= -75.3813008965339  delta_E= -6.65377e-05  |g|= 0.0357097  2 KF 5 JK
macro= 34  E= -75.3812383271033  delta_E= 6.25694e-05  |g|= 0.0277787  2 KF 5 JK
macro= 35  E= -75.3812992764403  delta_E= -6.09493e-05  |g|= 0.0357275  2 KF 5 JK
macro= 36  E= -75.3812370831939  delta_E= 6.21932e-05  |g|= 0.0279038  2 KF 5 JK
macro= 37  E= -75.3813025078006  delta_E= -6.54246e-05  |g|= 0.0358207  2 KF 5 JK
macro= 38  E= -75.3812393611961  delta_E= 6.31466e-05  |g|= 0.0277382  2 KF 5 JK
macro= 39  E= -75.3813015528305  delta_E= -6.21916e-05  |g|= 0.0358177  2 KF 5 JK
macro= 40  E= -75.3812372975203  delta_E= 6.42553e-05  |g|= 0.0278247  2 KF 5 JK
macro= 41  E= -75.381303605436  delta_E= -6.63079e-05  |g|= 0.0359726  2 KF 5 JK
macro= 42  E= -75.3812384571057  delta_E= 6.51483e-05  |g|= 0.0277191  2 KF 5 JK
macro= 43  E= -75.3813031831195  delta_E= -6.4726e-05  |g|= 0.0359753  2 KF 5 JK
macro= 44  E= -75.3812366317506  delta_E= 6.65514e-05  |g|= 0.0277667  2 KF 5 JK
macro= 45  E= -75.3813044132391  delta_E= -6.77815e-05  |g|= 0.036113  2 KF 5 JK
macro= 46  E= -75.3812369323331  delta_E= 6.74809e-05  |g|= 0.0277071  2 KF 5 JK
macro= 47  E= -75.3813043778102  delta_E= -6.74455e-05  |g|= 0.0361406  2 KF 5 JK
macro= 48  E= -75.3812354953195  delta_E= 6.88825e-05  |g|= 0.0277273  2 KF 5 JK
macro= 49  E= -75.3813051538016  delta_E= -6.96585e-05  |g|= 0.0362527  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3813051538016  |g|= 0.0362527  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3813051538016
**** SCF Summaries ****
Total Energy =                         -75.381305153801634
Nuclear Repulsion Energy =               3.527848072800000
One-electron Energy =                 -111.058242947808083
Two-electron Energy =                   32.149089721206444
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y  E4x  E4y
double occ                     3    1    0    0    0    0    0    0    0
single occ                     0    0    1    0    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6544566707378  | -20.6712529022927  | -20.6376604391829  occ= 2
MO #2   (A1  #2 ) energy= -1.26285306011749  | -1.33588452053161  | -1.18982159970338  occ= 2
MO #3   (A1  #3 ) energy= -0.603483977373931 | -0.620211772475652 | -0.586756182272209 occ= 2
MO #4   (E1x #1 ) energy= -0.538279824649576 | -0.55738605620175  | -0.519173593097402 occ= 2
MO #5   (E1y #1 ) energy= -0.248339839154342 | -0.641916439637779 | 0.145236761329093  occ= 1
MO #6   (A1  #4 ) energy= 0.0241051772717161 | 0.0230864045244887 | 0.0251239500189439 occ= 0
MO #7   (A1  #5 ) energy= 0.107000687321101  | 0.105253317038706  | 0.108748057603508  occ= 0
MO #8   (E1y #2 ) energy= 0.140480433011116  | 0.134735048859052  | 0.146225817163179  occ= 0
MO #9   (E1x #2 ) energy= 0.14250665878408   | 0.14186805130416   | 0.143145266264     occ= 0
MO #10  (A1  #6 ) energy= 0.147213868557058  | 0.14516497989802   | 0.14926275721609   occ= 0
MO #11  (E1y #3 ) energy= 0.209184104081502  | 0.207719205413602  | 0.210649002749407  occ= 0
MO #12  (E1x #3 ) energy= 0.211677225111993  | 0.211504626397425  | 0.21184982382656   occ= 0
MO #13  (A1  #7 ) energy= 0.223382507813579  | 0.221297252262933  | 0.225467763364248  occ= 0
MO #14  (A1  #8 ) energy= 0.302915204868583  | 0.299439422180767  | 0.30639098755648   occ= 0
MO #15  (E2x #1 ) energy= 0.47856345837312   | 0.473452579775475  | 0.483674336970765  occ= 0
MO #16  (E2y #1 ) energy= 0.478563458373119  | 0.473452579775474  | 0.483674336970764  occ= 0
MO #17  (A1  #9 ) energy= 0.489673950850501  | 0.486900677061419  | 0.49244722463959   occ= 0
MO #18  (E1y #4 ) energy= 0.540357529957961  | 0.535181161884068  | 0.545533898031862  occ= 0
MO #19  (E1x #4 ) energy= 0.544877455819855  | 0.544196999549919  | 0.545557912089797  occ= 0
MO #20  (A1  #10) energy= 0.608369301725962  | 0.606409347275563  | 0.610329256176356  occ= 0
MO #21  (E1y #5 ) energy= 0.660905790652661  | 0.64975379778842   | 0.672057783516904  occ= 0
MO #22  (E1x #5 ) energy= 0.663347605735804  | 0.661944584938495  | 0.66475062653311   occ= 0
MO #23  (E2x #2 ) energy= 0.690383448518729  | 0.689709222591746  | 0.691057674445713  occ= 0
MO #24  (E2y #2 ) energy= 0.690383448518738  | 0.689709222591753  | 0.69105767444572   occ= 0
MO #25  (A1  #11) energy= 0.694942754526186  | 0.692704867781766  | 0.697180641270527  occ= 0
MO #26  (E1y #6 ) energy= 0.751099000144685  | 0.724945104386638  | 0.777252895902732  occ= 0
MO #27  (E1x #6 ) energy= 0.753606701832235  | 0.750594577207113  | 0.756618826457359  occ= 0
MO #28  (A1  #12) energy= 0.797182869145526  | 0.792358175637345  | 0.802007562653742  occ= 0
MO #29  (E1y #7 ) energy= 1.07772720007767   | 1.07103305848575   | 1.08442134166959   occ= 0
MO #30  (E1x #7 ) energy= 1.0844270515765    | 1.08345609257898   | 1.08539801057403   occ= 0
MO #31  (A1  #13) energy= 1.20097687832098   | 1.19277624875092   | 1.20917750789106   occ= 0
MO #32  (E3x #1 ) energy= 1.32112968346387   | 1.31663464640171   | 1.32562472052603   occ= 0
MO #33  (E3y #1 ) energy= 1.32112968346387   | 1.31663464640171   | 1.32562472052603   occ= 0
MO #34  (A1  #14) energy= 1.32378879551527   | 1.31905417129284   | 1.32852341973765   occ= 0
MO #35  (E2x #3 ) energy= 1.4904164120543    | 1.47063469116925   | 1.51019813293935   occ= 0
MO #36  (E2y #3 ) energy= 1.4904164120543    | 1.47063469116925   | 1.51019813293935   occ= 0
MO #37  (E1y #8 ) energy= 1.53246598653741   | 1.52180361516102   | 1.5431283579138    occ= 0
MO #38  (E1x #8 ) energy= 1.54529407469465   | 1.54355835838925   | 1.54702979100006   occ= 0
MO #39  (E2x #4 ) energy= 1.55152776664287   | 1.5441098920436    | 1.55894564124214   occ= 0
MO #40  (E2y #4 ) energy= 1.55152776664287   | 1.54410989204361   | 1.55894564124214   occ= 0
MO #41  (A1  #15) energy= 1.5935071873034    | 1.58947257890757   | 1.59754179569922   occ= 0
MO #42  (E3x #2 ) energy= 1.68350153107158   | 1.68221131925388   | 1.68479174288928   occ= 0
MO #43  (E3y #2 ) energy= 1.68350153107158   | 1.68221131925388   | 1.68479174288928   occ= 0
MO #44  (A1  #16) energy= 1.73304336939687   | 1.7308223227632    | 1.73526441603038   occ= 0
MO #45  (E1y #9 ) energy= 1.77708473688749   | 1.76568998064349   | 1.7884794931315    occ= 0
MO #46  (E1x #9 ) energy= 1.78313591605266   | 1.78150722993467   | 1.78476460217066   occ= 0
MO #47  (E2x #5 ) energy= 1.94513281804742   | 1.9418446408235    | 1.94842099527133   occ= 0
MO #48  (E2y #5 ) energy= 1.94513281804744   | 1.94184464082353   | 1.94842099527135   occ= 0
MO #49  (A1  #17) energy= 2.00149259433933   | 1.99820276313169   | 2.00478242554699   occ= 0
MO #50  (E1y #10) energy= 2.02945825936775   | 2.01759574910027   | 2.04132076963522   occ= 0
MO #51  (E1x #10) energy= 2.04127861245051   | 2.03928437590719   | 2.04327284899384   occ= 0
MO #52  (A1  #18) energy= 2.17958042700378   | 2.17335035051933   | 2.18581050348823   occ= 0
MO #53  (E1y #11) energy= 2.61388388056862   | 2.56965114283142   | 2.65811661830582   occ= 0
MO #54  (E1x #11) energy= 2.62280678118273   | 2.61689585981636   | 2.62871770254911   occ= 0
MO #55  (E2x #6 ) energy= 2.65324033711555   | 2.64979358885188   | 2.65668708537922   occ= 0
MO #56  (E2y #6 ) energy= 2.65324033711555   | 2.64979358885189   | 2.65668708537922   occ= 0
MO #57  (E1y #12) energy= 2.80334864557967   | 2.80034767707266   | 2.80634961408667   occ= 0
MO #58  (E1x #12) energy= 2.81343210119999   | 2.81278558478066   | 2.81407861761932   occ= 0
MO #59  (A1  #19) energy= 2.91599128416434   | 2.91156859262419   | 2.9204139757045    occ= 0
MO #60  (A1  #20) energy= 3.36967869747459   | 3.36251879582564   | 3.37683859912363   occ= 0
MO #61  (E1y #13) energy= 3.65009873766811   | 3.63010984577291   | 3.6700876295633    occ= 0
MO #62  (E4x #1 ) energy= 3.66181266608905   | 3.65451809211092   | 3.66910724006717   occ= 0
MO #63  (E4y #1 ) energy= 3.66181266608904   | 3.65451809211092   | 3.66910724006717   occ= 0
MO #64  (E1x #13) energy= 3.67120702517962   | 3.66739287191578   | 3.67502117844347   occ= 0
MO #65  (E3x #3 ) energy= 3.81836183934991   | 3.81182353012559   | 3.82490014857422   occ= 0
MO #66  (E3y #3 ) energy= 3.81836183934991   | 3.81182353012559   | 3.82490014857423   occ= 0
MO #67  (A1  #21) energy= 3.97043866195225   | 3.96001090501624   | 3.98086641888776   occ= 0
MO #68  (E3x #4 ) energy= 4.08435055805218   | 4.06734220679402   | 4.10135890931034   occ= 0
MO #69  (E3y #4 ) energy= 4.08435055805218   | 4.06734220679402   | 4.10135890931035   occ= 0
MO #70  (E2x #7 ) energy= 4.15032378355911   | 4.13385346971207   | 4.16679409740616   occ= 0
MO #71  (E2y #7 ) energy= 4.15032378355912   | 4.13385346971207   | 4.16679409740616   occ= 0
MO #72  (E1y #14) energy= 4.20033243758598   | 4.18886032897213   | 4.21180454619984   occ= 0
MO #73  (E2x #8 ) energy= 4.2005846502429    | 4.18566994813561   | 4.2154993523502    occ= 0
MO #74  (E2y #8 ) energy= 4.2005846502429    | 4.18566994813561   | 4.21549935235019   occ= 0
MO #75  (E1x #14) energy= 4.22514417189575   | 4.22304787822125   | 4.22724046557024   occ= 0
MO #76  (A1  #22) energy= 4.26724747691716   | 4.26286902200022   | 4.27162593183407   occ= 0
MO #77  (A1  #23) energy= 4.27659520469226   | 4.26397547218906   | 4.28921493719562   occ= 0
MO #78  (E1y #15) energy= 4.53693558081345   | 4.50878313759793   | 4.56508802402897   occ= 0
MO #79  (E1x #15) energy= 4.56050227784675   | 4.55561164860192   | 4.56539290709158   occ= 0
MO #80  (E2x #9 ) energy= 4.61499388946637   | 4.59123643319673   | 4.63875134573601   occ= 0
MO #81  (E2y #9 ) energy= 4.61499388946637   | 4.59123643319673   | 4.638751345736     occ= 0
MO #82  (A1  #24) energy= 5.07195719212522   | 5.06681036106784   | 5.07710402318261   occ= 0
MO #83  (E1y #16) energy= 5.23269289001208   | 5.21648371198845   | 5.2489020680357    occ= 0
MO #84  (E1x #16) energy= 5.2572253985804    | 5.25407465392333   | 5.26037614323748   occ= 0
MO #85  (A1  #25) energy= 5.60920661067007   | 5.59609248439882   | 5.6223207369415    occ= 0
MO #86  (E3x #5 ) energy= 6.55683766652246   | 6.55626176673108   | 6.55741356631384   occ= 0
MO #87  (E3y #5 ) energy= 6.55683766652245   | 6.55626176673108   | 6.55741356631383   occ= 0
MO #88  (E2x #10) energy= 7.09772452983749   | 7.09607752594459   | 7.09937153373039   occ= 0
MO #89  (E2y #10) energy= 7.0977245298375    | 7.09607752594459   | 7.0993715337304    occ= 0
MO #90  (A1  #26) energy= 7.27039183991643   | 7.26859002188687   | 7.27219365794604   occ= 0
MO #91  (E1y #17) energy= 7.58764857695085   | 7.58479964800275   | 7.59049750589892   occ= 0
MO #92  (E1x #17) energy= 7.59728377290177   | 7.59665004717836   | 7.59791749862518   occ= 0
MO #93  (A1  #27) energy= 8.06262761679047   | 8.06161699488489   | 8.06363823869605   occ= 0
MO #94  (E2x #11) energy= 8.47275189494781   | 8.47235754968987   | 8.47314624020575   occ= 0
MO #95  (E2y #11) energy= 8.47275189494782   | 8.47235754968989   | 8.47314624020576   occ= 0
MO #96  (E1y #18) energy= 8.80438823985864   | 8.80037532754095   | 8.80840115217633   occ= 0
MO #97  (E1x #18) energy= 8.81661193822804   | 8.81566954931984   | 8.81755432713624   occ= 0
MO #98  (E1y #19) energy= 8.86846156135024   | 8.86475291589471   | 8.87217020680577   occ= 0
MO #99  (E1x #19) energy= 8.87616771958474   | 8.8755042994231    | 8.87683113974639   occ= 0
MO #100 (A1  #28) energy= 9.42214200007647   | 9.42021364594378   | 9.42407035420919   occ= 0
MO #101 (A1  #29) energy= 10.3655689951894   | 10.3596832004033   | 10.3714547899757   occ= 0
MO #102 (E4x #2 ) energy= 10.6109841535629   | 10.5949230128165   | 10.6270452943094   occ= 0
MO #103 (E4y #2 ) energy= 10.6109841535629   | 10.5949230128164   | 10.6270452943094   occ= 0
MO #104 (E3x #6 ) energy= 10.6872563532553   | 10.6747245205509   | 10.6997881859597   occ= 0
MO #105 (E3y #6 ) energy= 10.6872563532553   | 10.6747245205509   | 10.6997881859597   occ= 0
MO #106 (E1y #20) energy= 10.8437285397822   | 10.802338632493    | 10.8851184470715   occ= 0
MO #107 (E1x #20) energy= 10.881636048509    | 10.8742275387441   | 10.889044558274    occ= 0
MO #108 (E2x #12) energy= 10.8979022819751   | 10.8880741616483   | 10.9077304023018   occ= 0
MO #109 (E2y #12) energy= 10.8979022819751   | 10.8880741616484   | 10.9077304023019   occ= 0
MO #110 (E1y #21) energy= 11.1527350255417   | 11.1394646399872   | 11.1660054110961   occ= 0
MO #111 (E1x #21) energy= 11.1951081837491   | 11.19185273082     | 11.1983636366782   occ= 0
MO #112 (A1  #30) energy= 11.362486378366    | 11.3543044723956   | 11.3706682843364   occ= 0
MO #113 (A1  #31) energy= 11.7706307826165   | 11.7594055901531   | 11.78185597508     occ= 0
MO #114 (E3x #7 ) energy= 11.8509775148357   | 11.8253803284505   | 11.876574701221    occ= 0
MO #115 (E3y #7 ) energy= 11.8509775148357   | 11.8253803284505   | 11.876574701221    occ= 0
MO #116 (E2x #13) energy= 11.963459554151    | 11.9454770574397   | 11.9814420508624   occ= 0
MO #117 (E2y #13) energy= 11.963459554151    | 11.9454770574397   | 11.9814420508624   occ= 0
MO #118 (E1y #22) energy= 12.4537831597319   | 12.4334742803079   | 12.474092039156    occ= 0
MO #119 (E1x #22) energy= 12.4932690934564   | 12.4889215505414   | 12.4976166363714   occ= 0
MO #120 (E2x #14) energy= 12.7271802288384   | 12.696662682145    | 12.7576977755317   occ= 0
MO #121 (E2y #14) energy= 12.7271802288384   | 12.696662682145    | 12.7576977755317   occ= 0
MO #122 (E1y #23) energy= 13.1108920223202   | 13.08325747517     | 13.1385265694704   occ= 0
MO #123 (E1x #23) energy= 13.1477724932761   | 13.1425845878131   | 13.1529603987392   occ= 0
MO #124 (A1  #32) energy= 13.265525193019    | 13.2596997988372   | 13.2713505872008   occ= 0
MO #125 (A1  #33) energy= 14.839933806231    | 14.8326079227684   | 14.8472596896937   occ= 0
MO #126 (A1  #34) energy= 42.2613447319802   | 42.2515333031008   | 42.271156160859    occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.89672
pop of  0 O 3s        0.00204
pop of  0 O 4s        0.00070
pop of  0 O 5s        0.00021
pop of  0 O 6s        0.00006
pop of  0 O 2px       1.99428
pop of  0 O 2py       0.99836
pop of  0 O 2pz       1.42053
pop of  0 O 3px       0.00116
pop of  0 O 3py       0.00001
pop of  0 O 3pz       0.00010
pop of  0 O 4px       0.00042
pop of  0 O 4py       0.00022
pop of  0 O 4pz       0.00155
pop of  0 O 5px       0.00020
pop of  0 O 5py       0.00004
pop of  0 O 5pz       0.00008
pop of  0 O 6px       0.00003
pop of  0 O 6py       0.00001
pop of  0 O 6pz       0.00002
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00051
pop of  0 O 3dz^2     0.00415
pop of  0 O 3dxz      0.00100
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00014
pop of  0 O 4dz^2     0.00037
pop of  0 O 4dxz      0.00027
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00003
pop of  0 O 5dz^2     0.00003
pop of  0 O 5dxz      0.00006
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 6dxy      0.00000
pop of  0 O 6dyz      0.00001
pop of  0 O 6dz^2     0.00008
pop of  0 O 6dxz      0.00001
pop of  0 O 6dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00001
pop of  0 O 4f 0      0.00029
pop of  0 O 4f 1      0.00012
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00002
pop of  0 O 5f 0      0.00004
pop of  0 O 5f 1      0.00005
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  0 O 6f-3      0.00000
pop of  0 O 6f-2      0.00000
pop of  0 O 6f-1      0.00000
pop of  0 O 6f 0      0.00001
pop of  0 O 6f 1      0.00001
pop of  0 O 6f 2      0.00000
pop of  0 O 6f 3      0.00000
pop of  0 O 5g-4      0.00000
pop of  0 O 5g-3      0.00000
pop of  0 O 5g-2      0.00000
pop of  0 O 5g-1      0.00001
pop of  0 O 5g 0      0.00005
pop of  0 O 5g 1      0.00002
pop of  0 O 5g 2      0.00000
pop of  0 O 5g 3      0.00000
pop of  0 O 5g 4      0.00000
pop of  0 O 6g-4      0.00000
pop of  0 O 6g-3      0.00000
pop of  0 O 6g-2      0.00000
pop of  0 O 6g-1      0.00000
pop of  0 O 6g 0      0.00002
pop of  0 O 6g 1      0.00001
pop of  0 O 6g 2      0.00000
pop of  0 O 6g 3      0.00000
pop of  0 O 6g 4      0.00000
pop of  1 H 1s        0.66486
pop of  1 H 2s        0.00525
pop of  1 H 3s        0.00080
pop of  1 H 4s        0.00014
pop of  1 H 5s        0.00008
pop of  1 H 2px       0.00210
pop of  1 H 2py       0.00049
pop of  1 H 2pz       0.00106
pop of  1 H 3px       0.00001
pop of  1 H 3py       0.00003
pop of  1 H 3pz       0.00058
pop of  1 H 4px       0.00004
pop of  1 H 4py       0.00005
pop of  1 H 4pz       0.00000
pop of  1 H 5px       0.00001
pop of  1 H 5py       0.00001
pop of  1 H 5pz       0.00003
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00005
pop of  1 H 3dz^2     0.00004
pop of  1 H 3dxz      0.00016
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00000
pop of  1 H 4dz^2     0.00001
pop of  1 H 4dxz      0.00002
pop of  1 H 4dx2-y2    0.00000
pop of  1 H 5dxy      0.00000
pop of  1 H 5dyz      0.00001
pop of  1 H 5dz^2     0.00001
pop of  1 H 5dxz      0.00000
pop of  1 H 5dx2-y2    0.00000
pop of  1 H 4f-3      0.00000
pop of  1 H 4f-2      0.00000
pop of  1 H 4f-1      0.00000
pop of  1 H 4f 0      0.00004
pop of  1 H 4f 1      0.00000
pop of  1 H 4f 2      0.00000
pop of  1 H 4f 3      0.00000
pop of  1 H 5f-3      0.00000
pop of  1 H 5f-2      0.00000
pop of  1 H 5f-1      0.00000
pop of  1 H 5f 0      0.00004
pop of  1 H 5f 1      0.00001
pop of  1 H 5f 2      0.00000
pop of  1 H 5f 3      0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.32407
charge of  1H =      0.32407
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.89729
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.20)]],basis='aug-cc-pvqz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 13:49:09 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:      1580.67

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Overwritten attributes  get_hcore get_ovlp  of <class 'pyscf.soscf.newton_ah.newton.<locals>.SecondOrderROHF'>
Overwritten attributes  get_hcore get_ovlp  of <class 'pyscf.scf.rohf.ROHF'>




******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/tmpxff54c7x
max_memory 4000 MB (current use 689 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/tmpxff54c7x
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 689 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.248339839154341  LUMO = 0.246867577398109
Initial guess E= -75.3813648936673  |g|= 0.000873926
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf/gto/mole.py:1089: UserWarning: Function mol.dumps drops attribute nao_nr because it is not JSON-serializable
  warnings.warn(msg)
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf/gto/mole.py:1089: UserWarning: Function mol.dumps drops attribute energy_nuc because it is not JSON-serializable
  warnings.warn(msg)
macro= 0  E= -75.3813654014658  delta_E= -5.07799e-07  |g|= 0.000873926  1 KF 4 JK
macro= 1  E= -75.3813654014658  delta_E= 0  |g|= 2.22869e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3813654014658  |g|= 2.22869e-07  total 3 KF 9 JK
converged SCF energy = -75.3813654014658
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.20)]],basis='aug-cc-pvqz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 13:49:56 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:      1695.26

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/tmpkoxme96x
max_memory 4000 MB (current use 611 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/tmpkoxme96x
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 611 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.248339134844867  LUMO = 0.246867219028995
Initial guess E= -75.3813648928486  |g|= 0.000873109
macro= 0  E= -75.3813654014659  delta_E= -5.08617e-07  |g|= 0.000873109  1 KF 3 JK
macro= 1  E= -75.3813654014659  delta_E= -1.42109e-14  |g|= 2.23637e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3813654014659  |g|= 2.23637e-07  total 3 KF 8 JK
converged SCF energy = -75.3813654014659
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf/fci/direct_nosym.py:179: UserWarning: direct_nosym.kernel is not able to diagonalize non-Hermitian Hamiltonian. If h1e and h2e is not hermtian, calling symmetric diagonlization in eig can lead to wrong results.
  warnings.warn('direct_nosym.kernel is not able to diagonalize '
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.20)]],basis='aug-cc-pvqz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 13:51:00 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:      1804.75

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/tmpyqsdt9rw
max_memory 4000 MB (current use 2232 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/tmpyqsdt9rw
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 2232 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.249038852542784  LUMO = 0.0240973908490099
Initial guess E= -75.3821776412345  |g|= 0.0234952
macro= 0  E= -75.3823012268648  delta_E= -0.000123586  |g|= 0.000431758  2 KF 8 JK
macro= 1  E= -75.382301226865  delta_E= -1.42109e-13  |g|= 5.90128e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.382301226865  |g|= 5.90128e-06  total 4 KF 13 JK
converged SCF energy = -75.382301226865
u+d contributions  -0.05908930431206759
uu+dd contributions  -0.09081289232807113
ud contributions  -0.19440076676381474
u+d contributions  -0.008839478014897085
uu+dd contributions  -0.04045694410090648
ud contributions  -0.14383972936821582
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.20)]],basis='aug-cc-pvqz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 13:51:23 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:      1889.30

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/tmp6zd58oxr
max_memory 4000 MB (current use 2559 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/tmp6zd58oxr
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 2559 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.247782677436999  LUMO = 0.247026065198282
Initial guess E= -75.3813645626453  |g|= 0.00111376
macro= 0  E= -75.3813654014658  delta_E= -8.38821e-07  |g|= 0.00111376  1 KF 2 JK
macro= 1  E= -75.3813654014659  delta_E= -7.10543e-14  |g|= 3.34419e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3813654014659  |g|= 3.34419e-07  total 3 KF 7 JK
converged SCF energy = -75.3813654014659
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.20)]],basis='aug-cc-pvqz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 13:52:47 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:      2000.63

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/tmpixpl3ijp
max_memory 4000 MB (current use 2161 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/tmpixpl3ijp
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 2161 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.248473032553376  LUMO = 0.0240978973490656
Initial guess E= -75.3821520274256  |g|= 0.0174789
macro= 0  E= -75.3822413150017  delta_E= -8.92876e-05  |g|= 0.000276315  2 KF 7 JK
macro= 1  E= -75.3822413150018  delta_E= -1.42109e-13  |g|= 1.12356e-05  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3822413150018  |g|= 1.12356e-05  total 4 KF 12 JK
converged SCF energy = -75.3822413150018
/home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/../../../src/qiskit_subroutines.py:25: DeprecationWarning: The package qiskit.aqua.operators is deprecated. It was moved/refactored to qiskit.opflow (pip install qiskit-terra). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  c_list = [WeightedPauliOperator([(0.5,a1),(-0.5j,a2)]) for a1,a2 in a_list]
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/fermionic_operator.py:394: DeprecationWarning: The variable qiskit.aqua.aqua_globals is deprecated. It was moved/refactored to qiskit.utils.algorithm_globals (pip install qiskit-terra). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  task_args=(threshold,), num_processes=aqua_globals.num_processes)
/home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/../../../src/qiskit_subroutines.py:19: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  a_x = np.asarray(zmask,dtype=np.bool)
/home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/radical/R_1.20/../../../src/qiskit_subroutines.py:20: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  a_z = np.asarray(zeros,dtype=np.bool)
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/quantum_info/operators/symplectic/pauli.py:195: DeprecationWarning: Initializing Pauli from `Pauli(z=z, x=x)` kwargs is deprecated as of version 0.17.0 and will be removed no earlier than 3 months after the release date. Use tuple initialization `Pauli((z, x))` instead.
  base_z, base_x, base_phase = self._from_array_deprecated(z, x)
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/aqua/components/optimizers/optimizer.py:49: DeprecationWarning: The package qiskit.aqua.components.optimizers is deprecated. It was moved/refactored to qiskit.algorithms.optimizers (pip install qiskit-terra). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_package('aqua.components.optimizers',
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/aqua/quantum_instance.py:135: DeprecationWarning: The class qiskit.aqua.QuantumInstance is deprecated. It was moved/refactored to qiskit.utils.QuantumInstance (pip install qiskit-terra). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_class('aqua.QuantumInstance',
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/components/initial_states/hartree_fock.py:56: UserWarning: two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
  warnings.warn('two_qubit_reduction only works with parity qubit mapping '
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/components/initial_states/hartree_fock.py:61: DeprecationWarning: The HartreeFock class is deprecated as of Aqua 0.9 and will be removed no earlier than 3 months after the release date. Instead, all algorithms and circuits accept a plain QuantumCircuit. 
  super().__init__()
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/aqua/components/variational_forms/variational_form.py:48: DeprecationWarning: The package qiskit.aqua.components.variational_forms is deprecated. For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_package('aqua.components.variational_forms')
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/aqua/algorithms/vq_algorithm.py:70: DeprecationWarning: The class qiskit.aqua.algorithms.VQAlgorithm is deprecated. It was moved/refactored to qiskit.algorithms.VariationalAlgorithm (pip install qiskit-terra). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_class('aqua.algorithms.VQAlgorithm',
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/components/initial_states/hartree_fock.py:56: UserWarning: two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
  warnings.warn('two_qubit_reduction only works with parity qubit mapping '
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/components/initial_states/hartree_fock.py:61: DeprecationWarning: The HartreeFock class is deprecated as of Aqua 0.9 and will be removed no earlier than 3 months after the release date. Instead, all algorithms and circuits accept a plain QuantumCircuit. 
  super().__init__()
u+d contributions  -0.02581541748858817
uu+dd contributions  -0.048863920556962655
ud contributions  -0.11095357128002968
u+d contributions  -0.006417900301125711
uu+dd contributions  -0.02943168611660621
ud contributions  -0.09151288807365122
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-75.035102, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.233070, i_min=0
In the tapering subroutine, i=2, E(i)=-75.381365, i_min=1
In the tapering subroutine, i=3, E(i)=-75.123459, i_min=2
In the tapering subroutine, i=4, E(i)=-75.378963, i_min=2
In the tapering subroutine, i=5, E(i)=-75.116967, i_min=2
In the tapering subroutine, i=6, E(i)=-74.827943, i_min=2
In the tapering subroutine, i=7, E(i)=-75.138494, i_min=2
In the tapering subroutine, i=8, E(i)=-75.233070, i_min=2
In the tapering subroutine, i=9, E(i)=-75.232072, i_min=2
In the tapering subroutine, i=10, E(i)=-75.145334, i_min=2
In the tapering subroutine, i=11, E(i)=-75.381365, i_min=2
In the tapering subroutine, i=12, E(i)=-75.138430, i_min=2
In the tapering subroutine, i=13, E(i)=-75.378963, i_min=2
In the tapering subroutine, i=14, E(i)=-75.138494, i_min=2
In the tapering subroutine, i=15, E(i)=-74.866156, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
overlap matrix condition number 0.022523443340 0.999681402440 
overlap matrix condition number 0.001207042069 0.999681402440 
overlap matrix condition number 0.001525639629 0.998474360371 
overlap matrix condition number 0.000000000000 0.977476556660 
overlap matrix condition number -0.000000000000 1.004534634893 
u+d contributions  -0.006418023652627676
uu+dd contributions  -0.029431779118523054
ud contributions  -0.09147711734171689
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
overlap matrix condition number 0.022472221086 0.999695565090 
overlap matrix condition number 0.001160718498 0.999695565090 
overlap matrix condition number 0.001459902559 0.998537470593 
overlap matrix condition number 0.000000293373 0.977527911385 
overlap matrix condition number -0.000000000000 1.004418783563 
u+d contributions  -0.006418761810532695
uu+dd contributions  -0.02943360152644164
ud contributions  -0.09148351080782015
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
overlap matrix condition number 0.022472221086 0.999695565090 
overlap matrix condition number 0.001160718498 0.999695565090 
overlap matrix condition number 0.001459902559 0.998537470593 
overlap matrix condition number 0.000000293373 0.977527911385 
overlap matrix condition number -0.000000000000 1.004418783563 
u+d contributions  -0.006418761810532695
uu+dd contributions  -0.02943360152644164
ud contributions  -0.09148351080782015
