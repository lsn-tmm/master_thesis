/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf/lib/misc.py:46: H5pyDeprecationWarning: Using default_file_mode other than 'r' is deprecated. Pass the mode to h5py.File() instead.
  h5py.get_config().default_file_mode = 'a'
#####################################################
START: sto-6g
#####################################################
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/anion.py ****
import numpy     as np
from pyscf       import gto,scf,lo,tools  # librerie di PySCF
from pyscf.tools import cubegen           # gto: Gaussian Type Orbital
                                          # scf: Self-Consistent Field
from pyscf       import mp,ci,cc,mcscf

R_rad = 0.9697
R_an  = 0.9640
R     = R_an
geo   = []
geo.append(['O',(0,0,0)]) # geometria: lista di elementi della forma [A,(x,y,z)] xyz in Angstrom
geo.append(['H',(0,0,R)])

res = {}
res['basis'] = ['sto-6g','6-31g','6-31++g','6-31g**','6-31++g**','cc-pvdz','cc-pvtz','cc-pvqz','aug-cc-pvdz','aug-cc-pvtz']
res['E_HF_anion'] = []
res['E_MP_anion'] = []
res['E_CISD_anion'] = []
res['E_CCSD_anion'] = []
res['E_CCSD(T)_anion'] = []
res['E_CASCI_anion'] = []
res['E_CASSCF_anion'] = []


for i in res['basis']:
    
    print("#"*53)
    print("START:", i)
    print("#"*53)

    mol = gto.M(atom     = geo,
                basis    = i,         # Slater Type Orbital - 6g = 6 Gaussiane per orbitale
                charge   = -1,        # carica totale (nucleare + elettronica)
                spin     = 0,         # STRANO MA VERO: N(up)-N(down)
                verbose  = 4,         # quanto e cosa stampare
                symmetry = True)      # simmetrie molecolari (rotazione attorno all'asse OH)

    mf  = scf.RHF(mol)
    mf  = scf.newton(mf)         # solutore al secondo ordine E(C+dC) = E(C) + dC*g(C) + dC H(C) dC
    E   = mf.kernel()            # kernel = esegui ROHF
    a   = mf.stability()[0]      # calcolo g(C) ed H(C), proposta di nuovi orbitali possibilmente migliori (a)
    EHF = mf.kernel(a,mf.mo_occ) # kernel = esegui ROHF partendo dagli orbitali a
    mf.analyze()

    #
    # categoria 1: espansioni intorno all'Hartree-Fock
    #

    # ----- Moller-Plesset second order perturbation theory
    #
    # O----H               O[1s,2s,2px,2py,2pz] H[1s] # se la base e' cc-pCVnZ allora si possono studiare gli elettroni nell'1s
    nf     = 1                                        # altrimenti, l'orbitale 1s va congelato (rimane doppiamente occupato)
    mymp   = mp.MP2(mf,frozen=nf)                     # H = F + (H-F); F ha autofunzioni note, (H-F) e' perturbazione
    EMP    = EHF + mymp.kernel()[0]                   # Rayleigh-Schrodinger perturbation theory E = E(HF) - \sum_m |<m|H-F|0>|^2/(Em-E0)
    mcisd  = ci.CISD(mf,frozen=nf)                    # CISD: CI = configuration interaction; S = singole eccitazioni sull'Hartree-Fock
    ECISD  = EHF   + mcisd.kernel()[0]                # D = doppie eccitazioni sull'Hartree-Fock
    # CISD: H | Psi(HF) >      = T |Psi(HF) > + \sum_{ai} V(ai) c*(a)c(i) |Psi(HF)> + \sum_{abij} W(abij) c*(a)c*(b)c(j)c(i) |Psi(HF)>
    # CCSD: exp(T) | Psi(HF) >
    # Cluster operator: T = \sum_{ai} t(ai) c*(a)c(i) + \sum_{abij} t(abij) c*(a)c*(b)c(j)c(i) + ...
    mc     = cc.CCSD(mf,frozen=nf)
    ECCSD  = EHF   + mc.kernel()[0]
    ECCSDT = ECCSD + mc.ccsd_t()
    # CCSD(T): si calcola il CCSD e poi si stima il contributo all'energia di correlazione dalle triple eccitazioni perturbativamente
    # CCSD(T) + cc-pVTZ e' chiamato il "gold standard"

    # 
    # categoria 2: diagonalizzazione piu' o meno esatta
    #

    # CAS = complete active space
    # CI  = configuration interaction
    # SCF = self-consistent field
    # CASCI: si sceglie un insieme di orbitali e di elettroni, si costruiscono tutti i possibili determinanti di Slater 
    # che coinvolgono eccitazioni di questi orbitali ed elettroni
    # e si risolve l'eq di Schrodinger in questo sottospazio
    # 150 -------- INATTIVI
    # ............ INATTIVI
    #  7  -------- INATTIVI
    #  6  -------- ATTIVI
    #  5  ---ud--- ATTIVI
    #  4  ---ud--- INATTIVI
    #  3  ---ud--- INATTIVI
    #  2  ---ud--- INATTIVI
    #  1  ---ud--- CONGELATI (FROZEN)

    #  6  ---- --d- --u- -ud- complete active space
    #  5  -ud- -u-- -d-- ----

    nel_frozen  = (nf,nf)  # congelare  l'1s
    orb_frozen  = nf       # coongelare l'1s
    na,nb       = (mol.nelectron+mol.spin)//2-nf,(mol.nelectron-mol.spin)//2-nf # tutti elettroni attivi tranne 1s
    nao_minimal = 6                                                             # prendere 6 orbitali di Hartree-Fock
    nact        = nao_minimal-nf                                                # tutti questi 6 orbitali attivi tranne l'1s
    mc          = mcscf.CASCI(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASCI      = mc.kernel()[0]

    # CASSCF: come il CASCI, ma gli orbitali non sono orbitali di campo medio, sono orbitali ottimizzati variazionalmente

    mc          = mcscf.CASSCF(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASSCF     = mc.kernel()[0]

    print("Hartree-Fock   ",EHF)
    print("Moller-Plesset ",EMP)
    print("CISD           ",ECISD)
    print("CCSD           ",ECCSD)
    print("CCSD(T)        ",ECCSDT)
    print("CASCI          ",ECASCI)
    print("CASSCF         ",ECASSCF)
    
    res['E_HF_anion'].append(EHF)
    res['E_MP_anion'].append(EMP)
    res['E_CISD_anion'].append(ECISD)
    res['E_CCSD_anion'].append(ECCSD)
    res['E_CCSD(T)_anion'].append(ECCSDT)
    res['E_CASCI_anion'].append(ECASCI)
    res['E_CASSCF_anion'].append(ECASSCF)
    
    print("#"*53)
    print("END:", i)
    print("#"*53)
    
    
try :
    data = np.load('../oh_data.npy',allow_pickle=True).item()
    for i in res:
        data[i] = res[i]
    np.save('../oh_data',data,allow_pickle=True)
except:
    np.save('../oh_data',res,allow_pickle=True)
    



    
    

# Sistema S1, Sistema S2
# E(S1,metodo) = E(S1,esatta) + BIAS(S1,metodo)
# E(S2,metodo) = E(S2,esatta) + BIAS(S2,metodo)
# E(S1,metodo)-E(S2,metodo) = E(S1,esatta)-E(S2,esatta) + BIAS(S1,metodo)-BIAS(S2,metodo)
# quando   BIAS(S1,metodo),BIAS(S2,metodo) "grande"  (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# tuttavia BIAS(S1,metodo)-BIAS(S2,metodo) "piccola" (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# allora "cancellation of errors"

#---------------------------------------------------------------------#
# metodo  | size-extensive E(A+B)=E(A)+E(B) | variational | cost      #
#---------------------------------------------------------------------#
# HF      | SI                              | SI          | M**4      #
# MP2     | NO                              | NO          | M**5      #
# CISD    | NO                              | SI          | M**7      #
# CCSD    | SI                              | NO          | M**6      #
# CCSD(T) | SI                              | NO          | M**9      #
# CASCI   | NO                              | SI          | exp(Nact) #
# CASSCF  | NO                              | SI          | exp(Nact) #
# FCI     | SI                              | SI          | exp(M)    #
#---------------------------------------------------------------------#

#------------------------------------------#
# ORBITALI      CORRELAZIONE   COMPUTER    #
# VIRTUALI      DINAMICA       CLASSICO    #
# VALENZA       STATICA        QUANTISTICO #
#------------------------------------------#

# E(R,basis,method) "potential energy surface = energia versus bondlength"
# R_{eq}(basis,method) = argmin_R E(R,basis,method)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Wed Sep  8 21:44:50 2021
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.964000000000 AA    0.000000000000   0.000000000000   1.821695984081 Bohr

nuclear repulsion = 4.39151212381743
point group symmetry = Coov
num. orbitals of irrep A1 = 4
num. orbitals of irrep E1x = 1
num. orbitals of irrep E1y = 1
number of shells = 4
number of NR pGTOs = 36
number of NR cGTOs = 6
basis = sto-6g
ecp = {}
CPU time:         0.87
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpubla58a4
max_memory 4000 MB (current use 76 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpubla58a4
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 76 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.343519774593137  LUMO (A1) = 0.486589449657006
Initial guess E= -74.6525976932403  |g|= 0.52505
macro= 0  E= -74.7752200448656  delta_E= -0.122622  |g|= 0.52505  1 KF 5 JK
macro= 1  E= -74.7779869219933  delta_E= -0.00276688  |g|= 0.0980159  1 KF 4 JK
macro= 2  E= -74.777986961572  delta_E= -3.95788e-08  |g|= 0.000351199  1 KF 4 JK
macro= 3  E= -74.7779869615721  delta_E= -2.84217e-14  |g|= 3.74484e-09  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-74.7779869615721  |g|= 3.74484e-09  total 5 KF 20 JK
converged SCF energy = -74.7779869615721
RHF/RKS wavefunction is stable in the internal stability analysis
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpubla58a4
max_memory 4000 MB (current use 80 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpubla58a4
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 80 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = 0.244112215643249  LUMO (A1) = 1.240059572758
Initial guess E= -74.7779869615721  |g|= 3.09657e-09
macro= 0  E= -74.7779869615721  delta_E= 0  |g|= 3.09657e-09  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-74.7779869615721  |g|= 3.09657e-09  total 2 KF 4 JK
converged SCF energy = -74.7779869615721
**** SCF Summaries ****
Total Energy =                         -74.777986961572054
Nuclear Repulsion Energy =               4.391512123817428
One-electron Energy =                 -118.961829809044900
Two-electron Energy =                   39.792330723655418
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y
                               3    1    1
**** MO energy ****
MO #1 (A1 #1), energy= -19.6407191935771 occ= 2
MO #2 (A1 #2), energy= -0.602878244585893 occ= 2
MO #3 (A1 #3), energy= 0.0667888259771743 occ= 2
MO #4 (E1x #1), energy= 0.244112215659415 occ= 2
MO #5 (E1y #1), energy= 0.244112215659414 occ= 2
MO #6 (A1 #4), energy= 1.24005957276094 occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99997
pop of  0 O 2s        1.85184
pop of  0 O 2px       2.00000
pop of  0 O 2py       2.00000
pop of  0 O 2pz       0.97938
pop of  1 H 1s        1.16880
 ** Mulliken atomic charges  **
charge of  0O =     -0.83120
charge of  1H =     -0.16880
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000, -0.18165

******** <class 'pyscf.mp.mp2.MP2'> ********
nocc = 4, nmo = 5
frozen orbitals 1
max_memory 4000 MB (current use 85 MB)
E(MP2) = -74.7945016915013  E_corr = -0.0165147299292274

******** <class 'pyscf.ci.cisd.RCISD'> ********
CISD nocc = 4, nmo = 5
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-09
max_cycle = 50
max_space = 12
lindep = 0
nroots = 1
max_memory 4000 MB (current use 85 MB)
Init t2, MP2 energy = -0.0165147299292274
RCISD converged
E(RCISD) = -74.80225115278961  E_corr = -0.02426419121755488

******** <class 'pyscf.cc.ccsd.CCSD'> ********
CC2 = 0
CCSD nocc = 4, nmo = 5
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-07
conv_tol_normt = 1e-05
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 85 MB)
Init t2, MP2 energy = -74.7945016915013  E_corr(MP2) -0.0165147299292274
Init E_corr(CCSD) = -0.0165147299292274
cycle = 1  E_corr(CCSD) = -0.0216401554138494  dE = -0.00512542548  norm(t1,t2) = 0.0256746
cycle = 2  E_corr(CCSD) = -0.0233238964296467  dE = -0.00168374102  norm(t1,t2) = 0.00922656
cycle = 3  E_corr(CCSD) = -0.0242691242662333  dE = -0.000945227837  norm(t1,t2) = 0.00356304
cycle = 4  E_corr(CCSD) = -0.024265303519571  dE = 3.82074666e-06  norm(t1,t2) = 0.000251424
cycle = 5  E_corr(CCSD) = -0.024264319212807  dE = 9.84306764e-07  norm(t1,t2) = 3.02998e-05
cycle = 6  E_corr(CCSD) = -0.0242640708577988  dE = 2.48355008e-07  norm(t1,t2) = 4.06312e-06
cycle = 7  E_corr(CCSD) = -0.0242642624502171  dE = -1.91592418e-07  norm(t1,t2) = 1.0363e-06
cycle = 8  E_corr(CCSD) = -0.0242641909731358  dE = 7.14770812e-08  norm(t1,t2) = 2.68182e-07
CCSD converged
E(CCSD) = -74.8022511525452  E_corr = -0.02426419097313583
CCSD(T) correction = 3.80351628945114e-20
Active space CI wfn symmetry = A1
<class 'pyscf.mcscf.casci_symm.SymAdaptedCASCI'> does not have attributes  frozen

******** CASCI flags ********
CAS (4e+4e, 5o), ncore = 1, nvir = 0
natorb = False
canonicalization = True
sorting_mo_energy = False
max_memory 4000 (MB)
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 200
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
Input CI wfn symmetry = A1
Density matrix diagonal elements [1.99646002 1.97784934 1.99836987 1.99836987 0.02895089]
CASCI converged
CASCI E = -74.8022511527863  E(CI) = -19.0230220773733  S^2 = 0.0000000

******** <class 'pyscf.mcscf.mc1step_symm.SymAdaptedCASSCF'> ********
CAS (4e+4e, 5o), ncore = 1, nvir = 0
frozen orbitals 1
max_cycle_macro = 50
max_cycle_micro = 4
conv_tol = 1e-07
conv_tol_grad = None
orbital rotation max_stepsize = 0.02
augmented hessian ah_max_cycle = 30
augmented hessian ah_conv_tol = 1e-12
augmented hessian ah_linear dependence = 1e-14
augmented hessian ah_level shift = 0
augmented hessian ah_start_tol = 2.5
augmented hessian ah_start_cycle = 3
augmented hessian ah_grad_trust_region = 3
kf_trust_region = 3
kf_interval = 4
ci_response_space = 4
ci_grad_trust_region = 3
with_dep4 0
natorb = False
canonicalization = True
sorting_mo_energy = False
ao2mo_level = 2
chkfile = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpubla58a4
max_memory 4000 MB (current use 86 MB)
internal_rotation = False
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 50
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
CI wfn symmetry = None
Active space CI wfn symmetry = A1
CASCI E = -74.8022511527863  S^2 = 0.0000000
Set conv_tol_grad to 0.000316228
macro iter 1 (1 JK  1 micro), CASSCF E = -74.8022511527916  dE = -5.3290705e-12  S^2 = 0.0000000
               |grad[o]|=    0  |grad[c]|= 2.6939190443281e-06  |ddm|=1.1e-06
1-step CASSCF converged in 1 macro (1 JK 1 micro) steps
CASSCF canonicalization
Density matrix diagonal elements [1.99645996 1.97784925 1.99837002 1.99837002 0.02895075]
CASSCF energy = -74.8022511527916
CASCI E = -74.8022511527916  E(CI) = -19.0230220773786  S^2 = 0.0000000
Hartree-Fock    -74.77798696157205
Moller-Plesset  -74.79450169150128
CISD            -74.80225115278961
CCSD            -74.8022511525452
CCSD(T)         -74.8022511525452
CASCI           -74.80225115278625
CASSCF          -74.8022511527916
#####################################################
END: sto-6g
#####################################################
#####################################################
START: 6-31g
#####################################################
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/anion.py ****
import numpy     as np
from pyscf       import gto,scf,lo,tools  # librerie di PySCF
from pyscf.tools import cubegen           # gto: Gaussian Type Orbital
                                          # scf: Self-Consistent Field
from pyscf       import mp,ci,cc,mcscf

R_rad = 0.9697
R_an  = 0.9640
R     = R_an
geo   = []
geo.append(['O',(0,0,0)]) # geometria: lista di elementi della forma [A,(x,y,z)] xyz in Angstrom
geo.append(['H',(0,0,R)])

res = {}
res['basis'] = ['sto-6g','6-31g','6-31++g','6-31g**','6-31++g**','cc-pvdz','cc-pvtz','cc-pvqz','aug-cc-pvdz','aug-cc-pvtz']
res['E_HF_anion'] = []
res['E_MP_anion'] = []
res['E_CISD_anion'] = []
res['E_CCSD_anion'] = []
res['E_CCSD(T)_anion'] = []
res['E_CASCI_anion'] = []
res['E_CASSCF_anion'] = []


for i in res['basis']:
    
    print("#"*53)
    print("START:", i)
    print("#"*53)

    mol = gto.M(atom     = geo,
                basis    = i,         # Slater Type Orbital - 6g = 6 Gaussiane per orbitale
                charge   = -1,        # carica totale (nucleare + elettronica)
                spin     = 0,         # STRANO MA VERO: N(up)-N(down)
                verbose  = 4,         # quanto e cosa stampare
                symmetry = True)      # simmetrie molecolari (rotazione attorno all'asse OH)

    mf  = scf.RHF(mol)
    mf  = scf.newton(mf)         # solutore al secondo ordine E(C+dC) = E(C) + dC*g(C) + dC H(C) dC
    E   = mf.kernel()            # kernel = esegui ROHF
    a   = mf.stability()[0]      # calcolo g(C) ed H(C), proposta di nuovi orbitali possibilmente migliori (a)
    EHF = mf.kernel(a,mf.mo_occ) # kernel = esegui ROHF partendo dagli orbitali a
    mf.analyze()

    #
    # categoria 1: espansioni intorno all'Hartree-Fock
    #

    # ----- Moller-Plesset second order perturbation theory
    #
    # O----H               O[1s,2s,2px,2py,2pz] H[1s] # se la base e' cc-pCVnZ allora si possono studiare gli elettroni nell'1s
    nf     = 1                                        # altrimenti, l'orbitale 1s va congelato (rimane doppiamente occupato)
    mymp   = mp.MP2(mf,frozen=nf)                     # H = F + (H-F); F ha autofunzioni note, (H-F) e' perturbazione
    EMP    = EHF + mymp.kernel()[0]                   # Rayleigh-Schrodinger perturbation theory E = E(HF) - \sum_m |<m|H-F|0>|^2/(Em-E0)
    mcisd  = ci.CISD(mf,frozen=nf)                    # CISD: CI = configuration interaction; S = singole eccitazioni sull'Hartree-Fock
    ECISD  = EHF   + mcisd.kernel()[0]                # D = doppie eccitazioni sull'Hartree-Fock
    # CISD: H | Psi(HF) >      = T |Psi(HF) > + \sum_{ai} V(ai) c*(a)c(i) |Psi(HF)> + \sum_{abij} W(abij) c*(a)c*(b)c(j)c(i) |Psi(HF)>
    # CCSD: exp(T) | Psi(HF) >
    # Cluster operator: T = \sum_{ai} t(ai) c*(a)c(i) + \sum_{abij} t(abij) c*(a)c*(b)c(j)c(i) + ...
    mc     = cc.CCSD(mf,frozen=nf)
    ECCSD  = EHF   + mc.kernel()[0]
    ECCSDT = ECCSD + mc.ccsd_t()
    # CCSD(T): si calcola il CCSD e poi si stima il contributo all'energia di correlazione dalle triple eccitazioni perturbativamente
    # CCSD(T) + cc-pVTZ e' chiamato il "gold standard"

    # 
    # categoria 2: diagonalizzazione piu' o meno esatta
    #

    # CAS = complete active space
    # CI  = configuration interaction
    # SCF = self-consistent field
    # CASCI: si sceglie un insieme di orbitali e di elettroni, si costruiscono tutti i possibili determinanti di Slater 
    # che coinvolgono eccitazioni di questi orbitali ed elettroni
    # e si risolve l'eq di Schrodinger in questo sottospazio
    # 150 -------- INATTIVI
    # ............ INATTIVI
    #  7  -------- INATTIVI
    #  6  -------- ATTIVI
    #  5  ---ud--- ATTIVI
    #  4  ---ud--- INATTIVI
    #  3  ---ud--- INATTIVI
    #  2  ---ud--- INATTIVI
    #  1  ---ud--- CONGELATI (FROZEN)

    #  6  ---- --d- --u- -ud- complete active space
    #  5  -ud- -u-- -d-- ----

    nel_frozen  = (nf,nf)  # congelare  l'1s
    orb_frozen  = nf       # coongelare l'1s
    na,nb       = (mol.nelectron+mol.spin)//2-nf,(mol.nelectron-mol.spin)//2-nf # tutti elettroni attivi tranne 1s
    nao_minimal = 6                                                             # prendere 6 orbitali di Hartree-Fock
    nact        = nao_minimal-nf                                                # tutti questi 6 orbitali attivi tranne l'1s
    mc          = mcscf.CASCI(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASCI      = mc.kernel()[0]

    # CASSCF: come il CASCI, ma gli orbitali non sono orbitali di campo medio, sono orbitali ottimizzati variazionalmente

    mc          = mcscf.CASSCF(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASSCF     = mc.kernel()[0]

    print("Hartree-Fock   ",EHF)
    print("Moller-Plesset ",EMP)
    print("CISD           ",ECISD)
    print("CCSD           ",ECCSD)
    print("CCSD(T)        ",ECCSDT)
    print("CASCI          ",ECASCI)
    print("CASSCF         ",ECASSCF)
    
    res['E_HF_anion'].append(EHF)
    res['E_MP_anion'].append(EMP)
    res['E_CISD_anion'].append(ECISD)
    res['E_CCSD_anion'].append(ECCSD)
    res['E_CCSD(T)_anion'].append(ECCSDT)
    res['E_CASCI_anion'].append(ECASCI)
    res['E_CASSCF_anion'].append(ECASSCF)
    
    print("#"*53)
    print("END:", i)
    print("#"*53)
    
    
try :
    data = np.load('../oh_data.npy',allow_pickle=True).item()
    for i in res:
        data[i] = res[i]
    np.save('../oh_data',data,allow_pickle=True)
except:
    np.save('../oh_data',res,allow_pickle=True)
    



    
    

# Sistema S1, Sistema S2
# E(S1,metodo) = E(S1,esatta) + BIAS(S1,metodo)
# E(S2,metodo) = E(S2,esatta) + BIAS(S2,metodo)
# E(S1,metodo)-E(S2,metodo) = E(S1,esatta)-E(S2,esatta) + BIAS(S1,metodo)-BIAS(S2,metodo)
# quando   BIAS(S1,metodo),BIAS(S2,metodo) "grande"  (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# tuttavia BIAS(S1,metodo)-BIAS(S2,metodo) "piccola" (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# allora "cancellation of errors"

#---------------------------------------------------------------------#
# metodo  | size-extensive E(A+B)=E(A)+E(B) | variational | cost      #
#---------------------------------------------------------------------#
# HF      | SI                              | SI          | M**4      #
# MP2     | NO                              | NO          | M**5      #
# CISD    | NO                              | SI          | M**7      #
# CCSD    | SI                              | NO          | M**6      #
# CCSD(T) | SI                              | NO          | M**9      #
# CASCI   | NO                              | SI          | exp(Nact) #
# CASSCF  | NO                              | SI          | exp(Nact) #
# FCI     | SI                              | SI          | exp(M)    #
#---------------------------------------------------------------------#

#------------------------------------------#
# ORBITALI      CORRELAZIONE   COMPUTER    #
# VIRTUALI      DINAMICA       CLASSICO    #
# VALENZA       STATICA        QUANTISTICO #
#------------------------------------------#

# E(R,basis,method) "potential energy surface = energia versus bondlength"
# R_{eq}(basis,method) = argmin_R E(R,basis,method)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Wed Sep  8 21:44:51 2021
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.964000000000 AA    0.000000000000   0.000000000000   1.821695984081 Bohr

nuclear repulsion = 4.39151212381743
point group symmetry = Coov
num. orbitals of irrep A1 = 7
num. orbitals of irrep E1x = 2
num. orbitals of irrep E1y = 2
number of shells = 7
number of NR pGTOs = 26
number of NR cGTOs = 11
basis = 6-31g
ecp = {}
CPU time:         3.73
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpnelwp88f
max_memory 4000 MB (current use 86 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpnelwp88f
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 86 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.43121108869104  LUMO (A1) = 0.174109915805089
Initial guess E= -75.18717291692  |g|= 0.78717
macro= 0  E= -75.3114757134608  delta_E= -0.124303  |g|= 0.0913327  3 KF 9 JK
macro= 1  E= -75.3115286407792  delta_E= -5.29273e-05  |g|= 0.00114799  2 KF 8 JK
macro= 2  E= -75.3115286407793  delta_E= -5.68434e-14  |g|= 1.93566e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 3  E=-75.3115286407793  |g|= 1.93566e-06  total 7 KF 23 JK
converged SCF energy = -75.3115286407793
RHF/RKS wavefunction is stable in the internal stability analysis
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpnelwp88f
max_memory 4000 MB (current use 86 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpnelwp88f
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 86 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.0389425348574108  LUMO (A1) = 0.561007904230888
Initial guess E= -75.3115286407793  |g|= 1.72456e-06
macro= 0  E= -75.3115286407802  delta_E= -9.66338e-13  |g|= 1.72456e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3115286407802  |g|= 1.72456e-06  total 2 KF 4 JK
converged SCF energy = -75.3115286407802
**** SCF Summaries ****
Total Energy =                         -75.311528640780239
Nuclear Repulsion Energy =               4.391512123817428
One-electron Energy =                 -117.076263622801406
Two-electron Energy =                   37.373222858203754
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y
                               3    1    1
**** MO energy ****
MO #1 (A1 #1), energy= -20.0895034374217 occ= 2
MO #2 (A1 #2), energy= -0.831422953454004 occ= 2
MO #3 (A1 #3), energy= -0.166098033826176 occ= 2
MO #4 (E1x #1), energy= -0.0389422642475112 occ= 2
MO #5 (E1y #1), energy= -0.0389422642475119 occ= 2
MO #6 (A1 #4), energy= 0.561008013188445 occ= 0
MO #7 (A1 #5), energy= 1.51116241574985 occ= 0
MO #8 (E1x #2), energy= 1.58860521598283 occ= 0
MO #9 (E1y #2), energy= 1.58860521598283 occ= 0
MO #10 (A1 #6), energy= 1.6507033658045 occ= 0
MO #11 (A1 #7), energy= 1.96902278536458 occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.82041
pop of  0 O 3s        0.01345
pop of  0 O 2px       1.98433
pop of  0 O 2py       1.98433
pop of  0 O 2pz       1.30749
pop of  0 O 3px       0.01567
pop of  0 O 3py       0.01567
pop of  0 O 3pz       0.00101
pop of  1 H 1s        0.85022
pop of  1 H 2s        0.00742
 ** Mulliken atomic charges  **
charge of  0O =     -1.14236
charge of  1H =      0.14236
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.13567

******** <class 'pyscf.mp.mp2.MP2'> ********
nocc = 4, nmo = 10
frozen orbitals 1
max_memory 4000 MB (current use 86 MB)
E(MP2) = -75.4362948775874  E_corr = -0.124766236807172

******** <class 'pyscf.ci.cisd.RCISD'> ********
CISD nocc = 4, nmo = 10
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-09
max_cycle = 50
max_space = 12
lindep = 0
nroots = 1
max_memory 4000 MB (current use 86 MB)
Init t2, MP2 energy = -0.124766236807173
RCISD converged
E(RCISD) = -75.43558934651632  E_corr = -0.1240607057360861

******** <class 'pyscf.cc.ccsd.CCSD'> ********
CC2 = 0
CCSD nocc = 4, nmo = 10
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-07
conv_tol_normt = 1e-05
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 86 MB)
Init t2, MP2 energy = -75.4362948775874  E_corr(MP2) -0.124766236807172
Init E_corr(CCSD) = -0.124766236807402
cycle = 1  E_corr(CCSD) = -0.12561693542224  dE = -0.000850698615  norm(t1,t2) = 0.0212249
cycle = 2  E_corr(CCSD) = -0.128073141990654  dE = -0.00245620657  norm(t1,t2) = 0.00824633
cycle = 3  E_corr(CCSD) = -0.129196469178232  dE = -0.00112332719  norm(t1,t2) = 0.00317874
cycle = 4  E_corr(CCSD) = -0.129287486783131  dE = -9.10176049e-05  norm(t1,t2) = 0.000451447
cycle = 5  E_corr(CCSD) = -0.12927584341496  dE = 1.16433682e-05  norm(t1,t2) = 0.000103882
cycle = 6  E_corr(CCSD) = -0.129273331929021  dE = 2.51148594e-06  norm(t1,t2) = 2.05434e-05
cycle = 7  E_corr(CCSD) = -0.129273814200062  dE = -4.82271041e-07  norm(t1,t2) = 4.94234e-06
cycle = 8  E_corr(CCSD) = -0.129273569963203  dE = 2.4423686e-07  norm(t1,t2) = 1.58968e-06
cycle = 9  E_corr(CCSD) = -0.129273588712297  dE = -1.87490939e-08  norm(t1,t2) = 2.62166e-07
CCSD converged
E(CCSD) = -75.4408022294925  E_corr = -0.1292735887122965
CCSD(T) correction = -0.000827435590938744
Active space CI wfn symmetry = A1

******** CASCI flags ********
CAS (4e+4e, 5o), ncore = 1, nvir = 5
natorb = False
canonicalization = True
sorting_mo_energy = False
max_memory 4000 (MB)
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 200
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
Input CI wfn symmetry = A1
Density matrix diagonal elements [1.99860244 1.98908564 1.99981439 1.99981439 0.01268315]
CASCI converged
CASCI E = -75.3183448962842  E(CI) = -19.5107508126094  S^2 = 0.0000000

******** <class 'pyscf.mcscf.mc1step_symm.SymAdaptedCASSCF'> ********
CAS (4e+4e, 5o), ncore = 1, nvir = 5
frozen orbitals 1
max_cycle_macro = 50
max_cycle_micro = 4
conv_tol = 1e-07
conv_tol_grad = None
orbital rotation max_stepsize = 0.02
augmented hessian ah_max_cycle = 30
augmented hessian ah_conv_tol = 1e-12
augmented hessian ah_linear dependence = 1e-14
augmented hessian ah_level shift = 0
augmented hessian ah_start_tol = 2.5
augmented hessian ah_start_cycle = 3
augmented hessian ah_grad_trust_region = 3
kf_trust_region = 3
kf_interval = 4
ci_response_space = 4
ci_grad_trust_region = 3
with_dep4 0
natorb = False
canonicalization = True
sorting_mo_energy = False
ao2mo_level = 2
chkfile = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpnelwp88f
max_memory 4000 MB (current use 86 MB)
internal_rotation = False
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 50
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
CI wfn symmetry = None
Active space CI wfn symmetry = A1
CASCI E = -75.3183448962842  S^2 = 0.0000000
Set conv_tol_grad to 0.000316228
macro iter 1 (13 JK  3 micro), CASSCF E = -75.3264763865681  dE = -0.0081314903  S^2 = 0.0000000
               |grad[o]|=0.0228  |grad[c]|= 0.009290087317036011  |ddm|=0.023
macro iter 2 (13 JK  3 micro), CASSCF E = -75.3338083199531  dE = -0.0073319334  S^2 = 0.0000000
               |grad[o]|=0.0278  |grad[c]|= 0.007549896981578702  |ddm|=0.013
macro iter 3 (13 JK  3 micro), CASSCF E = -75.3367037988573  dE = -0.0028954789  S^2 = 0.0000000
               |grad[o]|=0.0152  |grad[c]|= 0.004110312764038703  |ddm|=0.013
macro iter 4 (9 JK  4 micro), CASSCF E = -75.3367513825935  dE = -4.7583736e-05  S^2 = 0.0000000
               |grad[o]|=0.00421  |grad[c]|= 0.0004914865122459846  |ddm|=0.00627
macro iter 5 (3 JK  1 micro), CASSCF E = -75.33675140221  dE = -1.961655e-08  S^2 = 0.0000000
               |grad[o]|=0.000177  |grad[c]|= 7.681915072876062e-05  |ddm|=0.00012
1-step CASSCF converged in 5 macro (51 JK 14 micro) steps
CASSCF canonicalization
Density matrix diagonal elements [1.9957694  1.97596606 1.99958949 1.99958949 0.02908555]
CASSCF energy = -75.33675140221
CASCI E = -75.33675140221  E(CI) = -19.5291573185352  S^2 = 0.0000000
Hartree-Fock    -75.31152864078024
Moller-Plesset  -75.43629487758741
CISD            -75.43558934651632
CCSD            -75.44080222949253
CCSD(T)         -75.44162966508347
CASCI           -75.31834489628423
CASSCF          -75.33675140221003
#####################################################
END: 6-31g
#####################################################
#####################################################
START: 6-31++g
#####################################################
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/anion.py ****
import numpy     as np
from pyscf       import gto,scf,lo,tools  # librerie di PySCF
from pyscf.tools import cubegen           # gto: Gaussian Type Orbital
                                          # scf: Self-Consistent Field
from pyscf       import mp,ci,cc,mcscf

R_rad = 0.9697
R_an  = 0.9640
R     = R_an
geo   = []
geo.append(['O',(0,0,0)]) # geometria: lista di elementi della forma [A,(x,y,z)] xyz in Angstrom
geo.append(['H',(0,0,R)])

res = {}
res['basis'] = ['sto-6g','6-31g','6-31++g','6-31g**','6-31++g**','cc-pvdz','cc-pvtz','cc-pvqz','aug-cc-pvdz','aug-cc-pvtz']
res['E_HF_anion'] = []
res['E_MP_anion'] = []
res['E_CISD_anion'] = []
res['E_CCSD_anion'] = []
res['E_CCSD(T)_anion'] = []
res['E_CASCI_anion'] = []
res['E_CASSCF_anion'] = []


for i in res['basis']:
    
    print("#"*53)
    print("START:", i)
    print("#"*53)

    mol = gto.M(atom     = geo,
                basis    = i,         # Slater Type Orbital - 6g = 6 Gaussiane per orbitale
                charge   = -1,        # carica totale (nucleare + elettronica)
                spin     = 0,         # STRANO MA VERO: N(up)-N(down)
                verbose  = 4,         # quanto e cosa stampare
                symmetry = True)      # simmetrie molecolari (rotazione attorno all'asse OH)

    mf  = scf.RHF(mol)
    mf  = scf.newton(mf)         # solutore al secondo ordine E(C+dC) = E(C) + dC*g(C) + dC H(C) dC
    E   = mf.kernel()            # kernel = esegui ROHF
    a   = mf.stability()[0]      # calcolo g(C) ed H(C), proposta di nuovi orbitali possibilmente migliori (a)
    EHF = mf.kernel(a,mf.mo_occ) # kernel = esegui ROHF partendo dagli orbitali a
    mf.analyze()

    #
    # categoria 1: espansioni intorno all'Hartree-Fock
    #

    # ----- Moller-Plesset second order perturbation theory
    #
    # O----H               O[1s,2s,2px,2py,2pz] H[1s] # se la base e' cc-pCVnZ allora si possono studiare gli elettroni nell'1s
    nf     = 1                                        # altrimenti, l'orbitale 1s va congelato (rimane doppiamente occupato)
    mymp   = mp.MP2(mf,frozen=nf)                     # H = F + (H-F); F ha autofunzioni note, (H-F) e' perturbazione
    EMP    = EHF + mymp.kernel()[0]                   # Rayleigh-Schrodinger perturbation theory E = E(HF) - \sum_m |<m|H-F|0>|^2/(Em-E0)
    mcisd  = ci.CISD(mf,frozen=nf)                    # CISD: CI = configuration interaction; S = singole eccitazioni sull'Hartree-Fock
    ECISD  = EHF   + mcisd.kernel()[0]                # D = doppie eccitazioni sull'Hartree-Fock
    # CISD: H | Psi(HF) >      = T |Psi(HF) > + \sum_{ai} V(ai) c*(a)c(i) |Psi(HF)> + \sum_{abij} W(abij) c*(a)c*(b)c(j)c(i) |Psi(HF)>
    # CCSD: exp(T) | Psi(HF) >
    # Cluster operator: T = \sum_{ai} t(ai) c*(a)c(i) + \sum_{abij} t(abij) c*(a)c*(b)c(j)c(i) + ...
    mc     = cc.CCSD(mf,frozen=nf)
    ECCSD  = EHF   + mc.kernel()[0]
    ECCSDT = ECCSD + mc.ccsd_t()
    # CCSD(T): si calcola il CCSD e poi si stima il contributo all'energia di correlazione dalle triple eccitazioni perturbativamente
    # CCSD(T) + cc-pVTZ e' chiamato il "gold standard"

    # 
    # categoria 2: diagonalizzazione piu' o meno esatta
    #

    # CAS = complete active space
    # CI  = configuration interaction
    # SCF = self-consistent field
    # CASCI: si sceglie un insieme di orbitali e di elettroni, si costruiscono tutti i possibili determinanti di Slater 
    # che coinvolgono eccitazioni di questi orbitali ed elettroni
    # e si risolve l'eq di Schrodinger in questo sottospazio
    # 150 -------- INATTIVI
    # ............ INATTIVI
    #  7  -------- INATTIVI
    #  6  -------- ATTIVI
    #  5  ---ud--- ATTIVI
    #  4  ---ud--- INATTIVI
    #  3  ---ud--- INATTIVI
    #  2  ---ud--- INATTIVI
    #  1  ---ud--- CONGELATI (FROZEN)

    #  6  ---- --d- --u- -ud- complete active space
    #  5  -ud- -u-- -d-- ----

    nel_frozen  = (nf,nf)  # congelare  l'1s
    orb_frozen  = nf       # coongelare l'1s
    na,nb       = (mol.nelectron+mol.spin)//2-nf,(mol.nelectron-mol.spin)//2-nf # tutti elettroni attivi tranne 1s
    nao_minimal = 6                                                             # prendere 6 orbitali di Hartree-Fock
    nact        = nao_minimal-nf                                                # tutti questi 6 orbitali attivi tranne l'1s
    mc          = mcscf.CASCI(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASCI      = mc.kernel()[0]

    # CASSCF: come il CASCI, ma gli orbitali non sono orbitali di campo medio, sono orbitali ottimizzati variazionalmente

    mc          = mcscf.CASSCF(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASSCF     = mc.kernel()[0]

    print("Hartree-Fock   ",EHF)
    print("Moller-Plesset ",EMP)
    print("CISD           ",ECISD)
    print("CCSD           ",ECCSD)
    print("CCSD(T)        ",ECCSDT)
    print("CASCI          ",ECASCI)
    print("CASSCF         ",ECASSCF)
    
    res['E_HF_anion'].append(EHF)
    res['E_MP_anion'].append(EMP)
    res['E_CISD_anion'].append(ECISD)
    res['E_CCSD_anion'].append(ECCSD)
    res['E_CCSD(T)_anion'].append(ECCSDT)
    res['E_CASCI_anion'].append(ECASCI)
    res['E_CASSCF_anion'].append(ECASSCF)
    
    print("#"*53)
    print("END:", i)
    print("#"*53)
    
    
try :
    data = np.load('../oh_data.npy',allow_pickle=True).item()
    for i in res:
        data[i] = res[i]
    np.save('../oh_data',data,allow_pickle=True)
except:
    np.save('../oh_data',res,allow_pickle=True)
    



    
    

# Sistema S1, Sistema S2
# E(S1,metodo) = E(S1,esatta) + BIAS(S1,metodo)
# E(S2,metodo) = E(S2,esatta) + BIAS(S2,metodo)
# E(S1,metodo)-E(S2,metodo) = E(S1,esatta)-E(S2,esatta) + BIAS(S1,metodo)-BIAS(S2,metodo)
# quando   BIAS(S1,metodo),BIAS(S2,metodo) "grande"  (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# tuttavia BIAS(S1,metodo)-BIAS(S2,metodo) "piccola" (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# allora "cancellation of errors"

#---------------------------------------------------------------------#
# metodo  | size-extensive E(A+B)=E(A)+E(B) | variational | cost      #
#---------------------------------------------------------------------#
# HF      | SI                              | SI          | M**4      #
# MP2     | NO                              | NO          | M**5      #
# CISD    | NO                              | SI          | M**7      #
# CCSD    | SI                              | NO          | M**6      #
# CCSD(T) | SI                              | NO          | M**9      #
# CASCI   | NO                              | SI          | exp(Nact) #
# CASSCF  | NO                              | SI          | exp(Nact) #
# FCI     | SI                              | SI          | exp(M)    #
#---------------------------------------------------------------------#

#------------------------------------------#
# ORBITALI      CORRELAZIONE   COMPUTER    #
# VIRTUALI      DINAMICA       CLASSICO    #
# VALENZA       STATICA        QUANTISTICO #
#------------------------------------------#

# E(R,basis,method) "potential energy surface = energia versus bondlength"
# R_{eq}(basis,method) = argmin_R E(R,basis,method)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Wed Sep  8 21:44:51 2021
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.964000000000 AA    0.000000000000   0.000000000000   1.821695984081 Bohr

nuclear repulsion = 4.39151212381743
point group symmetry = Coov
num. orbitals of irrep A1 = 10
num. orbitals of irrep E1x = 3
num. orbitals of irrep E1y = 3
number of shells = 10
number of NR pGTOs = 31
number of NR cGTOs = 16
basis = 6-31++g
ecp = {}
CPU time:         4.97
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpv0av6d7x
max_memory 4000 MB (current use 86 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpv0av6d7x
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 86 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.428957984056289  LUMO (A1) = 0.0399292141616554
Initial guess E= -75.2349542725499  |g|= 0.737637
macro= 0  E= -75.3610163780171  delta_E= -0.126062  |g|= 0.123643  3 KF 9 JK
macro= 1  E= -75.3630997672071  delta_E= -0.00208339  |g|= 0.00610224  3 KF 9 JK
macro= 2  E= -75.3630998259712  delta_E= -5.87641e-08  |g|= 2.01215e-05  2 KF 6 JK
macro= 3  E= -75.3630998259712  delta_E= 2.84217e-14  |g|= 4.88559e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.3630998259712  |g|= 4.88559e-06  total 10 KF 31 JK
converged SCF energy = -75.3630998259712
RHF/RKS wavefunction is stable in the internal stability analysis
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpv0av6d7x
max_memory 4000 MB (current use 86 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpv0av6d7x
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 86 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.106936578240205  LUMO (A1) = 0.221104600050033
Initial guess E= -75.3630998259712  |g|= 4.88125e-06
macro= 0  E= -75.3630998259719  delta_E= -6.82121e-13  |g|= 4.88125e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3630998259719  |g|= 4.88125e-06  total 2 KF 4 JK
converged SCF energy = -75.3630998259719
**** SCF Summaries ****
Total Energy =                         -75.363099825971858
Nuclear Repulsion Energy =               4.391512123817428
One-electron Energy =                 -116.387917689925160
Two-electron Energy =                   36.633305740135889
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y
                               3    1    1
**** MO energy ****
MO #1 (A1 #1), energy= -20.1944069887022 occ= 2
MO #2 (A1 #2), energy= -0.910005089576999 occ= 2
MO #3 (A1 #3), energy= -0.242367870288432 occ= 2
MO #4 (E1x #1), energy= -0.106936578129556 occ= 2
MO #5 (E1y #1), energy= -0.106936578129557 occ= 2
MO #6 (A1 #4), energy= 0.221104601487458 occ= 0
MO #7 (A1 #5), energy= 0.487947656239257 occ= 0
MO #8 (E1x #2), energy= 0.502204910302317 occ= 0
MO #9 (E1y #2), energy= 0.502204910302317 occ= 0
MO #10 (A1 #6), energy= 0.551607772421887 occ= 0
MO #11 (A1 #7), energy= 0.651540136576086 occ= 0
MO #12 (A1 #8), energy= 1.66648302059674 occ= 0
MO #13 (E1x #3), energy= 1.76523050237733 occ= 0
MO #14 (E1y #3), energy= 1.76523050237733 occ= 0
MO #15 (A1 #9), energy= 1.8052930831299 occ= 0
MO #16 (A1 #10), energy= 2.18257307277341 occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.81250
pop of  0 O 3s        0.02168
pop of  0 O 4s        0.00283
pop of  0 O 2px       1.95184
pop of  0 O 2py       1.95184
pop of  0 O 2pz       1.38932
pop of  0 O 3px       0.04760
pop of  0 O 3py       0.04760
pop of  0 O 3pz       0.00271
pop of  0 O 4px       0.00055
pop of  0 O 4py       0.00055
pop of  0 O 4pz       0.00027
pop of  1 H 1s        0.75856
pop of  1 H 2s        0.00755
pop of  1 H 3s        0.00457
 ** Mulliken atomic charges  **
charge of  0O =     -1.22931
charge of  1H =      0.22931
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.60231

******** <class 'pyscf.mp.mp2.MP2'> ********
nocc = 4, nmo = 15
frozen orbitals 1
max_memory 4000 MB (current use 86 MB)
E(MP2) = -75.5164207134163  E_corr = -0.153320887444452

******** <class 'pyscf.ci.cisd.RCISD'> ********
CISD nocc = 4, nmo = 15
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-09
max_cycle = 50
max_space = 12
lindep = 0
nroots = 1
max_memory 4000 MB (current use 86 MB)
Init t2, MP2 energy = -0.153320887444452
RCISD converged
E(RCISD) = -75.50829269714053  E_corr = -0.1451928711686817

******** <class 'pyscf.cc.ccsd.CCSD'> ********
CC2 = 0
CCSD nocc = 4, nmo = 15
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-07
conv_tol_normt = 1e-05
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 86 MB)
Init t2, MP2 energy = -75.5164207134163  E_corr(MP2) -0.153320887444453
Init E_corr(CCSD) = -0.153320887446137
cycle = 1  E_corr(CCSD) = -0.143971641838399  dE = 0.00934924561  norm(t1,t2) = 0.0645918
cycle = 2  E_corr(CCSD) = -0.151883144377881  dE = -0.00791150254  norm(t1,t2) = 0.0221454
cycle = 3  E_corr(CCSD) = -0.151617576333411  dE = 0.000265568044  norm(t1,t2) = 0.0125686
cycle = 4  E_corr(CCSD) = -0.153128050698738  dE = -0.00151047437  norm(t1,t2) = 0.00539376
cycle = 5  E_corr(CCSD) = -0.153182327536314  dE = -5.42768376e-05  norm(t1,t2) = 0.000975807
cycle = 6  E_corr(CCSD) = -0.153163574595035  dE = 1.87529413e-05  norm(t1,t2) = 0.000545033
cycle = 7  E_corr(CCSD) = -0.153155034710191  dE = 8.53988484e-06  norm(t1,t2) = 0.000132736
cycle = 8  E_corr(CCSD) = -0.153158271663098  dE = -3.23695291e-06  norm(t1,t2) = 4.95909e-05
cycle = 9  E_corr(CCSD) = -0.153159103021557  dE = -8.3135846e-07  norm(t1,t2) = 2.81215e-05
cycle = 10  E_corr(CCSD) = -0.153158479929763  dE = 6.23091794e-07  norm(t1,t2) = 4.31184e-06
cycle = 11  E_corr(CCSD) = -0.153158562208998  dE = -8.22792343e-08  norm(t1,t2) = 1.57756e-06
CCSD converged
E(CCSD) = -75.51625838818086  E_corr = -0.1531585622089977
CCSD(T) correction = -0.00338648805363468
Active space CI wfn symmetry = A1

******** CASCI flags ********
CAS (4e+4e, 5o), ncore = 1, nvir = 10
natorb = False
canonicalization = True
sorting_mo_energy = False
max_memory 4000 (MB)
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 200
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
Input CI wfn symmetry = A1
Density matrix diagonal elements [1.99999361e+00 1.99995892e+00 1.99999424e+00 1.99999424e+00
 5.89821041e-05]
CASCI converged
CASCI E = -75.3631345698363  E(CI) = -19.5555398058093  S^2 = 0.0000000

******** <class 'pyscf.mcscf.mc1step_symm.SymAdaptedCASSCF'> ********
CAS (4e+4e, 5o), ncore = 1, nvir = 10
frozen orbitals 1
max_cycle_macro = 50
max_cycle_micro = 4
conv_tol = 1e-07
conv_tol_grad = None
orbital rotation max_stepsize = 0.02
augmented hessian ah_max_cycle = 30
augmented hessian ah_conv_tol = 1e-12
augmented hessian ah_linear dependence = 1e-14
augmented hessian ah_level shift = 0
augmented hessian ah_start_tol = 2.5
augmented hessian ah_start_cycle = 3
augmented hessian ah_grad_trust_region = 3
kf_trust_region = 3
kf_interval = 4
ci_response_space = 4
ci_grad_trust_region = 3
with_dep4 0
natorb = False
canonicalization = True
sorting_mo_energy = False
ao2mo_level = 2
chkfile = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpv0av6d7x
max_memory 4000 MB (current use 86 MB)
internal_rotation = False
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 50
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
CI wfn symmetry = None
Active space CI wfn symmetry = A1
CASCI E = -75.3631345698364  S^2 = 0.0000000
Set conv_tol_grad to 0.000316228
macro iter 1 (21 JK  4 micro), CASSCF E = -75.3668040027156  dE = -0.0036694329  S^2 = 0.0000000
               |grad[o]|=0.000321  |grad[c]|= 0.019057977565560456  |ddm|=0.0107
macro iter 2 (21 JK  4 micro), CASSCF E = -75.3808071578039  dE = -0.014003155  S^2 = 0.0000000
               |grad[o]|=0.0158  |grad[c]|= 0.022288276458890737  |ddm|=0.0197
macro iter 3 (21 JK  4 micro), CASSCF E = -75.3882911799819  dE = -0.0074840222  S^2 = 0.0000000
               |grad[o]|=0.0206  |grad[c]|= 0.008533198208152517  |ddm|=0.0076
macro iter 4 (9 JK  3 micro), CASSCF E = -75.3883649378422  dE = -7.375786e-05  S^2 = 0.0000000
               |grad[o]|=0.00263  |grad[c]|= 0.00011026403857462087  |ddm|=0.000552
macro iter 5 (3 JK  1 micro), CASSCF E = -75.3883649398122  dE = -1.9699513e-09  S^2 = 0.0000000
               |grad[o]|=2.85e-05  |grad[c]|= 2.831594574142676e-05  |ddm|=1.55e-05
1-step CASSCF converged in 5 macro (75 JK 16 micro) steps
CASSCF canonicalization
Density matrix diagonal elements [1.99568227 1.97627767 1.99969808 1.99969808 0.02864391]
CASSCF energy = -75.3883649398122
CASCI E = -75.3883649398122  E(CI) = -19.5807701757851  S^2 = 0.0000000
Hartree-Fock    -75.36309982597186
Moller-Plesset  -75.51642071341631
CISD            -75.50829269714053
CCSD            -75.51625838818086
CCSD(T)         -75.5196448762345
CASCI           -75.36313456983635
CASSCF          -75.38836493981216
#####################################################
END: 6-31++g
#####################################################
#####################################################
START: 6-31g**
#####################################################
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/anion.py ****
import numpy     as np
from pyscf       import gto,scf,lo,tools  # librerie di PySCF
from pyscf.tools import cubegen           # gto: Gaussian Type Orbital
                                          # scf: Self-Consistent Field
from pyscf       import mp,ci,cc,mcscf

R_rad = 0.9697
R_an  = 0.9640
R     = R_an
geo   = []
geo.append(['O',(0,0,0)]) # geometria: lista di elementi della forma [A,(x,y,z)] xyz in Angstrom
geo.append(['H',(0,0,R)])

res = {}
res['basis'] = ['sto-6g','6-31g','6-31++g','6-31g**','6-31++g**','cc-pvdz','cc-pvtz','cc-pvqz','aug-cc-pvdz','aug-cc-pvtz']
res['E_HF_anion'] = []
res['E_MP_anion'] = []
res['E_CISD_anion'] = []
res['E_CCSD_anion'] = []
res['E_CCSD(T)_anion'] = []
res['E_CASCI_anion'] = []
res['E_CASSCF_anion'] = []


for i in res['basis']:
    
    print("#"*53)
    print("START:", i)
    print("#"*53)

    mol = gto.M(atom     = geo,
                basis    = i,         # Slater Type Orbital - 6g = 6 Gaussiane per orbitale
                charge   = -1,        # carica totale (nucleare + elettronica)
                spin     = 0,         # STRANO MA VERO: N(up)-N(down)
                verbose  = 4,         # quanto e cosa stampare
                symmetry = True)      # simmetrie molecolari (rotazione attorno all'asse OH)

    mf  = scf.RHF(mol)
    mf  = scf.newton(mf)         # solutore al secondo ordine E(C+dC) = E(C) + dC*g(C) + dC H(C) dC
    E   = mf.kernel()            # kernel = esegui ROHF
    a   = mf.stability()[0]      # calcolo g(C) ed H(C), proposta di nuovi orbitali possibilmente migliori (a)
    EHF = mf.kernel(a,mf.mo_occ) # kernel = esegui ROHF partendo dagli orbitali a
    mf.analyze()

    #
    # categoria 1: espansioni intorno all'Hartree-Fock
    #

    # ----- Moller-Plesset second order perturbation theory
    #
    # O----H               O[1s,2s,2px,2py,2pz] H[1s] # se la base e' cc-pCVnZ allora si possono studiare gli elettroni nell'1s
    nf     = 1                                        # altrimenti, l'orbitale 1s va congelato (rimane doppiamente occupato)
    mymp   = mp.MP2(mf,frozen=nf)                     # H = F + (H-F); F ha autofunzioni note, (H-F) e' perturbazione
    EMP    = EHF + mymp.kernel()[0]                   # Rayleigh-Schrodinger perturbation theory E = E(HF) - \sum_m |<m|H-F|0>|^2/(Em-E0)
    mcisd  = ci.CISD(mf,frozen=nf)                    # CISD: CI = configuration interaction; S = singole eccitazioni sull'Hartree-Fock
    ECISD  = EHF   + mcisd.kernel()[0]                # D = doppie eccitazioni sull'Hartree-Fock
    # CISD: H | Psi(HF) >      = T |Psi(HF) > + \sum_{ai} V(ai) c*(a)c(i) |Psi(HF)> + \sum_{abij} W(abij) c*(a)c*(b)c(j)c(i) |Psi(HF)>
    # CCSD: exp(T) | Psi(HF) >
    # Cluster operator: T = \sum_{ai} t(ai) c*(a)c(i) + \sum_{abij} t(abij) c*(a)c*(b)c(j)c(i) + ...
    mc     = cc.CCSD(mf,frozen=nf)
    ECCSD  = EHF   + mc.kernel()[0]
    ECCSDT = ECCSD + mc.ccsd_t()
    # CCSD(T): si calcola il CCSD e poi si stima il contributo all'energia di correlazione dalle triple eccitazioni perturbativamente
    # CCSD(T) + cc-pVTZ e' chiamato il "gold standard"

    # 
    # categoria 2: diagonalizzazione piu' o meno esatta
    #

    # CAS = complete active space
    # CI  = configuration interaction
    # SCF = self-consistent field
    # CASCI: si sceglie un insieme di orbitali e di elettroni, si costruiscono tutti i possibili determinanti di Slater 
    # che coinvolgono eccitazioni di questi orbitali ed elettroni
    # e si risolve l'eq di Schrodinger in questo sottospazio
    # 150 -------- INATTIVI
    # ............ INATTIVI
    #  7  -------- INATTIVI
    #  6  -------- ATTIVI
    #  5  ---ud--- ATTIVI
    #  4  ---ud--- INATTIVI
    #  3  ---ud--- INATTIVI
    #  2  ---ud--- INATTIVI
    #  1  ---ud--- CONGELATI (FROZEN)

    #  6  ---- --d- --u- -ud- complete active space
    #  5  -ud- -u-- -d-- ----

    nel_frozen  = (nf,nf)  # congelare  l'1s
    orb_frozen  = nf       # coongelare l'1s
    na,nb       = (mol.nelectron+mol.spin)//2-nf,(mol.nelectron-mol.spin)//2-nf # tutti elettroni attivi tranne 1s
    nao_minimal = 6                                                             # prendere 6 orbitali di Hartree-Fock
    nact        = nao_minimal-nf                                                # tutti questi 6 orbitali attivi tranne l'1s
    mc          = mcscf.CASCI(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASCI      = mc.kernel()[0]

    # CASSCF: come il CASCI, ma gli orbitali non sono orbitali di campo medio, sono orbitali ottimizzati variazionalmente

    mc          = mcscf.CASSCF(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASSCF     = mc.kernel()[0]

    print("Hartree-Fock   ",EHF)
    print("Moller-Plesset ",EMP)
    print("CISD           ",ECISD)
    print("CCSD           ",ECCSD)
    print("CCSD(T)        ",ECCSDT)
    print("CASCI          ",ECASCI)
    print("CASSCF         ",ECASSCF)
    
    res['E_HF_anion'].append(EHF)
    res['E_MP_anion'].append(EMP)
    res['E_CISD_anion'].append(ECISD)
    res['E_CCSD_anion'].append(ECCSD)
    res['E_CCSD(T)_anion'].append(ECCSDT)
    res['E_CASCI_anion'].append(ECASCI)
    res['E_CASSCF_anion'].append(ECASSCF)
    
    print("#"*53)
    print("END:", i)
    print("#"*53)
    
    
try :
    data = np.load('../oh_data.npy',allow_pickle=True).item()
    for i in res:
        data[i] = res[i]
    np.save('../oh_data',data,allow_pickle=True)
except:
    np.save('../oh_data',res,allow_pickle=True)
    



    
    

# Sistema S1, Sistema S2
# E(S1,metodo) = E(S1,esatta) + BIAS(S1,metodo)
# E(S2,metodo) = E(S2,esatta) + BIAS(S2,metodo)
# E(S1,metodo)-E(S2,metodo) = E(S1,esatta)-E(S2,esatta) + BIAS(S1,metodo)-BIAS(S2,metodo)
# quando   BIAS(S1,metodo),BIAS(S2,metodo) "grande"  (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# tuttavia BIAS(S1,metodo)-BIAS(S2,metodo) "piccola" (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# allora "cancellation of errors"

#---------------------------------------------------------------------#
# metodo  | size-extensive E(A+B)=E(A)+E(B) | variational | cost      #
#---------------------------------------------------------------------#
# HF      | SI                              | SI          | M**4      #
# MP2     | NO                              | NO          | M**5      #
# CISD    | NO                              | SI          | M**7      #
# CCSD    | SI                              | NO          | M**6      #
# CCSD(T) | SI                              | NO          | M**9      #
# CASCI   | NO                              | SI          | exp(Nact) #
# CASSCF  | NO                              | SI          | exp(Nact) #
# FCI     | SI                              | SI          | exp(M)    #
#---------------------------------------------------------------------#

#------------------------------------------#
# ORBITALI      CORRELAZIONE   COMPUTER    #
# VIRTUALI      DINAMICA       CLASSICO    #
# VALENZA       STATICA        QUANTISTICO #
#------------------------------------------#

# E(R,basis,method) "potential energy surface = energia versus bondlength"
# R_{eq}(basis,method) = argmin_R E(R,basis,method)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Wed Sep  8 21:44:52 2021
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.964000000000 AA    0.000000000000   0.000000000000   1.821695984081 Bohr

nuclear repulsion = 4.39151212381743
point group symmetry = Coov
num. orbitals of irrep A1 = 9
num. orbitals of irrep E1x = 4
num. orbitals of irrep E1y = 4
num. orbitals of irrep E2x = 1
num. orbitals of irrep E2y = 1
number of shells = 9
number of NR pGTOs = 34
number of NR cGTOs = 19
basis = 6-31g**
ecp = {}
CPU time:         6.62
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmple4h3nzt
max_memory 4000 MB (current use 87 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmple4h3nzt
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 87 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.432906787042104  LUMO (A1) = 0.174164788372709
Initial guess E= -75.209139067943  |g|= 0.791981
macro= 0  E= -75.3307117079337  delta_E= -0.121573  |g|= 0.0627963  3 KF 9 JK
macro= 1  E= -75.3307221941135  delta_E= -1.04862e-05  |g|= 0.000614059  2 KF 7 JK
macro= 2  E= -75.3307221941134  delta_E= 5.68434e-14  |g|= 9.27131e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 3  E=-75.3307221941134  |g|= 9.27131e-06  total 7 KF 22 JK
converged SCF energy = -75.3307221941134
RHF/RKS wavefunction is stable in the internal stability analysis
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmple4h3nzt
max_memory 4000 MB (current use 87 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmple4h3nzt
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 87 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.035300039465593  LUMO (A1) = 0.565618754088052
Initial guess E= -75.3307221941134  |g|= 9.39887e-06
macro= 0  E= -75.3307221941162  delta_E= -2.75691e-12  |g|= 9.39887e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3307221941162  |g|= 9.39887e-06  total 2 KF 4 JK
converged SCF energy = -75.3307221941162
**** SCF Summaries ****
Total Energy =                         -75.330722194116191
Nuclear Repulsion Energy =               4.391512123817428
One-electron Energy =                 -117.153922948311873
Two-electron Energy =                   37.431688630378268
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
                               3    1    1    0    0
**** MO energy ****
MO #1 (A1 #1), energy= -20.085834359085 occ= 2
MO #2 (A1 #2), energy= -0.819999833176896 occ= 2
MO #3 (A1 #3), energy= -0.168838576183977 occ= 2
MO #4 (E1x #1), energy= -0.0353000376658631 occ= 2
MO #5 (E1y #1), energy= -0.0353000376658616 occ= 2
MO #6 (A1 #4), energy= 0.565618757293012 occ= 0
MO #7 (A1 #5), energy= 1.44694639603812 occ= 0
MO #8 (E1x #2), energy= 1.59262349315511 occ= 0
MO #9 (E1y #2), energy= 1.59262349315511 occ= 0
MO #10 (A1 #6), energy= 1.60803042366388 occ= 0
MO #11 (A1 #7), energy= 1.92595311483901 occ= 0
MO #12 (E1x #3), energy= 2.28817463703683 occ= 0
MO #13 (E1y #3), energy= 2.28817463703683 occ= 0
MO #14 (E2x #1), energy= 2.55601210513118 occ= 0
MO #15 (E2y #1), energy= 2.55601210513119 occ= 0
MO #16 (A1 #8), energy= 3.14254160880783 occ= 0
MO #17 (E1x #4), energy= 3.39161461749027 occ= 0
MO #18 (E1y #4), energy= 3.39161461749027 occ= 0
MO #19 (A1 #9), energy= 4.23017927803936 occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.80874
pop of  0 O 3s        0.01209
pop of  0 O 2px       1.98142
pop of  0 O 2py       1.98142
pop of  0 O 2pz       1.33387
pop of  0 O 3px       0.01559
pop of  0 O 3py       0.01559
pop of  0 O 3pz       0.00115
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00107
pop of  0 O 3dz^2     0.00356
pop of  0 O 3dxz      0.00107
pop of  0 O 3dx2-y2    0.00000
pop of  1 H 1s        0.83403
pop of  1 H 2s        0.00545
pop of  1 H 2px       0.00191
pop of  1 H 2py       0.00191
pop of  1 H 2pz       0.00112
 ** Mulliken atomic charges  **
charge of  0O =     -1.15557
charge of  1H =      0.15557
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  0.88325

******** <class 'pyscf.mp.mp2.MP2'> ********
nocc = 4, nmo = 18
frozen orbitals 1
max_memory 4000 MB (current use 87 MB)
E(MP2) = -75.5220481900653  E_corr = -0.191325995949114

******** <class 'pyscf.ci.cisd.RCISD'> ********
CISD nocc = 4, nmo = 18
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-09
max_cycle = 50
max_space = 12
lindep = 0
nroots = 1
max_memory 4000 MB (current use 87 MB)
Init t2, MP2 energy = -0.191325995949114
RCISD converged
E(RCISD) = -75.52105953638619  E_corr = -0.1903373422699914

******** <class 'pyscf.cc.ccsd.CCSD'> ********
CC2 = 0
CCSD nocc = 4, nmo = 18
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-07
conv_tol_normt = 1e-05
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 87 MB)
Init t2, MP2 energy = -75.5220481900653  E_corr(MP2) -0.191325995949114
Init E_corr(CCSD) = -0.19132599595248
cycle = 1  E_corr(CCSD) = -0.194450098235596  dE = -0.00312410228  norm(t1,t2) = 0.0201479
cycle = 2  E_corr(CCSD) = -0.197179816242339  dE = -0.00272971801  norm(t1,t2) = 0.00768887
cycle = 3  E_corr(CCSD) = -0.198142588995115  dE = -0.000962772753  norm(t1,t2) = 0.00286636
cycle = 4  E_corr(CCSD) = -0.198256977201238  dE = -0.000114388206  norm(t1,t2) = 0.000506006
cycle = 5  E_corr(CCSD) = -0.198241431723924  dE = 1.55454773e-05  norm(t1,t2) = 0.000117192
cycle = 6  E_corr(CCSD) = -0.198237872730557  dE = 3.55899337e-06  norm(t1,t2) = 2.71366e-05
cycle = 7  E_corr(CCSD) = -0.198238620666936  dE = -7.47936379e-07  norm(t1,t2) = 8.9063e-06
cycle = 8  E_corr(CCSD) = -0.198238234650839  dE = 3.86016097e-07  norm(t1,t2) = 2.3522e-06
cycle = 9  E_corr(CCSD) = -0.19823827305324  dE = -3.84024017e-08  norm(t1,t2) = 4.71748e-07
CCSD converged
E(CCSD) = -75.5289604671694  E_corr = -0.1982382730532405
CCSD(T) correction = -0.00198579328991041
Active space CI wfn symmetry = A1

******** CASCI flags ********
CAS (4e+4e, 5o), ncore = 1, nvir = 13
natorb = False
canonicalization = True
sorting_mo_energy = False
max_memory 4000 (MB)
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 200
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
Input CI wfn symmetry = A1
Density matrix diagonal elements [1.9986517  1.99146785 1.9998209  1.9998209  0.01023864]
CASCI converged
CASCI E = -75.3364940581423  E(CI) = -19.5288872647762  S^2 = 0.0000000

******** <class 'pyscf.mcscf.mc1step_symm.SymAdaptedCASSCF'> ********
CAS (4e+4e, 5o), ncore = 1, nvir = 13
frozen orbitals 1
max_cycle_macro = 50
max_cycle_micro = 4
conv_tol = 1e-07
conv_tol_grad = None
orbital rotation max_stepsize = 0.02
augmented hessian ah_max_cycle = 30
augmented hessian ah_conv_tol = 1e-12
augmented hessian ah_linear dependence = 1e-14
augmented hessian ah_level shift = 0
augmented hessian ah_start_tol = 2.5
augmented hessian ah_start_cycle = 3
augmented hessian ah_grad_trust_region = 3
kf_trust_region = 3
kf_interval = 4
ci_response_space = 4
ci_grad_trust_region = 3
with_dep4 0
natorb = False
canonicalization = True
sorting_mo_energy = False
ao2mo_level = 2
chkfile = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmple4h3nzt
max_memory 4000 MB (current use 87 MB)
internal_rotation = False
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 50
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
CI wfn symmetry = None
Active space CI wfn symmetry = A1
CASCI E = -75.3364940581423  S^2 = 0.0000000
Set conv_tol_grad to 0.000316228
macro iter 1 (21 JK  4 micro), CASSCF E = -75.3484260036286  dE = -0.011931945  S^2 = 0.0000000
               |grad[o]|=0.0208  |grad[c]|= 0.017927367417957116  |ddm|=0.0234
macro iter 2 (21 JK  4 micro), CASSCF E = -75.3544094711102  dE = -0.0059834675  S^2 = 0.0000000
               |grad[o]|=0.025  |grad[c]|= 0.006677207792763209  |ddm|=0.00852
macro iter 3 (9 JK  4 micro), CASSCF E = -75.354444188803  dE = -3.4717693e-05  S^2 = 0.0000000
               |grad[o]|=0.00528  |grad[c]|= 0.00069027958893659  |ddm|=0.0058
macro iter 4 (3 JK  1 micro), CASSCF E = -75.354444227039  dE = -3.8236024e-08  S^2 = 0.0000000
               |grad[o]|=0.000209  |grad[c]|= 0.00012095085347843105  |ddm|=0.00014
1-step CASSCF converged in 4 macro (54 JK 13 micro) steps
CASSCF canonicalization
Density matrix diagonal elements [1.99595203 1.97725882 1.9995746  1.9995746  0.02763995]
CASSCF energy = -75.354444227039
CASCI E = -75.354444227039  E(CI) = -19.5468374336729  S^2 = 0.0000000
Hartree-Fock    -75.33072219411619
Moller-Plesset  -75.5220481900653
CISD            -75.52105953638619
CCSD            -75.52896046716943
CCSD(T)         -75.53094626045933
CASCI           -75.33649405814228
CASSCF          -75.35444422703902
#####################################################
END: 6-31g**
#####################################################
#####################################################
START: 6-31++g**
#####################################################
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/anion.py ****
import numpy     as np
from pyscf       import gto,scf,lo,tools  # librerie di PySCF
from pyscf.tools import cubegen           # gto: Gaussian Type Orbital
                                          # scf: Self-Consistent Field
from pyscf       import mp,ci,cc,mcscf

R_rad = 0.9697
R_an  = 0.9640
R     = R_an
geo   = []
geo.append(['O',(0,0,0)]) # geometria: lista di elementi della forma [A,(x,y,z)] xyz in Angstrom
geo.append(['H',(0,0,R)])

res = {}
res['basis'] = ['sto-6g','6-31g','6-31++g','6-31g**','6-31++g**','cc-pvdz','cc-pvtz','cc-pvqz','aug-cc-pvdz','aug-cc-pvtz']
res['E_HF_anion'] = []
res['E_MP_anion'] = []
res['E_CISD_anion'] = []
res['E_CCSD_anion'] = []
res['E_CCSD(T)_anion'] = []
res['E_CASCI_anion'] = []
res['E_CASSCF_anion'] = []


for i in res['basis']:
    
    print("#"*53)
    print("START:", i)
    print("#"*53)

    mol = gto.M(atom     = geo,
                basis    = i,         # Slater Type Orbital - 6g = 6 Gaussiane per orbitale
                charge   = -1,        # carica totale (nucleare + elettronica)
                spin     = 0,         # STRANO MA VERO: N(up)-N(down)
                verbose  = 4,         # quanto e cosa stampare
                symmetry = True)      # simmetrie molecolari (rotazione attorno all'asse OH)

    mf  = scf.RHF(mol)
    mf  = scf.newton(mf)         # solutore al secondo ordine E(C+dC) = E(C) + dC*g(C) + dC H(C) dC
    E   = mf.kernel()            # kernel = esegui ROHF
    a   = mf.stability()[0]      # calcolo g(C) ed H(C), proposta di nuovi orbitali possibilmente migliori (a)
    EHF = mf.kernel(a,mf.mo_occ) # kernel = esegui ROHF partendo dagli orbitali a
    mf.analyze()

    #
    # categoria 1: espansioni intorno all'Hartree-Fock
    #

    # ----- Moller-Plesset second order perturbation theory
    #
    # O----H               O[1s,2s,2px,2py,2pz] H[1s] # se la base e' cc-pCVnZ allora si possono studiare gli elettroni nell'1s
    nf     = 1                                        # altrimenti, l'orbitale 1s va congelato (rimane doppiamente occupato)
    mymp   = mp.MP2(mf,frozen=nf)                     # H = F + (H-F); F ha autofunzioni note, (H-F) e' perturbazione
    EMP    = EHF + mymp.kernel()[0]                   # Rayleigh-Schrodinger perturbation theory E = E(HF) - \sum_m |<m|H-F|0>|^2/(Em-E0)
    mcisd  = ci.CISD(mf,frozen=nf)                    # CISD: CI = configuration interaction; S = singole eccitazioni sull'Hartree-Fock
    ECISD  = EHF   + mcisd.kernel()[0]                # D = doppie eccitazioni sull'Hartree-Fock
    # CISD: H | Psi(HF) >      = T |Psi(HF) > + \sum_{ai} V(ai) c*(a)c(i) |Psi(HF)> + \sum_{abij} W(abij) c*(a)c*(b)c(j)c(i) |Psi(HF)>
    # CCSD: exp(T) | Psi(HF) >
    # Cluster operator: T = \sum_{ai} t(ai) c*(a)c(i) + \sum_{abij} t(abij) c*(a)c*(b)c(j)c(i) + ...
    mc     = cc.CCSD(mf,frozen=nf)
    ECCSD  = EHF   + mc.kernel()[0]
    ECCSDT = ECCSD + mc.ccsd_t()
    # CCSD(T): si calcola il CCSD e poi si stima il contributo all'energia di correlazione dalle triple eccitazioni perturbativamente
    # CCSD(T) + cc-pVTZ e' chiamato il "gold standard"

    # 
    # categoria 2: diagonalizzazione piu' o meno esatta
    #

    # CAS = complete active space
    # CI  = configuration interaction
    # SCF = self-consistent field
    # CASCI: si sceglie un insieme di orbitali e di elettroni, si costruiscono tutti i possibili determinanti di Slater 
    # che coinvolgono eccitazioni di questi orbitali ed elettroni
    # e si risolve l'eq di Schrodinger in questo sottospazio
    # 150 -------- INATTIVI
    # ............ INATTIVI
    #  7  -------- INATTIVI
    #  6  -------- ATTIVI
    #  5  ---ud--- ATTIVI
    #  4  ---ud--- INATTIVI
    #  3  ---ud--- INATTIVI
    #  2  ---ud--- INATTIVI
    #  1  ---ud--- CONGELATI (FROZEN)

    #  6  ---- --d- --u- -ud- complete active space
    #  5  -ud- -u-- -d-- ----

    nel_frozen  = (nf,nf)  # congelare  l'1s
    orb_frozen  = nf       # coongelare l'1s
    na,nb       = (mol.nelectron+mol.spin)//2-nf,(mol.nelectron-mol.spin)//2-nf # tutti elettroni attivi tranne 1s
    nao_minimal = 6                                                             # prendere 6 orbitali di Hartree-Fock
    nact        = nao_minimal-nf                                                # tutti questi 6 orbitali attivi tranne l'1s
    mc          = mcscf.CASCI(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASCI      = mc.kernel()[0]

    # CASSCF: come il CASCI, ma gli orbitali non sono orbitali di campo medio, sono orbitali ottimizzati variazionalmente

    mc          = mcscf.CASSCF(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASSCF     = mc.kernel()[0]

    print("Hartree-Fock   ",EHF)
    print("Moller-Plesset ",EMP)
    print("CISD           ",ECISD)
    print("CCSD           ",ECCSD)
    print("CCSD(T)        ",ECCSDT)
    print("CASCI          ",ECASCI)
    print("CASSCF         ",ECASSCF)
    
    res['E_HF_anion'].append(EHF)
    res['E_MP_anion'].append(EMP)
    res['E_CISD_anion'].append(ECISD)
    res['E_CCSD_anion'].append(ECCSD)
    res['E_CCSD(T)_anion'].append(ECCSDT)
    res['E_CASCI_anion'].append(ECASCI)
    res['E_CASSCF_anion'].append(ECASSCF)
    
    print("#"*53)
    print("END:", i)
    print("#"*53)
    
    
try :
    data = np.load('../oh_data.npy',allow_pickle=True).item()
    for i in res:
        data[i] = res[i]
    np.save('../oh_data',data,allow_pickle=True)
except:
    np.save('../oh_data',res,allow_pickle=True)
    



    
    

# Sistema S1, Sistema S2
# E(S1,metodo) = E(S1,esatta) + BIAS(S1,metodo)
# E(S2,metodo) = E(S2,esatta) + BIAS(S2,metodo)
# E(S1,metodo)-E(S2,metodo) = E(S1,esatta)-E(S2,esatta) + BIAS(S1,metodo)-BIAS(S2,metodo)
# quando   BIAS(S1,metodo),BIAS(S2,metodo) "grande"  (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# tuttavia BIAS(S1,metodo)-BIAS(S2,metodo) "piccola" (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# allora "cancellation of errors"

#---------------------------------------------------------------------#
# metodo  | size-extensive E(A+B)=E(A)+E(B) | variational | cost      #
#---------------------------------------------------------------------#
# HF      | SI                              | SI          | M**4      #
# MP2     | NO                              | NO          | M**5      #
# CISD    | NO                              | SI          | M**7      #
# CCSD    | SI                              | NO          | M**6      #
# CCSD(T) | SI                              | NO          | M**9      #
# CASCI   | NO                              | SI          | exp(Nact) #
# CASSCF  | NO                              | SI          | exp(Nact) #
# FCI     | SI                              | SI          | exp(M)    #
#---------------------------------------------------------------------#

#------------------------------------------#
# ORBITALI      CORRELAZIONE   COMPUTER    #
# VIRTUALI      DINAMICA       CLASSICO    #
# VALENZA       STATICA        QUANTISTICO #
#------------------------------------------#

# E(R,basis,method) "potential energy surface = energia versus bondlength"
# R_{eq}(basis,method) = argmin_R E(R,basis,method)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Wed Sep  8 21:44:52 2021
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.964000000000 AA    0.000000000000   0.000000000000   1.821695984081 Bohr

nuclear repulsion = 4.39151212381743
point group symmetry = Coov
num. orbitals of irrep A1 = 12
num. orbitals of irrep E1x = 5
num. orbitals of irrep E1y = 5
num. orbitals of irrep E2x = 1
num. orbitals of irrep E2y = 1
number of shells = 12
number of NR pGTOs = 39
number of NR cGTOs = 24
basis = 6-31++g**
ecp = {}
CPU time:         8.17
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpm30ab9qn
max_memory 4000 MB (current use 87 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpm30ab9qn
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 87 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.431001542249017  LUMO (A1) = 0.0395434620527798
Initial guess E= -75.2572951206287  |g|= 0.743358
macro= 0  E= -75.3825122834974  delta_E= -0.125217  |g|= 0.127667  3 KF 9 JK
macro= 1  E= -75.3836452461423  delta_E= -0.00113296  |g|= 0.00550085  3 KF 9 JK
macro= 2  E= -75.3836452653724  delta_E= -1.923e-08  |g|= 1.33807e-05  2 KF 6 JK
macro= 3  E= -75.3836452653724  delta_E= -5.68434e-14  |g|= 4.44833e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.3836452653724  |g|= 4.44833e-06  total 10 KF 31 JK
converged SCF energy = -75.3836452653724
RHF/RKS wavefunction is stable in the internal stability analysis
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpm30ab9qn
max_memory 4000 MB (current use 87 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpm30ab9qn
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 87 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.104869454573453  LUMO (A1) = 0.222037129829183
Initial guess E= -75.3836452653724  |g|= 4.44748e-06
macro= 0  E= -75.3836452653729  delta_E= -5.11591e-13  |g|= 4.44748e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3836452653729  |g|= 4.44748e-06  total 2 KF 4 JK
converged SCF energy = -75.3836452653729
**** SCF Summaries ****
Total Energy =                         -75.383645265372934
Nuclear Repulsion Energy =               4.391512123817428
One-electron Energy =                 -116.448811943781038
Two-electron Energy =                   36.673654554590684
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
                               3    1    1    0    0
**** MO energy ****
MO #1 (A1 #1), energy= -20.1934501314798 occ= 2
MO #2 (A1 #2), energy= -0.900575449161288 occ= 2
MO #3 (A1 #3), energy= -0.246986923022474 occ= 2
MO #4 (E1x #1), energy= -0.10486945681812 occ= 2
MO #5 (E1y #1), energy= -0.104869456818119 occ= 2
MO #6 (A1 #4), energy= 0.222037129294268 occ= 0
MO #7 (A1 #5), energy= 0.483432039259267 occ= 0
MO #8 (E1x #2), energy= 0.502902261462833 occ= 0
MO #9 (E1y #2), energy= 0.502902261462835 occ= 0
MO #10 (A1 #6), energy= 0.555372460390365 occ= 0
MO #11 (A1 #7), energy= 0.655499775444518 occ= 0
MO #12 (A1 #8), energy= 1.56073136213455 occ= 0
MO #13 (A1 #9), energy= 1.76021263613562 occ= 0
MO #14 (E1x #3), energy= 1.76710995255459 occ= 0
MO #15 (E1y #3), energy= 1.76710995255459 occ= 0
MO #16 (A1 #10), energy= 2.14421287911257 occ= 0
MO #17 (E1x #4), energy= 2.21922414900339 occ= 0
MO #18 (E1y #4), energy= 2.21922414900339 occ= 0
MO #19 (E2x #1), energy= 2.47975220950409 occ= 0
MO #20 (E2y #1), energy= 2.4797522095041 occ= 0
MO #21 (A1 #11), energy= 3.12239998014139 occ= 0
MO #22 (E1x #5), energy= 3.32964291261101 occ= 0
MO #23 (E1y #5), energy= 3.32964291261101 occ= 0
MO #24 (A1 #12), energy= 4.1917930390021 occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.80276
pop of  0 O 3s        0.01830
pop of  0 O 4s        0.00232
pop of  0 O 2px       1.94682
pop of  0 O 2py       1.94682
pop of  0 O 2pz       1.41533
pop of  0 O 3px       0.04918
pop of  0 O 3py       0.04918
pop of  0 O 3pz       0.00276
pop of  0 O 4px       0.00077
pop of  0 O 4py       0.00077
pop of  0 O 4pz       0.00020
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00103
pop of  0 O 3dz^2     0.00454
pop of  0 O 3dxz      0.00103
pop of  0 O 3dx2-y2    0.00000
pop of  1 H 1s        0.74257
pop of  1 H 2s        0.00657
pop of  1 H 3s        0.00340
pop of  1 H 2px       0.00220
pop of  1 H 2py       0.00220
pop of  1 H 2pz       0.00125
 ** Mulliken atomic charges  **
charge of  0O =     -1.24181
charge of  1H =      0.24181
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.34975

******** <class 'pyscf.mp.mp2.MP2'> ********
nocc = 4, nmo = 23
frozen orbitals 1
max_memory 4000 MB (current use 87 MB)
E(MP2) = -75.6003585583398  E_corr = -0.216713292966877

******** <class 'pyscf.ci.cisd.RCISD'> ********
CISD nocc = 4, nmo = 23
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-09
max_cycle = 50
max_space = 12
lindep = 0
nroots = 1
max_memory 4000 MB (current use 87 MB)
Init t2, MP2 energy = -0.216713292966877
RCISD converged
E(RCISD) = -75.58989495937158  E_corr = -0.2062496939986467

******** <class 'pyscf.cc.ccsd.CCSD'> ********
CC2 = 0
CCSD nocc = 4, nmo = 23
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-07
conv_tol_normt = 1e-05
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 87 MB)
Init t2, MP2 energy = -75.6003585583398  E_corr(MP2) -0.216713292966877
Init E_corr(CCSD) = -0.21671329296738
cycle = 1  E_corr(CCSD) = -0.20903745306163  dE = 0.00767583991  norm(t1,t2) = 0.0578322
cycle = 2  E_corr(CCSD) = -0.216579677633361  dE = -0.00754222457  norm(t1,t2) = 0.0213226
cycle = 3  E_corr(CCSD) = -0.216079758027081  dE = 0.000499919606  norm(t1,t2) = 0.0119794
cycle = 4  E_corr(CCSD) = -0.21713433495945  dE = -0.00105457693  norm(t1,t2) = 0.00426285
cycle = 5  E_corr(CCSD) = -0.21719179310832  dE = -5.74581489e-05  norm(t1,t2) = 0.000786338
cycle = 6  E_corr(CCSD) = -0.217170350794446  dE = 2.14423139e-05  norm(t1,t2) = 0.000375043
cycle = 7  E_corr(CCSD) = -0.2171565172922  dE = 1.38335022e-05  norm(t1,t2) = 0.000109459
cycle = 8  E_corr(CCSD) = -0.21715911475297  dE = -2.59746077e-06  norm(t1,t2) = 4.09703e-05
cycle = 9  E_corr(CCSD) = -0.217160179700749  dE = -1.06494778e-06  norm(t1,t2) = 2.39447e-05
cycle = 10  E_corr(CCSD) = -0.217159447511686  dE = 7.32189063e-07  norm(t1,t2) = 5.22015e-06
cycle = 11  E_corr(CCSD) = -0.217159607611993  dE = -1.60100307e-07  norm(t1,t2) = 2.34711e-06
cycle = 12  E_corr(CCSD) = -0.217159577829574  dE = 2.97824192e-08  norm(t1,t2) = 9.01319e-07
CCSD converged
E(CCSD) = -75.60080484320251  E_corr = -0.2171595778295736
CCSD(T) correction = -0.0049158315713619
Active space CI wfn symmetry = A1

******** CASCI flags ********
CAS (4e+4e, 5o), ncore = 1, nvir = 18
natorb = False
canonicalization = True
sorting_mo_energy = False
max_memory 4000 (MB)
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 200
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
Input CI wfn symmetry = A1
Density matrix diagonal elements [1.99999363e+00 1.99996497e+00 1.99999401e+00 1.99999401e+00
 5.33719059e-05]
CASCI converged
CASCI E = -75.3836775659986  E(CI) = -19.5760655221996  S^2 = 0.0000000

******** <class 'pyscf.mcscf.mc1step_symm.SymAdaptedCASSCF'> ********
CAS (4e+4e, 5o), ncore = 1, nvir = 18
frozen orbitals 1
max_cycle_macro = 50
max_cycle_micro = 4
conv_tol = 1e-07
conv_tol_grad = None
orbital rotation max_stepsize = 0.02
augmented hessian ah_max_cycle = 30
augmented hessian ah_conv_tol = 1e-12
augmented hessian ah_linear dependence = 1e-14
augmented hessian ah_level shift = 0
augmented hessian ah_start_tol = 2.5
augmented hessian ah_start_cycle = 3
augmented hessian ah_grad_trust_region = 3
kf_trust_region = 3
kf_interval = 4
ci_response_space = 4
ci_grad_trust_region = 3
with_dep4 0
natorb = False
canonicalization = True
sorting_mo_energy = False
ao2mo_level = 2
chkfile = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpm30ab9qn
max_memory 4000 MB (current use 88 MB)
internal_rotation = False
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 50
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
CI wfn symmetry = None
Active space CI wfn symmetry = A1
CASCI E = -75.3836775659986  S^2 = 0.0000000
Set conv_tol_grad to 0.000316228
macro iter 1 (21 JK  4 micro), CASSCF E = -75.3869008727893  dE = -0.0032233068  S^2 = 0.0000000
               |grad[o]|=0.000301  |grad[c]|= 0.018577176282497353  |ddm|=0.009
macro iter 2 (21 JK  4 micro), CASSCF E = -75.3994003143105  dE = -0.012499442  S^2 = 0.0000000
               |grad[o]|=0.0147  |grad[c]|= 0.02150257821714252  |ddm|=0.0163
macro iter 3 (21 JK  4 micro), CASSCF E = -75.4069395786703  dE = -0.0075392644  S^2 = 0.0000000
               |grad[o]|=0.0218  |grad[c]|= 0.008878128701421597  |ddm|=0.00834
macro iter 4 (11 JK  4 micro), CASSCF E = -75.407046813938  dE = -0.00010723527  S^2 = 0.0000000
               |grad[o]|=0.00438  |grad[c]|= 0.00023282908561900406  |ddm|=0.00239
macro iter 5 (3 JK  1 micro), CASSCF E = -75.4070468207241  dE = -6.7861237e-09  S^2 = 0.0000000
               |grad[o]|=0.000108  |grad[c]|= 5.738178563246359e-05  |ddm|=6.41e-05
1-step CASSCF converged in 5 macro (77 JK 17 micro) steps
CASSCF canonicalization
Density matrix diagonal elements [1.9959103  1.97845252 1.99968471 1.99968471 0.02626776]
CASSCF energy = -75.4070468207241
CASCI E = -75.4070468207241  E(CI) = -19.5994347769252  S^2 = 0.0000000
Hartree-Fock    -75.38364526537293
Moller-Plesset  -75.6003585583398
CISD            -75.58989495937158
CCSD            -75.60080484320251
CCSD(T)         -75.60572067477388
CASCI           -75.38367756599862
CASSCF          -75.40704682072415
#####################################################
END: 6-31++g**
#####################################################
#####################################################
START: cc-pvdz
#####################################################
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/anion.py ****
import numpy     as np
from pyscf       import gto,scf,lo,tools  # librerie di PySCF
from pyscf.tools import cubegen           # gto: Gaussian Type Orbital
                                          # scf: Self-Consistent Field
from pyscf       import mp,ci,cc,mcscf

R_rad = 0.9697
R_an  = 0.9640
R     = R_an
geo   = []
geo.append(['O',(0,0,0)]) # geometria: lista di elementi della forma [A,(x,y,z)] xyz in Angstrom
geo.append(['H',(0,0,R)])

res = {}
res['basis'] = ['sto-6g','6-31g','6-31++g','6-31g**','6-31++g**','cc-pvdz','cc-pvtz','cc-pvqz','aug-cc-pvdz','aug-cc-pvtz']
res['E_HF_anion'] = []
res['E_MP_anion'] = []
res['E_CISD_anion'] = []
res['E_CCSD_anion'] = []
res['E_CCSD(T)_anion'] = []
res['E_CASCI_anion'] = []
res['E_CASSCF_anion'] = []


for i in res['basis']:
    
    print("#"*53)
    print("START:", i)
    print("#"*53)

    mol = gto.M(atom     = geo,
                basis    = i,         # Slater Type Orbital - 6g = 6 Gaussiane per orbitale
                charge   = -1,        # carica totale (nucleare + elettronica)
                spin     = 0,         # STRANO MA VERO: N(up)-N(down)
                verbose  = 4,         # quanto e cosa stampare
                symmetry = True)      # simmetrie molecolari (rotazione attorno all'asse OH)

    mf  = scf.RHF(mol)
    mf  = scf.newton(mf)         # solutore al secondo ordine E(C+dC) = E(C) + dC*g(C) + dC H(C) dC
    E   = mf.kernel()            # kernel = esegui ROHF
    a   = mf.stability()[0]      # calcolo g(C) ed H(C), proposta di nuovi orbitali possibilmente migliori (a)
    EHF = mf.kernel(a,mf.mo_occ) # kernel = esegui ROHF partendo dagli orbitali a
    mf.analyze()

    #
    # categoria 1: espansioni intorno all'Hartree-Fock
    #

    # ----- Moller-Plesset second order perturbation theory
    #
    # O----H               O[1s,2s,2px,2py,2pz] H[1s] # se la base e' cc-pCVnZ allora si possono studiare gli elettroni nell'1s
    nf     = 1                                        # altrimenti, l'orbitale 1s va congelato (rimane doppiamente occupato)
    mymp   = mp.MP2(mf,frozen=nf)                     # H = F + (H-F); F ha autofunzioni note, (H-F) e' perturbazione
    EMP    = EHF + mymp.kernel()[0]                   # Rayleigh-Schrodinger perturbation theory E = E(HF) - \sum_m |<m|H-F|0>|^2/(Em-E0)
    mcisd  = ci.CISD(mf,frozen=nf)                    # CISD: CI = configuration interaction; S = singole eccitazioni sull'Hartree-Fock
    ECISD  = EHF   + mcisd.kernel()[0]                # D = doppie eccitazioni sull'Hartree-Fock
    # CISD: H | Psi(HF) >      = T |Psi(HF) > + \sum_{ai} V(ai) c*(a)c(i) |Psi(HF)> + \sum_{abij} W(abij) c*(a)c*(b)c(j)c(i) |Psi(HF)>
    # CCSD: exp(T) | Psi(HF) >
    # Cluster operator: T = \sum_{ai} t(ai) c*(a)c(i) + \sum_{abij} t(abij) c*(a)c*(b)c(j)c(i) + ...
    mc     = cc.CCSD(mf,frozen=nf)
    ECCSD  = EHF   + mc.kernel()[0]
    ECCSDT = ECCSD + mc.ccsd_t()
    # CCSD(T): si calcola il CCSD e poi si stima il contributo all'energia di correlazione dalle triple eccitazioni perturbativamente
    # CCSD(T) + cc-pVTZ e' chiamato il "gold standard"

    # 
    # categoria 2: diagonalizzazione piu' o meno esatta
    #

    # CAS = complete active space
    # CI  = configuration interaction
    # SCF = self-consistent field
    # CASCI: si sceglie un insieme di orbitali e di elettroni, si costruiscono tutti i possibili determinanti di Slater 
    # che coinvolgono eccitazioni di questi orbitali ed elettroni
    # e si risolve l'eq di Schrodinger in questo sottospazio
    # 150 -------- INATTIVI
    # ............ INATTIVI
    #  7  -------- INATTIVI
    #  6  -------- ATTIVI
    #  5  ---ud--- ATTIVI
    #  4  ---ud--- INATTIVI
    #  3  ---ud--- INATTIVI
    #  2  ---ud--- INATTIVI
    #  1  ---ud--- CONGELATI (FROZEN)

    #  6  ---- --d- --u- -ud- complete active space
    #  5  -ud- -u-- -d-- ----

    nel_frozen  = (nf,nf)  # congelare  l'1s
    orb_frozen  = nf       # coongelare l'1s
    na,nb       = (mol.nelectron+mol.spin)//2-nf,(mol.nelectron-mol.spin)//2-nf # tutti elettroni attivi tranne 1s
    nao_minimal = 6                                                             # prendere 6 orbitali di Hartree-Fock
    nact        = nao_minimal-nf                                                # tutti questi 6 orbitali attivi tranne l'1s
    mc          = mcscf.CASCI(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASCI      = mc.kernel()[0]

    # CASSCF: come il CASCI, ma gli orbitali non sono orbitali di campo medio, sono orbitali ottimizzati variazionalmente

    mc          = mcscf.CASSCF(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASSCF     = mc.kernel()[0]

    print("Hartree-Fock   ",EHF)
    print("Moller-Plesset ",EMP)
    print("CISD           ",ECISD)
    print("CCSD           ",ECCSD)
    print("CCSD(T)        ",ECCSDT)
    print("CASCI          ",ECASCI)
    print("CASSCF         ",ECASSCF)
    
    res['E_HF_anion'].append(EHF)
    res['E_MP_anion'].append(EMP)
    res['E_CISD_anion'].append(ECISD)
    res['E_CCSD_anion'].append(ECCSD)
    res['E_CCSD(T)_anion'].append(ECCSDT)
    res['E_CASCI_anion'].append(ECASCI)
    res['E_CASSCF_anion'].append(ECASSCF)
    
    print("#"*53)
    print("END:", i)
    print("#"*53)
    
    
try :
    data = np.load('../oh_data.npy',allow_pickle=True).item()
    for i in res:
        data[i] = res[i]
    np.save('../oh_data',data,allow_pickle=True)
except:
    np.save('../oh_data',res,allow_pickle=True)
    



    
    

# Sistema S1, Sistema S2
# E(S1,metodo) = E(S1,esatta) + BIAS(S1,metodo)
# E(S2,metodo) = E(S2,esatta) + BIAS(S2,metodo)
# E(S1,metodo)-E(S2,metodo) = E(S1,esatta)-E(S2,esatta) + BIAS(S1,metodo)-BIAS(S2,metodo)
# quando   BIAS(S1,metodo),BIAS(S2,metodo) "grande"  (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# tuttavia BIAS(S1,metodo)-BIAS(S2,metodo) "piccola" (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# allora "cancellation of errors"

#---------------------------------------------------------------------#
# metodo  | size-extensive E(A+B)=E(A)+E(B) | variational | cost      #
#---------------------------------------------------------------------#
# HF      | SI                              | SI          | M**4      #
# MP2     | NO                              | NO          | M**5      #
# CISD    | NO                              | SI          | M**7      #
# CCSD    | SI                              | NO          | M**6      #
# CCSD(T) | SI                              | NO          | M**9      #
# CASCI   | NO                              | SI          | exp(Nact) #
# CASSCF  | NO                              | SI          | exp(Nact) #
# FCI     | SI                              | SI          | exp(M)    #
#---------------------------------------------------------------------#

#------------------------------------------#
# ORBITALI      CORRELAZIONE   COMPUTER    #
# VIRTUALI      DINAMICA       CLASSICO    #
# VALENZA       STATICA        QUANTISTICO #
#------------------------------------------#

# E(R,basis,method) "potential energy surface = energia versus bondlength"
# R_{eq}(basis,method) = argmin_R E(R,basis,method)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Wed Sep  8 21:44:53 2021
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.964000000000 AA    0.000000000000   0.000000000000   1.821695984081 Bohr

nuclear repulsion = 4.39151212381743
point group symmetry = Coov
num. orbitals of irrep A1 = 9
num. orbitals of irrep E1x = 4
num. orbitals of irrep E1y = 4
num. orbitals of irrep E2x = 1
num. orbitals of irrep E2y = 1
number of shells = 8
number of NR pGTOs = 33
number of NR cGTOs = 19
basis = cc-pvdz
ecp = {}
CPU time:        10.47
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpmbyo_wtn
max_memory 4000 MB (current use 88 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpmbyo_wtn
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 88 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.432373886495974  LUMO (A1) = 0.143737682787394
Initial guess E= -75.2095247943397  |g|= 0.797126
macro= 0  E= -75.3308066652555  delta_E= -0.121282  |g|= 0.0614253  3 KF 9 JK
macro= 1  E= -75.3308554090429  delta_E= -4.87438e-05  |g|= 0.00143074  2 KF 8 JK
macro= 2  E= -75.3308554090429  delta_E= 0  |g|= 4.20295e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 3  E=-75.3308554090429  |g|= 4.20295e-06  total 7 KF 23 JK
converged SCF energy = -75.3308554090429
RHF/RKS wavefunction is stable in the internal stability analysis
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpmbyo_wtn
max_memory 4000 MB (current use 89 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpmbyo_wtn
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 89 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.0273638528312882  LUMO (A1) = 0.508413954157345
Initial guess E= -75.3308554090429  |g|= 4.02969e-06
macro= 0  E= -75.3308554090441  delta_E= -1.25056e-12  |g|= 4.02969e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3308554090441  |g|= 4.02969e-06  total 2 KF 4 JK
converged SCF energy = -75.3308554090441
**** SCF Summaries ****
Total Energy =                         -75.330855409044148
Nuclear Repulsion Energy =               4.391512123817428
One-electron Energy =                 -117.243798522613332
Two-electron Energy =                   37.521430989751750
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
                               3    1    1    0    0
**** MO energy ****
MO #1 (A1 #1), energy= -20.0703730518426 occ= 2
MO #2 (A1 #2), energy= -0.813412837206975 occ= 2
MO #3 (A1 #3), energy= -0.161954799434179 occ= 2
MO #4 (E1x #1), energy= -0.0273637915355602 occ= 2
MO #5 (E1y #1), energy= -0.0273637915355599 occ= 2
MO #6 (A1 #4), energy= 0.508414008293053 occ= 0
MO #7 (A1 #5), energy= 1.216192587051 occ= 0
MO #8 (A1 #6), energy= 1.58163446561378 occ= 0
MO #9 (E1x #2), energy= 1.62961498782154 occ= 0
MO #10 (E1y #2), energy= 1.62961498782153 occ= 0
MO #11 (E1x #3), energy= 1.95312041748201 occ= 0
MO #12 (E1y #3), energy= 1.95312041748201 occ= 0
MO #13 (A1 #7), energy= 2.11161576182827 occ= 0
MO #14 (A1 #8), energy= 2.86179396882541 occ= 0
MO #15 (E2x #1), energy= 3.44502385370369 occ= 0
MO #16 (E2y #1), energy= 3.44502385370369 occ= 0
MO #17 (E1x #4), energy= 3.76952206756492 occ= 0
MO #18 (E1y #4), energy= 3.76952206756491 occ= 0
MO #19 (A1 #9), energy= 4.48305851935815 occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.80596
pop of  0 O 3s        0.00877
pop of  0 O 2px       1.98105
pop of  0 O 2py       1.98105
pop of  0 O 2pz       1.32923
pop of  0 O 3px       0.01475
pop of  0 O 3py       0.01475
pop of  0 O 3pz       0.00151
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00063
pop of  0 O 3dz^2     0.00318
pop of  0 O 3dxz      0.00063
pop of  0 O 3dx2-y2    0.00000
pop of  1 H 1s        0.84482
pop of  1 H 2s        0.00515
pop of  1 H 2px       0.00357
pop of  1 H 2py       0.00357
pop of  1 H 2pz       0.00137
 ** Mulliken atomic charges  **
charge of  0O =     -1.14151
charge of  1H =      0.14151
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  0.82470

******** <class 'pyscf.mp.mp2.MP2'> ********
nocc = 4, nmo = 18
frozen orbitals 1
max_memory 4000 MB (current use 89 MB)
E(MP2) = -75.5254231151911  E_corr = -0.194567706146992

******** <class 'pyscf.ci.cisd.RCISD'> ********
CISD nocc = 4, nmo = 18
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-09
max_cycle = 50
max_space = 12
lindep = 0
nroots = 1
max_memory 4000 MB (current use 89 MB)
Init t2, MP2 energy = -0.194567706146992
RCISD converged
E(RCISD) = -75.5251335942831  E_corr = -0.1942781852389572

******** <class 'pyscf.cc.ccsd.CCSD'> ********
CC2 = 0
CCSD nocc = 4, nmo = 18
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-07
conv_tol_normt = 1e-05
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 89 MB)
Init t2, MP2 energy = -75.5254231151911  E_corr(MP2) -0.194567706146992
Init E_corr(CCSD) = -0.194567706148949
cycle = 1  E_corr(CCSD) = -0.198045494410342  dE = -0.00347778826  norm(t1,t2) = 0.0203717
cycle = 2  E_corr(CCSD) = -0.200926299636147  dE = -0.00288080523  norm(t1,t2) = 0.00755427
cycle = 3  E_corr(CCSD) = -0.201894441147262  dE = -0.000968141511  norm(t1,t2) = 0.00280618
cycle = 4  E_corr(CCSD) = -0.201990172128415  dE = -9.57309812e-05  norm(t1,t2) = 0.000427499
cycle = 5  E_corr(CCSD) = -0.201970897551952  dE = 1.92745765e-05  norm(t1,t2) = 8.80096e-05
cycle = 6  E_corr(CCSD) = -0.201969219232822  dE = 1.67831913e-06  norm(t1,t2) = 1.63957e-05
cycle = 7  E_corr(CCSD) = -0.201969831720966  dE = -6.12488144e-07  norm(t1,t2) = 5.31862e-06
cycle = 8  E_corr(CCSD) = -0.201969663564852  dE = 1.68156114e-07  norm(t1,t2) = 1.70702e-06
cycle = 9  E_corr(CCSD) = -0.2019696353526  dE = 2.82122519e-08  norm(t1,t2) = 6.78301e-07
CCSD converged
E(CCSD) = -75.53282504439674  E_corr = -0.2019696353525998
CCSD(T) correction = -0.00225736993780447
Active space CI wfn symmetry = A1

******** CASCI flags ********
CAS (4e+4e, 5o), ncore = 1, nvir = 13
natorb = False
canonicalization = True
sorting_mo_energy = False
max_memory 4000 (MB)
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 200
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
Input CI wfn symmetry = A1
Density matrix diagonal elements [1.99904043 1.99568275 1.99982899 1.99982899 0.00561884]
CASCI converged
CASCI E = -75.3340342543329  E(CI) = -19.5224570497056  S^2 = 0.0000000

******** <class 'pyscf.mcscf.mc1step_symm.SymAdaptedCASSCF'> ********
CAS (4e+4e, 5o), ncore = 1, nvir = 13
frozen orbitals 1
max_cycle_macro = 50
max_cycle_micro = 4
conv_tol = 1e-07
conv_tol_grad = None
orbital rotation max_stepsize = 0.02
augmented hessian ah_max_cycle = 30
augmented hessian ah_conv_tol = 1e-12
augmented hessian ah_linear dependence = 1e-14
augmented hessian ah_level shift = 0
augmented hessian ah_start_tol = 2.5
augmented hessian ah_start_cycle = 3
augmented hessian ah_grad_trust_region = 3
kf_trust_region = 3
kf_interval = 4
ci_response_space = 4
ci_grad_trust_region = 3
with_dep4 0
natorb = False
canonicalization = True
sorting_mo_energy = False
ao2mo_level = 2
chkfile = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpmbyo_wtn
max_memory 4000 MB (current use 89 MB)
internal_rotation = False
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 50
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
CI wfn symmetry = None
Active space CI wfn symmetry = A1
CASCI E = -75.3340342543329  S^2 = 0.0000000
Set conv_tol_grad to 0.000316228
macro iter 1 (21 JK  4 micro), CASSCF E = -75.3439016553119  dE = -0.009867401  S^2 = 0.0000000
               |grad[o]|=0.0135  |grad[c]|= 0.018434994556611555  |ddm|=0.0205
macro iter 2 (21 JK  4 micro), CASSCF E = -75.3528844266669  dE = -0.0089827714  S^2 = 0.0000000
               |grad[o]|=0.026  |grad[c]|= 0.009002477507248408  |ddm|=0.0126
macro iter 3 (14 JK  3 micro), CASSCF E = -75.3547324725987  dE = -0.0018480459  S^2 = 0.0000000
               |grad[o]|=0.0122  |grad[c]|= 0.003836154934086181  |ddm|=0.00711
macro iter 4 (9 JK  4 micro), CASSCF E = -75.3547376101767  dE = -5.137578e-06  S^2 = 0.0000000
               |grad[o]|=0.00242  |grad[c]|= 0.00019963493446401094  |ddm|=0.00261
macro iter 5 (3 JK  1 micro), CASSCF E = -75.3547376141526  dE = -3.9758845e-09  S^2 = 0.0000000
               |grad[o]|=6.98e-05  |grad[c]|= 4.7273271193321014e-05  |ddm|=4.83e-05
1-step CASSCF converged in 5 macro (68 JK 16 micro) steps
CASSCF canonicalization
Density matrix diagonal elements [1.99563342 1.97767881 1.99957674 1.99957674 0.02753428]
CASSCF energy = -75.3547376141526
CASCI E = -75.3547376141526  E(CI) = -19.5431604095253  S^2 = 0.0000000
Hartree-Fock    -75.33085540904415
Moller-Plesset  -75.52542311519115
CISD            -75.5251335942831
CCSD            -75.53282504439674
CCSD(T)         -75.53508241433455
CASCI           -75.33403425433289
CASSCF          -75.35473761415263
#####################################################
END: cc-pvdz
#####################################################
#####################################################
START: cc-pvtz
#####################################################
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/anion.py ****
import numpy     as np
from pyscf       import gto,scf,lo,tools  # librerie di PySCF
from pyscf.tools import cubegen           # gto: Gaussian Type Orbital
                                          # scf: Self-Consistent Field
from pyscf       import mp,ci,cc,mcscf

R_rad = 0.9697
R_an  = 0.9640
R     = R_an
geo   = []
geo.append(['O',(0,0,0)]) # geometria: lista di elementi della forma [A,(x,y,z)] xyz in Angstrom
geo.append(['H',(0,0,R)])

res = {}
res['basis'] = ['sto-6g','6-31g','6-31++g','6-31g**','6-31++g**','cc-pvdz','cc-pvtz','cc-pvqz','aug-cc-pvdz','aug-cc-pvtz']
res['E_HF_anion'] = []
res['E_MP_anion'] = []
res['E_CISD_anion'] = []
res['E_CCSD_anion'] = []
res['E_CCSD(T)_anion'] = []
res['E_CASCI_anion'] = []
res['E_CASSCF_anion'] = []


for i in res['basis']:
    
    print("#"*53)
    print("START:", i)
    print("#"*53)

    mol = gto.M(atom     = geo,
                basis    = i,         # Slater Type Orbital - 6g = 6 Gaussiane per orbitale
                charge   = -1,        # carica totale (nucleare + elettronica)
                spin     = 0,         # STRANO MA VERO: N(up)-N(down)
                verbose  = 4,         # quanto e cosa stampare
                symmetry = True)      # simmetrie molecolari (rotazione attorno all'asse OH)

    mf  = scf.RHF(mol)
    mf  = scf.newton(mf)         # solutore al secondo ordine E(C+dC) = E(C) + dC*g(C) + dC H(C) dC
    E   = mf.kernel()            # kernel = esegui ROHF
    a   = mf.stability()[0]      # calcolo g(C) ed H(C), proposta di nuovi orbitali possibilmente migliori (a)
    EHF = mf.kernel(a,mf.mo_occ) # kernel = esegui ROHF partendo dagli orbitali a
    mf.analyze()

    #
    # categoria 1: espansioni intorno all'Hartree-Fock
    #

    # ----- Moller-Plesset second order perturbation theory
    #
    # O----H               O[1s,2s,2px,2py,2pz] H[1s] # se la base e' cc-pCVnZ allora si possono studiare gli elettroni nell'1s
    nf     = 1                                        # altrimenti, l'orbitale 1s va congelato (rimane doppiamente occupato)
    mymp   = mp.MP2(mf,frozen=nf)                     # H = F + (H-F); F ha autofunzioni note, (H-F) e' perturbazione
    EMP    = EHF + mymp.kernel()[0]                   # Rayleigh-Schrodinger perturbation theory E = E(HF) - \sum_m |<m|H-F|0>|^2/(Em-E0)
    mcisd  = ci.CISD(mf,frozen=nf)                    # CISD: CI = configuration interaction; S = singole eccitazioni sull'Hartree-Fock
    ECISD  = EHF   + mcisd.kernel()[0]                # D = doppie eccitazioni sull'Hartree-Fock
    # CISD: H | Psi(HF) >      = T |Psi(HF) > + \sum_{ai} V(ai) c*(a)c(i) |Psi(HF)> + \sum_{abij} W(abij) c*(a)c*(b)c(j)c(i) |Psi(HF)>
    # CCSD: exp(T) | Psi(HF) >
    # Cluster operator: T = \sum_{ai} t(ai) c*(a)c(i) + \sum_{abij} t(abij) c*(a)c*(b)c(j)c(i) + ...
    mc     = cc.CCSD(mf,frozen=nf)
    ECCSD  = EHF   + mc.kernel()[0]
    ECCSDT = ECCSD + mc.ccsd_t()
    # CCSD(T): si calcola il CCSD e poi si stima il contributo all'energia di correlazione dalle triple eccitazioni perturbativamente
    # CCSD(T) + cc-pVTZ e' chiamato il "gold standard"

    # 
    # categoria 2: diagonalizzazione piu' o meno esatta
    #

    # CAS = complete active space
    # CI  = configuration interaction
    # SCF = self-consistent field
    # CASCI: si sceglie un insieme di orbitali e di elettroni, si costruiscono tutti i possibili determinanti di Slater 
    # che coinvolgono eccitazioni di questi orbitali ed elettroni
    # e si risolve l'eq di Schrodinger in questo sottospazio
    # 150 -------- INATTIVI
    # ............ INATTIVI
    #  7  -------- INATTIVI
    #  6  -------- ATTIVI
    #  5  ---ud--- ATTIVI
    #  4  ---ud--- INATTIVI
    #  3  ---ud--- INATTIVI
    #  2  ---ud--- INATTIVI
    #  1  ---ud--- CONGELATI (FROZEN)

    #  6  ---- --d- --u- -ud- complete active space
    #  5  -ud- -u-- -d-- ----

    nel_frozen  = (nf,nf)  # congelare  l'1s
    orb_frozen  = nf       # coongelare l'1s
    na,nb       = (mol.nelectron+mol.spin)//2-nf,(mol.nelectron-mol.spin)//2-nf # tutti elettroni attivi tranne 1s
    nao_minimal = 6                                                             # prendere 6 orbitali di Hartree-Fock
    nact        = nao_minimal-nf                                                # tutti questi 6 orbitali attivi tranne l'1s
    mc          = mcscf.CASCI(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASCI      = mc.kernel()[0]

    # CASSCF: come il CASCI, ma gli orbitali non sono orbitali di campo medio, sono orbitali ottimizzati variazionalmente

    mc          = mcscf.CASSCF(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASSCF     = mc.kernel()[0]

    print("Hartree-Fock   ",EHF)
    print("Moller-Plesset ",EMP)
    print("CISD           ",ECISD)
    print("CCSD           ",ECCSD)
    print("CCSD(T)        ",ECCSDT)
    print("CASCI          ",ECASCI)
    print("CASSCF         ",ECASSCF)
    
    res['E_HF_anion'].append(EHF)
    res['E_MP_anion'].append(EMP)
    res['E_CISD_anion'].append(ECISD)
    res['E_CCSD_anion'].append(ECCSD)
    res['E_CCSD(T)_anion'].append(ECCSDT)
    res['E_CASCI_anion'].append(ECASCI)
    res['E_CASSCF_anion'].append(ECASSCF)
    
    print("#"*53)
    print("END:", i)
    print("#"*53)
    
    
try :
    data = np.load('../oh_data.npy',allow_pickle=True).item()
    for i in res:
        data[i] = res[i]
    np.save('../oh_data',data,allow_pickle=True)
except:
    np.save('../oh_data',res,allow_pickle=True)
    



    
    

# Sistema S1, Sistema S2
# E(S1,metodo) = E(S1,esatta) + BIAS(S1,metodo)
# E(S2,metodo) = E(S2,esatta) + BIAS(S2,metodo)
# E(S1,metodo)-E(S2,metodo) = E(S1,esatta)-E(S2,esatta) + BIAS(S1,metodo)-BIAS(S2,metodo)
# quando   BIAS(S1,metodo),BIAS(S2,metodo) "grande"  (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# tuttavia BIAS(S1,metodo)-BIAS(S2,metodo) "piccola" (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# allora "cancellation of errors"

#---------------------------------------------------------------------#
# metodo  | size-extensive E(A+B)=E(A)+E(B) | variational | cost      #
#---------------------------------------------------------------------#
# HF      | SI                              | SI          | M**4      #
# MP2     | NO                              | NO          | M**5      #
# CISD    | NO                              | SI          | M**7      #
# CCSD    | SI                              | NO          | M**6      #
# CCSD(T) | SI                              | NO          | M**9      #
# CASCI   | NO                              | SI          | exp(Nact) #
# CASSCF  | NO                              | SI          | exp(Nact) #
# FCI     | SI                              | SI          | exp(M)    #
#---------------------------------------------------------------------#

#------------------------------------------#
# ORBITALI      CORRELAZIONE   COMPUTER    #
# VIRTUALI      DINAMICA       CLASSICO    #
# VALENZA       STATICA        QUANTISTICO #
#------------------------------------------#

# E(R,basis,method) "potential energy surface = energia versus bondlength"
# R_{eq}(basis,method) = argmin_R E(R,basis,method)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Wed Sep  8 21:44:54 2021
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.964000000000 AA    0.000000000000   0.000000000000   1.821695984081 Bohr

nuclear repulsion = 4.39151212381743
point group symmetry = Coov
num. orbitals of irrep A1 = 16
num. orbitals of irrep E1x = 9
num. orbitals of irrep E1y = 9
num. orbitals of irrep E2x = 4
num. orbitals of irrep E2y = 4
num. orbitals of irrep E3x = 1
num. orbitals of irrep E3y = 1
number of shells = 15
number of NR pGTOs = 58
number of NR cGTOs = 44
basis = cc-pvtz
ecp = {}
CPU time:        12.23
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpuavonude
max_memory 4000 MB (current use 89 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpuavonude
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 89 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.433440504399662  LUMO (A1) = 0.115803199428335
Initial guess E= -75.2603989080183  |g|= 0.785407
macro= 0  E= -75.3813641585762  delta_E= -0.120965  |g|= 0.785407  2 KF 5 JK
macro= 1  E= -75.3828275405265  delta_E= -0.00146338  |g|= 5.45562e-05  3 KF 10 JK
macro= 2  E= -75.3828275405268  delta_E= -3.12639e-13  |g|= 7.83778e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 3  E=-75.3828275405268  |g|= 7.83778e-06  total 7 KF 21 JK
converged SCF energy = -75.3828275405268
RHF/RKS wavefunction is stable in the internal stability analysis
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpuavonude
max_memory 4000 MB (current use 96 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpuavonude
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 96 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.0632477463717208  LUMO (A1) = 0.425819070253985
Initial guess E= -75.3828275405268  |g|= 7.61862e-06
macro= 0  E= -75.3828275405298  delta_E= -3.0127e-12  |g|= 7.61862e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3828275405298  |g|= 7.61862e-06  total 2 KF 4 JK
converged SCF energy = -75.3828275405298
**** SCF Summaries ****
Total Energy =                         -75.382827540529831
Nuclear Repulsion Energy =               4.391512123817428
One-electron Energy =                 -116.994529022121313
Two-electron Energy =                   37.220189357774046
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
                               3    1    1    0    0    0    0
**** MO energy ****
MO #1 (A1 #1), energy= -20.1052297041314 occ= 2
MO #2 (A1 #2), energy= -0.847401093214168 occ= 2
MO #3 (A1 #3), energy= -0.197948866069667 occ= 2
MO #4 (E1x #1), energy= -0.0632477455381415 occ= 2
MO #5 (E1y #1), energy= -0.0632477443332432 occ= 2
MO #6 (A1 #4), energy= 0.425819068006592 occ= 0
MO #7 (A1 #5), energy= 0.912561368501866 occ= 0
MO #8 (A1 #6), energy= 1.04432472445967 occ= 0
MO #9 (E1x #2), energy= 1.16185200000725 occ= 0
MO #10 (E1y #2), energy= 1.16185200131306 occ= 0
MO #11 (E1x #3), energy= 1.23737105081306 occ= 0
MO #12 (E1y #3), energy= 1.23737105117447 occ= 0
MO #13 (A1 #7), energy= 1.47875872789545 occ= 0
MO #14 (A1 #8), energy= 1.90049468273802 occ= 0
MO #15 (E2x #1), energy= 2.15218174651842 occ= 0
MO #16 (E2y #1), energy= 2.15218174651842 occ= 0
MO #17 (E1y #4), energy= 2.4669474674016 occ= 0
MO #18 (E1x #4), energy= 2.46694746765334 occ= 0
MO #19 (A1 #9), energy= 2.5397507371152 occ= 0
MO #20 (A1 #10), energy= 3.20664705917123 occ= 0
MO #21 (E2x #2), energy= 3.90000392558413 occ= 0
MO #22 (E2y #2), energy= 3.90000392558413 occ= 0
MO #23 (E1x #5), energy= 4.18392230241611 occ= 0
MO #24 (E1y #5), energy= 4.1839223032156 occ= 0
MO #25 (E1x #6), energy= 4.42428262607143 occ= 0
MO #26 (E1y #6), energy= 4.42428262707248 occ= 0
MO #27 (A1 #11), energy= 4.46014100395578 occ= 0
MO #28 (E1x #7), energy= 4.89142610776239 occ= 0
MO #29 (E1y #7), energy= 4.89142610848324 occ= 0
MO #30 (A1 #12), energy= 5.239061578114 occ= 0
MO #31 (A1 #13), energy= 5.52319807721207 occ= 0
MO #32 (E3x #1), energy= 6.03881546138755 occ= 0
MO #33 (E3y #1), energy= 6.03881546138755 occ= 0
MO #34 (E2x #3), energy= 6.29036893069904 occ= 0
MO #35 (E2y #3), energy= 6.29036893069902 occ= 0
MO #36 (E2x #4), energy= 7.20713029644488 occ= 0
MO #37 (E2y #4), energy= 7.20713029644488 occ= 0
MO #38 (E1x #8), energy= 7.33401580279264 occ= 0
MO #39 (E1y #8), energy= 7.33401580307803 occ= 0
MO #40 (A1 #14), energy= 7.34309534011277 occ= 0
MO #41 (E1x #9), energy= 7.52364236812206 occ= 0
MO #42 (E1y #9), energy= 7.52364236838855 occ= 0
MO #43 (A1 #15), energy= 7.9911660592091 occ= 0
MO #44 (A1 #16), energy= 11.3380508814361 occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.80325
pop of  0 O 3s        0.01016
pop of  0 O 4s        0.00017
pop of  0 O 2px       1.96947
pop of  0 O 2py       1.96947
pop of  0 O 2pz       1.38313
pop of  0 O 3px       0.02187
pop of  0 O 3py       0.02187
pop of  0 O 3pz       0.00240
pop of  0 O 4px       0.00116
pop of  0 O 4py       0.00116
pop of  0 O 4pz       0.00027
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00114
pop of  0 O 3dz^2     0.00415
pop of  0 O 3dxz      0.00114
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00006
pop of  0 O 4dz^2     0.00009
pop of  0 O 4dxz      0.00006
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00012
pop of  0 O 4f 0      0.00027
pop of  0 O 4f 1      0.00012
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  1 H 1s        0.78701
pop of  1 H 2s        0.00464
pop of  1 H 3s        0.00294
pop of  1 H 2px       0.00616
pop of  1 H 2py       0.00616
pop of  1 H 2pz       0.00048
pop of  1 H 3px       0.00002
pop of  1 H 3py       0.00002
pop of  1 H 3pz       0.00080
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00000
pop of  1 H 3dz^2     0.00023
pop of  1 H 3dxz      0.00000
pop of  1 H 3dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -1.19155
charge of  1H =      0.19155
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  0.94480

******** <class 'pyscf.mp.mp2.MP2'> ********
nocc = 4, nmo = 43
frozen orbitals 1
max_memory 4000 MB (current use 98 MB)
E(MP2) = -75.647543813955  E_corr = -0.264716273425126

******** <class 'pyscf.ci.cisd.RCISD'> ********
CISD nocc = 4, nmo = 43
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-09
max_cycle = 50
max_space = 12
lindep = 0
nroots = 1
max_memory 4000 MB (current use 100 MB)
Init t2, MP2 energy = -0.264716273425127
RCISD converged
E(RCISD) = -75.63835914654983  E_corr = -0.2555316060200008

******** <class 'pyscf.cc.ccsd.CCSD'> ********
CC2 = 0
CCSD nocc = 4, nmo = 43
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-07
conv_tol_normt = 1e-05
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 109 MB)
Init t2, MP2 energy = -75.647543813955  E_corr(MP2) -0.264716273425126
Init E_corr(CCSD) = -0.2647162734294
cycle = 1  E_corr(CCSD) = -0.261093277386863  dE = 0.00362299604  norm(t1,t2) = 0.0248664
cycle = 2  E_corr(CCSD) = -0.266381480257487  dE = -0.00528820287  norm(t1,t2) = 0.00899164
cycle = 3  E_corr(CCSD) = -0.266627338206641  dE = -0.000245857949  norm(t1,t2) = 0.00281264
cycle = 4  E_corr(CCSD) = -0.267065322971564  dE = -0.000437984765  norm(t1,t2) = 0.00108472
cycle = 5  E_corr(CCSD) = -0.267082409773276  dE = -1.70868017e-05  norm(t1,t2) = 0.000150813
cycle = 6  E_corr(CCSD) = -0.267069671831834  dE = 1.27379414e-05  norm(t1,t2) = 3.97687e-05
cycle = 7  E_corr(CCSD) = -0.267071291299797  dE = -1.61946796e-06  norm(t1,t2) = 8.23966e-06
cycle = 8  E_corr(CCSD) = -0.267071634948793  dE = -3.43648996e-07  norm(t1,t2) = 2.38447e-06
cycle = 9  E_corr(CCSD) = -0.267071560028498  dE = 7.49202957e-08  norm(t1,t2) = 7.97723e-07
CCSD converged
E(CCSD) = -75.64989910055836  E_corr = -0.2670715600284976
CCSD(T) correction = -0.00778656653193786
Active space CI wfn symmetry = A1

******** CASCI flags ********
CAS (4e+4e, 5o), ncore = 1, nvir = 38
natorb = False
canonicalization = True
sorting_mo_energy = False
max_memory 4000 (MB)
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 200
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
Input CI wfn symmetry = A1
Density matrix diagonal elements [1.99960751 1.9984504  1.99989996 1.99989996 0.00214218]
CASCI converged
CASCI E = -75.3841160096114  E(CI) = -19.5722322844758  S^2 = 0.0000000

******** <class 'pyscf.mcscf.mc1step_symm.SymAdaptedCASSCF'> ********
CAS (4e+4e, 5o), ncore = 1, nvir = 38
frozen orbitals 1
max_cycle_macro = 50
max_cycle_micro = 4
conv_tol = 1e-07
conv_tol_grad = None
orbital rotation max_stepsize = 0.02
augmented hessian ah_max_cycle = 30
augmented hessian ah_conv_tol = 1e-12
augmented hessian ah_linear dependence = 1e-14
augmented hessian ah_level shift = 0
augmented hessian ah_start_tol = 2.5
augmented hessian ah_start_cycle = 3
augmented hessian ah_grad_trust_region = 3
kf_trust_region = 3
kf_interval = 4
ci_response_space = 4
ci_grad_trust_region = 3
with_dep4 0
natorb = False
canonicalization = True
sorting_mo_energy = False
ao2mo_level = 2
chkfile = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpuavonude
max_memory 4000 MB (current use 104 MB)
internal_rotation = False
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 50
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
CI wfn symmetry = None
Active space CI wfn symmetry = A1
CASCI E = -75.3841160096114  S^2 = 0.0000000
Set conv_tol_grad to 0.000316228
macro iter 1 (21 JK  4 micro), CASSCF E = -75.3958246197483  dE = -0.01170861  S^2 = 0.0000000
               |grad[o]|=0.00677  |grad[c]|= 0.026994906488902595  |ddm|=0.0221
macro iter 2 (21 JK  4 micro), CASSCF E = -75.4057873373507  dE = -0.0099627176  S^2 = 0.0000000
               |grad[o]|=0.0274  |grad[c]|= 0.010163426922328257  |ddm|=0.012
macro iter 3 (14 JK  4 micro), CASSCF E = -75.4066923517008  dE = -0.00090501435  S^2 = 0.0000000
               |grad[o]|=0.0113  |grad[c]|= 0.0010498508200409227  |ddm|=0.00134
macro iter 4 (3 JK  1 micro), CASSCF E = -75.4066923672361  dE = -1.5535278e-08  S^2 = 0.0000000
               |grad[o]|=0.000118  |grad[c]|= 5.3148768874525625e-05  |ddm|=3.72e-05
1-step CASSCF converged in 4 macro (59 JK 13 micro) steps
CASSCF canonicalization
Density matrix diagonal elements [1.99562026 1.97767421 1.99965065 1.99965065 0.02740422]
CASSCF energy = -75.4066923672361
CASCI E = -75.4066923672361  E(CI) = -19.5948086421006  S^2 = 0.0000000
Hartree-Fock    -75.38282754052983
Moller-Plesset  -75.64754381395495
CISD            -75.63835914654983
CCSD            -75.64989910055833
CCSD(T)         -75.65768566709026
CASCI           -75.38411600961136
CASSCF          -75.40669236723608
#####################################################
END: cc-pvtz
#####################################################
#####################################################
START: cc-pvqz
#####################################################
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/anion.py ****
import numpy     as np
from pyscf       import gto,scf,lo,tools  # librerie di PySCF
from pyscf.tools import cubegen           # gto: Gaussian Type Orbital
                                          # scf: Self-Consistent Field
from pyscf       import mp,ci,cc,mcscf

R_rad = 0.9697
R_an  = 0.9640
R     = R_an
geo   = []
geo.append(['O',(0,0,0)]) # geometria: lista di elementi della forma [A,(x,y,z)] xyz in Angstrom
geo.append(['H',(0,0,R)])

res = {}
res['basis'] = ['sto-6g','6-31g','6-31++g','6-31g**','6-31++g**','cc-pvdz','cc-pvtz','cc-pvqz','aug-cc-pvdz','aug-cc-pvtz']
res['E_HF_anion'] = []
res['E_MP_anion'] = []
res['E_CISD_anion'] = []
res['E_CCSD_anion'] = []
res['E_CCSD(T)_anion'] = []
res['E_CASCI_anion'] = []
res['E_CASSCF_anion'] = []


for i in res['basis']:
    
    print("#"*53)
    print("START:", i)
    print("#"*53)

    mol = gto.M(atom     = geo,
                basis    = i,         # Slater Type Orbital - 6g = 6 Gaussiane per orbitale
                charge   = -1,        # carica totale (nucleare + elettronica)
                spin     = 0,         # STRANO MA VERO: N(up)-N(down)
                verbose  = 4,         # quanto e cosa stampare
                symmetry = True)      # simmetrie molecolari (rotazione attorno all'asse OH)

    mf  = scf.RHF(mol)
    mf  = scf.newton(mf)         # solutore al secondo ordine E(C+dC) = E(C) + dC*g(C) + dC H(C) dC
    E   = mf.kernel()            # kernel = esegui ROHF
    a   = mf.stability()[0]      # calcolo g(C) ed H(C), proposta di nuovi orbitali possibilmente migliori (a)
    EHF = mf.kernel(a,mf.mo_occ) # kernel = esegui ROHF partendo dagli orbitali a
    mf.analyze()

    #
    # categoria 1: espansioni intorno all'Hartree-Fock
    #

    # ----- Moller-Plesset second order perturbation theory
    #
    # O----H               O[1s,2s,2px,2py,2pz] H[1s] # se la base e' cc-pCVnZ allora si possono studiare gli elettroni nell'1s
    nf     = 1                                        # altrimenti, l'orbitale 1s va congelato (rimane doppiamente occupato)
    mymp   = mp.MP2(mf,frozen=nf)                     # H = F + (H-F); F ha autofunzioni note, (H-F) e' perturbazione
    EMP    = EHF + mymp.kernel()[0]                   # Rayleigh-Schrodinger perturbation theory E = E(HF) - \sum_m |<m|H-F|0>|^2/(Em-E0)
    mcisd  = ci.CISD(mf,frozen=nf)                    # CISD: CI = configuration interaction; S = singole eccitazioni sull'Hartree-Fock
    ECISD  = EHF   + mcisd.kernel()[0]                # D = doppie eccitazioni sull'Hartree-Fock
    # CISD: H | Psi(HF) >      = T |Psi(HF) > + \sum_{ai} V(ai) c*(a)c(i) |Psi(HF)> + \sum_{abij} W(abij) c*(a)c*(b)c(j)c(i) |Psi(HF)>
    # CCSD: exp(T) | Psi(HF) >
    # Cluster operator: T = \sum_{ai} t(ai) c*(a)c(i) + \sum_{abij} t(abij) c*(a)c*(b)c(j)c(i) + ...
    mc     = cc.CCSD(mf,frozen=nf)
    ECCSD  = EHF   + mc.kernel()[0]
    ECCSDT = ECCSD + mc.ccsd_t()
    # CCSD(T): si calcola il CCSD e poi si stima il contributo all'energia di correlazione dalle triple eccitazioni perturbativamente
    # CCSD(T) + cc-pVTZ e' chiamato il "gold standard"

    # 
    # categoria 2: diagonalizzazione piu' o meno esatta
    #

    # CAS = complete active space
    # CI  = configuration interaction
    # SCF = self-consistent field
    # CASCI: si sceglie un insieme di orbitali e di elettroni, si costruiscono tutti i possibili determinanti di Slater 
    # che coinvolgono eccitazioni di questi orbitali ed elettroni
    # e si risolve l'eq di Schrodinger in questo sottospazio
    # 150 -------- INATTIVI
    # ............ INATTIVI
    #  7  -------- INATTIVI
    #  6  -------- ATTIVI
    #  5  ---ud--- ATTIVI
    #  4  ---ud--- INATTIVI
    #  3  ---ud--- INATTIVI
    #  2  ---ud--- INATTIVI
    #  1  ---ud--- CONGELATI (FROZEN)

    #  6  ---- --d- --u- -ud- complete active space
    #  5  -ud- -u-- -d-- ----

    nel_frozen  = (nf,nf)  # congelare  l'1s
    orb_frozen  = nf       # coongelare l'1s
    na,nb       = (mol.nelectron+mol.spin)//2-nf,(mol.nelectron-mol.spin)//2-nf # tutti elettroni attivi tranne 1s
    nao_minimal = 6                                                             # prendere 6 orbitali di Hartree-Fock
    nact        = nao_minimal-nf                                                # tutti questi 6 orbitali attivi tranne l'1s
    mc          = mcscf.CASCI(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASCI      = mc.kernel()[0]

    # CASSCF: come il CASCI, ma gli orbitali non sono orbitali di campo medio, sono orbitali ottimizzati variazionalmente

    mc          = mcscf.CASSCF(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASSCF     = mc.kernel()[0]

    print("Hartree-Fock   ",EHF)
    print("Moller-Plesset ",EMP)
    print("CISD           ",ECISD)
    print("CCSD           ",ECCSD)
    print("CCSD(T)        ",ECCSDT)
    print("CASCI          ",ECASCI)
    print("CASSCF         ",ECASSCF)
    
    res['E_HF_anion'].append(EHF)
    res['E_MP_anion'].append(EMP)
    res['E_CISD_anion'].append(ECISD)
    res['E_CCSD_anion'].append(ECCSD)
    res['E_CCSD(T)_anion'].append(ECCSDT)
    res['E_CASCI_anion'].append(ECASCI)
    res['E_CASSCF_anion'].append(ECASSCF)
    
    print("#"*53)
    print("END:", i)
    print("#"*53)
    
    
try :
    data = np.load('../oh_data.npy',allow_pickle=True).item()
    for i in res:
        data[i] = res[i]
    np.save('../oh_data',data,allow_pickle=True)
except:
    np.save('../oh_data',res,allow_pickle=True)
    



    
    

# Sistema S1, Sistema S2
# E(S1,metodo) = E(S1,esatta) + BIAS(S1,metodo)
# E(S2,metodo) = E(S2,esatta) + BIAS(S2,metodo)
# E(S1,metodo)-E(S2,metodo) = E(S1,esatta)-E(S2,esatta) + BIAS(S1,metodo)-BIAS(S2,metodo)
# quando   BIAS(S1,metodo),BIAS(S2,metodo) "grande"  (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# tuttavia BIAS(S1,metodo)-BIAS(S2,metodo) "piccola" (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# allora "cancellation of errors"

#---------------------------------------------------------------------#
# metodo  | size-extensive E(A+B)=E(A)+E(B) | variational | cost      #
#---------------------------------------------------------------------#
# HF      | SI                              | SI          | M**4      #
# MP2     | NO                              | NO          | M**5      #
# CISD    | NO                              | SI          | M**7      #
# CCSD    | SI                              | NO          | M**6      #
# CCSD(T) | SI                              | NO          | M**9      #
# CASCI   | NO                              | SI          | exp(Nact) #
# CASSCF  | NO                              | SI          | exp(Nact) #
# FCI     | SI                              | SI          | exp(M)    #
#---------------------------------------------------------------------#

#------------------------------------------#
# ORBITALI      CORRELAZIONE   COMPUTER    #
# VIRTUALI      DINAMICA       CLASSICO    #
# VALENZA       STATICA        QUANTISTICO #
#------------------------------------------#

# E(R,basis,method) "potential energy surface = energia versus bondlength"
# R_{eq}(basis,method) = argmin_R E(R,basis,method)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Wed Sep  8 21:44:56 2021
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.964000000000 AA    0.000000000000   0.000000000000   1.821695984081 Bohr

nuclear repulsion = 4.39151212381743
point group symmetry = Coov
num. orbitals of irrep A1 = 25
num. orbitals of irrep E1x = 16
num. orbitals of irrep E1y = 16
num. orbitals of irrep E2x = 9
num. orbitals of irrep E2y = 9
num. orbitals of irrep E3x = 4
num. orbitals of irrep E3y = 4
num. orbitals of irrep E4x = 1
num. orbitals of irrep E4y = 1
number of shells = 24
number of NR pGTOs = 100
number of NR cGTOs = 85
basis = cc-pvqz
ecp = {}
CPU time:        24.64
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y E4x E4y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpgt56v5s7
max_memory 4000 MB (current use 104 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpgt56v5s7
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 104 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.434397066057624  LUMO (A1) = 0.0975185716937371
Initial guess E= -75.2745469689371  |g|= 0.783516
macro= 0  E= -75.4007945259226  delta_E= -0.126248  |g|= 0.783516  2 KF 5 JK
macro= 1  E= -75.4015124429854  delta_E= -0.000717917  |g|= 3.88288e-05  3 KF 10 JK
macro= 2  E= -75.4015124429856  delta_E= -1.98952e-13  |g|= 8.49954e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 3  E=-75.4015124429856  |g|= 8.49954e-06  total 7 KF 21 JK
converged SCF energy = -75.4015124429856
RHF/RKS wavefunction is stable in the internal stability analysis
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y E4x E4y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpgt56v5s7
max_memory 4000 MB (current use 159 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpgt56v5s7
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 159 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.0811014889349433  LUMO (A1) = 0.374899317339689
Initial guess E= -75.4015124429856  |g|= 8.49028e-06
macro= 0  E= -75.4015124429878  delta_E= -2.16005e-12  |g|= 8.49028e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4015124429878  |g|= 8.49028e-06  total 2 KF 4 JK
converged SCF energy = -75.4015124429878
**** SCF Summaries ****
Total Energy =                         -75.401512442987780
Nuclear Repulsion Energy =               4.391512123817428
One-electron Energy =                 -116.821906171112147
Two-electron Energy =                   37.028881604306953
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y  E4x  E4y
                               3    1    1    0    0    0    0    0    0
**** MO energy ****
MO #1 (A1 #1), energy= -20.1353806217412 occ= 2
MO #2 (A1 #2), energy= -0.867021052855546 occ= 2
MO #3 (A1 #3), energy= -0.217466812115702 occ= 2
MO #4 (E1x #1), energy= -0.0811014987242736 occ= 2
MO #5 (E1y #1), energy= -0.0811014958124088 occ= 2
MO #6 (A1 #4), energy= 0.374899319801893 occ= 0
MO #7 (A1 #5), energy= 0.759293343908367 occ= 0
MO #8 (A1 #6), energy= 0.820667300406428 occ= 0
MO #9 (E1x #2), energy= 0.921018659354635 occ= 0
MO #10 (E1y #2), energy= 0.921018661456098 occ= 0
MO #11 (E1x #3), energy= 0.986019836780151 occ= 0
MO #12 (E1y #3), energy= 0.986019837250745 occ= 0
MO #13 (A1 #7), energy= 1.13655626012937 occ= 0
MO #14 (A1 #8), energy= 1.45895319224813 occ= 0
MO #15 (E2x #1), energy= 1.61050805973693 occ= 0
MO #16 (E2y #1), energy= 1.61050805973693 occ= 0
MO #17 (A1 #9), energy= 1.71703066353895 occ= 0
MO #18 (E1y #4), energy= 1.85592427616646 occ= 0
MO #19 (E1x #4), energy= 1.85592427688487 occ= 0
MO #20 (A1 #10), energy= 2.18900531112618 occ= 0
MO #21 (E2x #2), energy= 2.58352913806308 occ= 0
MO #22 (E2y #2), energy= 2.58352913806309 occ= 0
MO #23 (E1x #5), energy= 2.72843193272907 occ= 0
MO #24 (E1y #5), energy= 2.72843193390259 occ= 0
MO #25 (A1 #11), energy= 2.96141272303572 occ= 0
MO #26 (E1x #6), energy= 2.99631640440154 occ= 0
MO #27 (E1y #6), energy= 2.99631640697742 occ= 0
MO #28 (E1x #7), energy= 3.30751250914252 occ= 0
MO #29 (E1y #7), energy= 3.30751250972117 occ= 0
MO #30 (A1 #12), energy= 3.56630256882079 occ= 0
MO #31 (A1 #13), energy= 3.74290542214355 occ= 0
MO #32 (E3x #1), energy= 3.84939869941648 occ= 0
MO #33 (E3y #1), energy= 3.84939869941648 occ= 0
MO #34 (E2x #3), energy= 4.18345235015935 occ= 0
MO #35 (E2y #3), energy= 4.18345235015935 occ= 0
MO #36 (A1 #14), energy= 4.22466829474113 occ= 0
MO #37 (E1x #8), energy= 4.54761580477063 occ= 0
MO #38 (E1y #8), energy= 4.54761580519695 occ= 0
MO #39 (E2x #4), energy= 4.56034060452349 occ= 0
MO #40 (E2y #4), energy= 4.56034060452349 occ= 0
MO #41 (A1 #15), energy= 4.93482452213676 occ= 0
MO #42 (E1x #9), energy= 5.23149308805421 occ= 0
MO #43 (E1y #9), energy= 5.23149308789843 occ= 0
MO #44 (A1 #16), energy= 5.67518118093133 occ= 0
MO #45 (E3x #2), energy= 6.47639076102111 occ= 0
MO #46 (E3y #2), energy= 6.47639076102109 occ= 0
MO #47 (E2x #5), energy= 7.23102885445637 occ= 0
MO #48 (E2y #5), energy= 7.23102885445635 occ= 0
MO #49 (E1x #10), energy= 7.75409777058491 occ= 0
MO #50 (E1y #10), energy= 7.75409777142996 occ= 0
MO #51 (A1 #17), energy= 7.8274816525362 occ= 0
MO #52 (E1x #11), energy= 8.42000264396676 occ= 0
MO #53 (E1y #11), energy= 8.42000264441836 occ= 0
MO #54 (E2x #6), energy= 8.49905369126837 occ= 0
MO #55 (E2y #6), energy= 8.49905369126838 occ= 0
MO #56 (A1 #18), energy= 8.60343138558925 occ= 0
MO #57 (E1x #12), energy= 9.22282602111639 occ= 0
MO #58 (E1y #12), energy= 9.22282602189308 occ= 0
MO #59 (A1 #19), energy= 9.26605091273695 occ= 0
MO #60 (E4x #1), energy= 9.80278888288852 occ= 0
MO #61 (E4y #1), energy= 9.80278888288848 occ= 0
MO #62 (E3x #3), energy= 9.96275128654603 occ= 0
MO #63 (E3y #3), energy= 9.96275128654602 occ= 0
MO #64 (A1 #20), energy= 10.243149995935 occ= 0
MO #65 (E1x #13), energy= 10.9085535980243 occ= 0
MO #66 (E1y #13), energy= 10.9085535987775 occ= 0
MO #67 (E2x #7), energy= 11.0423219718334 occ= 0
MO #68 (E2y #7), energy= 11.0423219718334 occ= 0
MO #69 (A1 #21), energy= 11.6823289076833 occ= 0
MO #70 (E1x #14), energy= 11.7240217539886 occ= 0
MO #71 (E1y #14), energy= 11.7240217540202 occ= 0
MO #72 (E3x #4), energy= 11.9561286012824 occ= 0
MO #73 (E3y #4), energy= 11.9561286012824 occ= 0
MO #74 (E2x #8), energy= 12.0963677711898 occ= 0
MO #75 (E2y #8), energy= 12.0963677711898 occ= 0
MO #76 (A1 #22), energy= 12.1310113224339 occ= 0
MO #77 (E1x #15), energy= 12.7351670030734 occ= 0
MO #78 (E1y #15), energy= 12.7351670026448 occ= 0
MO #79 (E2x #9), energy= 13.0440029340569 occ= 0
MO #80 (E2y #9), energy= 13.0440029340569 occ= 0
MO #81 (A1 #23), energy= 14.4849374940564 occ= 0
MO #82 (E1x #16), energy= 14.8279537938051 occ= 0
MO #83 (E1y #16), energy= 14.8279537935642 occ= 0
MO #84 (A1 #24), energy= 16.9425569913129 occ= 0
MO #85 (A1 #25), energy= 42.813391089241 occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.80130
pop of  0 O 3s        0.00998
pop of  0 O 4s        0.00047
pop of  0 O 5s        0.00015
pop of  0 O 2px       1.96151
pop of  0 O 2py       1.96151
pop of  0 O 2pz       1.40142
pop of  0 O 3px       0.02678
pop of  0 O 3py       0.02678
pop of  0 O 3pz       0.00349
pop of  0 O 4px       0.00047
pop of  0 O 4py       0.00047
pop of  0 O 4pz       0.00035
pop of  0 O 5px       0.00103
pop of  0 O 5py       0.00103
pop of  0 O 5pz       0.00027
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00140
pop of  0 O 3dz^2     0.00458
pop of  0 O 3dxz      0.00140
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00012
pop of  0 O 4dz^2     0.00021
pop of  0 O 4dxz      0.00012
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00000
pop of  0 O 5dz^2     0.00004
pop of  0 O 5dxz      0.00000
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00025
pop of  0 O 4f 0      0.00050
pop of  0 O 4f 1      0.00025
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00001
pop of  0 O 5f 0      0.00002
pop of  0 O 5f 1      0.00001
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  0 O 5g-4      0.00000
pop of  0 O 5g-3      0.00000
pop of  0 O 5g-2      0.00000
pop of  0 O 5g-1      0.00002
pop of  0 O 5g 0      0.00005
pop of  0 O 5g 1      0.00002
pop of  0 O 5g 2      0.00000
pop of  0 O 5g 3      0.00000
pop of  0 O 5g 4      0.00000
pop of  1 H 1s        0.76517
pop of  1 H 2s        0.00645
pop of  1 H 3s        0.00282
pop of  1 H 4s        0.00007
pop of  1 H 2px       0.00749
pop of  1 H 2py       0.00749
pop of  1 H 2pz       0.00073
pop of  1 H 3px       0.00058
pop of  1 H 3py       0.00058
pop of  1 H 3pz       0.00121
pop of  1 H 4px       0.00016
pop of  1 H 4py       0.00016
pop of  1 H 4pz       0.00028
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00001
pop of  1 H 3dz^2     0.00036
pop of  1 H 3dxz      0.00001
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00002
pop of  1 H 4dz^2     0.00002
pop of  1 H 4dxz      0.00002
pop of  1 H 4dx2-y2    0.00000
pop of  1 H 4f-3      0.00000
pop of  1 H 4f-2      0.00000
pop of  1 H 4f-1      0.00014
pop of  1 H 4f 0      0.00008
pop of  1 H 4f 1      0.00014
pop of  1 H 4f 2      0.00000
pop of  1 H 4f 3      0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -1.20601
charge of  1H =      0.20601
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  0.99680

******** <class 'pyscf.mp.mp2.MP2'> ********
nocc = 4, nmo = 84
frozen orbitals 1
max_memory 4000 MB (current use 159 MB)
E(MP2) = -75.6942025230564  E_corr = -0.29269008006865

******** <class 'pyscf.ci.cisd.RCISD'> ********
CISD nocc = 4, nmo = 84
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-09
max_cycle = 50
max_space = 12
lindep = 0
nroots = 1
max_memory 4000 MB (current use 256 MB)
Init t2, MP2 energy = -0.292690080068648
RCISD converged
E(RCISD) = -75.67886931324263  E_corr = -0.277356870254848

******** <class 'pyscf.cc.ccsd.CCSD'> ********
CC2 = 0
CCSD nocc = 4, nmo = 84
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-07
conv_tol_normt = 1e-05
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 215 MB)
Init t2, MP2 energy = -75.6942025230564  E_corr(MP2) -0.292690080068643
Init E_corr(CCSD) = -0.29269008007236
cycle = 1  E_corr(CCSD) = -0.28339091649286  dE = 0.00929916358  norm(t1,t2) = 0.030244
cycle = 2  E_corr(CCSD) = -0.290198655783778  dE = -0.00680773929  norm(t1,t2) = 0.0110056
cycle = 3  E_corr(CCSD) = -0.289979419861728  dE = 0.000219235922  norm(t1,t2) = 0.00342176
cycle = 4  E_corr(CCSD) = -0.290519389304014  dE = -0.000539969442  norm(t1,t2) = 0.00162689
cycle = 5  E_corr(CCSD) = -0.290600237749939  dE = -8.08484459e-05  norm(t1,t2) = 0.000261315
cycle = 6  E_corr(CCSD) = -0.290577306506197  dE = 2.29312437e-05  norm(t1,t2) = 9.49814e-05
cycle = 7  E_corr(CCSD) = -0.290579305576138  dE = -1.99906994e-06  norm(t1,t2) = 2.64265e-05
cycle = 8  E_corr(CCSD) = -0.290579643112357  dE = -3.37536219e-07  norm(t1,t2) = 7.44123e-06
cycle = 9  E_corr(CCSD) = -0.29057927236414  dE = 3.70748217e-07  norm(t1,t2) = 2.28246e-06
cycle = 10  E_corr(CCSD) = -0.290579211253521  dE = 6.11106193e-08  norm(t1,t2) = 6.99717e-07
CCSD converged
E(CCSD) = -75.6920916542413  E_corr = -0.2905792112535208
CCSD(T) correction = -0.0103085515539209
Active space CI wfn symmetry = A1

******** CASCI flags ********
CAS (4e+4e, 5o), ncore = 1, nvir = 79
natorb = False
canonicalization = True
sorting_mo_energy = False
max_memory 4000 (MB)
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 200
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
Input CI wfn symmetry = A1
Density matrix diagonal elements [1.99981677e+00 1.99931617e+00 1.99992964e+00 1.99992964e+00
 1.00779433e-03]
CASCI converged
CASCI E = -75.402140466336  E(CI) = -19.5889669663503  S^2 = 0.0000000

******** <class 'pyscf.mcscf.mc1step_symm.SymAdaptedCASSCF'> ********
CAS (4e+4e, 5o), ncore = 1, nvir = 79
frozen orbitals 1
max_cycle_macro = 50
max_cycle_micro = 4
conv_tol = 1e-07
conv_tol_grad = None
orbital rotation max_stepsize = 0.02
augmented hessian ah_max_cycle = 30
augmented hessian ah_conv_tol = 1e-12
augmented hessian ah_linear dependence = 1e-14
augmented hessian ah_level shift = 0
augmented hessian ah_start_tol = 2.5
augmented hessian ah_start_cycle = 3
augmented hessian ah_grad_trust_region = 3
kf_trust_region = 3
kf_interval = 4
ci_response_space = 4
ci_grad_trust_region = 3
with_dep4 0
natorb = False
canonicalization = True
sorting_mo_energy = False
ao2mo_level = 2
chkfile = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpgt56v5s7
max_memory 4000 MB (current use 196 MB)
internal_rotation = False
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 50
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
CI wfn symmetry = None
Active space CI wfn symmetry = A1
CASCI E = -75.402140466336  S^2 = 0.0000000
Set conv_tol_grad to 0.000316228
macro iter 1 (21 JK  4 micro), CASSCF E = -75.4092060704194  dE = -0.0070656041  S^2 = 0.0000000
               |grad[o]|=0.00369  |grad[c]|= 0.022415021379969233  |ddm|=0.016
macro iter 2 (21 JK  4 micro), CASSCF E = -75.421264569347  dE = -0.012058499  S^2 = 0.0000000
               |grad[o]|=0.0243  |grad[c]|= 0.015562197307860496  |ddm|=0.0159
macro iter 3 (19 JK  4 micro), CASSCF E = -75.4253531999476  dE = -0.0040886306  S^2 = 0.0000000
               |grad[o]|= 0.02  |grad[c]|= 0.005073121737354619  |ddm|=0.00443
macro iter 4 (9 JK  3 micro), CASSCF E = -75.4253602390068  dE = -7.0390592e-06  S^2 = 0.0000000
               |grad[o]|=0.00125  |grad[c]|= 0.00024008680309280076  |ddm|=0.000703
macro iter 5 (3 JK  1 micro), CASSCF E = -75.4253602606239  dE = -2.1617069e-08  S^2 = 0.0000000
               |grad[o]|=8.3e-05  |grad[c]|= 0.00011205169398871444  |ddm|=6.76e-05
1-step CASSCF converged in 5 macro (73 JK 16 micro) steps
CASSCF canonicalization
Density matrix diagonal elements [1.99553521 1.97814524 1.99967941 1.99967941 0.02696073]
CASSCF energy = -75.4253602606239
CASCI E = -75.4253602606239  E(CI) = -19.6121867606382  S^2 = 0.0000000
Hartree-Fock    -75.40151244298778
Moller-Plesset  -75.69420252305643
CISD            -75.67886931324263
CCSD            -75.6920916542413
CCSD(T)         -75.70240020579521
CASCI           -75.40214046633602
CASSCF          -75.42536026062388
#####################################################
END: cc-pvqz
#####################################################
#####################################################
START: aug-cc-pvdz
#####################################################
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/anion.py ****
import numpy     as np
from pyscf       import gto,scf,lo,tools  # librerie di PySCF
from pyscf.tools import cubegen           # gto: Gaussian Type Orbital
                                          # scf: Self-Consistent Field
from pyscf       import mp,ci,cc,mcscf

R_rad = 0.9697
R_an  = 0.9640
R     = R_an
geo   = []
geo.append(['O',(0,0,0)]) # geometria: lista di elementi della forma [A,(x,y,z)] xyz in Angstrom
geo.append(['H',(0,0,R)])

res = {}
res['basis'] = ['sto-6g','6-31g','6-31++g','6-31g**','6-31++g**','cc-pvdz','cc-pvtz','cc-pvqz','aug-cc-pvdz','aug-cc-pvtz']
res['E_HF_anion'] = []
res['E_MP_anion'] = []
res['E_CISD_anion'] = []
res['E_CCSD_anion'] = []
res['E_CCSD(T)_anion'] = []
res['E_CASCI_anion'] = []
res['E_CASSCF_anion'] = []


for i in res['basis']:
    
    print("#"*53)
    print("START:", i)
    print("#"*53)

    mol = gto.M(atom     = geo,
                basis    = i,         # Slater Type Orbital - 6g = 6 Gaussiane per orbitale
                charge   = -1,        # carica totale (nucleare + elettronica)
                spin     = 0,         # STRANO MA VERO: N(up)-N(down)
                verbose  = 4,         # quanto e cosa stampare
                symmetry = True)      # simmetrie molecolari (rotazione attorno all'asse OH)

    mf  = scf.RHF(mol)
    mf  = scf.newton(mf)         # solutore al secondo ordine E(C+dC) = E(C) + dC*g(C) + dC H(C) dC
    E   = mf.kernel()            # kernel = esegui ROHF
    a   = mf.stability()[0]      # calcolo g(C) ed H(C), proposta di nuovi orbitali possibilmente migliori (a)
    EHF = mf.kernel(a,mf.mo_occ) # kernel = esegui ROHF partendo dagli orbitali a
    mf.analyze()

    #
    # categoria 1: espansioni intorno all'Hartree-Fock
    #

    # ----- Moller-Plesset second order perturbation theory
    #
    # O----H               O[1s,2s,2px,2py,2pz] H[1s] # se la base e' cc-pCVnZ allora si possono studiare gli elettroni nell'1s
    nf     = 1                                        # altrimenti, l'orbitale 1s va congelato (rimane doppiamente occupato)
    mymp   = mp.MP2(mf,frozen=nf)                     # H = F + (H-F); F ha autofunzioni note, (H-F) e' perturbazione
    EMP    = EHF + mymp.kernel()[0]                   # Rayleigh-Schrodinger perturbation theory E = E(HF) - \sum_m |<m|H-F|0>|^2/(Em-E0)
    mcisd  = ci.CISD(mf,frozen=nf)                    # CISD: CI = configuration interaction; S = singole eccitazioni sull'Hartree-Fock
    ECISD  = EHF   + mcisd.kernel()[0]                # D = doppie eccitazioni sull'Hartree-Fock
    # CISD: H | Psi(HF) >      = T |Psi(HF) > + \sum_{ai} V(ai) c*(a)c(i) |Psi(HF)> + \sum_{abij} W(abij) c*(a)c*(b)c(j)c(i) |Psi(HF)>
    # CCSD: exp(T) | Psi(HF) >
    # Cluster operator: T = \sum_{ai} t(ai) c*(a)c(i) + \sum_{abij} t(abij) c*(a)c*(b)c(j)c(i) + ...
    mc     = cc.CCSD(mf,frozen=nf)
    ECCSD  = EHF   + mc.kernel()[0]
    ECCSDT = ECCSD + mc.ccsd_t()
    # CCSD(T): si calcola il CCSD e poi si stima il contributo all'energia di correlazione dalle triple eccitazioni perturbativamente
    # CCSD(T) + cc-pVTZ e' chiamato il "gold standard"

    # 
    # categoria 2: diagonalizzazione piu' o meno esatta
    #

    # CAS = complete active space
    # CI  = configuration interaction
    # SCF = self-consistent field
    # CASCI: si sceglie un insieme di orbitali e di elettroni, si costruiscono tutti i possibili determinanti di Slater 
    # che coinvolgono eccitazioni di questi orbitali ed elettroni
    # e si risolve l'eq di Schrodinger in questo sottospazio
    # 150 -------- INATTIVI
    # ............ INATTIVI
    #  7  -------- INATTIVI
    #  6  -------- ATTIVI
    #  5  ---ud--- ATTIVI
    #  4  ---ud--- INATTIVI
    #  3  ---ud--- INATTIVI
    #  2  ---ud--- INATTIVI
    #  1  ---ud--- CONGELATI (FROZEN)

    #  6  ---- --d- --u- -ud- complete active space
    #  5  -ud- -u-- -d-- ----

    nel_frozen  = (nf,nf)  # congelare  l'1s
    orb_frozen  = nf       # coongelare l'1s
    na,nb       = (mol.nelectron+mol.spin)//2-nf,(mol.nelectron-mol.spin)//2-nf # tutti elettroni attivi tranne 1s
    nao_minimal = 6                                                             # prendere 6 orbitali di Hartree-Fock
    nact        = nao_minimal-nf                                                # tutti questi 6 orbitali attivi tranne l'1s
    mc          = mcscf.CASCI(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASCI      = mc.kernel()[0]

    # CASSCF: come il CASCI, ma gli orbitali non sono orbitali di campo medio, sono orbitali ottimizzati variazionalmente

    mc          = mcscf.CASSCF(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASSCF     = mc.kernel()[0]

    print("Hartree-Fock   ",EHF)
    print("Moller-Plesset ",EMP)
    print("CISD           ",ECISD)
    print("CCSD           ",ECCSD)
    print("CCSD(T)        ",ECCSDT)
    print("CASCI          ",ECASCI)
    print("CASSCF         ",ECASSCF)
    
    res['E_HF_anion'].append(EHF)
    res['E_MP_anion'].append(EMP)
    res['E_CISD_anion'].append(ECISD)
    res['E_CCSD_anion'].append(ECCSD)
    res['E_CCSD(T)_anion'].append(ECCSDT)
    res['E_CASCI_anion'].append(ECASCI)
    res['E_CASSCF_anion'].append(ECASSCF)
    
    print("#"*53)
    print("END:", i)
    print("#"*53)
    
    
try :
    data = np.load('../oh_data.npy',allow_pickle=True).item()
    for i in res:
        data[i] = res[i]
    np.save('../oh_data',data,allow_pickle=True)
except:
    np.save('../oh_data',res,allow_pickle=True)
    



    
    

# Sistema S1, Sistema S2
# E(S1,metodo) = E(S1,esatta) + BIAS(S1,metodo)
# E(S2,metodo) = E(S2,esatta) + BIAS(S2,metodo)
# E(S1,metodo)-E(S2,metodo) = E(S1,esatta)-E(S2,esatta) + BIAS(S1,metodo)-BIAS(S2,metodo)
# quando   BIAS(S1,metodo),BIAS(S2,metodo) "grande"  (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# tuttavia BIAS(S1,metodo)-BIAS(S2,metodo) "piccola" (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# allora "cancellation of errors"

#---------------------------------------------------------------------#
# metodo  | size-extensive E(A+B)=E(A)+E(B) | variational | cost      #
#---------------------------------------------------------------------#
# HF      | SI                              | SI          | M**4      #
# MP2     | NO                              | NO          | M**5      #
# CISD    | NO                              | SI          | M**7      #
# CCSD    | SI                              | NO          | M**6      #
# CCSD(T) | SI                              | NO          | M**9      #
# CASCI   | NO                              | SI          | exp(Nact) #
# CASSCF  | NO                              | SI          | exp(Nact) #
# FCI     | SI                              | SI          | exp(M)    #
#---------------------------------------------------------------------#

#------------------------------------------#
# ORBITALI      CORRELAZIONE   COMPUTER    #
# VIRTUALI      DINAMICA       CLASSICO    #
# VALENZA       STATICA        QUANTISTICO #
#------------------------------------------#

# E(R,basis,method) "potential energy surface = energia versus bondlength"
# R_{eq}(basis,method) = argmin_R E(R,basis,method)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Wed Sep  8 21:45:11 2021
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.964000000000 AA    0.000000000000   0.000000000000   1.821695984081 Bohr

nuclear repulsion = 4.39151212381743
point group symmetry = Coov
num. orbitals of irrep A1 = 14
num. orbitals of irrep E1x = 7
num. orbitals of irrep E1y = 7
num. orbitals of irrep E2x = 2
num. orbitals of irrep E2y = 2
number of shells = 13
number of NR pGTOs = 46
number of NR cGTOs = 32
basis = aug-cc-pvdz
ecp = {}
CPU time:       128.20
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpnli6yfix
max_memory 4000 MB (current use 196 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpnli6yfix
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 196 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.431336573499369  LUMO (A1) = 0.0321817058030565
Initial guess E= -75.2665147782315  |g|= 0.747947
macro= 0  E= -75.3818472567864  delta_E= -0.115332  |g|= 0.157891  3 KF 11 JK
macro= 1  E= -75.3957220390047  delta_E= -0.0138748  |g|= 0.114008  2 KF 5 JK
macro= 2  E= -75.395889556583  delta_E= -0.000167518  |g|= 0.00101293  2 KF 8 JK
macro= 3  E= -75.3958895566685  delta_E= -8.54925e-11  |g|= 1.45067e-05  1 KF 3 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.3958895566685  |g|= 1.45067e-05  total 9 KF 32 JK
converged SCF energy = -75.3958895566685
RHF/RKS wavefunction is stable in the internal stability analysis
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpnli6yfix
max_memory 4000 MB (current use 196 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpnli6yfix
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 196 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.108220774878288  LUMO (A1) = 0.198133767020625
Initial guess E= -75.3958895566685  |g|= 9.48425e-06
macro= 0  E= -75.3958895566782  delta_E= -9.72022e-12  |g|= 9.48425e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3958895566782  |g|= 9.48425e-06  total 2 KF 4 JK
converged SCF energy = -75.3958895566782
**** SCF Summaries ****
Total Energy =                         -75.395889556678185
Nuclear Repulsion Energy =               4.391512123817428
One-electron Energy =                 -116.432064961194286
Two-electron Energy =                   36.644663280698666
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
                               3    1    1    0    0
**** MO energy ****
MO #1 (A1 #1), energy= -20.1975666285009 occ= 2
MO #2 (A1 #2), energy= -0.905318795208365 occ= 2
MO #3 (A1 #3), energy= -0.25204041433263 occ= 2
MO #4 (E1y #1), energy= -0.108221691275602 occ= 2
MO #5 (E1x #1), energy= -0.108221670580977 occ= 2
MO #6 (A1 #4), energy= 0.198133768968557 occ= 0
MO #7 (A1 #5), energy= 0.392034412593279 occ= 0
MO #8 (E1y #2), energy= 0.43014827337931 occ= 0
MO #9 (E1x #2), energy= 0.430148277543356 occ= 0
MO #10 (A1 #6), energy= 0.469106895268354 occ= 0
MO #11 (A1 #7), energy= 0.582863088214393 occ= 0
MO #12 (E1x #3), energy= 0.658909633840734 occ= 0
MO #13 (E1y #3), energy= 0.658909633745129 occ= 0
MO #14 (A1 #8), energy= 0.926915262110199 occ= 0
MO #15 (A1 #9), energy= 1.17859014857283 occ= 0
MO #16 (E2x #1), energy= 1.3234357897421 occ= 0
MO #17 (E2y #1), energy= 1.32343578974211 occ= 0
MO #18 (E1x #4), energy= 1.45430746920962 occ= 0
MO #19 (E1y #4), energy= 1.45430746983951 occ= 0
MO #20 (A1 #10), energy= 1.67507193889587 occ= 0
MO #21 (E1y #5), energy= 1.78172899660207 occ= 0
MO #22 (E1x #5), energy= 1.78172900402199 occ= 0
MO #23 (A1 #11), energy= 2.04140972013288 occ= 0
MO #24 (E1y #6), energy= 2.38758131640676 occ= 0
MO #25 (E1x #6), energy= 2.3875813171805 occ= 0
MO #26 (A1 #12), energy= 2.90916590691679 occ= 0
MO #27 (A1 #13), energy= 3.14474279062511 occ= 0
MO #28 (E2x #2), energy= 3.95903116351583 occ= 0
MO #29 (E2y #2), energy= 3.95903116351582 occ= 0
MO #30 (E1x #7), energy= 4.06503316163942 occ= 0
MO #31 (E1y #7), energy= 4.06503316255221 occ= 0
MO #32 (A1 #14), energy= 4.52687448026847 occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.80152
pop of  0 O 3s        0.01258
pop of  0 O 4s        0.00210
pop of  0 O 2px       1.93946
pop of  0 O 2py       1.93946
pop of  0 O 2pz       1.41899
pop of  0 O 3px       0.04096
pop of  0 O 3py       0.04096
pop of  0 O 3pz       0.00299
pop of  0 O 4px       0.00149
pop of  0 O 4py       0.00149
pop of  0 O 4pz       0.00010
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00137
pop of  0 O 3dz^2     0.00372
pop of  0 O 3dxz      0.00137
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00020
pop of  0 O 4dz^2     0.00014
pop of  0 O 4dxz      0.00020
pop of  0 O 4dx2-y2    0.00000
pop of  1 H 1s        0.73984
pop of  1 H 2s        0.01007
pop of  1 H 3s        0.00254
pop of  1 H 2px       0.01217
pop of  1 H 2py       0.01217
pop of  1 H 2pz       0.00167
pop of  1 H 3px       0.00434
pop of  1 H 3py       0.00434
pop of  1 H 3pz       0.00374
 ** Mulliken atomic charges  **
charge of  0O =     -1.20911
charge of  1H =      0.20911
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.02165

******** <class 'pyscf.mp.mp2.MP2'> ********
nocc = 4, nmo = 31
frozen orbitals 1
max_memory 4000 MB (current use 196 MB)
E(MP2) = -75.6369380496677  E_corr = -0.241048492989535

******** <class 'pyscf.ci.cisd.RCISD'> ********
CISD nocc = 4, nmo = 31
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-09
max_cycle = 50
max_space = 12
lindep = 0
nroots = 1
max_memory 4000 MB (current use 196 MB)
Init t2, MP2 energy = -0.241048492989537
RCISD converged
E(RCISD) = -75.62341192915652  E_corr = -0.2275223724783317

******** <class 'pyscf.cc.ccsd.CCSD'> ********
CC2 = 0
CCSD nocc = 4, nmo = 31
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-07
conv_tol_normt = 1e-05
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 143 MB)
Init t2, MP2 energy = -75.6369380496677  E_corr(MP2) -0.241048492989535
Init E_corr(CCSD) = -0.241048492999134
cycle = 1  E_corr(CCSD) = -0.230316072039574  dE = 0.010732421  norm(t1,t2) = 0.0679654
cycle = 2  E_corr(CCSD) = -0.240039930983971  dE = -0.00972385894  norm(t1,t2) = 0.0274339
cycle = 3  E_corr(CCSD) = -0.238892297868904  dE = 0.00114763312  norm(t1,t2) = 0.0176612
cycle = 4  E_corr(CCSD) = -0.239837155358545  dE = -0.00094485749  norm(t1,t2) = 0.0049725
cycle = 5  E_corr(CCSD) = -0.239937425821146  dE = -0.000100270463  norm(t1,t2) = 0.00108267
cycle = 6  E_corr(CCSD) = -0.23992283437835  dE = 1.45914428e-05  norm(t1,t2) = 0.000462833
cycle = 7  E_corr(CCSD) = -0.239896459311649  dE = 2.63750667e-05  norm(t1,t2) = 0.000153697
cycle = 8  E_corr(CCSD) = -0.239896180657939  dE = 2.78653709e-07  norm(t1,t2) = 5.05653e-05
cycle = 9  E_corr(CCSD) = -0.239898401377856  dE = -2.22071992e-06  norm(t1,t2) = 2.53575e-05
cycle = 10  E_corr(CCSD) = -0.23989767631674  dE = 7.25061116e-07  norm(t1,t2) = 7.81035e-06
cycle = 11  E_corr(CCSD) = -0.239897941837274  dE = -2.65520533e-07  norm(t1,t2) = 3.73075e-06
cycle = 12  E_corr(CCSD) = -0.23989799609133  dE = -5.42540569e-08  norm(t1,t2) = 1.39716e-06
CCSD converged
E(CCSD) = -75.63578755276951  E_corr = -0.2398979960913304
CCSD(T) correction = -0.00801694036575142
Active space CI wfn symmetry = A1

******** CASCI flags ********
CAS (4e+4e, 5o), ncore = 1, nvir = 26
natorb = False
canonicalization = True
sorting_mo_energy = False
max_memory 4000 (MB)
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 200
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
Input CI wfn symmetry = A1
Density matrix diagonal elements [1.99999841e+00 1.99999389e+00 1.99999529e+00 1.99999529e+00
 1.71157207e-05]
CASCI converged
CASCI E = -75.3958993424352  E(CI) = -19.5843174474872  S^2 = 0.0000000

******** <class 'pyscf.mcscf.mc1step_symm.SymAdaptedCASSCF'> ********
CAS (4e+4e, 5o), ncore = 1, nvir = 26
frozen orbitals 1
max_cycle_macro = 50
max_cycle_micro = 4
conv_tol = 1e-07
conv_tol_grad = None
orbital rotation max_stepsize = 0.02
augmented hessian ah_max_cycle = 30
augmented hessian ah_conv_tol = 1e-12
augmented hessian ah_linear dependence = 1e-14
augmented hessian ah_level shift = 0
augmented hessian ah_start_tol = 2.5
augmented hessian ah_start_cycle = 3
augmented hessian ah_grad_trust_region = 3
kf_trust_region = 3
kf_interval = 4
ci_response_space = 4
ci_grad_trust_region = 3
with_dep4 0
natorb = False
canonicalization = True
sorting_mo_energy = False
ao2mo_level = 2
chkfile = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpnli6yfix
max_memory 4000 MB (current use 143 MB)
internal_rotation = False
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 50
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
CI wfn symmetry = None
Active space CI wfn symmetry = A1
CASCI E = -75.3958993424352  S^2 = 0.0000000
Set conv_tol_grad to 0.000316228
macro iter 1 (12 JK  3 micro), CASSCF E = -75.3961777644119  dE = -0.00027842198  S^2 = 0.0000000
               |grad[o]|=9.75e-05  |grad[c]|= 0.0027197704549069644  |ddm|=0.00409
macro iter 2 (21 JK  4 micro), CASSCF E = -75.4076058570101  dE = -0.011428093  S^2 = 0.0000000
               |grad[o]|=0.00253  |grad[c]|= 0.0346224928753956  |ddm|=0.0147
macro iter 3 (21 JK  4 micro), CASSCF E = -75.4191558245405  dE = -0.011549968  S^2 = 0.0000000
               |grad[o]|=0.0221  |grad[c]|= 0.01564400576824655  |ddm|=0.0142
macro iter 4 (10 JK  4 micro), CASSCF E = -75.4192860096749  dE = -0.00013018513  S^2 = 0.0000000
               |grad[o]|=0.00734  |grad[c]|= 0.001867133860948099  |ddm|=0.00536
macro iter 5 (7 JK  3 micro), CASSCF E = -75.4192864895211  dE = -4.7984616e-07  S^2 = 0.0000000
               |grad[o]|=0.000605  |grad[c]|= 0.00010041119892646284  |ddm|=0.000685
macro iter 6 (3 JK  1 micro), CASSCF E = -75.4192864953346  dE = -5.8135328e-09  S^2 = 0.0000000
               |grad[o]|=6.7e-05  |grad[c]|= 5.2965396524867186e-05  |ddm|=4.12e-05
1-step CASSCF converged in 6 macro (74 JK 19 micro) steps
CASSCF canonicalization
Density matrix diagonal elements [1.99569685 1.97876513 1.99968892 1.99968892 0.02616018]
CASSCF energy = -75.4192864953346
CASCI E = -75.4192864953346  E(CI) = -19.6077046003866  S^2 = 0.0000000
Hartree-Fock    -75.39588955667818
Moller-Plesset  -75.63693804966772
CISD            -75.62341192915652
CCSD            -75.63578755276951
CCSD(T)         -75.64380449313526
CASCI           -75.3958993424352
CASSCF          -75.41928649533459
#####################################################
END: aug-cc-pvdz
#####################################################
#####################################################
START: aug-cc-pvtz
#####################################################
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/anion.py ****
import numpy     as np
from pyscf       import gto,scf,lo,tools  # librerie di PySCF
from pyscf.tools import cubegen           # gto: Gaussian Type Orbital
                                          # scf: Self-Consistent Field
from pyscf       import mp,ci,cc,mcscf

R_rad = 0.9697
R_an  = 0.9640
R     = R_an
geo   = []
geo.append(['O',(0,0,0)]) # geometria: lista di elementi della forma [A,(x,y,z)] xyz in Angstrom
geo.append(['H',(0,0,R)])

res = {}
res['basis'] = ['sto-6g','6-31g','6-31++g','6-31g**','6-31++g**','cc-pvdz','cc-pvtz','cc-pvqz','aug-cc-pvdz','aug-cc-pvtz']
res['E_HF_anion'] = []
res['E_MP_anion'] = []
res['E_CISD_anion'] = []
res['E_CCSD_anion'] = []
res['E_CCSD(T)_anion'] = []
res['E_CASCI_anion'] = []
res['E_CASSCF_anion'] = []


for i in res['basis']:
    
    print("#"*53)
    print("START:", i)
    print("#"*53)

    mol = gto.M(atom     = geo,
                basis    = i,         # Slater Type Orbital - 6g = 6 Gaussiane per orbitale
                charge   = -1,        # carica totale (nucleare + elettronica)
                spin     = 0,         # STRANO MA VERO: N(up)-N(down)
                verbose  = 4,         # quanto e cosa stampare
                symmetry = True)      # simmetrie molecolari (rotazione attorno all'asse OH)

    mf  = scf.RHF(mol)
    mf  = scf.newton(mf)         # solutore al secondo ordine E(C+dC) = E(C) + dC*g(C) + dC H(C) dC
    E   = mf.kernel()            # kernel = esegui ROHF
    a   = mf.stability()[0]      # calcolo g(C) ed H(C), proposta di nuovi orbitali possibilmente migliori (a)
    EHF = mf.kernel(a,mf.mo_occ) # kernel = esegui ROHF partendo dagli orbitali a
    mf.analyze()

    #
    # categoria 1: espansioni intorno all'Hartree-Fock
    #

    # ----- Moller-Plesset second order perturbation theory
    #
    # O----H               O[1s,2s,2px,2py,2pz] H[1s] # se la base e' cc-pCVnZ allora si possono studiare gli elettroni nell'1s
    nf     = 1                                        # altrimenti, l'orbitale 1s va congelato (rimane doppiamente occupato)
    mymp   = mp.MP2(mf,frozen=nf)                     # H = F + (H-F); F ha autofunzioni note, (H-F) e' perturbazione
    EMP    = EHF + mymp.kernel()[0]                   # Rayleigh-Schrodinger perturbation theory E = E(HF) - \sum_m |<m|H-F|0>|^2/(Em-E0)
    mcisd  = ci.CISD(mf,frozen=nf)                    # CISD: CI = configuration interaction; S = singole eccitazioni sull'Hartree-Fock
    ECISD  = EHF   + mcisd.kernel()[0]                # D = doppie eccitazioni sull'Hartree-Fock
    # CISD: H | Psi(HF) >      = T |Psi(HF) > + \sum_{ai} V(ai) c*(a)c(i) |Psi(HF)> + \sum_{abij} W(abij) c*(a)c*(b)c(j)c(i) |Psi(HF)>
    # CCSD: exp(T) | Psi(HF) >
    # Cluster operator: T = \sum_{ai} t(ai) c*(a)c(i) + \sum_{abij} t(abij) c*(a)c*(b)c(j)c(i) + ...
    mc     = cc.CCSD(mf,frozen=nf)
    ECCSD  = EHF   + mc.kernel()[0]
    ECCSDT = ECCSD + mc.ccsd_t()
    # CCSD(T): si calcola il CCSD e poi si stima il contributo all'energia di correlazione dalle triple eccitazioni perturbativamente
    # CCSD(T) + cc-pVTZ e' chiamato il "gold standard"

    # 
    # categoria 2: diagonalizzazione piu' o meno esatta
    #

    # CAS = complete active space
    # CI  = configuration interaction
    # SCF = self-consistent field
    # CASCI: si sceglie un insieme di orbitali e di elettroni, si costruiscono tutti i possibili determinanti di Slater 
    # che coinvolgono eccitazioni di questi orbitali ed elettroni
    # e si risolve l'eq di Schrodinger in questo sottospazio
    # 150 -------- INATTIVI
    # ............ INATTIVI
    #  7  -------- INATTIVI
    #  6  -------- ATTIVI
    #  5  ---ud--- ATTIVI
    #  4  ---ud--- INATTIVI
    #  3  ---ud--- INATTIVI
    #  2  ---ud--- INATTIVI
    #  1  ---ud--- CONGELATI (FROZEN)

    #  6  ---- --d- --u- -ud- complete active space
    #  5  -ud- -u-- -d-- ----

    nel_frozen  = (nf,nf)  # congelare  l'1s
    orb_frozen  = nf       # coongelare l'1s
    na,nb       = (mol.nelectron+mol.spin)//2-nf,(mol.nelectron-mol.spin)//2-nf # tutti elettroni attivi tranne 1s
    nao_minimal = 6                                                             # prendere 6 orbitali di Hartree-Fock
    nact        = nao_minimal-nf                                                # tutti questi 6 orbitali attivi tranne l'1s
    mc          = mcscf.CASCI(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASCI      = mc.kernel()[0]

    # CASSCF: come il CASCI, ma gli orbitali non sono orbitali di campo medio, sono orbitali ottimizzati variazionalmente

    mc          = mcscf.CASSCF(mf,nact,(na,nb))
    mc.frozen   = orb_frozen
    ECASSCF     = mc.kernel()[0]

    print("Hartree-Fock   ",EHF)
    print("Moller-Plesset ",EMP)
    print("CISD           ",ECISD)
    print("CCSD           ",ECCSD)
    print("CCSD(T)        ",ECCSDT)
    print("CASCI          ",ECASCI)
    print("CASSCF         ",ECASSCF)
    
    res['E_HF_anion'].append(EHF)
    res['E_MP_anion'].append(EMP)
    res['E_CISD_anion'].append(ECISD)
    res['E_CCSD_anion'].append(ECCSD)
    res['E_CCSD(T)_anion'].append(ECCSDT)
    res['E_CASCI_anion'].append(ECASCI)
    res['E_CASSCF_anion'].append(ECASSCF)
    
    print("#"*53)
    print("END:", i)
    print("#"*53)
    
    
try :
    data = np.load('../oh_data.npy',allow_pickle=True).item()
    for i in res:
        data[i] = res[i]
    np.save('../oh_data',data,allow_pickle=True)
except:
    np.save('../oh_data',res,allow_pickle=True)
    



    
    

# Sistema S1, Sistema S2
# E(S1,metodo) = E(S1,esatta) + BIAS(S1,metodo)
# E(S2,metodo) = E(S2,esatta) + BIAS(S2,metodo)
# E(S1,metodo)-E(S2,metodo) = E(S1,esatta)-E(S2,esatta) + BIAS(S1,metodo)-BIAS(S2,metodo)
# quando   BIAS(S1,metodo),BIAS(S2,metodo) "grande"  (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# tuttavia BIAS(S1,metodo)-BIAS(S2,metodo) "piccola" (rispetto E(S1,esatta)-E(S2,esatta) o a certe soglie come la chemical accuracy)
# allora "cancellation of errors"

#---------------------------------------------------------------------#
# metodo  | size-extensive E(A+B)=E(A)+E(B) | variational | cost      #
#---------------------------------------------------------------------#
# HF      | SI                              | SI          | M**4      #
# MP2     | NO                              | NO          | M**5      #
# CISD    | NO                              | SI          | M**7      #
# CCSD    | SI                              | NO          | M**6      #
# CCSD(T) | SI                              | NO          | M**9      #
# CASCI   | NO                              | SI          | exp(Nact) #
# CASSCF  | NO                              | SI          | exp(Nact) #
# FCI     | SI                              | SI          | exp(M)    #
#---------------------------------------------------------------------#

#------------------------------------------#
# ORBITALI      CORRELAZIONE   COMPUTER    #
# VIRTUALI      DINAMICA       CLASSICO    #
# VALENZA       STATICA        QUANTISTICO #
#------------------------------------------#

# E(R,basis,method) "potential energy surface = energia versus bondlength"
# R_{eq}(basis,method) = argmin_R E(R,basis,method)

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Wed Sep  8 21:45:13 2021
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.964000000000 AA    0.000000000000   0.000000000000   1.821695984081 Bohr

nuclear repulsion = 4.39151212381743
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:       134.35
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpphjvqq3r
max_memory 4000 MB (current use 143 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpphjvqq3r
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 143 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.4340067669394  LUMO (A1) = 0.0270893163707812
Initial guess E= -75.2776841252314  |g|= 0.776284
macro= 0  E= -75.3906395081482  delta_E= -0.112955  |g|= 0.776284  2 KF 8 JK
macro= 1  E= -75.4116813925884  delta_E= -0.0210419  |g|= 0.243265  2 KF 5 JK
macro= 2  E= -75.4121771544531  delta_E= -0.000495762  |g|= 4.00948e-05  3 KF 10 JK
macro= 3  E= -75.4121771544547  delta_E= -1.56319e-12  |g|= 7.75202e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.4121771544547  |g|= 7.75202e-06  total 9 KF 30 JK
converged SCF energy = -75.4121771544547
RHF/RKS wavefunction is stable in the internal stability analysis
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpphjvqq3r
max_memory 4000 MB (current use 149 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpphjvqq3r
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 149 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.108878082482924  LUMO (A1) = 0.178669764148631
Initial guess E= -75.4121771544547  |g|= 7.97752e-06
macro= 0  E= -75.4121771544579  delta_E= -3.24007e-12  |g|= 7.97752e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4121771544579  |g|= 7.97752e-06  total 2 KF 4 JK
converged SCF energy = -75.4121771544579
**** SCF Summaries ****
Total Energy =                         -75.412177154457936
Nuclear Repulsion Energy =               4.391512123817428
One-electron Energy =                 -116.489429326470841
Two-electron Energy =                   36.685740048195491
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
                               3    1    1    0    0    0    0
**** MO energy ****
MO #1 (A1 #1), energy= -20.1869176497753 occ= 2
MO #2 (A1 #2), energy= -0.902781639910789 occ= 2
MO #3 (A1 #3), energy= -0.251519171242714 occ= 2
MO #4 (E1y #1), energy= -0.108878079550563 occ= 2
MO #5 (E1x #1), energy= -0.108878074560551 occ= 2
MO #6 (A1 #4), energy= 0.178669764297248 occ= 0
MO #7 (A1 #5), energy= 0.329165076521554 occ= 0
MO #8 (E1x #2), energy= 0.370086323393802 occ= 0
MO #9 (E1y #2), energy= 0.370086323082903 occ= 0
MO #10 (A1 #6), energy= 0.399034942066603 occ= 0
MO #11 (A1 #7), energy= 0.492060146638 occ= 0
MO #12 (E1y #3), energy= 0.495341201161454 occ= 0
MO #13 (E1x #3), energy= 0.495341201543812 occ= 0
MO #14 (A1 #8), energy= 0.690610912974341 occ= 0
MO #15 (A1 #9), energy= 0.939383102753682 occ= 0
MO #16 (E2x #1), energy= 0.951088540458423 occ= 0
MO #17 (E2y #1), energy= 0.951088540458424 occ= 0
MO #18 (E1x #4), energy= 1.00425259993472 occ= 0
MO #19 (E1y #4), energy= 1.00425260086622 occ= 0
MO #20 (A1 #10), energy= 1.16800659838633 occ= 0
MO #21 (E1y #5), energy= 1.17773067612351 occ= 0
MO #22 (E1x #5), energy= 1.17773067721373 occ= 0
MO #23 (E2x #2), energy= 1.22316406902647 occ= 0
MO #24 (E2y #2), energy= 1.22316406902648 occ= 0
MO #25 (A1 #11), energy= 1.22824811460296 occ= 0
MO #26 (A1 #12), energy= 1.30067698862944 occ= 0
MO #27 (E1x #6), energy= 1.33793153464133 occ= 0
MO #28 (E1y #6), energy= 1.33793153614329 occ= 0
MO #29 (E1x #7), energy= 1.83978414636955 occ= 0
MO #30 (E1y #7), energy= 1.83978414810998 occ= 0
MO #31 (A1 #13), energy= 2.04852204020158 occ= 0
MO #32 (A1 #14), energy= 2.40250303559267 occ= 0
MO #33 (E3x #1), energy= 2.42526007008888 occ= 0
MO #34 (E3y #1), energy= 2.42526007008888 occ= 0
MO #35 (E2x #3), energy= 2.52776186614021 occ= 0
MO #36 (E2y #3), energy= 2.52776186614022 occ= 0
MO #37 (E1x #8), energy= 2.6508140439345 occ= 0
MO #38 (E1y #8), energy= 2.65081404723894 occ= 0
MO #39 (E2x #4), energy= 2.69381399346541 occ= 0
MO #40 (E2y #4), energy= 2.6938139934654 occ= 0
MO #41 (A1 #15), energy= 2.80415897001403 occ= 0
MO #42 (A1 #16), energy= 2.85677325251356 occ= 0
MO #43 (E1x #9), energy= 3.12556992002606 occ= 0
MO #44 (E1y #9), energy= 3.12556991986111 occ= 0
MO #45 (A1 #17), energy= 3.95950785385643 occ= 0
MO #46 (E2x #5), energy= 4.40938920410407 occ= 0
MO #47 (E2y #5), energy= 4.40938920410406 occ= 0
MO #48 (E1x #10), energy= 4.48716676169183 occ= 0
MO #49 (E1y #10), energy= 4.48716676253551 occ= 0
MO #50 (E1x #11), energy= 4.67874026596947 occ= 0
MO #51 (E1y #11), energy= 4.67874026563586 occ= 0
MO #52 (A1 #18), energy= 5.03381496090667 occ= 0
MO #53 (A1 #19), energy= 5.52107064056077 occ= 0
MO #54 (E1x #12), energy= 5.69732430577197 occ= 0
MO #55 (E1y #12), energy= 5.69732430805819 occ= 0
MO #56 (A1 #20), energy= 6.54744783554794 occ= 0
MO #57 (E3x #2), energy= 6.8954200069921 occ= 0
MO #58 (E3y #2), energy= 6.89542000699209 occ= 0
MO #59 (E2x #6), energy= 7.03924608141249 occ= 0
MO #60 (E2y #6), energy= 7.03924608141249 occ= 0
MO #61 (E2x #7), energy= 7.44889543557509 occ= 0
MO #62 (E2y #7), energy= 7.4488954355751 occ= 0
MO #63 (E1x #13), energy= 7.58698127962794 occ= 0
MO #64 (E1y #13), energy= 7.5869812817555 occ= 0
MO #65 (E1x #14), energy= 7.65293571860792 occ= 0
MO #66 (E1y #14), energy= 7.65293571958521 occ= 0
MO #67 (A1 #21), energy= 7.79575601938876 occ= 0
MO #68 (A1 #22), energy= 8.13022036614006 occ= 0
MO #69 (A1 #23), energy= 13.4311659670462 occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.80116
pop of  0 O 3s        0.01076
pop of  0 O 4s        0.00145
pop of  0 O 5s        0.00019
pop of  0 O 2px       1.93929
pop of  0 O 2py       1.93929
pop of  0 O 2pz       1.42432
pop of  0 O 3px       0.03668
pop of  0 O 3py       0.03668
pop of  0 O 3pz       0.00282
pop of  0 O 4px       0.00140
pop of  0 O 4py       0.00140
pop of  0 O 4pz       0.00027
pop of  0 O 5px       0.00004
pop of  0 O 5py       0.00004
pop of  0 O 5pz       0.00008
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00161
pop of  0 O 3dz^2     0.00558
pop of  0 O 3dxz      0.00161
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00026
pop of  0 O 4dz^2     0.00036
pop of  0 O 4dxz      0.00026
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00000
pop of  0 O 5dz^2     0.00018
pop of  0 O 5dxz      0.00000
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00033
pop of  0 O 4f 0      0.00069
pop of  0 O 4f 1      0.00033
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00008
pop of  0 O 5f 0      0.00005
pop of  0 O 5f 1      0.00008
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.73620
pop of  1 H 2s        0.00826
pop of  1 H 3s        0.00226
pop of  1 H 4s        0.00025
pop of  1 H 2px       0.01233
pop of  1 H 2py       0.01233
pop of  1 H 2pz       0.00093
pop of  1 H 3px       0.00664
pop of  1 H 3py       0.00664
pop of  1 H 3pz       0.00343
pop of  1 H 4px       0.00115
pop of  1 H 4py       0.00115
pop of  1 H 4pz       0.00040
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00000
pop of  1 H 3dz^2     0.00034
pop of  1 H 3dxz      0.00000
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00019
pop of  1 H 4dz^2     0.00005
pop of  1 H 4dxz      0.00019
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -1.20727
charge of  1H =      0.20727
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  0.98440

******** <class 'pyscf.mp.mp2.MP2'> ********
nocc = 4, nmo = 68
frozen orbitals 1
max_memory 4000 MB (current use 149 MB)
E(MP2) = -75.702277602665  E_corr = -0.290100448207069

******** <class 'pyscf.ci.cisd.RCISD'> ********
CISD nocc = 4, nmo = 68
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-09
max_cycle = 50
max_space = 12
lindep = 0
nroots = 1
max_memory 4000 MB (current use 184 MB)
Init t2, MP2 energy = -0.290100448207068
RCISD converged
E(RCISD) = -75.68259645014236  E_corr = -0.2704192956844199

******** <class 'pyscf.cc.ccsd.CCSD'> ********
CC2 = 0
CCSD nocc = 4, nmo = 68
frozen orbitals 1
max_cycle = 50
direct = 0
conv_tol = 1e-07
conv_tol_normt = 1e-05
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 175 MB)
Init t2, MP2 energy = -75.702277602665  E_corr(MP2) -0.290100448207072
Init E_corr(CCSD) = -0.290100448218793
cycle = 1  E_corr(CCSD) = -0.274429425671524  dE = 0.0156710225  norm(t1,t2) = 0.0657071
cycle = 2  E_corr(CCSD) = -0.285695407517757  dE = -0.0112659818  norm(t1,t2) = 0.0303924
cycle = 3  E_corr(CCSD) = -0.284175194291116  dE = 0.00152021323  norm(t1,t2) = 0.0215915
cycle = 4  E_corr(CCSD) = -0.284633647653784  dE = -0.000458453363  norm(t1,t2) = 0.00501459
cycle = 5  E_corr(CCSD) = -0.284890281689431  dE = -0.000256634036  norm(t1,t2) = 0.00152804
cycle = 6  E_corr(CCSD) = -0.284918326591002  dE = -2.80449016e-05  norm(t1,t2) = 0.000582977
cycle = 7  E_corr(CCSD) = -0.284858268333179  dE = 6.00582578e-05  norm(t1,t2) = 0.000233597
cycle = 8  E_corr(CCSD) = -0.284849091072131  dE = 9.17726105e-06  norm(t1,t2) = 6.86561e-05
cycle = 9  E_corr(CCSD) = -0.28485499295835  dE = -5.90188622e-06  norm(t1,t2) = 2.87406e-05
cycle = 10  E_corr(CCSD) = -0.284854129842633  dE = 8.63115717e-07  norm(t1,t2) = 1.04404e-05
cycle = 11  E_corr(CCSD) = -0.284854619354439  dE = -4.89511806e-07  norm(t1,t2) = 4.34205e-06
cycle = 12  E_corr(CCSD) = -0.284854745216143  dE = -1.25861704e-07  norm(t1,t2) = 1.51516e-06
cycle = 13  E_corr(CCSD) = -0.284854724148522  dE = 2.10676205e-08  norm(t1,t2) = 7.55775e-07
CCSD converged
E(CCSD) = -75.69703187860642  E_corr = -0.2848547241485225
CCSD(T) correction = -0.0123799271725827
Active space CI wfn symmetry = A1

******** CASCI flags ********
CAS (4e+4e, 5o), ncore = 1, nvir = 63
natorb = False
canonicalization = True
sorting_mo_energy = False
max_memory 4000 (MB)
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 200
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
Input CI wfn symmetry = A1
Density matrix diagonal elements [1.99999958e+00 1.99999860e+00 1.99999779e+00 1.99999779e+00
 6.23610645e-06]
CASCI converged
CASCI E = -75.412180499827  E(CI) = -19.6001794287052  S^2 = 0.0000000

******** <class 'pyscf.mcscf.mc1step_symm.SymAdaptedCASSCF'> ********
CAS (4e+4e, 5o), ncore = 1, nvir = 63
frozen orbitals 1
max_cycle_macro = 50
max_cycle_micro = 4
conv_tol = 1e-07
conv_tol_grad = None
orbital rotation max_stepsize = 0.02
augmented hessian ah_max_cycle = 30
augmented hessian ah_conv_tol = 1e-12
augmented hessian ah_linear dependence = 1e-14
augmented hessian ah_level shift = 0
augmented hessian ah_start_tol = 2.5
augmented hessian ah_start_cycle = 3
augmented hessian ah_grad_trust_region = 3
kf_trust_region = 3
kf_interval = 4
ci_response_space = 4
ci_grad_trust_region = 3
with_dep4 0
natorb = False
canonicalization = True
sorting_mo_energy = False
ao2mo_level = 2
chkfile = /home/alessandro/Scrivania/Università/Master Thesis/git/test/Esercizio/OH_anion/tmpphjvqq3r
max_memory 4000 MB (current use 177 MB)
internal_rotation = False
******** <class 'pyscf.fci.direct_spin1_symm.FCISolver'> ********
max. cycles = 50
conv_tol = 1e-08
davidson only = True
linear dependence = 1e-10
level shift = 0.001
max iter space = 12
max_memory 4000 MB
nroots = 1
pspace_size = 0
spin = None
CI wfn symmetry = None
Active space CI wfn symmetry = A1
CASCI E = -75.412180499827  S^2 = 0.0000000
Set conv_tol_grad to 0.000316228
macro iter 1 (6 JK  1 micro), CASSCF E = -75.4121842652739  dE = -3.7654469e-06  S^2 = 0.0000000
               |grad[o]|=3.96e-05  |grad[c]|= 0.0009389671766041402  |ddm|=3.73e-05
macro iter 2 (6 JK  1 micro), CASSCF E = -75.4121873446316  dE = -3.0793577e-06  S^2 = 0.0000000
               |grad[o]|=6.53e-05  |grad[c]|= 0.0006198271228456002  |ddm|=9.51e-06
macro iter 3 (6 JK  1 micro), CASSCF E = -75.4122084391623  dE = -2.1094531e-05  S^2 = 0.0000000
               |grad[o]|=8.96e-05  |grad[c]|= 0.0032848579345928037  |ddm|=0.000203
macro iter 4 (21 JK  4 micro), CASSCF E = -75.4157464715238  dE = -0.0035380324  S^2 = 0.0000000
               |grad[o]|=0.000315  |grad[c]|= 0.023848334401899388  |ddm|=0.00794
macro iter 5 (21 JK  4 micro), CASSCF E = -75.4286014538278  dE = -0.012854982  S^2 = 0.0000000
               |grad[o]|=0.0155  |grad[c]|= 0.02866609701947318  |ddm|=0.0125
macro iter 6 (19 JK  4 micro), CASSCF E = -75.4356671873392  dE = -0.0070657335  S^2 = 0.0000000
               |grad[o]|=0.0218  |grad[c]|= 0.019832029804545865  |ddm|=0.0158
macro iter 7 (11 JK  4 micro), CASSCF E = -75.4357009115435  dE = -3.3724204e-05  S^2 = 0.0000000
               |grad[o]|=0.00621  |grad[c]|= 0.0006786530337268007  |ddm|=0.00436
macro iter 8 (3 JK  1 micro), CASSCF E = -75.4357009720251  dE = -6.0481625e-08  S^2 = 0.0000000
               |grad[o]|=0.000243  |grad[c]|= 0.00017207165410573443  |ddm|=0.000173
1-step CASSCF converged in 8 macro (93 JK 20 micro) steps
CASSCF canonicalization
Density matrix diagonal elements [1.99558788 1.97886264 1.99970872 1.99970872 0.02613205]
CASSCF energy = -75.4357009720251
CASCI E = -75.4357009720251  E(CI) = -19.6236999009034  S^2 = 0.0000000
Hartree-Fock    -75.41217715445794
Moller-Plesset  -75.702277602665
CISD            -75.68259645014236
CCSD            -75.69703187860645
CCSD(T)         -75.70941180577904
CASCI           -75.412180499827
CASSCF          -75.43570097202512
#####################################################
END: aug-cc-pvtz
#####################################################
