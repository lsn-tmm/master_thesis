#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/aug-cc-pvdz/anion/R_1.10/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.10)]],basis='aug-cc-pvdz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

x = np.load('PARAMETER_FILE.npy', allow_pickle=True).item()
VQE_settings.initial_point = x['opt_params']

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab55.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Tue Jan 25 09:02:34 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.100000000000 AA    0.000000000000   0.000000000000   2.078698737022 Bohr

nuclear repulsion = 3.84856153396364
point group symmetry = Coov
num. orbitals of irrep A1 = 14
num. orbitals of irrep E1x = 7
num. orbitals of irrep E1y = 7
num. orbitals of irrep E2x = 2
num. orbitals of irrep E2y = 2
number of shells = 13
number of NR pGTOs = 46
number of NR cGTOs = 32
basis = aug-cc-pvdz
ecp = {}
CPU time:         4.06
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/aug-cc-pvdz/anion/R_1.10/tmpk5luwgf7
max_memory 4000 MB (current use 268 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/aug-cc-pvdz/anion/R_1.10/tmpk5luwgf7
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 268 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.415861468933773  LUMO (A1) = 0.024141753708906
Initial guess E= -75.2370275952933  |g|= 0.764749
macro= 0  E= -75.3750308468278  delta_E= -0.138003  |g|= 0.137892  3 KF 9 JK
macro= 1  E= -75.3787751405377  delta_E= -0.00374429  |g|= 0.0113723  3 KF 9 JK
macro= 2  E= -75.378775944791  delta_E= -8.04253e-07  |g|= 9.17914e-05  2 KF 8 JK
macro= 3  E= -75.3787759447911  delta_E= -5.68434e-14  |g|= 1.22685e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.3787759447911  |g|= 1.22685e-06  total 10 KF 33 JK
converged SCF energy = -75.3787759447911
**** SCF Summaries ****
Total Energy =                         -75.378775944791087
Nuclear Repulsion Energy =               3.848561533963636
One-electron Energy =                 -115.361340328535945
Two-electron Energy =                   36.134002849781226
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    1    0    0
single occ                     0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.2187884257882  | -20.2187884257882  | -20.2187884257882  occ= 2
MO #2   (A1  #2 ) energy= -0.878329284387354 | -0.878329284387355 | -0.878329284387355 occ= 2
MO #3   (A1  #3 ) energy= -0.222918649646953 | -0.222918649646953 | -0.222918649646953 occ= 2
MO #4   (E1x #1 ) energy= -0.113315477332079 | -0.113315477332079 | -0.113315477332079 occ= 2
MO #5   (E1y #1 ) energy= -0.113315477332077 | -0.113315477332077 | -0.113315477332077 occ= 2
MO #6   (A1  #4 ) energy= 0.198864640188531  | 0.19886464018853   | 0.19886464018853   occ= 0
MO #7   (A1  #5 ) energy= 0.398938728375411  | 0.398938728375411  | 0.398938728375411  occ= 0
MO #8   (E1x #2 ) energy= 0.433055056542914  | 0.433055056542914  | 0.433055056542914  occ= 0
MO #9   (E1y #2 ) energy= 0.433055056542913  | 0.433055056542913  | 0.433055056542913  occ= 0
MO #10  (A1  #6 ) energy= 0.458196736514653  | 0.458196736514653  | 0.458196736514653  occ= 0
MO #11  (A1  #7 ) energy= 0.560586829223983  | 0.560586829223985  | 0.560586829223985  occ= 0
MO #12  (E1x #3 ) energy= 0.639193281805437  | 0.639193281805438  | 0.639193281805438  occ= 0
MO #13  (E1y #3 ) energy= 0.639193281805441  | 0.639193281805441  | 0.639193281805441  occ= 0
MO #14  (A1  #8 ) energy= 0.890444915515483  | 0.890444915515485  | 0.890444915515485  occ= 0
MO #15  (A1  #9 ) energy= 1.1316004461557    | 1.1316004461557    | 1.1316004461557    occ= 0
MO #16  (E2x #1 ) energy= 1.32329478790601   | 1.32329478790601   | 1.32329478790601   occ= 0
MO #17  (E2y #1 ) energy= 1.32329478790601   | 1.32329478790601   | 1.32329478790601   occ= 0
MO #18  (E1x #4 ) energy= 1.44623971061486   | 1.44623971061486   | 1.44623971061486   occ= 0
MO #19  (E1y #4 ) energy= 1.44623971061486   | 1.44623971061486   | 1.44623971061486   occ= 0
MO #20  (A1  #10) energy= 1.64529413700082   | 1.64529413700082   | 1.64529413700082   occ= 0
MO #21  (E1x #5 ) energy= 1.75174905696356   | 1.75174905696356   | 1.75174905696356   occ= 0
MO #22  (E1y #5 ) energy= 1.75174905696356   | 1.75174905696356   | 1.75174905696356   occ= 0
MO #23  (A1  #11) energy= 1.99903004867751   | 1.99903004867752   | 1.99903004867752   occ= 0
MO #24  (E1x #6 ) energy= 2.30921307176462   | 2.30921307176462   | 2.30921307176462   occ= 0
MO #25  (E1y #6 ) energy= 2.30921307176462   | 2.30921307176462   | 2.30921307176462   occ= 0
MO #26  (A1  #12) energy= 2.6256576829843    | 2.62565768298431   | 2.62565768298431   occ= 0
MO #27  (A1  #13) energy= 3.13000570746013   | 3.13000570746013   | 3.13000570746013   occ= 0
MO #28  (E2x #2 ) energy= 3.95466218212477   | 3.95466218212477   | 3.95466218212477   occ= 0
MO #29  (E2y #2 ) energy= 3.95466218212477   | 3.95466218212477   | 3.95466218212477   occ= 0
MO #30  (E1x #7 ) energy= 4.0374658000167    | 4.0374658000167    | 4.0374658000167    occ= 0
MO #31  (E1y #7 ) energy= 4.03746580001669   | 4.03746580001669   | 4.03746580001669   occ= 0
MO #32  (A1  #14) energy= 4.31430974105399   | 4.31430974105399   | 4.31430974105399   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.86096
pop of  0 O 3s        0.00941
pop of  0 O 4s        0.00122
pop of  0 O 2px       1.94543
pop of  0 O 2py       1.94543
pop of  0 O 2pz       1.29680
pop of  0 O 3px       0.03867
pop of  0 O 3py       0.03867
pop of  0 O 3pz       0.00405
pop of  0 O 4px       0.00140
pop of  0 O 4py       0.00140
pop of  0 O 4pz       0.00028
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00087
pop of  0 O 3dz^2     0.00179
pop of  0 O 3dxz      0.00087
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00016
pop of  0 O 4dz^2     0.00004
pop of  0 O 4dxz      0.00016
pop of  0 O 4dx2-y2    0.00000
pop of  1 H 1s        0.81559
pop of  1 H 2s        0.00317
pop of  1 H 3s        0.00074
pop of  1 H 2px       0.00970
pop of  1 H 2py       0.00970
pop of  1 H 2pz       0.00130
pop of  1 H 3px       0.00378
pop of  1 H 3py       0.00378
pop of  1 H 3pz       0.00465
 ** Mulliken atomic charges  **
charge of  0O =     -1.14760
charge of  1H =      0.14760
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  0.72814
#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/aug-cc-pvdz/anion/R_1.10/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.10)]],basis='aug-cc-pvdz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

x = np.load('PARAMETER_FILE.npy', allow_pickle=True).item()
VQE_settings.initial_point = x['opt_params']

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab55.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Tue Jan 25 09:02:35 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:         9.62

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/aug-cc-pvdz/anion/R_1.10/tmploqqobu7
max_memory 4000 MB (current use 293 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/aug-cc-pvdz/anion/R_1.10/tmploqqobu7
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 293 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.113315477332081  LUMO = 0.688540204402212
Initial guess E= -75.3787759447909  |g|= 3.19626e-08
macro= 0  E= -75.3787759447909  delta_E= 4.26326e-14  |g|= 3.19626e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3787759447909  |g|= 3.19626e-08  total 2 KF 4 JK
converged SCF energy = -75.3787759447909
u+d contributions  -0.0021730155244904475
uu+dd contributions  -0.040738160159805296
ud contributions  -0.14577729195050398
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-75.378776, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.155857, i_min=0
In the tapering subroutine, i=2, E(i)=-75.265460, i_min=0
In the tapering subroutine, i=3, E(i)=-75.098938, i_min=0
In the tapering subroutine, i=4, E(i)=-75.265460, i_min=0
In the tapering subroutine, i=5, E(i)=-75.098938, i_min=0
In the tapering subroutine, i=6, E(i)=-74.600887, i_min=0
In the tapering subroutine, i=7, E(i)=-74.931841, i_min=0
In the tapering subroutine, i=8, E(i)=-75.155857, i_min=0
In the tapering subroutine, i=9, E(i)=-75.028912, i_min=0
In the tapering subroutine, i=10, E(i)=-75.075560, i_min=0
In the tapering subroutine, i=11, E(i)=-75.265460, i_min=0
In the tapering subroutine, i=12, E(i)=-75.075560, i_min=0
In the tapering subroutine, i=13, E(i)=-75.265460, i_min=0
In the tapering subroutine, i=14, E(i)=-74.931841, i_min=0
In the tapering subroutine, i=15, E(i)=-74.632762, i_min=0
after tapering qubits(H) =  6
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
     ┌───┐
q_0: ┤ X ├
     └───┘
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     ├───┤
q_3: ┤ X ├
     ├───┤
q_4: ┤ X ├
     └───┘
q_5: ─────
          
u+d contributions  -0.002173013921638199
uu+dd contributions  -0.040738178051418945
ud contributions  -0.14577733659320508
     ┌───┐
q_0: ┤ X ├
     └───┘
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     ├───┤
q_3: ┤ X ├
     ├───┤
q_4: ┤ X ├
     └───┘
q_5: ─────
          
u+d contributions  -0.002209761118547644
uu+dd contributions  -0.0408798293608736
ud contributions  -0.14622893564187134
     ┌───┐
q_0: ┤ X ├
     └───┘
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     ├───┤
q_3: ┤ X ├
     ├───┤
q_4: ┤ X ├
     └───┘
q_5: ─────
          
u+d contributions  -0.002209761118547644
uu+dd contributions  -0.0408798293608736
ud contributions  -0.14622893564187134
