#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.80/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.80)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
#outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab20.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 16:03:02 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.800000000000 AA    0.000000000000   0.000000000000   1.511780899652 Bohr

nuclear repulsion = 5.2917721092
point group symmetry = Coov
num. orbitals of irrep A1 = 12
num. orbitals of irrep E1x = 5
num. orbitals of irrep E1y = 5
num. orbitals of irrep E2x = 1
num. orbitals of irrep E2y = 1
number of shells = 12
number of NR pGTOs = 39
number of NR cGTOs = 24
basis = 6-31++g**
ecp = {}
CPU time:         4.60
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.80/tmp9gi0xe3t
max_memory 4000 MB (current use 277 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.80/tmp9gi0xe3t
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 277 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.460365391979468  LUMO (A1) = 0.0445370895541123
Initial guess E= -75.2266614931165  |g|= 0.746957
macro= 0  E= -75.3446323576281  delta_E= -0.117971  |g|= 0.149398  3 KF 10 JK
macro= 1  E= -75.3501569766893  delta_E= -0.00552462  |g|= 0.0116468  3 KF 9 JK
macro= 2  E= -75.3501588781648  delta_E= -1.90148e-06  |g|= 0.000147033  2 KF 7 JK
macro= 3  E= -75.3501588781646  delta_E= 1.7053e-13  |g|= 3.23923e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.3501588781646  |g|= 3.23923e-06  total 10 KF 33 JK
converged SCF energy = -75.3501588781646
**** SCF Summaries ****
Total Energy =                         -75.350158878164621
Nuclear Repulsion Energy =               5.291772109200000
One-electron Energy =                 -118.063510937230106
Two-electron Energy =                   37.421579949865489
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    1    0    0
single occ                     0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.1662098055208  | -20.1662098055208  | -20.1662098055208  occ= 2
MO #2   (A1  #2 ) energy= -0.958337273435798 | -0.958337273435799 | -0.958337273435799 occ= 2
MO #3   (A1  #3 ) energy= -0.278716439471551 | -0.278716439471551 | -0.278716439471551 occ= 2
MO #4   (E1x #1 ) energy= -0.103456000160729 | -0.103456000160729 | -0.103456000160729 occ= 2
MO #5   (E1y #1 ) energy= -0.10345600016073  | -0.10345600016073  | -0.10345600016073  occ= 2
MO #6   (A1  #4 ) energy= 0.222695506879032  | 0.222695506879032  | 0.222695506879032  occ= 0
MO #7   (A1  #5 ) energy= 0.473948229164157  | 0.473948229164156  | 0.473948229164156  occ= 0
MO #8   (E1x #2 ) energy= 0.503247383126967  | 0.503247383126967  | 0.503247383126967  occ= 0
MO #9   (E1y #2 ) energy= 0.503247383126967  | 0.503247383126967  | 0.503247383126967  occ= 0
MO #10  (A1  #6 ) energy= 0.558486518812975  | 0.558486518812974  | 0.558486518812974  occ= 0
MO #11  (A1  #7 ) energy= 0.724097897282405  | 0.724097897282404  | 0.724097897282404  occ= 0
MO #12  (A1  #8 ) energy= 1.69254835700149   | 1.69254835700149   | 1.69254835700149   occ= 0
MO #13  (A1  #9 ) energy= 1.76771193153111   | 1.76771193153111   | 1.76771193153111   occ= 0
MO #14  (E1x #3 ) energy= 1.77083436338874   | 1.77083436338874   | 1.77083436338874   occ= 0
MO #15  (E1y #3 ) energy= 1.77083436338874   | 1.77083436338874   | 1.77083436338874   occ= 0
MO #16  (A1  #10) energy= 2.13668148098375   | 2.13668148098374   | 2.13668148098374   occ= 0
MO #17  (E1x #4 ) energy= 2.26730330555043   | 2.26730330555043   | 2.26730330555043   occ= 0
MO #18  (E1y #4 ) energy= 2.26730330555044   | 2.26730330555043   | 2.26730330555043   occ= 0
MO #19  (E2x #1 ) energy= 2.4797278610072    | 2.4797278610072    | 2.4797278610072    occ= 0
MO #20  (E2y #1 ) energy= 2.47972786100721   | 2.47972786100721   | 2.47972786100721   occ= 0
MO #21  (A1  #11) energy= 3.42011592087123   | 3.42011592087123   | 3.42011592087123   occ= 0
MO #22  (E1x #5 ) energy= 3.55357851171815   | 3.55357851171815   | 3.55357851171815   occ= 0
MO #23  (E1y #5 ) energy= 3.55357851171815   | 3.55357851171815   | 3.55357851171815   occ= 0
MO #24  (A1  #12) energy= 4.76981432041844   | 4.76981432041844   | 4.76981432041844   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.71103
pop of  0 O 3s        0.02172
pop of  0 O 4s        0.00299
pop of  0 O 2px       1.94458
pop of  0 O 2py       1.94458
pop of  0 O 2pz       1.56028
pop of  0 O 3px       0.05060
pop of  0 O 3py       0.05060
pop of  0 O 3pz       0.00353
pop of  0 O 4px       0.00074
pop of  0 O 4py       0.00074
pop of  0 O 4pz       0.00004
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00155
pop of  0 O 3dz^2     0.00949
pop of  0 O 3dxz      0.00155
pop of  0 O 3dx2-y2    0.00000
pop of  1 H 1s        0.66394
pop of  1 H 2s        0.01708
pop of  1 H 3s        0.00910
pop of  1 H 2px       0.00254
pop of  1 H 2py       0.00254
pop of  1 H 2pz       0.00081
 ** Mulliken atomic charges  **
charge of  0O =     -1.30399
charge of  1H =      0.30399
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.55743
#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.80/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.80)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
#outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab20.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 16:03:03 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        10.14

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.80/tmph_qmp6kq
max_memory 4000 MB (current use 298 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.80/tmph_qmp6kq
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 298 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.103456000160728  LUMO = 0.974169893669094
Initial guess E= -75.3501588781648  |g|= 5.64656e-08
macro= 0  E= -75.3501588781648  delta_E= 0  |g|= 5.64656e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3501588781648  |g|= 5.64656e-08  total 2 KF 4 JK
converged SCF energy = -75.3501588781648
u+d contributions  -0.0019266948717527417
uu+dd contributions  -0.03370669501579523
ud contributions  -0.11263767679841866
NEVPT2 time: 0.05 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.66 s
qse operators prepared for d 	 time: 0.72 s
qse operators prepared for uu 	 time: 3.50 s
qse operators prepared for dd 	 time: 3.61 s
qse operators prepared for ud 	 time: 26.36 s
In the tapering subroutine, i=0, E(i)=-74.644853, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.071442, i_min=0
In the tapering subroutine, i=2, E(i)=-75.246703, i_min=1
In the tapering subroutine, i=3, E(i)=-74.766894, i_min=2
In the tapering subroutine, i=4, E(i)=-75.246703, i_min=2
In the tapering subroutine, i=5, E(i)=-74.766894, i_min=2
In the tapering subroutine, i=6, E(i)=-74.538354, i_min=2
In the tapering subroutine, i=7, E(i)=-74.636154, i_min=2
In the tapering subroutine, i=8, E(i)=-75.071442, i_min=2
In the tapering subroutine, i=9, E(i)=-75.350159, i_min=2
In the tapering subroutine, i=10, E(i)=-74.792699, i_min=9
In the tapering subroutine, i=11, E(i)=-75.246703, i_min=9
In the tapering subroutine, i=12, E(i)=-74.792699, i_min=9
In the tapering subroutine, i=13, E(i)=-75.246703, i_min=9
In the tapering subroutine, i=14, E(i)=-74.636154, i_min=9
In the tapering subroutine, i=15, E(i)=-74.569993, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.76 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.55 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.55 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.56 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.56 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.18 s
Taper time: 203.66 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 1.65 s
u+d contributions  -0.0019266659836657807
uu+dd contributions  -0.03370665898693051
ud contributions  -0.11263762412813266
NEVPT2 time: 5.13 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 12.20 s
u+d contributions  -0.00224046626917058
uu+dd contributions  -0.034026607489981806
ud contributions  -0.1130628623539531
NEVPT2 time: 1.71 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 0.06 s
u+d contributions  -0.00224046626917058
uu+dd contributions  -0.034026607489981806
ud contributions  -0.1130628623539531
NEVPT2 time: 2.03 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.67 s
qse operators prepared for d 	 time: 0.72 s
qse operators prepared for uu 	 time: 3.58 s
qse operators prepared for dd 	 time: 3.57 s
qse operators prepared for ud 	 time: 26.12 s
In the tapering subroutine, i=0, E(i)=-74.644853, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.071442, i_min=0
In the tapering subroutine, i=2, E(i)=-75.246703, i_min=1
In the tapering subroutine, i=3, E(i)=-74.766894, i_min=2
In the tapering subroutine, i=4, E(i)=-75.246703, i_min=2
In the tapering subroutine, i=5, E(i)=-74.766894, i_min=2
In the tapering subroutine, i=6, E(i)=-74.538354, i_min=2
In the tapering subroutine, i=7, E(i)=-74.636154, i_min=2
In the tapering subroutine, i=8, E(i)=-75.071442, i_min=2
In the tapering subroutine, i=9, E(i)=-75.350159, i_min=2
In the tapering subroutine, i=10, E(i)=-74.792699, i_min=9
In the tapering subroutine, i=11, E(i)=-75.246703, i_min=9
In the tapering subroutine, i=12, E(i)=-74.792699, i_min=9
In the tapering subroutine, i=13, E(i)=-75.246703, i_min=9
In the tapering subroutine, i=14, E(i)=-74.636154, i_min=9
In the tapering subroutine, i=15, E(i)=-74.569993, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.76 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.55 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.56 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.55 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.55 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.17 s
Taper time: 201.49 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 778.68 s
attention: IMAG (0.005749999999999996-0.0018124999999999988j)
attention: IMAG (-0.05768690868040504+0.0018798048668399506j)
attention: IMAG (-0.003374999999999998+0.0034374999999999974j)
attention: IMAG (0.5685232808140425-0.03667470327806855j)
attention: IMAG (-0.005906249999999997-0.00034374999999999965j)
attention: IMAG (-0.008687499999999994-0.003999999999999997j)
attention: IMAG (0.6944778148364+0.2943198300770111j)
attention: IMAG (0.08985601313157428+0.18059252275488177j)
attention: IMAG (0.008593749999999995-0.0008437499999999993j)
attention: IMAG (0.008218749999999995-0.0020624999999999984j)
attention: IMAG (-0.09976046957066537+0.08929325152488822j)
attention: IMAG (-0.39445879681347307-0.07804453730514345j)
attention: IMAG (-0.002874999999999998+0.0017812499999999988j)
attention: IMAG (-0.0018437499999999986-0.0031874999999999985j)
attention: IMAG (0.002687499999999998+0.0028437499999999978j)
attention: IMAG (-0.0005624999999999996-0.001906249999999999j)
attention: IMAG (0.006406249999999995+0.001218749999999999j)
attention: IMAG (0.006874999999999996-0.0020937499999999984j)
attention: IMAG (-0.0020937499999999984+0.004312499999999997j)
attention: IMAG (-0.0008124999999999994+0.0017812499999999985j)
attention: IMAG (-0.0005937499999999998+0.008031249999999995j)
attention: IMAG (0.0031874999999999976+0.0014062499999999989j)
attention: IMAG (-0.005374999999999997+0.0022812499999999986j)
attention: IMAG (-0.009062499999999994-0.0001249999999999999j)
attention: IMAG (0.0009999999999999992+0.0010312499999999992j)
attention: IMAG (0.0004999999999999997-0.00028125000000000025j)
attention: IMAG (-0.007062499999999995+0.0005312499999999996j)
attention: IMAG (0.002031249999999999-0.0007812499999999994j)
attention: IMAG (-0.007906249999999995-0.0031562499999999976j)
attention: IMAG (0.0004062499999999998-0.002687499999999998j)
attention: IMAG (0.48860685241490387-0.12465287664602934j)
attention: IMAG (-0.21540068211757582+0.21293030816691325j)
attention: IMAG (0.025327926468901824-0.17543150051054163j)
attention: IMAG (-0.6307886561808993+0.05039417232427942j)
attention: IMAG (0.06611845146888028+0.040066337135301236j)
attention: IMAG (-0.2822529264090859+0.336856619257245j)
attention: IMAG (-0.8473301360389424+0.15441596119941325j)
attention: IMAG (0.1861216040399363-0.4007186994890426j)
attention: IMAG (0.06773561418723996-0.14507566596333854j)
attention: IMAG (-0.05456002386693432+0.20149386702826244j)
attention: IMAG (-0.013824081285360817-0.35973499069989984j)
attention: IMAG (0.6113248900919659-0.17186572123975435j)
attention: IMAG (0.0002530464712817119-0.00014062065638514092j)
attention: IMAG (0.3714354639113362-0.03408554586755798j)
attention: IMAG (-0.025551200402830543-0.25366049723663436j)
attention: IMAG (-0.0352098787420152+0.20333519241948034j)
attention: IMAG (0.9074527834271755-0.20437084815011083j)
attention: IMAG (0.2427783604723204+0.0744687529666613j)
attention: IMAG (0.7458946249872886-0.22893051060456382j)
attention: IMAG (-0.0663597107386534-0.014099598512641356j)
u+d contributions  0.0002126383662822784
uu+dd contributions  -0.018754511472806223
ud contributions  -0.08247923785493518
NEVPT2 time: 140.30 s
