#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.84/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.84)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
#outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab22.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 16:02:32 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.840000000000 AA    0.000000000000   0.000000000000   1.587369944635 Bohr

nuclear repulsion = 5.03978296114286
point group symmetry = Coov
num. orbitals of irrep A1 = 12
num. orbitals of irrep E1x = 5
num. orbitals of irrep E1y = 5
num. orbitals of irrep E2x = 1
num. orbitals of irrep E2y = 1
number of shells = 12
number of NR pGTOs = 39
number of NR cGTOs = 24
basis = 6-31++g**
ecp = {}
CPU time:         4.66
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.84/tmp31zuiljj
max_memory 4000 MB (current use 277 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.84/tmp31zuiljj
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 277 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.451848320005253  LUMO (A1) = 0.0438102284573303
Initial guess E= -75.2449538267633  |g|= 0.743225
macro= 0  E= -75.3630189156717  delta_E= -0.118065  |g|= 0.148167  3 KF 10 JK
macro= 1  E= -75.3677775772505  delta_E= -0.00475866  |g|= 0.0102585  3 KF 9 JK
macro= 2  E= -75.3677785940259  delta_E= -1.01678e-06  |g|= 0.00011546  2 KF 7 JK
macro= 3  E= -75.3677785940259  delta_E= 7.10543e-14  |g|= 1.27522e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.3677785940259  |g|= 1.27522e-06  total 10 KF 33 JK
converged SCF energy = -75.3677785940259
**** SCF Summaries ****
Total Energy =                         -75.367778594025864
Nuclear Repulsion Energy =               5.039782961142858
One-electron Energy =                 -117.630311541899772
Two-electron Energy =                   37.222749986731046
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    1    0    0
single occ                     0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.1729691873941  | -20.1729691873941  | -20.1729691873941  occ= 2
MO #2   (A1  #2 ) energy= -0.941478973983475 | -0.941478973983476 | -0.941478973983476 occ= 2
MO #3   (A1  #3 ) energy= -0.27132896354589  | -0.271328963545891 | -0.271328963545891 occ= 2
MO #4   (E1x #1 ) energy= -0.103314329647674 | -0.103314329647674 | -0.103314329647674 occ= 2
MO #5   (E1y #1 ) energy= -0.103314329647676 | -0.103314329647676 | -0.103314329647676 occ= 2
MO #6   (A1  #4 ) energy= 0.222452919988855  | 0.222452919988855  | 0.222452919988855  occ= 0
MO #7   (A1  #5 ) energy= 0.476915699678093  | 0.476915699678093  | 0.476915699678093  occ= 0
MO #8   (E1x #2 ) energy= 0.503353006659015  | 0.503353006659015  | 0.503353006659015  occ= 0
MO #9   (E1y #2 ) energy= 0.503353006659014  | 0.503353006659014  | 0.503353006659014  occ= 0
MO #10  (A1  #6 ) energy= 0.557872246971303  | 0.557872246971303  | 0.557872246971303  occ= 0
MO #11  (A1  #7 ) energy= 0.706460652953022  | 0.706460652953024  | 0.706460652953024  occ= 0
MO #12  (A1  #8 ) energy= 1.69840631481113   | 1.69840631481113   | 1.69840631481113   occ= 0
MO #13  (A1  #9 ) energy= 1.71952340805672   | 1.71952340805672   | 1.71952340805672   occ= 0
MO #14  (E1x #3 ) energy= 1.771236443258     | 1.771236443258     | 1.771236443258     occ= 0
MO #15  (E1y #3 ) energy= 1.77123644325799   | 1.77123644325799   | 1.77123644325799   occ= 0
MO #16  (A1  #10) energy= 2.13673877742118   | 2.13673877742118   | 2.13673877742118   occ= 0
MO #17  (E1x #4 ) energy= 2.252117168975     | 2.252117168975     | 2.252117168975     occ= 0
MO #18  (E1y #4 ) energy= 2.25211716897501   | 2.25211716897501   | 2.25211716897501   occ= 0
MO #19  (E2x #1 ) energy= 2.47988064774543   | 2.47988064774543   | 2.47988064774543   occ= 0
MO #20  (E2y #1 ) energy= 2.47988064774543   | 2.47988064774543   | 2.47988064774543   occ= 0
MO #21  (A1  #11) energy= 3.35353574973741   | 3.35353574973741   | 3.35353574973741   occ= 0
MO #22  (E1x #5 ) energy= 3.49691757037516   | 3.49691757037516   | 3.49691757037516   occ= 0
MO #23  (E1y #5 ) energy= 3.49691757037517   | 3.49691757037517   | 3.49691757037517   occ= 0
MO #24  (A1  #12) energy= 4.57371955555323   | 4.57371955555323   | 4.57371955555323   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.73530
pop of  0 O 3s        0.02099
pop of  0 O 4s        0.00290
pop of  0 O 2px       1.94461
pop of  0 O 2py       1.94461
pop of  0 O 2pz       1.52538
pop of  0 O 3px       0.05070
pop of  0 O 3py       0.05070
pop of  0 O 3pz       0.00313
pop of  0 O 4px       0.00075
pop of  0 O 4py       0.00075
pop of  0 O 4pz       0.00008
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00142
pop of  0 O 3dz^2     0.00795
pop of  0 O 3dxz      0.00142
pop of  0 O 3dx2-y2    0.00000
pop of  1 H 1s        0.68159
pop of  1 H 2s        0.01433
pop of  1 H 3s        0.00741
pop of  1 H 2px       0.00252
pop of  1 H 2py       0.00252
pop of  1 H 2pz       0.00094
 ** Mulliken atomic charges  **
charge of  0O =     -1.29069
charge of  1H =      0.29069
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.52612
#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.84/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.84)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
#outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab22.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 16:02:33 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        10.37

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.84/tmp6sf8ciq7
max_memory 4000 MB (current use 299 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.84/tmp6sf8ciq7
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 299 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.103314329647675  LUMO = 0.932040634061721
Initial guess E= -75.3677785940258  |g|= 2.28962e-08
macro= 0  E= -75.3677785940259  delta_E= -1.42109e-14  |g|= 2.28962e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3677785940259  |g|= 2.28962e-08  total 2 KF 4 JK
converged SCF energy = -75.3677785940259
u+d contributions  -0.002333755572271567
uu+dd contributions  -0.03364833867348013
ud contributions  -0.11146324078383335
NEVPT2 time: 0.05 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.67 s
qse operators prepared for d 	 time: 0.73 s
qse operators prepared for uu 	 time: 3.53 s
qse operators prepared for dd 	 time: 3.60 s
qse operators prepared for ud 	 time: 26.51 s
In the tapering subroutine, i=0, E(i)=-74.716968, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.096450, i_min=0
In the tapering subroutine, i=2, E(i)=-75.264464, i_min=1
In the tapering subroutine, i=3, E(i)=-74.827723, i_min=2
In the tapering subroutine, i=4, E(i)=-75.264464, i_min=2
In the tapering subroutine, i=5, E(i)=-74.827723, i_min=2
In the tapering subroutine, i=6, E(i)=-74.556413, i_min=2
In the tapering subroutine, i=7, E(i)=-74.697264, i_min=2
In the tapering subroutine, i=8, E(i)=-75.096450, i_min=2
In the tapering subroutine, i=9, E(i)=-75.367779, i_min=2
In the tapering subroutine, i=10, E(i)=-74.853050, i_min=9
In the tapering subroutine, i=11, E(i)=-75.264464, i_min=9
In the tapering subroutine, i=12, E(i)=-74.853050, i_min=9
In the tapering subroutine, i=13, E(i)=-75.264464, i_min=9
In the tapering subroutine, i=14, E(i)=-74.697264, i_min=9
In the tapering subroutine, i=15, E(i)=-74.588053, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.77 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.55 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.55 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.56 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.56 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.18 s
Taper time: 204.06 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 1.83 s
u+d contributions  -0.002333733889765069
uu+dd contributions  -0.03364829313186542
ud contributions  -0.11146314503995901
NEVPT2 time: 4.61 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 21.75 s
u+d contributions  -0.002522620263517292
uu+dd contributions  -0.03383889783465533
ud contributions  -0.1116955081113814
NEVPT2 time: 1.71 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 0.06 s
u+d contributions  -0.002522620263517292
uu+dd contributions  -0.03383889783465533
ud contributions  -0.1116955081113814
NEVPT2 time: 1.82 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.68 s
qse operators prepared for d 	 time: 0.76 s
qse operators prepared for uu 	 time: 3.62 s
qse operators prepared for dd 	 time: 3.71 s
qse operators prepared for ud 	 time: 27.05 s
In the tapering subroutine, i=0, E(i)=-74.716968, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.096450, i_min=0
In the tapering subroutine, i=2, E(i)=-75.264464, i_min=1
In the tapering subroutine, i=3, E(i)=-74.827723, i_min=2
In the tapering subroutine, i=4, E(i)=-75.264464, i_min=2
In the tapering subroutine, i=5, E(i)=-74.827723, i_min=2
In the tapering subroutine, i=6, E(i)=-74.556413, i_min=2
In the tapering subroutine, i=7, E(i)=-74.697264, i_min=2
In the tapering subroutine, i=8, E(i)=-75.096450, i_min=2
In the tapering subroutine, i=9, E(i)=-75.367779, i_min=2
In the tapering subroutine, i=10, E(i)=-74.853050, i_min=9
In the tapering subroutine, i=11, E(i)=-75.264464, i_min=9
In the tapering subroutine, i=12, E(i)=-74.853050, i_min=9
In the tapering subroutine, i=13, E(i)=-75.264464, i_min=9
In the tapering subroutine, i=14, E(i)=-74.697264, i_min=9
In the tapering subroutine, i=15, E(i)=-74.588053, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.77 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.56 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.57 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.56 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.57 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.20 s
Taper time: 206.67 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 876.43 s
attention: IMAG (0.008062499999999995-0.009499999999999993j)
attention: IMAG (-0.876360170026722+0.08669114357383617j)
attention: IMAG (-0.005874999999999996-0.002687499999999998j)
attention: IMAG (-0.010536211988654287+0.1836070213021549j)
attention: IMAG (-0.007999999999999995-0.00015624999999999987j)
attention: IMAG (-0.005812499999999996-0.0003749999999999996j)
attention: IMAG (-0.11970300693109787+0.12910221924234527j)
attention: IMAG (0.00306826604687183+0.14945313384527012j)
attention: IMAG (0.0005937499999999997+0.0011562499999999989j)
attention: IMAG (0.004343749999999997-0.00018749999999999995j)
attention: IMAG (-0.4360283345400048-0.11038981934234623j)
attention: IMAG (0.34362294379242675+0.034450470238688975j)
attention: IMAG (-0.0010624999999999996+0.0024999999999999983j)
attention: IMAG (-3.125000000000003e-05-0.0008437499999999994j)
attention: IMAG (0.008593749999999994-0.001437499999999999j)
attention: IMAG (0.004249999999999997+0.0009374999999999991j)
attention: IMAG (-0.003937499999999997+0.0039687499999999975j)
attention: IMAG (0.008281249999999993-0.003968749999999997j)
attention: IMAG (0.008312499999999995-0.002124999999999998j)
attention: IMAG (-0.0011562499999999993+0.0004062499999999997j)
attention: IMAG (-0.0012812499999999992+0.0005624999999999994j)
attention: IMAG (0.0005312499999999996-0.0005624999999999997j)
attention: IMAG (-0.0006874999999999997-0.0016249999999999988j)
attention: IMAG (-0.0020312499999999988-0.0032812499999999977j)
attention: IMAG (6.250000000000006e-05-0.0011874999999999993j)
attention: IMAG (-0.0030312499999999984-0.002781249999999998j)
attention: IMAG (-0.023562499999999986+0.0020312499999999988j)
attention: IMAG (-0.0011874999999999995-0.003468749999999998j)
attention: IMAG (0.0032812499999999977-0.0019687499999999983j)
attention: IMAG (-0.010937499999999992+0.0024062499999999982j)
attention: IMAG (-0.0005937499999999999+0.004281249999999997j)
attention: IMAG (0.19651117354472675-0.4264490545293405j)
attention: IMAG (-0.05310553688571821+0.00741236111894797j)
attention: IMAG (-0.05783749954737528-0.18092089045483958j)
attention: IMAG (-0.2930189278691784-0.024363656902791363j)
attention: IMAG (0.135922134895304+0.08686508700644077j)
attention: IMAG (0.040722292679558174-0.00012548192116475378j)
attention: IMAG (-0.303464265483518-0.021900894980528347j)
attention: IMAG (-0.25663284968269046-0.4880675138940284j)
attention: IMAG (0.10067835262822879+0.10539933891189418j)
attention: IMAG (-0.052858285688484316-0.1785745771943851j)
attention: IMAG (0.35888051430704315-0.0038751355910734064j)
attention: IMAG (0.1380299193819858-0.16089705628160958j)
attention: IMAG (0.37354286232496214+0.4630246424549472j)
attention: IMAG (-0.3860375444043553+0.5166663991726161j)
attention: IMAG (0.23410500802709025-0.09386533958363713j)
attention: IMAG (1.7679167964019522+0.44257785155878904j)
attention: IMAG (0.21684227196492523-0.09723826755572414j)
attention: IMAG (0.0002314428048672444-0.0001499499962646226j)
attention: IMAG (0.06855142819084643+0.05302482159849404j)
attention: IMAG (0.7696263510302297+0.283643287841904j)
attention: IMAG (-0.09811667721781064-0.18311855837976976j)
u+d contributions  0.0002770298670038998
uu+dd contributions  0.0027836123624623158
ud contributions  -0.06595365343353955
NEVPT2 time: 151.43 s
