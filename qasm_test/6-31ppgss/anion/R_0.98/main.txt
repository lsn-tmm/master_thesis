#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.98/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.98)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
#outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab29.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 16:05:31 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.980000000000 AA    0.000000000000   0.000000000000   1.851931602074 Bohr

nuclear repulsion = 4.31981396669388
point group symmetry = Coov
num. orbitals of irrep A1 = 12
num. orbitals of irrep E1x = 5
num. orbitals of irrep E1y = 5
num. orbitals of irrep E2x = 1
num. orbitals of irrep E2y = 1
number of shells = 12
number of NR pGTOs = 39
number of NR cGTOs = 24
basis = 6-31++g**
ecp = {}
CPU time:         4.68
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.98/tmpgdp478k2
max_memory 4000 MB (current use 275 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.98/tmpgdp478k2
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 275 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.428827395800758  LUMO (A1) = 0.038699208850142
Initial guess E= -75.2555195829928  |g|= 0.744473
macro= 0  E= -75.3814859483561  delta_E= -0.125966  |g|= 0.125773  3 KF 9 JK
macro= 1  E= -75.3829006184503  delta_E= -0.00141467  |g|= 0.00620687  3 KF 9 JK
macro= 2  E= -75.3829006489529  delta_E= -3.05026e-08  |g|= 1.79442e-05  2 KF 6 JK
macro= 3  E= -75.382900648953  delta_E= -7.10543e-14  |g|= 5.57951e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.382900648953  |g|= 5.57951e-06  total 10 KF 31 JK
converged SCF energy = -75.382900648953
**** SCF Summaries ****
Total Energy =                         -75.382900648952983
Nuclear Repulsion Energy =               4.319813966693878
One-electron Energy =                 -116.311678827324073
Two-electron Energy =                   36.608964211677218
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    1    0    0
single occ                     0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.1960297723105  | -20.1960297723105  | -20.1960297723105  occ= 2
MO #2   (A1  #2 ) energy= -0.89647615612347  | -0.896476156123472 | -0.896476156123472 occ= 2
MO #3   (A1  #3 ) energy= -0.243743712938643 | -0.243743712938643 | -0.243743712938643 occ= 2
MO #4   (E1x #1 ) energy= -0.105312780306107 | -0.105312780306107 | -0.105312780306107 occ= 2
MO #5   (E1y #1 ) energy= -0.105312780306107 | -0.105312780306107 | -0.105312780306107 occ= 2
MO #6   (A1  #4 ) energy= 0.222032322433547  | 0.222032322433548  | 0.222032322433548  occ= 0
MO #7   (A1  #5 ) energy= 0.483912705527313  | 0.483912705527314  | 0.483912705527314  occ= 0
MO #8   (E1x #2 ) energy= 0.502752955557345  | 0.502752955557346  | 0.502752955557346  occ= 0
MO #9   (E1y #2 ) energy= 0.502752955557348  | 0.502752955557348  | 0.502752955557348  occ= 0
MO #10  (A1  #6 ) energy= 0.554942689296098  | 0.554942689296099  | 0.554942689296099  occ= 0
MO #11  (A1  #7 ) energy= 0.64939796823284   | 0.649397968232842  | 0.649397968232842  occ= 0
MO #12  (A1  #8 ) energy= 1.54587557444936   | 1.54587557444937   | 1.54587557444937   occ= 0
MO #13  (A1  #9 ) energy= 1.76592953785165   | 1.76592953785165   | 1.76592953785165   occ= 0
MO #14  (E1x #3 ) energy= 1.76612341572906   | 1.76612341572906   | 1.76612341572906   occ= 0
MO #15  (E1y #3 ) energy= 1.76612341572906   | 1.76612341572906   | 1.76612341572906   occ= 0
MO #16  (A1  #10) energy= 2.14565230725751   | 2.14565230725751   | 2.14565230725751   occ= 0
MO #17  (E1x #4 ) energy= 2.2167358621852    | 2.2167358621852    | 2.2167358621852    occ= 0
MO #18  (E1y #4 ) energy= 2.2167358621852    | 2.2167358621852    | 2.2167358621852    occ= 0
MO #19  (E2x #1 ) energy= 2.47961170115613   | 2.47961170115613   | 2.47961170115613   occ= 0
MO #20  (E2y #1 ) energy= 2.47961170115613   | 2.47961170115613   | 2.47961170115613   occ= 0
MO #21  (A1  #11) energy= 3.09006461069049   | 3.09006461069049   | 3.09006461069049   occ= 0
MO #22  (E1x #5 ) energy= 3.30879875974848   | 3.30879875974848   | 3.30879875974848   occ= 0
MO #23  (E1y #5 ) energy= 3.30879875974847   | 3.30879875974847   | 3.30879875974847   occ= 0
MO #24  (A1  #12) energy= 4.16197390484155   | 4.16197390484155   | 4.16197390484155   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.81056
pop of  0 O 3s        0.01791
pop of  0 O 4s        0.00222
pop of  0 O 2px       1.94732
pop of  0 O 2py       1.94732
pop of  0 O 2pz       1.40092
pop of  0 O 3px       0.04880
pop of  0 O 3py       0.04880
pop of  0 O 3pz       0.00279
pop of  0 O 4px       0.00076
pop of  0 O 4py       0.00076
pop of  0 O 4pz       0.00021
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00098
pop of  0 O 3dz^2     0.00423
pop of  0 O 3dxz      0.00098
pop of  0 O 3dx2-y2    0.00000
pop of  1 H 1s        0.75113
pop of  1 H 2s        0.00573
pop of  1 H 3s        0.00303
pop of  1 H 2px       0.00214
pop of  1 H 2py       0.00214
pop of  1 H 2pz       0.00127
 ** Mulliken atomic charges  **
charge of  0O =     -1.23456
charge of  1H =      0.23456
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.31733
#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.98/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.98)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
#outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab29.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 16:05:31 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:         9.90

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.98/tmpx7mchiqx
max_memory 4000 MB (current use 297 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.98/tmpx7mchiqx
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 297 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.105312780306108  LUMO = 0.793451440273637
Initial guess E= -75.3829006489537  |g|= 2.02242e-07
macro= 0  E= -75.3829006489537  delta_E= 0  |g|= 2.02242e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3829006489537  |g|= 2.02242e-07  total 2 KF 4 JK
converged SCF energy = -75.3829006489537
u+d contributions  -0.0033576078020148697
uu+dd contributions  -0.032692346094901424
ud contributions  -0.10609527367182546
NEVPT2 time: 0.05 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.65 s
qse operators prepared for d 	 time: 0.71 s
qse operators prepared for uu 	 time: 3.47 s
qse operators prepared for dd 	 time: 3.54 s
qse operators prepared for ud 	 time: 26.02 s
In the tapering subroutine, i=0, E(i)=-74.908109, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.139157, i_min=0
In the tapering subroutine, i=2, E(i)=-75.277588, i_min=1
In the tapering subroutine, i=3, E(i)=-74.981751, i_min=2
In the tapering subroutine, i=4, E(i)=-75.277588, i_min=2
In the tapering subroutine, i=5, E(i)=-74.981751, i_min=4
In the tapering subroutine, i=6, E(i)=-74.565216, i_min=4
In the tapering subroutine, i=7, E(i)=-74.846934, i_min=4
In the tapering subroutine, i=8, E(i)=-75.139157, i_min=4
In the tapering subroutine, i=9, E(i)=-75.382901, i_min=4
In the tapering subroutine, i=10, E(i)=-75.005799, i_min=9
In the tapering subroutine, i=11, E(i)=-75.277588, i_min=9
In the tapering subroutine, i=12, E(i)=-75.005799, i_min=9
In the tapering subroutine, i=13, E(i)=-75.277588, i_min=9
In the tapering subroutine, i=14, E(i)=-74.846934, i_min=9
In the tapering subroutine, i=15, E(i)=-74.597059, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.75 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.54 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.54 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.55 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.55 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.17 s
Taper time: 201.36 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 2.95 s
u+d contributions  -0.0033576185192625515
uu+dd contributions  -0.032692404228712196
ud contributions  -0.10609544459193018
NEVPT2 time: 4.67 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 29.43 s
u+d contributions  -0.003359794480582185
uu+dd contributions  -0.032694754619135034
ud contributions  -0.10609866175428316
NEVPT2 time: 1.68 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 0.06 s
u+d contributions  -0.003359794480582185
uu+dd contributions  -0.032694754619135034
ud contributions  -0.10609866175428316
NEVPT2 time: 1.99 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.67 s
qse operators prepared for d 	 time: 0.67 s
qse operators prepared for uu 	 time: 3.63 s
qse operators prepared for dd 	 time: 3.66 s
qse operators prepared for ud 	 time: 26.59 s
In the tapering subroutine, i=0, E(i)=-74.908109, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.139157, i_min=0
In the tapering subroutine, i=2, E(i)=-75.277588, i_min=1
In the tapering subroutine, i=3, E(i)=-74.981751, i_min=2
In the tapering subroutine, i=4, E(i)=-75.277588, i_min=2
In the tapering subroutine, i=5, E(i)=-74.981751, i_min=4
In the tapering subroutine, i=6, E(i)=-74.565216, i_min=4
In the tapering subroutine, i=7, E(i)=-74.846934, i_min=4
In the tapering subroutine, i=8, E(i)=-75.139157, i_min=4
In the tapering subroutine, i=9, E(i)=-75.382901, i_min=4
In the tapering subroutine, i=10, E(i)=-75.005799, i_min=9
In the tapering subroutine, i=11, E(i)=-75.277588, i_min=9
In the tapering subroutine, i=12, E(i)=-75.005799, i_min=9
In the tapering subroutine, i=13, E(i)=-75.277588, i_min=9
In the tapering subroutine, i=14, E(i)=-74.846934, i_min=9
In the tapering subroutine, i=15, E(i)=-74.597059, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.77 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.57 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.56 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.57 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.56 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.20 s
Taper time: 206.73 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 781.42 s
attention: IMAG (0.05012499999999997-0.0005624999999999996j)
attention: IMAG (-3.704769134316647-0.0783718662786587j)
attention: IMAG (-0.019312499999999986-0.006749999999999996j)
attention: IMAG (1.3744969021185-0.1832367726044323j)
attention: IMAG (-0.05078124999999996-0.005562499999999996j)
attention: IMAG (-0.04837499999999997-0.0022187499999999985j)
attention: IMAG (4.017929243590683+0.4917572349849664j)
attention: IMAG (3.981294810424755+0.2168784498095418j)
attention: IMAG (0.02556249999999998+0.005062499999999997j)
attention: IMAG (0.024781249999999984+0.003437499999999997j)
attention: IMAG (-1.5100818700069003-0.1122836359434983j)
attention: IMAG (-1.4686044493764998-0.16382195847940717j)
attention: IMAG (-0.017562499999999988-0.0024999999999999983j)
attention: IMAG (0.0002812499999999998-0.0005312499999999994j)
attention: IMAG (0.005218749999999996-0.001749999999999999j)
attention: IMAG (0.051281249999999966+0.00018749999999999973j)
attention: IMAG (-0.009468749999999995+0.005531249999999995j)
attention: IMAG (0.05181249999999997-0.0010624999999999994j)
attention: IMAG (0.05081249999999996-0.002687499999999998j)
attention: IMAG (-0.0016249999999999986-0.0013124999999999994j)
attention: IMAG (0.004374999999999998-0.003593749999999998j)
attention: IMAG (-0.00046874999999999977-0.0008124999999999997j)
attention: IMAG (-0.0024687499999999987-0.001499999999999999j)
attention: IMAG (-0.022968749999999982-0.0020624999999999992j)
attention: IMAG (-0.0003125000000000003-0.005812499999999996j)
attention: IMAG (0.0006562499999999996-0.0011249999999999988j)
attention: IMAG (-0.0010937499999999992-0.002374999999999998j)
attention: IMAG (-0.020374999999999987-0.001593749999999999j)
attention: IMAG (0.003781249999999997-0.007093749999999995j)
attention: IMAG (-0.01871874999999999-0.0010312499999999992j)
attention: IMAG (0.0014374999999999987-0.003531249999999998j)
attention: IMAG (1.3683663762274192+0.2747812181939486j)
attention: IMAG (0.13141033585922712-0.1546755950525265j)
attention: IMAG (0.07311647917199403-0.20698574496432576j)
attention: IMAG (-4.047290259430348+0.008245764687532875j)
attention: IMAG (0.18095078951499483+0.1844157483429012j)
attention: IMAG (-0.0007565215900179965-0.00019122021951143713j)
attention: IMAG (-3.6628402527211255-0.021608031707927335j)
attention: IMAG (-3.7490004197780475+0.14085901430602432j)
attention: IMAG (-0.009122068644342455-0.2680685907190048j)
attention: IMAG (0.168832644312944+0.08856202786850136j)
attention: IMAG (-0.12661860289927285+0.1703970133075461j)
attention: IMAG (0.02241346832290728-0.4274518479887283j)
attention: IMAG (1.5389942630930318+0.11725468141707154j)
attention: IMAG (0.16103047279984636-0.06168611053789388j)
attention: IMAG (-0.059136036801199894+0.13762166036628967j)
attention: IMAG (-0.11827644566933157+0.2844322480375338j)
attention: IMAG (1.8594089822111057+0.05156521472479194j)
attention: IMAG (0.09277800109286008-0.12682744596351261j)
attention: IMAG (1.6984060964435361-0.22806331531568713j)
attention: IMAG (6.175736521193978e-05+0.0001310631783952973j)
attention: IMAG (0.04493559058611512+0.27210321601638193j)
u+d contributions  0.0001697400991565458
uu+dd contributions  -0.025397864658132402
ud contributions  -0.09772726395396261
NEVPT2 time: 137.56 s
