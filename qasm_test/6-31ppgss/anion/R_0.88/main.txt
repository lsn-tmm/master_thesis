#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.88/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.88)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
#outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab24.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 16:05:20 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.880000000000 AA    0.000000000000   0.000000000000   1.662958989617 Bohr

nuclear repulsion = 4.81070191745455
point group symmetry = Coov
num. orbitals of irrep A1 = 12
num. orbitals of irrep E1x = 5
num. orbitals of irrep E1y = 5
num. orbitals of irrep E2x = 1
num. orbitals of irrep E2y = 1
number of shells = 12
number of NR pGTOs = 39
number of NR cGTOs = 24
basis = 6-31++g**
ecp = {}
CPU time:         4.71
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.88/tmppulk_n75
max_memory 4000 MB (current use 278 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.88/tmppulk_n75
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 278 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.444274444627434  LUMO (A1) = 0.0428090512940736
Initial guess E= -75.2550879402044  |g|= 0.741474
macro= 0  E= -75.3741100194209  delta_E= -0.119022  |g|= 0.148797  3 KF 10 JK
macro= 1  E= -75.3781569483831  delta_E= -0.00404693  |g|= 0.00911877  3 KF 9 JK
macro= 2  E= -75.3781574758976  delta_E= -5.27515e-07  |g|= 9.47677e-05  2 KF 7 JK
macro= 3  E= -75.3781574758976  delta_E= -2.84217e-14  |g|= 1.82432e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.3781574758976  |g|= 1.82432e-06  total 10 KF 33 JK
converged SCF energy = -75.3781574758976
**** SCF Summaries ****
Total Energy =                         -75.378157475897609
Nuclear Repulsion Energy =               4.810701917454545
One-electron Energy =                 -117.224225759048196
Two-electron Energy =                   37.035366365696035
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    1    0    0
single occ                     0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.1796773423995  | -20.1796773423995  | -20.1796773423995  occ= 2
MO #2   (A1  #2 ) energy= -0.9264487372784   | -0.926448737278401 | -0.926448737278401 occ= 2
MO #3   (A1  #3 ) energy= -0.263677663489862 | -0.263677663489862 | -0.263677663489862 occ= 2
MO #4   (E1x #1 ) energy= -0.103471385330163 | -0.103471385330163 | -0.103471385330163 occ= 2
MO #5   (E1y #1 ) energy= -0.103471385330162 | -0.103471385330162 | -0.103471385330162 occ= 2
MO #6   (A1  #4 ) energy= 0.222254667457403  | 0.222254667457403  | 0.222254667457403  occ= 0
MO #7   (A1  #5 ) energy= 0.47950183596172   | 0.47950183596172   | 0.47950183596172   occ= 0
MO #8   (E1x #2 ) energy= 0.503339831162032  | 0.503339831162032  | 0.503339831162032  occ= 0
MO #9   (E1y #2 ) energy= 0.503339831162034  | 0.503339831162034  | 0.503339831162034  occ= 0
MO #10  (A1  #6 ) energy= 0.557175345716339  | 0.557175345716338  | 0.557175345716338  occ= 0
MO #11  (A1  #7 ) energy= 0.68938742014129   | 0.689387420141295  | 0.689387420141295  occ= 0
MO #12  (A1  #8 ) energy= 1.65255694101311   | 1.65255694101311   | 1.65255694101311   occ= 0
MO #13  (A1  #9 ) energy= 1.72859814226774   | 1.72859814226774   | 1.72859814226774   occ= 0
MO #14  (E1x #3 ) energy= 1.77070224081121   | 1.77070224081121   | 1.77070224081121   occ= 0
MO #15  (E1y #3 ) energy= 1.77070224081121   | 1.77070224081121   | 1.77070224081121   occ= 0
MO #16  (A1  #10) energy= 2.13820129362501   | 2.13820129362501   | 2.13820129362501   occ= 0
MO #17  (E1x #4 ) energy= 2.2390027883444    | 2.2390027883444    | 2.2390027883444    occ= 0
MO #18  (E1y #4 ) energy= 2.2390027883444    | 2.2390027883444    | 2.2390027883444    occ= 0
MO #19  (E2x #1 ) energy= 2.47998009747153   | 2.47998009747153   | 2.47998009747153   occ= 0
MO #20  (E2y #1 ) energy= 2.47998009747153   | 2.47998009747153   | 2.47998009747153   occ= 0
MO #21  (A1  #11) energy= 3.28316771032727   | 3.28316771032728   | 3.28316771032728   occ= 0
MO #22  (E1x #5 ) energy= 3.44176431690674   | 3.44176431690674   | 3.44176431690674   occ= 0
MO #23  (E1y #5 ) energy= 3.44176431690673   | 3.44176431690674   | 3.44176431690674   occ= 0
MO #24  (A1  #12) energy= 4.41673238296859   | 4.4167323829686    | 4.4167323829686    occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.75838
pop of  0 O 3s        0.02019
pop of  0 O 4s        0.00275
pop of  0 O 2px       1.94499
pop of  0 O 2py       1.94499
pop of  0 O 2pz       1.49020
pop of  0 O 3px       0.05051
pop of  0 O 3py       0.05051
pop of  0 O 3pz       0.00288
pop of  0 O 4px       0.00076
pop of  0 O 4py       0.00076
pop of  0 O 4pz       0.00013
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00129
pop of  0 O 3dz^2     0.00664
pop of  0 O 3dxz      0.00129
pop of  0 O 3dx2-y2    0.00000
pop of  1 H 1s        0.70022
pop of  1 H 2s        0.01165
pop of  1 H 3s        0.00589
pop of  1 H 2px       0.00245
pop of  1 H 2py       0.00245
pop of  1 H 2pz       0.00106
 ** Mulliken atomic charges  **
charge of  0O =     -1.27626
charge of  1H =      0.27626
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.48296
#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.88/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.88)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
#outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
#outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab24.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 16:05:21 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        10.24

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.88/tmp9t7seyuk
max_memory 4000 MB (current use 300 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.88/tmp9t7seyuk
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 300 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.103471385330162  LUMO = 0.890626917370007
Initial guess E= -75.3781574758977  |g|= 9.08796e-08
macro= 0  E= -75.3781574758977  delta_E= 0  |g|= 9.08796e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3781574758977  |g|= 9.08796e-08  total 2 KF 4 JK
converged SCF energy = -75.3781574758977
u+d contributions  -0.002702890071540259
uu+dd contributions  -0.033499427737441155
ud contributions  -0.11011869462790558
NEVPT2 time: 0.05 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.68 s
qse operators prepared for d 	 time: 0.74 s
qse operators prepared for uu 	 time: 3.57 s
qse operators prepared for dd 	 time: 3.65 s
qse operators prepared for ud 	 time: 26.81 s
In the tapering subroutine, i=0, E(i)=-74.780432, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.114480, i_min=0
In the tapering subroutine, i=2, E(i)=-75.274686, i_min=1
In the tapering subroutine, i=3, E(i)=-74.880089, i_min=2
In the tapering subroutine, i=4, E(i)=-75.274686, i_min=2
In the tapering subroutine, i=5, E(i)=-74.880089, i_min=2
In the tapering subroutine, i=6, E(i)=-74.566257, i_min=2
In the tapering subroutine, i=7, E(i)=-74.749149, i_min=2
In the tapering subroutine, i=8, E(i)=-75.114480, i_min=2
In the tapering subroutine, i=9, E(i)=-75.378157, i_min=2
In the tapering subroutine, i=10, E(i)=-74.904985, i_min=9
In the tapering subroutine, i=11, E(i)=-75.274686, i_min=9
In the tapering subroutine, i=12, E(i)=-74.904985, i_min=9
In the tapering subroutine, i=13, E(i)=-75.274686, i_min=9
In the tapering subroutine, i=14, E(i)=-74.749149, i_min=9
In the tapering subroutine, i=15, E(i)=-74.597924, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.77 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.56 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.55 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.56 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.57 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.19 s
Taper time: 205.73 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 3.65 s
u+d contributions  -0.00270282856716168
uu+dd contributions  -0.03349933760451271
ud contributions  -0.11011853447459001
NEVPT2 time: 5.16 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 29.18 s
u+d contributions  -0.0027014104789317697
uu+dd contributions  -0.03349792561110476
ud contributions  -0.11011699954513436
NEVPT2 time: 1.71 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 0.06 s
u+d contributions  -0.0027014104789317697
uu+dd contributions  -0.03349792561110476
ud contributions  -0.11011699954513436
NEVPT2 time: 1.98 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.74 s
qse operators prepared for d 	 time: 0.66 s
qse operators prepared for uu 	 time: 3.58 s
qse operators prepared for dd 	 time: 3.51 s
qse operators prepared for ud 	 time: 26.39 s
In the tapering subroutine, i=0, E(i)=-74.780432, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.114480, i_min=0
In the tapering subroutine, i=2, E(i)=-75.274686, i_min=1
In the tapering subroutine, i=3, E(i)=-74.880089, i_min=2
In the tapering subroutine, i=4, E(i)=-75.274686, i_min=2
In the tapering subroutine, i=5, E(i)=-74.880089, i_min=2
In the tapering subroutine, i=6, E(i)=-74.566257, i_min=2
In the tapering subroutine, i=7, E(i)=-74.749149, i_min=2
In the tapering subroutine, i=8, E(i)=-75.114480, i_min=2
In the tapering subroutine, i=9, E(i)=-75.378157, i_min=2
In the tapering subroutine, i=10, E(i)=-74.904985, i_min=9
In the tapering subroutine, i=11, E(i)=-75.274686, i_min=9
In the tapering subroutine, i=12, E(i)=-74.904985, i_min=9
In the tapering subroutine, i=13, E(i)=-75.274686, i_min=9
In the tapering subroutine, i=14, E(i)=-74.749149, i_min=9
In the tapering subroutine, i=15, E(i)=-74.597924, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.76 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.55 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.56 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.55 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.56 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.17 s
Taper time: 202.10 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 800.44 s
attention: IMAG (0.06199999999999996-0.0076249999999999955j)
attention: IMAG (-4.768834559435926-0.2019015444797805j)
attention: IMAG (-0.03649999999999998-0.0016874999999999985j)
attention: IMAG (2.4014567832854223-0.2536000485701057j)
attention: IMAG (-0.06506249999999995+0.0006874999999999995j)
attention: IMAG (-0.06646874999999997-0.0008749999999999994j)
attention: IMAG (5.060905860617912-0.13660576869189014j)
attention: IMAG (4.237907634282554-0.1312187837763762j)
attention: IMAG (0.028687499999999984-0.002812499999999998j)
attention: IMAG (0.027937499999999983-0.001937499999999999j)
attention: IMAG (-2.3355661827405165+0.07274668862331679j)
attention: IMAG (-2.325920901790088-0.5228921099861729j)
attention: IMAG (-0.03387499999999998+0.000718749999999999j)
attention: IMAG (0.006937499999999996+0.0007812499999999995j)
attention: IMAG (0.0004687500000000001+0.0013749999999999993j)
attention: IMAG (0.06368749999999997+0.0006874999999999991j)
attention: IMAG (-0.04412499999999997+0.0009062499999999997j)
attention: IMAG (0.06596874999999996+0.005999999999999996j)
attention: IMAG (0.06815624999999996-0.004312499999999998j)
attention: IMAG (0.0013750000000000004+0.003531249999999998j)
attention: IMAG (0.0016562499999999987-0.0021562499999999984j)
attention: IMAG (-0.0036249999999999963+0.0029687499999999983j)
attention: IMAG (-0.0016249999999999997+0.0009062499999999994j)
attention: IMAG (-0.029562499999999978+0.002968749999999998j)
attention: IMAG (0.00037499999999999947-0.007374999999999995j)
attention: IMAG (0.0019062499999999987+0.006343749999999995j)
attention: IMAG (0.003249999999999998+0.0012812499999999992j)
attention: IMAG (-0.029468749999999985+0.006312499999999995j)
attention: IMAG (0.006531249999999995-0.001343749999999999j)
attention: IMAG (-0.028281249999999983-0.006562499999999995j)
attention: IMAG (-0.0027812499999999964-0.003218749999999998j)
attention: IMAG (1.8914449676837612+0.002924010371255234j)
attention: IMAG (0.11638132533995828-0.24517690797861202j)
attention: IMAG (0.28393952995463323+0.12300301997537649j)
attention: IMAG (-4.515057822012318-0.004440210018760027j)
attention: IMAG (3.1655882736309824+0.14671724632941685j)
attention: IMAG (-4.747905340974821+0.058367277675380996j)
attention: IMAG (-4.396611322812282+0.05273581322824155j)
attention: IMAG (-0.05626177017478052+0.18227121414209718j)
attention: IMAG (0.2529990373646502+0.060289842900052217j)
attention: IMAG (0.2027709140315214-0.13714423278189133j)
attention: IMAG (-0.18620457498636522-0.015239737690324748j)
attention: IMAG (2.096262250707027-0.03724527538152334j)
attention: IMAG (0.24336091330147344+0.23659410189100566j)
attention: IMAG (0.0629058880431223-0.04381037082353027j)
attention: IMAG (-0.19607246404640846-0.2817203188443659j)
attention: IMAG (2.2498835563575073+0.008825922438722501j)
attention: IMAG (-0.06648330581207236-0.13951761545903066j)
attention: IMAG (2.6299174124778077+0.1678416581905232j)
attention: IMAG (0.3388308979613412-0.1409139626962618j)
u+d contributions  -0.000398853389046531
uu+dd contributions  -0.9899181747672571
ud contributions  -1.0328769779200204
NEVPT2 time: 144.74 s
