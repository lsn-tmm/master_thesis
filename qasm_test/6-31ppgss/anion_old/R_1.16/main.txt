#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_1.16/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.16)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab38.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 15:13:58 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.160000000000 AA    0.000000000000   0.000000000000   2.192082304495 Bohr

nuclear repulsion = 3.64949800634483
point group symmetry = Coov
num. orbitals of irrep A1 = 12
num. orbitals of irrep E1x = 5
num. orbitals of irrep E1y = 5
num. orbitals of irrep E2x = 1
num. orbitals of irrep E2y = 1
number of shells = 12
number of NR pGTOs = 39
number of NR cGTOs = 24
basis = 6-31++g**
ecp = {}
CPU time:         5.06
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_1.16/tmp_84akk88
max_memory 4000 MB (current use 279 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_1.16/tmp_84akk88
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 279 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.410435434473808  LUMO (A1) = 0.0217964341505007
Initial guess E= -75.2069054230784  |g|= 0.770796
macro= 0  E= -75.3511512439465  delta_E= -0.144246  |g|= 0.128168  3 KF 9 JK
macro= 1  E= -75.3545528925623  delta_E= -0.00340165  |g|= 0.056598  2 KF 6 JK
macro= 2  E= -75.3546408923751  delta_E= -8.79998e-05  |g|= 0.000539642  2 KF 7 JK
macro= 3  E= -75.3546408923752  delta_E= -8.52651e-14  |g|= 9.40772e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.3546408923752  |g|= 9.40772e-06  total 9 KF 29 JK
converged SCF energy = -75.3546408923752
**** SCF Summaries ****
Total Energy =                         -75.354640892375173
Nuclear Repulsion Energy =               3.649498006344828
One-electron Energy =                 -114.952411142667955
Two-electron Energy =                   35.948272243947955
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    1    0    0
single occ                     0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.2249387536749  | -20.2249387536749  | -20.2249387536749  occ= 2
MO #2   (A1  #2 ) energy= -0.86635615401277  | -0.866356154012772 | -0.866356154012772 occ= 2
MO #3   (A1  #3 ) energy= -0.20720006950019  | -0.20720006950019  | -0.20720006950019  occ= 2
MO #4   (E1x #1 ) energy= -0.114719175099084 | -0.114719175099084 | -0.114719175099084 occ= 2
MO #5   (E1y #1 ) energy= -0.114719175099082 | -0.114719175099082 | -0.114719175099082 occ= 2
MO #6   (A1  #4 ) energy= 0.222943446846706  | 0.222943446846705  | 0.222943446846705  occ= 0
MO #7   (A1  #5 ) energy= 0.481591701635154  | 0.481591701635154  | 0.481591701635154  occ= 0
MO #8   (E1x #2 ) energy= 0.499510912602283  | 0.499510912602284  | 0.499510912602284  occ= 0
MO #9   (E1y #2 ) energy= 0.499510912602284  | 0.499510912602284  | 0.499510912602284  occ= 0
MO #10  (A1  #6 ) energy= 0.542473802401615  | 0.542473802401615  | 0.542473802401615  occ= 0
MO #11  (A1  #7 ) energy= 0.59604395928086   | 0.59604395928086   | 0.59604395928086   occ= 0
MO #12  (A1  #8 ) energy= 1.42792230656895   | 1.42792230656895   | 1.42792230656895   occ= 0
MO #13  (E1x #3 ) energy= 1.75150472348986   | 1.75150472348985   | 1.75150472348985   occ= 0
MO #14  (E1y #3 ) energy= 1.75150472348984   | 1.75150472348984   | 1.75150472348984   occ= 0
MO #15  (A1  #9 ) energy= 1.81713016497544   | 1.81713016497545   | 1.81713016497545   occ= 0
MO #16  (A1  #10) energy= 2.16185304516745   | 2.16185304516746   | 2.16185304516746   occ= 0
MO #17  (E1x #4 ) energy= 2.21735013726098   | 2.21735013726098   | 2.21735013726098   occ= 0
MO #18  (E1y #4 ) energy= 2.21735013726098   | 2.21735013726098   | 2.21735013726098   occ= 0
MO #19  (E2x #1 ) energy= 2.47484216896919   | 2.47484216896919   | 2.47484216896919   occ= 0
MO #20  (E2y #1 ) energy= 2.47484216896919   | 2.47484216896919   | 2.47484216896919   occ= 0
MO #21  (A1  #11) energy= 2.72116644497875   | 2.72116644497875   | 2.72116644497875   occ= 0
MO #22  (E1x #5 ) energy= 3.08712312219587   | 3.08712312219587   | 3.08712312219587   occ= 0
MO #23  (E1y #5 ) energy= 3.08712312219587   | 3.08712312219588   | 3.08712312219588   occ= 0
MO #24  (A1  #12) energy= 3.96822035847198   | 3.96822035847198   | 3.96822035847198   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.88378
pop of  0 O 3s        0.01329
pop of  0 O 4s        0.00112
pop of  0 O 2px       1.95552
pop of  0 O 2py       1.95552
pop of  0 O 2pz       1.23499
pop of  0 O 3px       0.04199
pop of  0 O 3py       0.04199
pop of  0 O 3pz       0.00410
pop of  0 O 4px       0.00065
pop of  0 O 4py       0.00065
pop of  0 O 4pz       0.00029
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00050
pop of  0 O 3dz^2     0.00202
pop of  0 O 3dxz      0.00050
pop of  0 O 3dx2-y2    0.00000
pop of  1 H 1s        0.85805
pop of  1 H 2s        0.00032
pop of  1 H 3s        0.00083
pop of  1 H 2px       0.00134
pop of  1 H 2py       0.00134
pop of  1 H 2pz       0.00122
 ** Mulliken atomic charges  **
charge of  0O =     -1.13689
charge of  1H =      0.13689
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  0.77858
#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_1.16/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.16)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab38.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 15:13:59 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        10.36

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_1.16/tmptm6vlfx6
max_memory 4000 MB (current use 300 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_1.16/tmptm6vlfx6
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 300 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.11471917509908  LUMO = 0.649258369943236
Initial guess E= -75.3546408923793  |g|= 7.84002e-07
macro= 0  E= -75.3546408923795  delta_E= -2.13163e-13  |g|= 7.84002e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3546408923795  |g|= 7.84002e-07  total 2 KF 4 JK
converged SCF energy = -75.3546408923795
u+d contributions  -0.003482239758386578
uu+dd contributions  -0.030005009699123612
ud contributions  -0.09749417614022626
NEVPT2 time: 0.05 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.68 s
qse operators prepared for d 	 time: 0.74 s
qse operators prepared for uu 	 time: 3.60 s
qse operators prepared for dd 	 time: 3.67 s
qse operators prepared for ud 	 time: 26.94 s
In the tapering subroutine, i=0, E(i)=-75.056401, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.147441, i_min=0
In the tapering subroutine, i=2, E(i)=-75.239922, i_min=1
In the tapering subroutine, i=3, E(i)=-75.093098, i_min=2
In the tapering subroutine, i=4, E(i)=-75.239922, i_min=2
In the tapering subroutine, i=5, E(i)=-75.093098, i_min=2
In the tapering subroutine, i=6, E(i)=-74.694048, i_min=2
In the tapering subroutine, i=7, E(i)=-74.944450, i_min=2
In the tapering subroutine, i=8, E(i)=-75.147441, i_min=2
In the tapering subroutine, i=9, E(i)=-75.354641, i_min=2
In the tapering subroutine, i=10, E(i)=-75.116525, i_min=9
In the tapering subroutine, i=11, E(i)=-75.239922, i_min=9
In the tapering subroutine, i=12, E(i)=-75.116525, i_min=9
In the tapering subroutine, i=13, E(i)=-75.239922, i_min=9
In the tapering subroutine, i=14, E(i)=-74.944450, i_min=9
In the tapering subroutine, i=15, E(i)=-74.661558, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.78 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.56 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.57 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.57 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.57 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.28 s
Taper time: 217.84 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 1.72 s
u+d contributions  -0.0034823103955974517
uu+dd contributions  -0.030005088157828937
ud contributions  -0.09749428097967096
NEVPT2 time: 4.58 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 23.94 s
u+d contributions  -0.003483226581802055
uu+dd contributions  -0.030006044146470543
ud contributions  -0.09749563491379143
NEVPT2 time: 1.70 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 0.06 s
u+d contributions  -0.003483226581802055
uu+dd contributions  -0.030006044146470543
ud contributions  -0.09749563491379143
NEVPT2 time: 1.98 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.67 s
qse operators prepared for d 	 time: 0.67 s
qse operators prepared for uu 	 time: 3.64 s
qse operators prepared for dd 	 time: 3.66 s
qse operators prepared for ud 	 time: 26.79 s
In the tapering subroutine, i=0, E(i)=-75.056401, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.147441, i_min=0
In the tapering subroutine, i=2, E(i)=-75.239922, i_min=1
In the tapering subroutine, i=3, E(i)=-75.093098, i_min=2
In the tapering subroutine, i=4, E(i)=-75.239922, i_min=2
In the tapering subroutine, i=5, E(i)=-75.093098, i_min=2
In the tapering subroutine, i=6, E(i)=-74.694048, i_min=2
In the tapering subroutine, i=7, E(i)=-74.944450, i_min=2
In the tapering subroutine, i=8, E(i)=-75.147441, i_min=2
In the tapering subroutine, i=9, E(i)=-75.354641, i_min=2
In the tapering subroutine, i=10, E(i)=-75.116525, i_min=9
In the tapering subroutine, i=11, E(i)=-75.239922, i_min=9
In the tapering subroutine, i=12, E(i)=-75.116525, i_min=9
In the tapering subroutine, i=13, E(i)=-75.239922, i_min=9
In the tapering subroutine, i=14, E(i)=-74.944450, i_min=9
In the tapering subroutine, i=15, E(i)=-74.661558, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.77 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.56 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.56 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.57 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.57 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.20 s
Taper time: 206.08 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 789.54 s
attention: IMAG (0.02462499999999998+0.007874999999999997j)
attention: IMAG (-2.3779975644397497-0.34263780873445066j)
attention: IMAG (-0.045812499999999964-0.001124999999999999j)
attention: IMAG (3.2552192323849547-0.21208720307243434j)
attention: IMAG (-0.03471874999999998-0.004156249999999997j)
attention: IMAG (-0.031031249999999982+0.0036562499999999976j)
attention: IMAG (2.2800112139982276-0.09373351992268568j)
attention: IMAG (2.0200092131125245+0.04208591228666945j)
attention: IMAG (0.037406249999999974+0.0031249999999999984j)
attention: IMAG (0.04090624999999998-0.0016562499999999989j)
attention: IMAG (-3.256102657436854-0.09100520260475273j)
attention: IMAG (-3.052704488296294-0.021824971657876436j)
attention: IMAG (-0.03706249999999997-0.00046875j)
attention: IMAG (0.002937499999999998-0.0024687499999999987j)
attention: IMAG (-0.0033749999999999974-0.0021249999999999984j)
attention: IMAG (0.026906249999999982-0.005999999999999997j)
attention: IMAG (-0.08174999999999995+0.0038749999999999974j)
attention: IMAG (0.03168749999999998+0.0026249999999999984j)
attention: IMAG (0.032156249999999977+0.0013749999999999986j)
attention: IMAG (-0.0004687499999999987+0.0006562499999999996j)
attention: IMAG (-0.003656249999999998-0.0066874999999999955j)
attention: IMAG (-0.0028749999999999956+0.004937499999999997j)
attention: IMAG (0.008593749999999995+0.0008437499999999992j)
attention: IMAG (-0.04037499999999998-0.00034374999999999955j)
attention: IMAG (0.0001250000000000001-0.0033749999999999974j)
attention: IMAG (-0.0036562499999999963+0.001937499999999999j)
attention: IMAG (-0.021906249999999985+0.004281249999999997j)
attention: IMAG (-0.04290624999999998-0.0009062499999999995j)
attention: IMAG (0.0029999999999999957-0.004031249999999997j)
attention: IMAG (0.021874999999999988-0.001499999999999999j)
attention: IMAG (-0.0029062499999999974-0.0007812499999999996j)
attention: IMAG (2.6986312954405443-0.18280825146452176j)
attention: IMAG (0.2194789885008-0.3856783399241499j)
attention: IMAG (0.2624008022538348-0.15282235735742147j)
attention: IMAG (-2.5678090015807347+0.0477918983448779j)
attention: IMAG (5.9071786695526365+0.2701008274530366j)
attention: IMAG (-2.708814513851014+0.10899311732687206j)
attention: IMAG (-2.397715778658476-0.052991665257586425j)
attention: IMAG (-0.13120345936084613-0.26970091071926683j)
attention: IMAG (0.0257708659110083+0.018013485494353675j)
attention: IMAG (0.06536449127389145-0.054731466945110135j)
attention: IMAG (-0.17128345413331397-0.06826194852858267j)
attention: IMAG (3.1303560592477173-0.25741251187813724j)
attention: IMAG (-4.62826695157109e-05+0.00011546053315440457j)
attention: IMAG (0.46188484887525577-0.002813979749733347j)
attention: IMAG (0.16651214650107135-0.02471870812716079j)
attention: IMAG (1.528437786231099-0.009994225873408516j)
attention: IMAG (2.9004441035956603-0.43246340653835547j)
attention: IMAG (0.0656315334545067+0.10557510015994262j)
attention: IMAG (-1.8929447882946175+0.12750251350052122j)
attention: IMAG (-0.1674935725630696-0.37238905290687313j)
u+d contributions  -0.0010236782535480513
uu+dd contributions  -0.0371483419234354
ud contributions  -0.10951861264626407
NEVPT2 time: 140.75 s
