#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.86/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.86)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab23.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 15:10:17 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.860000000000 AA    0.000000000000   0.000000000000   1.625164467126 Bohr

nuclear repulsion = 4.92257870623256
point group symmetry = Coov
num. orbitals of irrep A1 = 12
num. orbitals of irrep E1x = 5
num. orbitals of irrep E1y = 5
num. orbitals of irrep E2x = 1
num. orbitals of irrep E2y = 1
number of shells = 12
number of NR pGTOs = 39
number of NR cGTOs = 24
basis = 6-31++g**
ecp = {}
CPU time:         4.70
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.86/tmps4n9tjrx
max_memory 4000 MB (current use 278 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.86/tmps4n9tjrx
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 278 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.447950082659166  LUMO (A1) = 0.0433472620884383
Initial guess E= -75.2509178834159  |g|= 0.742116
macro= 0  E= -75.3693566201513  delta_E= -0.118439  |g|= 0.148227  3 KF 10 JK
macro= 1  E= -75.3737533327615  delta_E= -0.00439671  |g|= 0.00965904  3 KF 9 JK
macro= 2  E= -75.3737540670089  delta_E= -7.34247e-07  |g|= 0.000104692  2 KF 7 JK
macro= 3  E= -75.3737540670089  delta_E= 0  |g|= 1.25857e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.3737540670089  |g|= 1.25857e-06  total 10 KF 33 JK
converged SCF energy = -75.3737540670089
**** SCF Summaries ****
Total Energy =                         -75.373754067008903
Nuclear Repulsion Energy =               4.922578706232559
One-electron Energy =                 -117.424038989213713
Two-electron Energy =                   37.127706215972253
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    1    0    0
single occ                     0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.1763336584751  | -20.1763336584751  | -20.1763336584751  occ= 2
MO #2   (A1  #2 ) energy= -0.933738107635543 | -0.933738107635544 | -0.933738107635544 occ= 2
MO #3   (A1  #3 ) energy= -0.267533097098242 | -0.267533097098242 | -0.267533097098242 occ= 2
MO #4   (E1x #1 ) energy= -0.103354207712857 | -0.103354207712857 | -0.103354207712857 occ= 2
MO #5   (E1y #1 ) energy= -0.103354207712857 | -0.103354207712857 | -0.103354207712857 occ= 2
MO #6   (A1  #4 ) energy= 0.222347425887332  | 0.222347425887333  | 0.222347425887333  occ= 0
MO #7   (A1  #5 ) energy= 0.478259841335654  | 0.478259841335654  | 0.478259841335654  occ= 0
MO #8   (E1x #2 ) energy= 0.50336159441823   | 0.50336159441823   | 0.50336159441823   occ= 0
MO #9   (E1y #2 ) energy= 0.503361594418233  | 0.503361594418233  | 0.503361594418233  occ= 0
MO #10  (A1  #6 ) energy= 0.557534039931835  | 0.557534039931837  | 0.557534039931837  occ= 0
MO #11  (A1  #7 ) energy= 0.69785308297508   | 0.697853082975082  | 0.697853082975082  occ= 0
MO #12  (A1  #8 ) energy= 1.67726748703569   | 1.67726748703569   | 1.67726748703569   occ= 0
MO #13  (A1  #9 ) energy= 1.72158396069117   | 1.72158396069117   | 1.72158396069117   occ= 0
MO #14  (E1x #3 ) energy= 1.77107839625106   | 1.77107839625106   | 1.77107839625106   occ= 0
MO #15  (E1y #3 ) energy= 1.77107839625106   | 1.77107839625106   | 1.77107839625106   occ= 0
MO #16  (A1  #10) energy= 2.13732290882708   | 2.13732290882708   | 2.13732290882708   occ= 0
MO #17  (E1x #4 ) energy= 2.24528372384873   | 2.24528372384873   | 2.24528372384873   occ= 0
MO #18  (E1y #4 ) energy= 2.24528372384873   | 2.24528372384873   | 2.24528372384873   occ= 0
MO #19  (E2x #1 ) energy= 2.47994103689149   | 2.47994103689149   | 2.47994103689149   occ= 0
MO #20  (E2y #1 ) energy= 2.47994103689149   | 2.47994103689149   | 2.47994103689149   occ= 0
MO #21  (A1  #11) energy= 3.31885447385236   | 3.31885447385236   | 3.31885447385236   occ= 0
MO #22  (E1x #5 ) energy= 3.46917730528278   | 3.46917730528278   | 3.46917730528278   occ= 0
MO #23  (E1y #5 ) energy= 3.46917730528279   | 3.46917730528279   | 3.46917730528279   occ= 0
MO #24  (A1  #12) energy= 4.49066119947338   | 4.49066119947338   | 4.49066119947338   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.74699
pop of  0 O 3s        0.02060
pop of  0 O 4s        0.00283
pop of  0 O 2px       1.94476
pop of  0 O 2py       1.94476
pop of  0 O 2pz       1.50782
pop of  0 O 3px       0.05064
pop of  0 O 3py       0.05064
pop of  0 O 3pz       0.00299
pop of  0 O 4px       0.00076
pop of  0 O 4py       0.00076
pop of  0 O 4pz       0.00010
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00135
pop of  0 O 3dz^2     0.00727
pop of  0 O 3dxz      0.00135
pop of  0 O 3dx2-y2    0.00000
pop of  1 H 1s        0.69079
pop of  1 H 2s        0.01298
pop of  1 H 3s        0.00663
pop of  1 H 2px       0.00249
pop of  1 H 2py       0.00249
pop of  1 H 2pz       0.00101
 ** Mulliken atomic charges  **
charge of  0O =     -1.28363
charge of  1H =      0.28363
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.50608
#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.86/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.86)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab23.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 15:10:17 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:         9.94

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.86/tmpd9rcd_s_
max_memory 4000 MB (current use 301 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.86/tmpd9rcd_s_
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 301 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.103354207712853  LUMO = 0.911204674685779
Initial guess E= -75.373754067009  |g|= 7.33534e-08
macro= 0  E= -75.373754067009  delta_E= 1.42109e-14  |g|= 7.33534e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.373754067009  |g|= 7.33534e-08  total 2 KF 4 JK
converged SCF energy = -75.373754067009
u+d contributions  -0.0025243470679561903
uu+dd contributions  -0.03358589314079567
ud contributions  -0.11081171207143939
NEVPT2 time: 0.05 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.67 s
qse operators prepared for d 	 time: 0.73 s
qse operators prepared for uu 	 time: 3.55 s
qse operators prepared for dd 	 time: 3.62 s
qse operators prepared for ud 	 time: 26.68 s
In the tapering subroutine, i=0, E(i)=-74.749706, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.106221, i_min=0
In the tapering subroutine, i=2, E(i)=-75.270400, i_min=1
In the tapering subroutine, i=3, E(i)=-74.854879, i_min=2
In the tapering subroutine, i=4, E(i)=-75.270400, i_min=2
In the tapering subroutine, i=5, E(i)=-74.854879, i_min=2
In the tapering subroutine, i=6, E(i)=-74.562245, i_min=2
In the tapering subroutine, i=7, E(i)=-74.724267, i_min=2
In the tapering subroutine, i=8, E(i)=-75.106221, i_min=2
In the tapering subroutine, i=9, E(i)=-75.373754, i_min=2
In the tapering subroutine, i=10, E(i)=-74.879984, i_min=9
In the tapering subroutine, i=11, E(i)=-75.270400, i_min=9
In the tapering subroutine, i=12, E(i)=-74.879984, i_min=9
In the tapering subroutine, i=13, E(i)=-75.270400, i_min=9
In the tapering subroutine, i=14, E(i)=-74.724267, i_min=9
In the tapering subroutine, i=15, E(i)=-74.593895, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.79 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.56 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.56 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.57 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.56 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.20 s
Taper time: 206.14 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 1.44 s
u+d contributions  -0.002524429923490094
uu+dd contributions  -0.033585935299942624
ud contributions  -0.11081168263579812
NEVPT2 time: 4.66 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 12.83 s
u+d contributions  -0.0026953239448709717
uu+dd contributions  -0.03375845721693228
ud contributions  -0.11102280894123624
NEVPT2 time: 1.70 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 0.06 s
u+d contributions  -0.0026953239448709717
uu+dd contributions  -0.03375845721693228
ud contributions  -0.11102280894123624
NEVPT2 time: 1.71 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.67 s
qse operators prepared for d 	 time: 0.66 s
qse operators prepared for uu 	 time: 3.58 s
qse operators prepared for dd 	 time: 3.60 s
qse operators prepared for ud 	 time: 26.38 s
In the tapering subroutine, i=0, E(i)=-74.749706, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.106221, i_min=0
In the tapering subroutine, i=2, E(i)=-75.270400, i_min=1
In the tapering subroutine, i=3, E(i)=-74.854879, i_min=2
In the tapering subroutine, i=4, E(i)=-75.270400, i_min=2
In the tapering subroutine, i=5, E(i)=-74.854879, i_min=2
In the tapering subroutine, i=6, E(i)=-74.562245, i_min=2
In the tapering subroutine, i=7, E(i)=-74.724267, i_min=2
In the tapering subroutine, i=8, E(i)=-75.106221, i_min=2
In the tapering subroutine, i=9, E(i)=-75.373754, i_min=2
In the tapering subroutine, i=10, E(i)=-74.879984, i_min=9
In the tapering subroutine, i=11, E(i)=-75.270400, i_min=9
In the tapering subroutine, i=12, E(i)=-74.879984, i_min=9
In the tapering subroutine, i=13, E(i)=-75.270400, i_min=9
In the tapering subroutine, i=14, E(i)=-74.724267, i_min=9
In the tapering subroutine, i=15, E(i)=-74.593895, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.76 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.55 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.55 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.56 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.55 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.28 s
Taper time: 217.22 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 775.76 s
attention: IMAG (-0.005124999999999998+0.002687499999999998j)
attention: IMAG (0.3078846329971222+0.3040176426220192j)
attention: IMAG (0.010499999999999994+0.0019374999999999987j)
attention: IMAG (-0.7895427381489595-0.1689921861169017j)
attention: IMAG (-0.0015624999999999986+0.00046874999999999977j)
attention: IMAG (0.005531249999999996+0.0009999999999999996j)
attention: IMAG (-0.1061800250942675-0.17205902035460627j)
attention: IMAG (-0.22582629487228076+0.2789449367046144j)
attention: IMAG (-0.006406249999999995-0.0015937499999999992j)
attention: IMAG (-0.006874999999999996-0.0006562499999999997j)
attention: IMAG (0.39988916696271115-0.3179752511419428j)
attention: IMAG (0.5230555510197928+0.1402117794093826j)
attention: IMAG (0.005593749999999996-0.00043749999999999995j)
attention: IMAG (-0.002843749999999998-0.0022812499999999986j)
attention: IMAG (-0.0007499999999999995-0.001374999999999999j)
attention: IMAG (0.002749999999999998+0.0024374999999999983j)
attention: IMAG (-0.024531249999999984+0.002187499999999999j)
attention: IMAG (0.003218749999999998-0.0019062499999999987j)
attention: IMAG (-0.004968749999999997+0.0007499999999999996j)
attention: IMAG (0.004656249999999997-0.0019062499999999989j)
attention: IMAG (0.005437499999999997-0.002624999999999998j)
attention: IMAG (-0.0009062499999999999+0.0057187499999999955j)
attention: IMAG (-0.0004062499999999997-0.003624999999999997j)
attention: IMAG (-9.375000000000008e-05+0.0028437499999999986j)
attention: IMAG (0.0025624999999999984+0.0012499999999999998j)
attention: IMAG (-0.002562499999999998+0.003937499999999997j)
attention: IMAG (0.0012187499999999993-0.0029374999999999983j)
attention: IMAG (0.0009999999999999992+0.002343749999999998j)
attention: IMAG (0.0015624999999999988-0.0011562499999999989j)
attention: IMAG (0.010062499999999992-0.0012499999999999994j)
attention: IMAG (0.0007812499999999994+0.001843749999999999j)
attention: IMAG (-0.5889258497648361+0.3093661991685212j)
attention: IMAG (0.03933065824544232-0.21117867404718046j)
attention: IMAG (0.09995986988493853+0.16385556166932397j)
attention: IMAG (-0.04019394430468857+0.4165594458542355j)
attention: IMAG (1.4674297197658812+0.11362516704672475j)
attention: IMAG (0.23665392566894203+0.005099884941444705j)
attention: IMAG (0.034055758251591184+0.25030146854736857j)
attention: IMAG (-0.20962917459309804+0.13151480150888284j)
attention: IMAG (-0.15619353850471843-0.2696790675904945j)
attention: IMAG (-0.20600331612688363-0.4042326854177395j)
attention: IMAG (-0.19950188671659033-0.02624599534316908j)
attention: IMAG (-0.24076313848133482+0.16781361082646684j)
attention: IMAG (0.05926475780563053-0.45139494002370045j)
attention: IMAG (0.10774464080837544-0.18671933795440546j)
attention: IMAG (-0.22034020533233992-0.0599151189019888j)
attention: IMAG (-0.3139553939377913+0.15693494575019348j)
attention: IMAG (0.09558016731429286-0.014587809927023557j)
attention: IMAG (-0.6400267745639676-0.018702179426328548j)
attention: IMAG (2.4657510897381077e-05-0.00014141958035488537j)
attention: IMAG (-0.14230496636389503+0.11302730277788951j)
u+d contributions  0.0014000314149195977
uu+dd contributions  -0.02616511323778585
ud contributions  -0.08534738111835648
NEVPT2 time: 137.47 s
