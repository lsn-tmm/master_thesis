#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.92/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.92)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab26.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 15:10:58 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.920000000000 AA    0.000000000000   0.000000000000   1.738548034600 Bohr

nuclear repulsion = 4.60154096452174
point group symmetry = Coov
num. orbitals of irrep A1 = 12
num. orbitals of irrep E1x = 5
num. orbitals of irrep E1y = 5
num. orbitals of irrep E2x = 1
num. orbitals of irrep E2y = 1
number of shells = 12
number of NR pGTOs = 39
number of NR cGTOs = 24
basis = 6-31++g**
ecp = {}
CPU time:         4.68
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.92/tmp02mibk1y
max_memory 4000 MB (current use 275 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.92/tmp02mibk1y
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 275 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.437542320068813  LUMO (A1) = 0.0414761030173169
Initial guess E= -75.2588564427781  |g|= 0.741497
macro= 0  E= -75.3824538992888  delta_E= -0.123597  |g|= 0.133925  3 KF 9 JK
macro= 1  E= -75.3830346098346  delta_E= -0.000580711  |g|= 4.64012e-05  3 KF 11 JK
macro= 2  E= -75.3830346098347  delta_E= -1.13687e-13  |g|= 3.03698e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 3  E=-75.3830346098347  |g|= 3.03698e-06  total 8 KF 26 JK
converged SCF energy = -75.3830346098347
**** SCF Summaries ****
Total Energy =                         -75.383034609834681
Nuclear Repulsion Energy =               4.601540964521739
One-electron Energy =                 -116.842756818828576
Two-electron Energy =                   36.858181244472156
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    1    0    0
single occ                     0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.1862903883906  | -20.1862903883906  | -20.1862903883906  occ= 2
MO #2   (A1  #2 ) energy= -0.913193756724418 | -0.913193756724418 | -0.913193756724418 occ= 2
MO #3   (A1  #3 ) energy= -0.255815234771149 | -0.255815234771149 | -0.255815234771149 occ= 2
MO #4   (E1x #1 ) energy= -0.103948892527993 | -0.103948892527993 | -0.103948892527993 occ= 2
MO #5   (E1y #1 ) energy= -0.103948892527992 | -0.103948892527992 | -0.103948892527992 occ= 2
MO #6   (A1  #4 ) energy= 0.222113427722896  | 0.222113427722896  | 0.222113427722896  occ= 0
MO #7   (A1  #5 ) energy= 0.481649789831213  | 0.481649789831211  | 0.481649789831211  occ= 0
MO #8   (E1x #2 ) energy= 0.503202527810593  | 0.503202527810593  | 0.503202527810593  occ= 0
MO #9   (E1y #2 ) energy= 0.503202527810592  | 0.503202527810592  | 0.503202527810592  occ= 0
MO #10  (A1  #6 ) energy= 0.556388552252325  | 0.556388552252325  | 0.556388552252325  occ= 0
MO #11  (A1  #7 ) energy= 0.672895743928402  | 0.672895743928401  | 0.672895743928401  occ= 0
MO #12  (A1  #8 ) energy= 1.60593000325015   | 1.60593000325015   | 1.60593000325015   occ= 0
MO #13  (A1  #9 ) energy= 1.74383432729333   | 1.74383432729333   | 1.74383432729333   occ= 0
MO #14  (E1x #3 ) energy= 1.76936030991075   | 1.76936030991075   | 1.76936030991075   occ= 0
MO #15  (E1y #3 ) energy= 1.76936030991075   | 1.76936030991075   | 1.76936030991075   occ= 0
MO #16  (A1  #10) energy= 2.14067176267912   | 2.14067176267913   | 2.14067176267913   occ= 0
MO #17  (E1x #4 ) energy= 2.22820854988555   | 2.22820854988555   | 2.22820854988555   occ= 0
MO #18  (E1y #4 ) energy= 2.22820854988555   | 2.22820854988555   | 2.22820854988555   occ= 0
MO #19  (E2x #1 ) energy= 2.47996472412254   | 2.47996472412254   | 2.47996472412254   occ= 0
MO #20  (E2y #1 ) energy= 2.47996472412254   | 2.47996472412254   | 2.47996472412254   occ= 0
MO #21  (A1  #11) energy= 3.20871306358438   | 3.20871306358438   | 3.20871306358438   occ= 0
MO #22  (E1x #5 ) energy= 3.38779959422461   | 3.38779959422461   | 3.38779959422461   occ= 0
MO #23  (E1y #5 ) energy= 3.38779959422461   | 3.38779959422461   | 3.38779959422461   occ= 0
MO #24  (A1  #12) energy= 4.29378903416812   | 4.29378903416812   | 4.29378903416812   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.78022
pop of  0 O 3s        0.01932
pop of  0 O 4s        0.00256
pop of  0 O 2px       1.94569
pop of  0 O 2py       1.94569
pop of  0 O 2pz       1.45472
pop of  0 O 3px       0.05003
pop of  0 O 3py       0.05003
pop of  0 O 3pz       0.00276
pop of  0 O 4px       0.00077
pop of  0 O 4py       0.00077
pop of  0 O 4pz       0.00016
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00116
pop of  0 O 3dz^2     0.00554
pop of  0 O 3dxz      0.00116
pop of  0 O 3dx2-y2    0.00000
pop of  1 H 1s        0.71984
pop of  1 H 2s        0.00911
pop of  1 H 3s        0.00459
pop of  1 H 2px       0.00235
pop of  1 H 2py       0.00235
pop of  1 H 2pz       0.00117
 ** Mulliken atomic charges  **
charge of  0O =     -1.26059
charge of  1H =      0.26059
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.42704
#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.92/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.92)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab26.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 15:10:58 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        10.03

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.92/tmp8kotuqb5
max_memory 4000 MB (current use 296 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.92/tmp8kotuqb5
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 296 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.103948892527994  LUMO = 0.850487106828183
Initial guess E= -75.3830346098351  |g|= 1.20494e-07
macro= 0  E= -75.3830346098351  delta_E= 0  |g|= 1.20494e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3830346098351  |g|= 1.20494e-07  total 2 KF 4 JK
converged SCF energy = -75.3830346098351
u+d contributions  -0.0030161070166584785
uu+dd contributions  -0.03325155952146592
ud contributions  -0.10861447881977425
NEVPT2 time: 0.05 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.65 s
qse operators prepared for d 	 time: 0.71 s
qse operators prepared for uu 	 time: 3.42 s
qse operators prepared for dd 	 time: 3.51 s
qse operators prepared for ud 	 time: 25.80 s
In the tapering subroutine, i=0, E(i)=-74.836365, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.127219, i_min=0
In the tapering subroutine, i=2, E(i)=-75.279086, i_min=1
In the tapering subroutine, i=3, E(i)=-74.925259, i_min=2
In the tapering subroutine, i=4, E(i)=-75.279086, i_min=2
In the tapering subroutine, i=5, E(i)=-74.925259, i_min=2
In the tapering subroutine, i=6, E(i)=-74.569597, i_min=2
In the tapering subroutine, i=7, E(i)=-74.793183, i_min=2
In the tapering subroutine, i=8, E(i)=-75.127219, i_min=2
In the tapering subroutine, i=9, E(i)=-75.383035, i_min=2
In the tapering subroutine, i=10, E(i)=-74.949776, i_min=9
In the tapering subroutine, i=11, E(i)=-75.279086, i_min=9
In the tapering subroutine, i=12, E(i)=-74.949776, i_min=9
In the tapering subroutine, i=13, E(i)=-75.279086, i_min=9
In the tapering subroutine, i=14, E(i)=-74.793183, i_min=9
In the tapering subroutine, i=15, E(i)=-74.601317, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.75 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.54 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.54 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.55 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.55 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.16 s
Taper time: 200.38 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 1.77 s
u+d contributions  -0.0030161156138892122
uu+dd contributions  -0.033251580972685324
ud contributions  -0.10861454248852517
NEVPT2 time: 5.10 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 10.07 s
u+d contributions  -0.0030211814060533333
uu+dd contributions  -0.03325692634389798
ud contributions  -0.10862142261931168
NEVPT2 time: 1.74 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 0.06 s
u+d contributions  -0.0030211814060533333
uu+dd contributions  -0.03325692634389798
ud contributions  -0.10862142261931168
NEVPT2 time: 1.99 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.73 s
qse operators prepared for d 	 time: 0.66 s
qse operators prepared for uu 	 time: 3.55 s
qse operators prepared for dd 	 time: 3.50 s
qse operators prepared for ud 	 time: 26.22 s
In the tapering subroutine, i=0, E(i)=-74.836365, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.127219, i_min=0
In the tapering subroutine, i=2, E(i)=-75.279086, i_min=1
In the tapering subroutine, i=3, E(i)=-74.925259, i_min=2
In the tapering subroutine, i=4, E(i)=-75.279086, i_min=2
In the tapering subroutine, i=5, E(i)=-74.925259, i_min=2
In the tapering subroutine, i=6, E(i)=-74.569597, i_min=2
In the tapering subroutine, i=7, E(i)=-74.793183, i_min=2
In the tapering subroutine, i=8, E(i)=-75.127219, i_min=2
In the tapering subroutine, i=9, E(i)=-75.383035, i_min=2
In the tapering subroutine, i=10, E(i)=-74.949776, i_min=9
In the tapering subroutine, i=11, E(i)=-75.279086, i_min=9
In the tapering subroutine, i=12, E(i)=-74.949776, i_min=9
In the tapering subroutine, i=13, E(i)=-75.279086, i_min=9
In the tapering subroutine, i=14, E(i)=-74.793183, i_min=9
In the tapering subroutine, i=15, E(i)=-74.601317, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.76 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.57 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.56 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.04 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.57 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.04 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.58 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.23 s
Taper time: 212.14 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 787.48 s
attention: IMAG (-0.01224999999999999-0.002624999999999998j)
attention: IMAG (1.1086678739808915+0.25750310378052793j)
attention: IMAG (-0.0020624999999999984-0.005062499999999997j)
attention: IMAG (0.08146294768628971+0.20780674707355765j)
attention: IMAG (0.010124999999999992-0.0013124999999999992j)
attention: IMAG (0.011812499999999993-0.002499999999999998j)
attention: IMAG (-0.960596110196867-0.040329859141057106j)
attention: IMAG (-1.1475951394695902-0.2500598031916067j)
attention: IMAG (0.0023124999999999986-0.0017187499999999983j)
attention: IMAG (-0.0011562499999999995+0.0022812499999999986j)
attention: IMAG (-0.40271904940611164+0.019497209499444206j)
attention: IMAG (0.13099322743198993-0.3443188039541067j)
attention: IMAG (-0.0010312499999999987+0.0010624999999999992j)
attention: IMAG (0.004906249999999997-0.002781249999999998j)
attention: IMAG (-0.0018437499999999988-0.004906249999999997j)
attention: IMAG (-0.010999999999999992-0.0040937499999999976j)
attention: IMAG (-0.0008749999999999993-0.0001874999999999993j)
attention: IMAG (-0.004343749999999997-0.0007812499999999994j)
attention: IMAG (-0.011374999999999993+0.001031249999999999j)
attention: IMAG (-0.0012187499999999996-0.0016249999999999993j)
attention: IMAG (-0.002343749999999999+0.0048749999999999965j)
attention: IMAG (0.003062499999999998+0.0022499999999999985j)
attention: IMAG (-0.002374999999999998-0.0015312499999999988j)
attention: IMAG (-0.0006874999999999995+0.005124999999999997j)
attention: IMAG (-0.007499999999999995+0.0019374999999999987j)
attention: IMAG (-0.011874999999999993+0.004437499999999997j)
attention: IMAG (-0.002749999999999998+0.0013437499999999995j)
attention: IMAG (0.0004999999999999997+0.0019062499999999987j)
attention: IMAG (-0.009968749999999995-0.004187499999999997j)
attention: IMAG (-3.125000000000003e-05-0.0010312499999999994j)
attention: IMAG (-0.09368743744050588+0.1163210218247489j)
attention: IMAG (-0.13479667077621918-0.03609691779075263j)
attention: IMAG (-0.21228027077418649-0.022448593149802704j)
attention: IMAG (0.6783504878364686-0.009368295227844938j)
attention: IMAG (0.1591817061023602+0.09763073039400033j)
attention: IMAG (-9.589925296093238e-05-0.00010785976127865893j)
attention: IMAG (0.8024590074196494-0.4428374880550051j)
attention: IMAG (0.6488273035962826+0.03116580195048468j)
attention: IMAG (-0.36716119961832133+0.14702042357498032j)
attention: IMAG (-0.004238225782354315+0.15580383826097605j)
attention: IMAG (0.05105803319862294-0.1699240654366093j)
attention: IMAG (0.04544763484604682-0.366832048753375j)
attention: IMAG (0.22425911507878285+0.23891792824653002j)
attention: IMAG (0.11495366789273818+0.2195606179299498j)
attention: IMAG (0.34994435871338003+0.10257002549581944j)
attention: IMAG (0.9506202603316504-0.27262516390618496j)
attention: IMAG (-0.01345132261834873+0.0590708677655697j)
attention: IMAG (-0.11339789933495559+0.07961736248087391j)
attention: IMAG (-0.15480914323528638+0.160992953391906j)
attention: IMAG (0.09832475612818517-0.26629025065909034j)
u+d contributions  0.0001528122833729706
uu+dd contributions  -0.028093540570073704
ud contributions  -0.07906772224112901
NEVPT2 time: 142.72 s
