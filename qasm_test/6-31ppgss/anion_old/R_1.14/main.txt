#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_1.14/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.14)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab37.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 15:13:58 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.140000000000 AA    0.000000000000   0.000000000000   2.154287782004 Bohr

nuclear repulsion = 3.7135242871579
point group symmetry = Coov
num. orbitals of irrep A1 = 12
num. orbitals of irrep E1x = 5
num. orbitals of irrep E1y = 5
num. orbitals of irrep E2x = 1
num. orbitals of irrep E2y = 1
number of shells = 12
number of NR pGTOs = 39
number of NR cGTOs = 24
basis = 6-31++g**
ecp = {}
CPU time:         4.86
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_1.14/tmpyrhbh13u
max_memory 4000 MB (current use 277 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_1.14/tmpyrhbh13u
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 277 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.41200997124522  LUMO (A1) = 0.0244967735267507
Initial guess E= -75.2141757432492  |g|= 0.766747
macro= 0  E= -75.3520246981983  delta_E= -0.137849  |g|= 0.122427  3 KF 9 JK
macro= 1  E= -75.3588417223742  delta_E= -0.00681702  |g|= 0.0181135  3 KF 9 JK
macro= 2  E= -75.3588457792252  delta_E= -4.05685e-06  |g|= 0.000273044  2 KF 8 JK
macro= 3  E= -75.3588457792252  delta_E= -4.26326e-14  |g|= 3.69726e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.3588457792252  |g|= 3.69726e-06  total 10 KF 33 JK
converged SCF energy = -75.3588457792252
**** SCF Summaries ****
Total Energy =                         -75.358845779225220
Nuclear Repulsion Energy =               3.713524287157895
One-electron Energy =                 -115.089215021075205
Two-electron Energy =                   36.016844954692083
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    1    0    0
single occ                     0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.2216859574767  | -20.2216859574767  | -20.2216859574767  occ= 2
MO #2   (A1  #2 ) energy= -0.868383328006962 | -0.868383328006964 | -0.868383328006964 occ= 2
MO #3   (A1  #3 ) energy= -0.211192040056189 | -0.211192040056189 | -0.211192040056189 occ= 2
MO #4   (E1x #1 ) energy= -0.113250615152867 | -0.113250615152867 | -0.113250615152867 occ= 2
MO #5   (E1y #1 ) energy= -0.113250615152866 | -0.113250615152866 | -0.113250615152866 occ= 2
MO #6   (A1  #4 ) energy= 0.222751791142593  | 0.222751791142593  | 0.222751791142593  occ= 0
MO #7   (A1  #5 ) energy= 0.482664926756057  | 0.482664926756057  | 0.482664926756057  occ= 0
MO #8   (E1x #2 ) energy= 0.500016735162458  | 0.500016735162458  | 0.500016735162458  occ= 0
MO #9   (E1y #2 ) energy= 0.500016735162457  | 0.500016735162457  | 0.500016735162457  occ= 0
MO #10  (A1  #6 ) energy= 0.545062772084825  | 0.545062772084825  | 0.545062772084825  occ= 0
MO #11  (A1  #7 ) energy= 0.599928008253625  | 0.599928008253626  | 0.599928008253626  occ= 0
MO #12  (A1  #8 ) energy= 1.43717871948106   | 1.43717871948106   | 1.43717871948106   occ= 0
MO #13  (E1x #3 ) energy= 1.75330179492085   | 1.75330179492085   | 1.75330179492085   occ= 0
MO #14  (E1y #3 ) energy= 1.75330179492086   | 1.75330179492086   | 1.75330179492086   occ= 0
MO #15  (A1  #9 ) energy= 1.81277475610062   | 1.81277475610062   | 1.81277475610062   occ= 0
MO #16  (A1  #10) energy= 2.1604707621306    | 2.16047076213059   | 2.16047076213059   occ= 0
MO #17  (E1x #4 ) energy= 2.21481331868906   | 2.21481331868906   | 2.21481331868906   occ= 0
MO #18  (E1y #4 ) energy= 2.21481331868906   | 2.21481331868906   | 2.21481331868906   occ= 0
MO #19  (E2x #1 ) energy= 2.47570833205204   | 2.47570833205204   | 2.47570833205204   occ= 0
MO #20  (E2y #1 ) energy= 2.47570833205205   | 2.47570833205205   | 2.47570833205205   occ= 0
MO #21  (A1  #11) energy= 2.76057697548488   | 2.76057697548488   | 2.76057697548488   occ= 0
MO #22  (E1x #5 ) energy= 3.11041226874421   | 3.11041226874421   | 3.11041226874421   occ= 0
MO #23  (E1y #5 ) energy= 3.11041226874421   | 3.1104122687442    | 3.1104122687442    occ= 0
MO #24  (A1  #12) energy= 3.98445435228234   | 3.98445435228234   | 3.98445435228234   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.87694
pop of  0 O 3s        0.01381
pop of  0 O 4s        0.00124
pop of  0 O 2px       1.95442
pop of  0 O 2py       1.95442
pop of  0 O 2pz       1.25374
pop of  0 O 3px       0.04293
pop of  0 O 3py       0.04293
pop of  0 O 3pz       0.00387
pop of  0 O 4px       0.00067
pop of  0 O 4py       0.00067
pop of  0 O 4pz       0.00028
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00055
pop of  0 O 3dz^2     0.00218
pop of  0 O 3dxz      0.00055
pop of  0 O 3dx2-y2    0.00000
pop of  1 H 1s        0.84529
pop of  1 H 2s        0.00048
pop of  1 H 3s        0.00093
pop of  1 H 2px       0.00143
pop of  1 H 2py       0.00143
pop of  1 H 2pz       0.00125
 ** Mulliken atomic charges  **
charge of  0O =     -1.14918
charge of  1H =      0.14918
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  0.85493
#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_1.14/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.14)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab37.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 15:13:59 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        10.40

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_1.14/tmpoiryd_qy
max_memory 4000 MB (current use 299 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_1.14/tmpoiryd_qy
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 299 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.113250615152865  LUMO = 0.663270319219166
Initial guess E= -75.3588457792258  |g|= 7.3474e-08
macro= 0  E= -75.3588457792258  delta_E= -1.42109e-14  |g|= 7.3474e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3588457792258  |g|= 7.3474e-08  total 2 KF 4 JK
converged SCF energy = -75.3588457792258
u+d contributions  -0.003517780805186138
uu+dd contributions  -0.030343704696536956
ud contributions  -0.09846508603356306
NEVPT2 time: 0.05 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.68 s
qse operators prepared for d 	 time: 0.74 s
qse operators prepared for uu 	 time: 3.56 s
qse operators prepared for dd 	 time: 3.62 s
qse operators prepared for ud 	 time: 26.76 s
In the tapering subroutine, i=0, E(i)=-75.043937, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.147654, i_min=0
In the tapering subroutine, i=2, E(i)=-75.245595, i_min=1
In the tapering subroutine, i=3, E(i)=-75.084007, i_min=2
In the tapering subroutine, i=4, E(i)=-75.245595, i_min=2
In the tapering subroutine, i=5, E(i)=-75.084007, i_min=2
In the tapering subroutine, i=6, E(i)=-74.670399, i_min=2
In the tapering subroutine, i=7, E(i)=-74.937233, i_min=2
In the tapering subroutine, i=8, E(i)=-75.147654, i_min=2
In the tapering subroutine, i=9, E(i)=-75.358846, i_min=2
In the tapering subroutine, i=10, E(i)=-75.107444, i_min=9
In the tapering subroutine, i=11, E(i)=-75.245595, i_min=9
In the tapering subroutine, i=12, E(i)=-75.107444, i_min=9
In the tapering subroutine, i=13, E(i)=-75.245595, i_min=9
In the tapering subroutine, i=14, E(i)=-74.937233, i_min=9
In the tapering subroutine, i=15, E(i)=-74.637998, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.78 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.56 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.56 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.04 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.56 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.56 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.24 s
Taper time: 212.22 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 1.50 s
u+d contributions  -0.003517769037514744
uu+dd contributions  -0.030343776060860736
ud contributions  -0.09846532254290691
NEVPT2 time: 5.39 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 22.39 s
u+d contributions  -0.003561473781951253
uu+dd contributions  -0.030390184690136164
ud contributions  -0.09853305225737782
NEVPT2 time: 1.92 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 0.07 s
u+d contributions  -0.003561473781951253
uu+dd contributions  -0.030390184690136164
ud contributions  -0.09853305225737782
NEVPT2 time: 2.25 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.72 s
qse operators prepared for d 	 time: 0.73 s
qse operators prepared for uu 	 time: 3.93 s
qse operators prepared for dd 	 time: 3.66 s
qse operators prepared for ud 	 time: 26.55 s
In the tapering subroutine, i=0, E(i)=-75.043937, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.147654, i_min=0
In the tapering subroutine, i=2, E(i)=-75.245595, i_min=1
In the tapering subroutine, i=3, E(i)=-75.084007, i_min=2
In the tapering subroutine, i=4, E(i)=-75.245595, i_min=2
In the tapering subroutine, i=5, E(i)=-75.084007, i_min=2
In the tapering subroutine, i=6, E(i)=-74.670399, i_min=2
In the tapering subroutine, i=7, E(i)=-74.937233, i_min=2
In the tapering subroutine, i=8, E(i)=-75.147654, i_min=2
In the tapering subroutine, i=9, E(i)=-75.358846, i_min=2
In the tapering subroutine, i=10, E(i)=-75.107444, i_min=9
In the tapering subroutine, i=11, E(i)=-75.245595, i_min=9
In the tapering subroutine, i=12, E(i)=-75.107444, i_min=9
In the tapering subroutine, i=13, E(i)=-75.245595, i_min=9
In the tapering subroutine, i=14, E(i)=-74.937233, i_min=9
In the tapering subroutine, i=15, E(i)=-74.637998, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.77 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.55 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.55 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.56 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.55 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.18 s
Taper time: 204.00 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 792.92 s
attention: IMAG (-0.06731249999999997-0.003812499999999997j)
attention: IMAG (4.17338221667079+0.13598636739948j)
attention: IMAG (0.06606249999999997-0.0014999999999999992j)
attention: IMAG (-4.477045521938194+0.04033695696545938j)
attention: IMAG (0.05871874999999996+0.0036874999999999976j)
attention: IMAG (0.06084374999999996+0.0012812499999999994j)
attention: IMAG (-4.437140871201476-0.6740786926279707j)
attention: IMAG (-3.8821145385577545+0.3855104273914306j)
attention: IMAG (-0.06590624999999996+0.0066562499999999955j)
attention: IMAG (-0.06487499999999996+0.008343749999999994j)
attention: IMAG (5.1179925131255075+0.1791448727140685j)
attention: IMAG (4.548407202948323-0.008470996873850969j)
attention: IMAG (0.06337499999999996-0.001687499999999999j)
attention: IMAG (0.002812499999999998+0.0012499999999999987j)
attention: IMAG (-0.053749999999999964-0.002781249999999998j)
attention: IMAG (-0.011093749999999993-0.0008749999999999995j)
attention: IMAG (-0.05478124999999996-0.003874999999999997j)
attention: IMAG (-0.05459374999999996+0.004874999999999997j)
attention: IMAG (0.0004062499999999998-0.0057812499999999965j)
attention: IMAG (-0.0015937499999999992-0.004624999999999996j)
attention: IMAG (0.003031249999999998+0.0030937499999999975j)
attention: IMAG (0.0010312499999999992-0.0014687499999999991j)
attention: IMAG (0.06484374999999995+0.00043749999999999963j)
attention: IMAG (-0.003937499999999997+0.003374999999999998j)
attention: IMAG (0.0021249999999999984-0.0029999999999999983j)
attention: IMAG (0.0009062499999999993-0.0036874999999999976j)
attention: IMAG (0.06693749999999996-0.0003124999999999997j)
attention: IMAG (-0.0058124999999999965+0.0024687499999999987j)
attention: IMAG (-0.0014999999999999944-0.0025624999999999984j)
attention: IMAG (-4.721845536915698+0.1046322142599661j)
attention: IMAG (-0.06431452774840228-0.14744938242847033j)
attention: IMAG (0.09841170878829791+0.28748861768705036j)
attention: IMAG (4.263453024171153+0.24433664389094947j)
attention: IMAG (1.3149754647827612-0.12696417316878986j)
attention: IMAG (4.151692587185634-0.1587894492389681j)
attention: IMAG (0.0017125659465415887+0.00014043485635034696j)
attention: IMAG (4.434999386484248+0.4944389600657874j)
attention: IMAG (-0.012158633090804977+0.35448978819562416j)
attention: IMAG (0.09517275447160935+0.062272828815034285j)
attention: IMAG (-0.057776090087412496+0.40730594849586826j)
attention: IMAG (0.10505955494236045+0.3490738097385272j)
attention: IMAG (-5.014064388362314+0.2878746242585715j)
attention: IMAG (-0.0017817920147297642-0.0001442843044608856j)
attention: IMAG (0.14865071516552203+0.23929826611217245j)
attention: IMAG (-0.12361884144065274-0.32011325530644424j)
attention: IMAG (-0.06158989603753475+0.10574611879533426j)
attention: IMAG (-4.95048156987431-0.30494406434382487j)
attention: IMAG (-0.20815976786040397-0.33350395015674666j)
attention: IMAG (0.5183914762801297-0.02408754671803654j)
attention: IMAG (0.06069208877398473+0.23301907558804505j)
u+d contributions  0.0002927673934301277
uu+dd contributions  -0.025591097584516845
ud contributions  -0.05480927370113774
NEVPT2 time: 141.35 s
