#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.98/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.98)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab29.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 15:07:38 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.980000000000 AA    0.000000000000   0.000000000000   1.851931602074 Bohr

nuclear repulsion = 4.31981396669388
point group symmetry = Coov
num. orbitals of irrep A1 = 12
num. orbitals of irrep E1x = 5
num. orbitals of irrep E1y = 5
num. orbitals of irrep E2x = 1
num. orbitals of irrep E2y = 1
number of shells = 12
number of NR pGTOs = 39
number of NR cGTOs = 24
basis = 6-31++g**
ecp = {}
CPU time:         4.78
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.98/tmpq0kogsb2
max_memory 4000 MB (current use 268 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.98/tmpq0kogsb2
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 268 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.428827395800757  LUMO (A1) = 0.0386992088501426
Initial guess E= -75.2555195829928  |g|= 0.744473
macro= 0  E= -75.381485948356  delta_E= -0.125966  |g|= 0.125773  3 KF 9 JK
macro= 1  E= -75.3829006184503  delta_E= -0.00141467  |g|= 0.00620687  3 KF 9 JK
macro= 2  E= -75.3829006489529  delta_E= -3.05026e-08  |g|= 1.79442e-05  2 KF 6 JK
macro= 3  E= -75.3829006489529  delta_E= -4.26326e-14  |g|= 5.57951e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.3829006489529  |g|= 5.57951e-06  total 10 KF 31 JK
converged SCF energy = -75.3829006489529
**** SCF Summaries ****
Total Energy =                         -75.382900648952926
Nuclear Repulsion Energy =               4.319813966693878
One-electron Energy =                 -116.311678827324016
Two-electron Energy =                   36.608964211677218
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    1    0    0
single occ                     0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.1960297723105  | -20.1960297723105  | -20.1960297723105  occ= 2
MO #2   (A1  #2 ) energy= -0.896476156123471 | -0.896476156123472 | -0.896476156123472 occ= 2
MO #3   (A1  #3 ) energy= -0.243743712938645 | -0.243743712938644 | -0.243743712938644 occ= 2
MO #4   (E1x #1 ) energy= -0.105312780306107 | -0.105312780306107 | -0.105312780306107 occ= 2
MO #5   (E1y #1 ) energy= -0.105312780306108 | -0.105312780306108 | -0.105312780306108 occ= 2
MO #6   (A1  #4 ) energy= 0.222032322433545  | 0.222032322433546  | 0.222032322433546  occ= 0
MO #7   (A1  #5 ) energy= 0.483912705527306  | 0.483912705527306  | 0.483912705527306  occ= 0
MO #8   (E1x #2 ) energy= 0.502752955557344  | 0.502752955557345  | 0.502752955557345  occ= 0
MO #9   (E1y #2 ) energy= 0.502752955557345  | 0.502752955557345  | 0.502752955557345  occ= 0
MO #10  (A1  #6 ) energy= 0.554942689296085  | 0.554942689296087  | 0.554942689296087  occ= 0
MO #11  (A1  #7 ) energy= 0.649397968232824  | 0.649397968232828  | 0.649397968232828  occ= 0
MO #12  (A1  #8 ) energy= 1.54587557444936   | 1.54587557444936   | 1.54587557444936   occ= 0
MO #13  (A1  #9 ) energy= 1.76592953785164   | 1.76592953785164   | 1.76592953785164   occ= 0
MO #14  (E1x #3 ) energy= 1.76612341572906   | 1.76612341572906   | 1.76612341572906   occ= 0
MO #15  (E1y #3 ) energy= 1.76612341572906   | 1.76612341572906   | 1.76612341572906   occ= 0
MO #16  (A1  #10) energy= 2.1456523072575    | 2.1456523072575    | 2.1456523072575    occ= 0
MO #17  (E1x #4 ) energy= 2.2167358621852    | 2.2167358621852    | 2.2167358621852    occ= 0
MO #18  (E1y #4 ) energy= 2.2167358621852    | 2.2167358621852    | 2.2167358621852    occ= 0
MO #19  (E2x #1 ) energy= 2.47961170115613   | 2.47961170115613   | 2.47961170115613   occ= 0
MO #20  (E2y #1 ) energy= 2.47961170115613   | 2.47961170115613   | 2.47961170115613   occ= 0
MO #21  (A1  #11) energy= 3.09006461069047   | 3.09006461069047   | 3.09006461069047   occ= 0
MO #22  (E1x #5 ) energy= 3.30879875974847   | 3.30879875974847   | 3.30879875974847   occ= 0
MO #23  (E1y #5 ) energy= 3.30879875974846   | 3.30879875974846   | 3.30879875974846   occ= 0
MO #24  (A1  #12) energy= 4.16197390484155   | 4.16197390484155   | 4.16197390484155   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.81056
pop of  0 O 3s        0.01791
pop of  0 O 4s        0.00222
pop of  0 O 2px       1.94732
pop of  0 O 2py       1.94732
pop of  0 O 2pz       1.40092
pop of  0 O 3px       0.04880
pop of  0 O 3py       0.04880
pop of  0 O 3pz       0.00279
pop of  0 O 4px       0.00076
pop of  0 O 4py       0.00076
pop of  0 O 4pz       0.00021
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00098
pop of  0 O 3dz^2     0.00423
pop of  0 O 3dxz      0.00098
pop of  0 O 3dx2-y2    0.00000
pop of  1 H 1s        0.75113
pop of  1 H 2s        0.00573
pop of  1 H 3s        0.00303
pop of  1 H 2px       0.00214
pop of  1 H 2py       0.00214
pop of  1 H 2pz       0.00127
 ** Mulliken atomic charges  **
charge of  0O =     -1.23456
charge of  1H =      0.23456
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.31733
#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.98/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.98)]],basis='6-31++g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s2s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s2s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (I) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("statevector --- VQE(Ry)+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())


#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("statevector --- VQE(Ry) energy (II) %.12f \n" % x['energy'])
outfile.write("statevector --- VQE(Ry) angle %s \n" % str(x['opt_params']))

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'qasm_simulator'
VQE_settings.optimizer = 'spsa'
VQE_settings.shots = 8000
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("qasm, ideal --- VQE+QSE [1s2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("qasm, ideal --- VQE(Ry) energy %.12f \n" % x['energy'])
outfile.write("qasm, ideal --- VQE(Ry) angle %s \n" % str(x['opt_params']))

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab29.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Fri Jan 21 15:07:39 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        10.05

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.98/tmpxwn615h0
max_memory 4000 MB (current use 290 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/qasm_test/6-31ppgss/anion/R_0.98/tmpxwn615h0
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 290 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.105312780306102  LUMO = 0.793451440273638
Initial guess E= -75.3829006489536  |g|= 2.02242e-07
macro= 0  E= -75.3829006489536  delta_E= 1.42109e-14  |g|= 2.02242e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3829006489536  |g|= 2.02242e-07  total 2 KF 4 JK
converged SCF energy = -75.3829006489536
u+d contributions  -0.003357607802014841
uu+dd contributions  -0.03269234609490129
ud contributions  -0.10609527367182497
NEVPT2 time: 0.05 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.67 s
qse operators prepared for d 	 time: 0.74 s
qse operators prepared for uu 	 time: 3.50 s
qse operators prepared for dd 	 time: 3.55 s
qse operators prepared for ud 	 time: 26.19 s
In the tapering subroutine, i=0, E(i)=-74.908109, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.139157, i_min=0
In the tapering subroutine, i=2, E(i)=-75.277588, i_min=1
In the tapering subroutine, i=3, E(i)=-74.981751, i_min=2
In the tapering subroutine, i=4, E(i)=-75.277588, i_min=2
In the tapering subroutine, i=5, E(i)=-74.981751, i_min=4
In the tapering subroutine, i=6, E(i)=-74.565216, i_min=4
In the tapering subroutine, i=7, E(i)=-74.846934, i_min=4
In the tapering subroutine, i=8, E(i)=-75.139157, i_min=4
In the tapering subroutine, i=9, E(i)=-75.382901, i_min=4
In the tapering subroutine, i=10, E(i)=-75.005799, i_min=9
In the tapering subroutine, i=11, E(i)=-75.277588, i_min=9
In the tapering subroutine, i=12, E(i)=-75.005799, i_min=9
In the tapering subroutine, i=13, E(i)=-75.277588, i_min=9
In the tapering subroutine, i=14, E(i)=-74.846934, i_min=9
In the tapering subroutine, i=15, E(i)=-74.597059, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.75 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.54 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.54 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.55 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.55 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.16 s
Taper time: 199.83 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 137.20 s
u+d contributions  -0.0033576191801321727
uu+dd contributions  -0.03269235024833587
ud contributions  -0.10609525674355184
NEVPT2 time: 5.15 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 10.97 s
u+d contributions  -0.003357518192076811
uu+dd contributions  -0.032692289447041986
ud contributions  -0.1060953089210893
NEVPT2 time: 1.66 s
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 0.06 s
u+d contributions  -0.003357518192076811
uu+dd contributions  -0.032692289447041986
ud contributions  -0.1060953089210893
NEVPT2 time: 1.77 s
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for u 	 time: 0.67 s
qse operators prepared for d 	 time: 0.75 s
qse operators prepared for uu 	 time: 3.55 s
qse operators prepared for dd 	 time: 3.64 s
qse operators prepared for ud 	 time: 26.83 s
In the tapering subroutine, i=0, E(i)=-74.908109, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.139157, i_min=0
In the tapering subroutine, i=2, E(i)=-75.277588, i_min=1
In the tapering subroutine, i=3, E(i)=-74.981751, i_min=2
In the tapering subroutine, i=4, E(i)=-75.277588, i_min=2
In the tapering subroutine, i=5, E(i)=-74.981751, i_min=4
In the tapering subroutine, i=6, E(i)=-74.565216, i_min=4
In the tapering subroutine, i=7, E(i)=-74.846934, i_min=4
In the tapering subroutine, i=8, E(i)=-75.139157, i_min=4
In the tapering subroutine, i=9, E(i)=-75.382901, i_min=4
In the tapering subroutine, i=10, E(i)=-75.005799, i_min=9
In the tapering subroutine, i=11, E(i)=-75.277588, i_min=9
In the tapering subroutine, i=12, E(i)=-75.005799, i_min=9
In the tapering subroutine, i=13, E(i)=-75.277588, i_min=9
In the tapering subroutine, i=14, E(i)=-74.846934, i_min=9
In the tapering subroutine, i=15, E(i)=-74.597059, i_min=9

 Total number of operators:  396
after tapering qubits(H) =  4 	 time: 0.77 s
qse operators tapered for qse_s_u 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_u 10 of 10 	 mean: 0.56 s
qse operators tapered for qse_s_d 10 of 10 	 mean: 0.03 s
qse operators tapered for qse_h_d 10 of 10 	 mean: 0.56 s
qse operators tapered for qse_s_uu 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_uu 21 of 21 	 mean: 0.57 s
qse operators tapered for qse_s_dd 21 of 21 	 mean: 0.03 s
qse operators tapered for qse_h_dd 21 of 21 	 mean: 0.56 s
qse operators tapered for qse_s_ud 136 of 136 	 mean: 0.04 s
qse operators tapered for qse_h_ud 136 of 136 	 mean: 1.25 s
Taper time: 212.97 s
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
VQE time: 781.06 s
attention: IMAG (0.09662499999999993-0.008312499999999994j)
attention: IMAG (-6.867211135314727+0.020187368150049727j)
attention: IMAG (-0.07168749999999996+0.00043749999999999974j)
attention: IMAG (5.954659380788696-0.5841197602786055j)
attention: IMAG (-0.09765624999999993+0.0007187499999999996j)
attention: IMAG (-0.09437499999999993+0.001281249999999999j)
attention: IMAG (7.047219801122469+0.38752004348228136j)
attention: IMAG (6.872848387325785-0.12477444303164446j)
attention: IMAG (0.07309374999999996-0.003968749999999997j)
attention: IMAG (0.07540624999999995+0.002062499999999999j)
attention: IMAG (-5.752628623860364-0.33720319985732944j)
attention: IMAG (-5.303690360527313-0.13116404114945573j)
attention: IMAG (-0.07603124999999994-0.0007187499999999993j)
attention: IMAG (0.004249999999999997-0.004937499999999997j)
attention: IMAG (-0.0009062499999999993+0.004718749999999996j)
attention: IMAG (0.09059374999999993-0.00040624999999999966j)
attention: IMAG (0.021531249999999988-0.001624999999999999j)
attention: IMAG (0.09290624999999994-0.0031874999999999976j)
attention: IMAG (0.001562499999999999+0.0004687499999999996j)
attention: IMAG (0.002531249999999998+0.003093749999999998j)
attention: IMAG (-0.0048124999999999965-0.003531249999999998j)
attention: IMAG (-0.0003437500000000003+0.0031874999999999976j)
attention: IMAG (-0.07678124999999994+0.0021874999999999985j)
attention: IMAG (-0.0022499999999999985-0.0040624999999999975j)
attention: IMAG (-0.00018750000000000017-0.0002812499999999998j)
attention: IMAG (-0.001593749999999999+0.0004999999999999996j)
attention: IMAG (-0.07234374999999996+0.0016874999999999987j)
attention: IMAG (-0.0014687499999999987+0.0005937499999999994j)
attention: IMAG (-0.020499999999999987-0.006999999999999996j)
attention: IMAG (-0.0013750000000000012-0.001437499999999999j)
attention: IMAG (5.828352585590132+0.04940483500788102j)
attention: IMAG (-0.08734751883242173-0.07625956196872384j)
attention: IMAG (0.0017103835445208498+0.544872974822367j)
attention: IMAG (-6.903559974880998+0.021636897550298212j)
attention: IMAG (-1.6595143108667838+0.04119481102315417j)
attention: IMAG (-6.912674767965375-0.05684453433092818j)
attention: IMAG (-6.510313917578561+0.5599623875571331j)
attention: IMAG (0.3319168100623837+0.29680772495293845j)
attention: IMAG (-0.34095361446437095+0.37322512293241433j)
attention: IMAG (0.6378506630469344-0.04881683816080499j)
attention: IMAG (0.018746484296109134+0.12371302433270916j)
attention: IMAG (5.635719300362541-0.06428907726755638j)
attention: IMAG (0.0034535466490132898+0.00010217934118597825j)
attention: IMAG (0.13153578333277555-0.09270748443515357j)
attention: IMAG (0.2124759901482448+0.11496846225896966j)
attention: IMAG (-0.23895051037535486+0.020167100741523076j)
attention: IMAG (5.219073024041864-0.3138829288765276j)
attention: IMAG (-0.012962897756452142-0.12269479544308598j)
attention: IMAG (1.4780616878439061+0.27861241104995993j)
attention: IMAG (-0.4403812267890997+0.11774590129931183j)
u+d contributions  -0.0001659020528102568
uu+dd contributions  -0.02544158675719723
ud contributions  -0.12340185915806189
NEVPT2 time: 139.59 s
