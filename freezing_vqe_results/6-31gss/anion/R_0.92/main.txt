#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/6-31gss/anion/R_0.92/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.92)]],basis='6-31g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

x = np.load('PARAMETER_FILE.npy', allow_pickle=True).item()
VQE_settings.initial_point = x['opt_params']

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab46.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Mon Jan 24 23:20:25 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.920000000000 AA    0.000000000000   0.000000000000   1.738548034600 Bohr

nuclear repulsion = 4.60154096452174
point group symmetry = Coov
num. orbitals of irrep A1 = 9
num. orbitals of irrep E1x = 4
num. orbitals of irrep E1y = 4
num. orbitals of irrep E2x = 1
num. orbitals of irrep E2y = 1
number of shells = 9
number of NR pGTOs = 34
number of NR cGTOs = 19
basis = 6-31g**
ecp = {}
CPU time:         4.03
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/6-31gss/anion/R_0.92/tmphf8zp76r
max_memory 4000 MB (current use 270 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/6-31gss/anion/R_0.92/tmphf8zp76r
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 270 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.439489167240108  LUMO (A1) = 0.189067408991006
Initial guess E= -75.2121839815296  |g|= 0.788143
macro= 0  E= -75.3290645263835  delta_E= -0.116881  |g|= 0.046177  3 KF 9 JK
macro= 1  E= -75.32924472133  delta_E= -0.000180195  |g|= 0.00238265  2 KF 8 JK
macro= 2  E= -75.3292447213303  delta_E= -2.27374e-13  |g|= 8.3497e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 3  E=-75.3292447213303  |g|= 8.3497e-06  total 7 KF 23 JK
converged SCF energy = -75.3292447213303
**** SCF Summaries ****
Total Energy =                         -75.329244721330269
Nuclear Repulsion Energy =               4.601540964521739
One-electron Energy =                 -117.570634435612618
Two-electron Energy =                   37.639848749760617
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    1    0    0
single occ                     0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.0757049322211  | -20.0757049322211  | -20.0757049322211  occ= 2
MO #2   (A1  #2 ) energy= -0.830418675483144 | -0.830418675483145 | -0.830418675483145 occ= 2
MO #3   (A1  #3 ) energy= -0.175150434260404 | -0.175150434260404 | -0.175150434260404 occ= 2
MO #4   (E1x #1 ) energy= -0.032097213040525 | -0.032097213040525 | -0.032097213040525 occ= 2
MO #5   (E1y #1 ) energy= -0.0320972130405243 | -0.0320972130405244 | -0.0320972130405244 occ= 2
MO #6   (A1  #4 ) energy= 0.570284918145016  | 0.570284918145016  | 0.570284918145016  occ= 0
MO #7   (A1  #5 ) energy= 1.49131094127224   | 1.49131094127224   | 1.49131094127224   occ= 0
MO #8   (E1x #2 ) energy= 1.59621631460616   | 1.59621631460616   | 1.59621631460616   occ= 0
MO #9   (E1y #2 ) energy= 1.59621631460616   | 1.59621631460616   | 1.59621631460616   occ= 0
MO #10  (A1  #6 ) energy= 1.60281638153119   | 1.60281638153119   | 1.60281638153119   occ= 0
MO #11  (A1  #7 ) energy= 1.93526958217037   | 1.93526958217038   | 1.93526958217038   occ= 0
MO #12  (E1x #3 ) energy= 2.29960662218512   | 2.29960662218512   | 2.29960662218512   occ= 0
MO #13  (E1y #3 ) energy= 2.29960662218513   | 2.29960662218512   | 2.29960662218512   occ= 0
MO #14  (E2x #1 ) energy= 2.55836351010203   | 2.55836351010203   | 2.55836351010203   occ= 0
MO #15  (E2y #1 ) energy= 2.55836351010204   | 2.55836351010204   | 2.55836351010204   occ= 0
MO #16  (A1  #8 ) energy= 3.22732131090408   | 3.22732131090409   | 3.22732131090409   occ= 0
MO #17  (E1x #4 ) energy= 3.44978484140997   | 3.44978484140997   | 3.44978484140997   occ= 0
MO #18  (E1y #4 ) energy= 3.44978484140997   | 3.44978484140997   | 3.44978484140997   occ= 0
MO #19  (A1  #9 ) energy= 4.33464095620297   | 4.33464095620297   | 4.33464095620297   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.78575
pop of  0 O 3s        0.01269
pop of  0 O 2px       1.98048
pop of  0 O 2py       1.98048
pop of  0 O 2pz       1.38315
pop of  0 O 3px       0.01619
pop of  0 O 3py       0.01619
pop of  0 O 3pz       0.00139
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00124
pop of  0 O 3dz^2     0.00445
pop of  0 O 3dxz      0.00124
pop of  0 O 3dx2-y2    0.00000
pop of  1 H 1s        0.80343
pop of  1 H 2s        0.00808
pop of  1 H 2px       0.00209
pop of  1 H 2py       0.00209
pop of  1 H 2pz       0.00107
 ** Mulliken atomic charges  **
charge of  0O =     -1.18324
charge of  1H =      0.18324
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.00767
#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/6-31gss/anion/R_0.92/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.92)]],basis='6-31g**',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

x = np.load('PARAMETER_FILE.npy', allow_pickle=True).item()
VQE_settings.initial_point = x['opt_params']

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab46.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Mon Jan 24 23:20:26 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:         9.56

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/6-31gss/anion/R_0.92/tmpxjnlusp2
max_memory 4000 MB (current use 292 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/6-31gss/anion/R_0.92/tmpxjnlusp2
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 292 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.0320972130405268  LUMO = 0.92695169106778
Initial guess E= -75.3292447213411  |g|= 1.31965e-06
macro= 0  E= -75.3292447213417  delta_E= -5.68434e-13  |g|= 1.31965e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3292447213417  |g|= 1.31965e-06  total 2 KF 4 JK
converged SCF energy = -75.3292447213417
u+d contributions  -0.0020726924193498193
uu+dd contributions  -0.03351949792110793
ud contributions  -0.11953314566462149
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-75.329245, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.154094, i_min=0
In the tapering subroutine, i=2, E(i)=-75.297147, i_min=0
In the tapering subroutine, i=3, E(i)=-74.922317, i_min=0
In the tapering subroutine, i=4, E(i)=-75.297147, i_min=0
In the tapering subroutine, i=5, E(i)=-74.922317, i_min=0
In the tapering subroutine, i=6, E(i)=-74.647472, i_min=0
In the tapering subroutine, i=7, E(i)=-74.824764, i_min=0
In the tapering subroutine, i=8, E(i)=-75.154094, i_min=0
In the tapering subroutine, i=9, E(i)=-74.798679, i_min=0
In the tapering subroutine, i=10, E(i)=-74.895745, i_min=0
In the tapering subroutine, i=11, E(i)=-75.297147, i_min=0
In the tapering subroutine, i=12, E(i)=-74.895745, i_min=0
In the tapering subroutine, i=13, E(i)=-75.297147, i_min=0
In the tapering subroutine, i=14, E(i)=-74.824764, i_min=0
In the tapering subroutine, i=15, E(i)=-74.611794, i_min=0
after tapering qubits(H) =  6
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
     ┌───┐
q_0: ┤ X ├
     └───┘
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     ├───┤
q_3: ┤ X ├
     ├───┤
q_4: ┤ X ├
     └───┘
q_5: ─────
          
u+d contributions  -0.0020727138275489763
uu+dd contributions  -0.03351951799756641
ud contributions  -0.11953318238559597
     ┌───┐
q_0: ┤ X ├
     └───┘
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     ├───┤
q_3: ┤ X ├
     ├───┤
q_4: ┤ X ├
     └───┘
q_5: ─────
          
u+d contributions  -0.0023157537353481732
uu+dd contributions  -0.03378585498904929
ud contributions  -0.11992915428483929
     ┌───┐
q_0: ┤ X ├
     └───┘
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     ├───┤
q_3: ┤ X ├
     ├───┤
q_4: ┤ X ├
     └───┘
q_5: ─────
          
u+d contributions  -0.0023157537353481732
uu+dd contributions  -0.03378585498904929
ud contributions  -0.11992915428483929
