#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/aug-cc-pvdz/anion/R_1.12/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.12)]],basis='aug-cc-pvdz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

x = np.load('PARAMETER_FILE.npy', allow_pickle=True).item()
VQE_settings.initial_point = x['opt_params']

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab56.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Tue Jan 25 09:02:42 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.120000000000 AA    0.000000000000   0.000000000000   2.116493259513 Bohr

nuclear repulsion = 3.77983722085714
point group symmetry = Coov
num. orbitals of irrep A1 = 14
num. orbitals of irrep E1x = 7
num. orbitals of irrep E1y = 7
num. orbitals of irrep E2x = 2
num. orbitals of irrep E2y = 2
number of shells = 13
number of NR pGTOs = 46
number of NR cGTOs = 32
basis = aug-cc-pvdz
ecp = {}
CPU time:         4.09
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/aug-cc-pvdz/anion/R_1.12/tmpacgjbbfz
max_memory 4000 MB (current use 266 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/aug-cc-pvdz/anion/R_1.12/tmpacgjbbfz
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 266 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.414087437627892  LUMO (A1) = 0.0223074725459323
Initial guess E= -75.2305332880392  |g|= 0.768402
macro= 0  E= -75.3702974294266  delta_E= -0.139764  |g|= 0.135417  3 KF 9 JK
macro= 1  E= -75.3748767111498  delta_E= -0.00457928  |g|= 0.0131492  3 KF 9 JK
macro= 2  E= -75.3748780984224  delta_E= -1.38727e-06  |g|= 0.000143377  2 KF 8 JK
macro= 3  E= -75.3748780984224  delta_E= -4.26326e-14  |g|= 2.63481e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.3748780984224  |g|= 2.63481e-06  total 10 KF 33 JK
converged SCF energy = -75.3748780984224
**** SCF Summaries ****
Total Energy =                         -75.374878098422442
Nuclear Repulsion Energy =               3.779837220857142
One-electron Energy =                 -115.219274806014695
Two-electron Energy =                   36.064559486735106
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    1    0    0
single occ                     0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.2218431057049  | -20.2218431057049  | -20.2218431057049  occ= 2
MO #2   (A1  #2 ) energy= -0.875670241662851 | -0.875670241662852 | -0.875670241662852 occ= 2
MO #3   (A1  #3 ) energy= -0.218680425157258 | -0.218680425157258 | -0.218680425157258 occ= 2
MO #4   (E1x #1 ) energy= -0.1144420718736   | -0.1144420718736   | -0.1144420718736   occ= 2
MO #5   (E1y #1 ) energy= -0.1144420718736   | -0.1144420718736   | -0.1144420718736   occ= 2
MO #6   (A1  #4 ) energy= 0.199010093267677  | 0.199010093267676  | 0.199010093267676  occ= 0
MO #7   (A1  #5 ) energy= 0.399906252216625  | 0.399906252216622  | 0.399906252216622  occ= 0
MO #8   (E1x #2 ) energy= 0.433262259957799  | 0.433262259957799  | 0.433262259957799  occ= 0
MO #9   (E1y #2 ) energy= 0.433262259957801  | 0.433262259957801  | 0.433262259957801  occ= 0
MO #10  (A1  #6 ) energy= 0.455825436075368  | 0.455825436075367  | 0.455825436075367  occ= 0
MO #11  (A1  #7 ) energy= 0.558090923849715  | 0.558090923849712  | 0.558090923849712  occ= 0
MO #12  (E1x #3 ) energy= 0.636581198584037  | 0.636581198584037  | 0.636581198584037  occ= 0
MO #13  (E1y #3 ) energy= 0.636581198584034  | 0.636581198584036  | 0.636581198584036  occ= 0
MO #14  (A1  #8 ) energy= 0.883637698908693  | 0.883637698908691  | 0.883637698908691  occ= 0
MO #15  (A1  #9 ) energy= 1.12863144880806   | 1.12863144880806   | 1.12863144880806   occ= 0
MO #16  (E2x #1 ) energy= 1.32313833459874   | 1.32313833459874   | 1.32313833459874   occ= 0
MO #17  (E2y #1 ) energy= 1.32313833459874   | 1.32313833459874   | 1.32313833459874   occ= 0
MO #18  (E1x #4 ) energy= 1.44450021649543   | 1.44450021649543   | 1.44450021649543   occ= 0
MO #19  (E1y #4 ) energy= 1.44450021649543   | 1.44450021649543   | 1.44450021649543   occ= 0
MO #20  (A1  #10) energy= 1.63922959921396   | 1.63922959921396   | 1.63922959921396   occ= 0
MO #21  (E1x #5 ) energy= 1.74757462985202   | 1.74757462985202   | 1.74757462985202   occ= 0
MO #22  (E1y #5 ) energy= 1.74757462985202   | 1.74757462985202   | 1.74757462985202   occ= 0
MO #23  (A1  #11) energy= 1.99591042374644   | 1.99591042374644   | 1.99591042374644   occ= 0
MO #24  (E1x #6 ) energy= 2.29962841348493   | 2.29962841348493   | 2.29962841348493   occ= 0
MO #25  (E1y #6 ) energy= 2.29962841348494   | 2.29962841348494   | 2.29962841348494   occ= 0
MO #26  (A1  #12) energy= 2.58796892713928   | 2.58796892713928   | 2.58796892713928   occ= 0
MO #27  (A1  #13) energy= 3.12704062282332   | 3.1270406228233    | 3.1270406228233    occ= 0
MO #28  (E2x #2 ) energy= 3.95373115608744   | 3.95373115608744   | 3.95373115608744   occ= 0
MO #29  (E2y #2 ) energy= 3.95373115608744   | 3.95373115608744   | 3.95373115608744   occ= 0
MO #30  (E1x #7 ) energy= 4.0340251235638    | 4.0340251235638    | 4.0340251235638    occ= 0
MO #31  (E1y #7 ) energy= 4.0340251235638    | 4.0340251235638    | 4.0340251235638    occ= 0
MO #32  (A1  #14) energy= 4.2875244338455    | 4.2875244338455    | 4.2875244338455    occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.86846
pop of  0 O 3s        0.00897
pop of  0 O 4s        0.00109
pop of  0 O 2px       1.94657
pop of  0 O 2py       1.94657
pop of  0 O 2pz       1.27852
pop of  0 O 3px       0.03814
pop of  0 O 3py       0.03814
pop of  0 O 3pz       0.00436
pop of  0 O 4px       0.00137
pop of  0 O 4py       0.00137
pop of  0 O 4pz       0.00031
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00080
pop of  0 O 3dz^2     0.00161
pop of  0 O 3dxz      0.00080
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00015
pop of  0 O 4dz^2     0.00003
pop of  0 O 4dxz      0.00015
pop of  0 O 4dx2-y2    0.00000
pop of  1 H 1s        0.82760
pop of  1 H 2s        0.00246
pop of  1 H 3s        0.00061
pop of  1 H 2px       0.00929
pop of  1 H 2py       0.00929
pop of  1 H 2pz       0.00124
pop of  1 H 3px       0.00368
pop of  1 H 3py       0.00368
pop of  1 H 3pz       0.00473
 ** Mulliken atomic charges  **
charge of  0O =     -1.13741
charge of  1H =      0.13741
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  0.67120
#INFO: **** input file is /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/aug-cc-pvdz/anion/R_1.12/main.py ****
import numpy as np
import sys
sys.path.append('../../../../nevpt2/src/')
import time
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

start = time.time()

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.12)]],basis='aug-cc-pvdz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
#outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
#outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
#outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
#outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % BO_IAO_external_solver.solve_with_fci()[0])

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
#outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])

x = np.load('PARAMETER_FILE.npy', allow_pickle=True).item()
VQE_settings.initial_point = x['opt_params']

VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])

end = time.time()

outfile.write("Total time execution %.2f s\n" % (end-start))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='lab56.labcalcolo.lab', release='4.18.0-348.7.1.el8_5.x86_64', version='#1 SMP Tue Dec 21 19:02:23 UTC 2021', machine='x86_64', processor='x86_64')  Threads 12
Python 3.8.8 (default, Apr 13 2021, 19:58:26) 
[GCC 7.3.0]
numpy 1.20.1  scipy 1.6.2
Date: Tue Jan 25 09:02:43 2022
PySCF version 2.0.1
PySCF path  /home/studenti/alessandro.tammaro/.local/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        10.12

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/aug-cc-pvdz/anion/R_1.12/tmp4myrj8xb
max_memory 4000 MB (current use 289 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/studenti/alessandro.tammaro/Desktop/freezing_vqe_test/aug-cc-pvdz/anion/R_1.12/tmp4myrj8xb
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 289 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.1144420718736  LUMO = 0.673691889679908
Initial guess E= -75.3748780984226  |g|= 6.12268e-08
macro= 0  E= -75.3748780984226  delta_E= 0  |g|= 6.12268e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3748780984226  |g|= 6.12268e-08  total 2 KF 4 JK
converged SCF energy = -75.3748780984226
u+d contributions  -0.002128284105393888
uu+dd contributions  -0.04042324948173521
ud contributions  -0.14495306895387916
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-75.374878, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.156198, i_min=0
In the tapering subroutine, i=2, E(i)=-75.260436, i_min=0
In the tapering subroutine, i=3, E(i)=-75.109251, i_min=0
In the tapering subroutine, i=4, E(i)=-75.260436, i_min=0
In the tapering subroutine, i=5, E(i)=-75.109251, i_min=0
In the tapering subroutine, i=6, E(i)=-74.626283, i_min=0
In the tapering subroutine, i=7, E(i)=-74.940479, i_min=0
In the tapering subroutine, i=8, E(i)=-75.156198, i_min=0
In the tapering subroutine, i=9, E(i)=-75.043168, i_min=0
In the tapering subroutine, i=10, E(i)=-75.085930, i_min=0
In the tapering subroutine, i=11, E(i)=-75.260436, i_min=0
In the tapering subroutine, i=12, E(i)=-75.085930, i_min=0
In the tapering subroutine, i=13, E(i)=-75.260436, i_min=0
In the tapering subroutine, i=14, E(i)=-74.940479, i_min=0
In the tapering subroutine, i=15, E(i)=-74.658240, i_min=0
after tapering qubits(H) =  6
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
     ┌───┐
q_0: ┤ X ├
     └───┘
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     ├───┤
q_3: ┤ X ├
     ├───┤
q_4: ┤ X ├
     └───┘
q_5: ─────
          
u+d contributions  -0.0021282912402528077
uu+dd contributions  -0.04042325385387444
ud contributions  -0.14495311175307765
     ┌───┐
q_0: ┤ X ├
     └───┘
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     ├───┤
q_3: ┤ X ├
     ├───┤
q_4: ┤ X ├
     └───┘
q_5: ─────
          
u+d contributions  -0.002163765135578061
uu+dd contributions  -0.04056316374510846
ud contributions  -0.14540234495083465
     ┌───┐
q_0: ┤ X ├
     └───┘
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     ├───┤
q_3: ┤ X ├
     ├───┤
q_4: ┤ X ├
     └───┘
q_5: ─────
          
u+d contributions  -0.002163765135578061
uu+dd contributions  -0.04056316374510846
ud contributions  -0.14540234495083465
