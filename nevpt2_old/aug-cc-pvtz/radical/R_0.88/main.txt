#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.88/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.88)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:15:38 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.880000000000 AA    0.000000000000   0.000000000000   1.662958989617 Bohr

nuclear repulsion = 4.81070191745455
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         5.96
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpsepqddzc
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpsepqddzc
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.447266692280773  LUMO (A1) = 0.0289692095965614
Initial guess E= -75.399155337253  |g|= 0.20872
macro= 0  E= -75.4076936159632  delta_E= -0.00853828  |g|= 0.20872  2 KF 5 JK
macro= 1  E= -75.4085048626769  delta_E= -0.000811247  |g|= 0.0963123  2 KF 5 JK
macro= 2  E= -75.4068511324351  delta_E= 0.00165373  |g|= 0.0602266  2 KF 5 JK
macro= 3  E= -75.4084233937293  delta_E= -0.00157226  |g|= 0.108701  2 KF 5 JK
macro= 4  E= -75.4072802555757  delta_E= 0.00114314  |g|= 0.0601236  2 KF 5 JK
macro= 5  E= -75.4084504465086  delta_E= -0.00117019  |g|= 0.102525  2 KF 5 JK
macro= 6  E= -75.4071577513231  delta_E= 0.0012927  |g|= 0.0596022  2 KF 5 JK
macro= 7  E= -75.4084511857177  delta_E= -0.00129343  |g|= 0.104368  2 KF 5 JK
macro= 8  E= -75.4071799435094  delta_E= 0.00127124  |g|= 0.0599096  2 KF 5 JK
macro= 9  E= -75.4084551841422  delta_E= -0.00127524  |g|= 0.104055  2 KF 5 JK
macro= 10  E= -75.407147618313  delta_E= 0.00130757  |g|= 0.0597572  2 KF 5 JK
macro= 11  E= -75.4084586978717  delta_E= -0.00131108  |g|= 0.104606  2 KF 5 JK
macro= 12  E= -75.4071366793293  delta_E= 0.00132202  |g|= 0.0597526  2 KF 5 JK
macro= 13  E= -75.4084622373954  delta_E= -0.00132556  |g|= 0.104822  2 KF 5 JK
macro= 14  E= -75.4071175710293  delta_E= 0.00134467  |g|= 0.0596608  2 KF 5 JK
macro= 15  E= -75.4084658179492  delta_E= -0.00134825  |g|= 0.105161  2 KF 5 JK
macro= 16  E= -75.4071018840167  delta_E= 0.00136393  |g|= 0.0595953  2 KF 5 JK
macro= 17  E= -75.4084693675971  delta_E= -0.00136748  |g|= 0.105444  2 KF 5 JK
macro= 18  E= -75.4070850376396  delta_E= 0.00138433  |g|= 0.0595144  2 KF 5 JK
macro= 19  E= -75.4084729365955  delta_E= -0.0013879  |g|= 0.105741  2 KF 5 JK
macro= 20  E= -75.4070688654014  delta_E= 0.00140407  |g|= 0.0594373  2 KF 5 JK
macro= 21  E= -75.408476491976  delta_E= -0.00140763  |g|= 0.106025  2 KF 5 JK
macro= 22  E= -75.407052648243  delta_E= 0.00142384  |g|= 0.0593567  2 KF 5 JK
macro= 23  E= -75.4084800485014  delta_E= -0.0014274  |g|= 0.106305  2 KF 5 JK
macro= 24  E= -75.4070366881089  delta_E= 0.00144336  |g|= 0.0592758  2 KF 5 JK
macro= 25  E= -75.4084835954356  delta_E= -0.00144691  |g|= 0.106579  2 KF 5 JK
macro= 26  E= -75.4070208755217  delta_E= 0.00146272  |g|= 0.0591936  2 KF 5 JK
macro= 27  E= -75.4084871350738  delta_E= -0.00146626  |g|= 0.106848  2 KF 5 JK
macro= 28  E= -75.4070052663391  delta_E= 0.00148187  |g|= 0.0591105  2 KF 5 JK
macro= 29  E= -75.408490663226  delta_E= -0.0014854  |g|= 0.10711  2 KF 5 JK
macro= 30  E= -75.4069898482553  delta_E= 0.00150081  |g|= 0.0590265  2 KF 5 JK
macro= 31  E= -75.4084941789049  delta_E= -0.00150433  |g|= 0.107367  2 KF 5 JK
macro= 32  E= -75.4069746358323  delta_E= 0.00151954  |g|= 0.0589416  2 KF 5 JK
macro= 33  E= -75.4084976796086  delta_E= -0.00152304  |g|= 0.107618  2 KF 5 JK
macro= 34  E= -75.4069596316334  delta_E= 0.00153805  |g|= 0.0588559  2 KF 5 JK
macro= 35  E= -75.4085011636116  delta_E= -0.00154153  |g|= 0.107863  2 KF 5 JK
macro= 36  E= -75.4069448422433  delta_E= 0.00155632  |g|= 0.0587695  2 KF 5 JK
macro= 37  E= -75.4085046288752  delta_E= -0.00155979  |g|= 0.108103  2 KF 5 JK
macro= 38  E= -75.4069302716678  delta_E= 0.00157436  |g|= 0.0586823  2 KF 5 JK
macro= 39  E= -75.4085080735777  delta_E= -0.0015778  |g|= 0.108337  2 KF 5 JK
macro= 40  E= -75.4069159241139  delta_E= 0.00159215  |g|= 0.0585946  2 KF 5 JK
macro= 41  E= -75.4085114958701  delta_E= -0.00159557  |g|= 0.108565  2 KF 5 JK
macro= 42  E= -75.4069018028595  delta_E= 0.00160969  |g|= 0.0585062  2 KF 5 JK
macro= 43  E= -75.4085148939996  delta_E= -0.00161309  |g|= 0.108788  2 KF 5 JK
macro= 44  E= -75.4068879107666  delta_E= 0.00162698  |g|= 0.0584174  2 KF 5 JK
macro= 45  E= -75.4085182662601  delta_E= -0.00163036  |g|= 0.109005  2 KF 5 JK
macro= 46  E= -75.406874250101  delta_E= 0.00164402  |g|= 0.0583281  2 KF 5 JK
macro= 47  E= -75.4085216110212  delta_E= -0.00164736  |g|= 0.109217  2 KF 5 JK
macro= 48  E= -75.4068608226472  delta_E= 0.00166079  |g|= 0.0582385  2 KF 5 JK
macro= 49  E= -75.4085249267199  delta_E= -0.0016641  |g|= 0.109424  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4085249267199  |g|= 0.109424  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4085249267199

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpsepqddzc
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpsepqddzc
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.269610256733001  LUMO (A1) = 0.0312245153313554
Initial guess E= -75.4099020823443  |g|= 0.0385162
macro= 0  E= -75.410074024609  delta_E= -0.000171942  |g|= 0.0385162  2 KF 5 JK
macro= 1  E= -75.4100604957356  delta_E= 1.35289e-05  |g|= 0.0193457  2 KF 5 JK
macro= 2  E= -75.4100687705147  delta_E= -8.27478e-06  |g|= 0.0281305  2 KF 5 JK
macro= 3  E= -75.4100576968414  delta_E= 1.10737e-05  |g|= 0.0200383  2 KF 5 JK
macro= 4  E= -75.4100645755021  delta_E= -6.87866e-06  |g|= 0.0280881  2 KF 5 JK
macro= 5  E= -75.4100588708  delta_E= 5.7047e-06  |g|= 0.0204956  2 KF 5 JK
macro= 6  E= -75.4100644604478  delta_E= -5.58965e-06  |g|= 0.0279927  2 KF 5 JK
macro= 7  E= -75.4100584710421  delta_E= 5.98941e-06  |g|= 0.0205337  2 KF 5 JK
macro= 8  E= -75.4100646837635  delta_E= -6.21272e-06  |g|= 0.0280244  2 KF 5 JK
macro= 9  E= -75.410058339302  delta_E= 6.34446e-06  |g|= 0.0205312  2 KF 5 JK
macro= 10  E= -75.4100655452129  delta_E= -7.20591e-06  |g|= 0.0280427  2 KF 5 JK
macro= 11  E= -75.410058645582  delta_E= 6.89963e-06  |g|= 0.0205104  2 KF 5 JK
macro= 12  E= -75.410065955483  delta_E= -7.3099e-06  |g|= 0.0280092  2 KF 5 JK
macro= 13  E= -75.4100599238381  delta_E= 6.03164e-06  |g|= 0.0205873  2 KF 5 JK
macro= 14  E= -75.4100654202007  delta_E= -5.49636e-06  |g|= 0.0278709  2 KF 5 JK
macro= 15  E= -75.4100601864485  delta_E= 5.23375e-06  |g|= 0.0207199  2 KF 5 JK
macro= 16  E= -75.4100651428053  delta_E= -4.95636e-06  |g|= 0.0278111  2 KF 5 JK
macro= 17  E= -75.4100601964332  delta_E= 4.94637e-06  |g|= 0.0207844  2 KF 5 JK
macro= 18  E= -75.4100650465197  delta_E= -4.85009e-06  |g|= 0.0277898  2 KF 5 JK
macro= 19  E= -75.4100601519222  delta_E= 4.8946e-06  |g|= 0.0208099  2 KF 5 JK
macro= 20  E= -75.4100649828443  delta_E= -4.83092e-06  |g|= 0.0277851  2 KF 5 JK
macro= 21  E= -75.4100601147925  delta_E= 4.86805e-06  |g|= 0.0208223  2 KF 5 JK
macro= 22  E= -75.4100649182243  delta_E= -4.80343e-06  |g|= 0.0277852  2 KF 5 JK
macro= 23  E= -75.4100600774138  delta_E= 4.84081e-06  |g|= 0.0208302  2 KF 5 JK
macro= 24  E= -75.4100648538021  delta_E= -4.77639e-06  |g|= 0.0277875  2 KF 5 JK
macro= 25  E= -75.4100600406428  delta_E= 4.81316e-06  |g|= 0.0208362  2 KF 5 JK
macro= 26  E= -75.4100647896373  delta_E= -4.74899e-06  |g|= 0.0277908  2 KF 5 JK
macro= 27  E= -75.4100600038252  delta_E= 4.78581e-06  |g|= 0.0208412  2 KF 5 JK
macro= 28  E= -75.4100647257111  delta_E= -4.72189e-06  |g|= 0.0277944  2 KF 5 JK
macro= 29  E= -75.4100599671025  delta_E= 4.75861e-06  |g|= 0.0208458  2 KF 5 JK
macro= 30  E= -75.410064661928  delta_E= -4.69483e-06  |g|= 0.0277982  2 KF 5 JK
macro= 31  E= -75.4100599303881  delta_E= 4.73154e-06  |g|= 0.0208502  2 KF 5 JK
macro= 32  E= -75.4100645982774  delta_E= -4.66789e-06  |g|= 0.027802  2 KF 5 JK
macro= 33  E= -75.4100598936813  delta_E= 4.7046e-06  |g|= 0.0208546  2 KF 5 JK
macro= 34  E= -75.4100645347517  delta_E= -4.64107e-06  |g|= 0.0278059  2 KF 5 JK
macro= 35  E= -75.4100598569687  delta_E= 4.67778e-06  |g|= 0.0208589  2 KF 5 JK
macro= 36  E= -75.4100644713493  delta_E= -4.61438e-06  |g|= 0.0278098  2 KF 5 JK
macro= 37  E= -75.4100598202492  delta_E= 4.6511e-06  |g|= 0.0208632  2 KF 5 JK
macro= 38  E= -75.4100644080692  delta_E= -4.58782e-06  |g|= 0.0278137  2 KF 5 JK
macro= 39  E= -75.4100597835204  delta_E= 4.62455e-06  |g|= 0.0208675  2 KF 5 JK
macro= 40  E= -75.4100643449108  delta_E= -4.56139e-06  |g|= 0.0278176  2 KF 5 JK
macro= 41  E= -75.4100597467827  delta_E= 4.59813e-06  |g|= 0.0208718  2 KF 5 JK
macro= 42  E= -75.4100642818739  delta_E= -4.53509e-06  |g|= 0.0278214  2 KF 5 JK
macro= 43  E= -75.4100597100354  delta_E= 4.57184e-06  |g|= 0.020876  2 KF 5 JK
macro= 44  E= -75.4100642189585  delta_E= -4.50892e-06  |g|= 0.0278253  2 KF 5 JK
macro= 45  E= -75.4100596732791  delta_E= 4.54568e-06  |g|= 0.0208803  2 KF 5 JK
macro= 46  E= -75.410064156165  delta_E= -4.48289e-06  |g|= 0.0278292  2 KF 5 JK
macro= 47  E= -75.4100596365134  delta_E= 4.51965e-06  |g|= 0.0208845  2 KF 5 JK
macro= 48  E= -75.4100640934926  delta_E= -4.45698e-06  |g|= 0.0278331  2 KF 5 JK
macro= 49  E= -75.4100595997392  delta_E= 4.49375e-06  |g|= 0.0208887  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4100595997392  |g|= 0.0208887  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4100595997392
**** SCF Summaries ****
Total Energy =                         -75.410059599739171
Nuclear Repulsion Energy =               4.810701917454545
One-electron Energy =                 -113.478526223962362
Two-electron Energy =                   33.257764706768633
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    0    1    0    0    0    0
single occ                     0    1    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6002484461495  | -20.6172460759259  | -20.5832508163731  occ= 2
MO #2   (A1  #2 ) energy= -1.33739905234974  | -1.40623161293597  | -1.26856649176352  occ= 2
MO #3   (A1  #3 ) energy= -0.682193886689488 | -0.7048849927313   | -0.659502780647676 occ= 2
MO #4   (E1y #1 ) energy= -0.538493255514768 | -0.557757783965042 | -0.519228727064493 occ= 2
MO #5   (E1x #1 ) energy= -0.246853786267036 | -0.646327529018222 | 0.152619956484149  occ= 1
MO #6   (A1  #4 ) energy= 0.0312838106903771 | 0.0307695103242237 | 0.0317981110565356 occ= 0
MO #7   (A1  #5 ) energy= 0.137876218383981  | 0.13715956105501   | 0.138592875712979  occ= 0
MO #8   (E1x #2 ) energy= 0.157000507411092  | 0.151435841855661  | 0.162565172966523  occ= 0
MO #9   (E1y #2 ) energy= 0.160589654973313  | 0.159876517798881  | 0.161302792147744  occ= 0
MO #10  (A1  #6 ) energy= 0.189234614062903  | 0.187037054624542  | 0.191432173501271  occ= 0
MO #11  (A1  #7 ) energy= 0.268237235397496  | 0.26656478753318   | 0.269909683261817  occ= 0
MO #12  (E1x #3 ) energy= 0.276060788785553  | 0.27242432392812   | 0.279697253642988  occ= 0
MO #13  (E1y #3 ) energy= 0.279467749617564  | 0.279011960168095  | 0.279923539067031  occ= 0
MO #14  (A1  #8 ) energy= 0.448854663280245  | 0.445042956214456  | 0.452666370346017  occ= 0
MO #15  (E2x #1 ) energy= 0.648387285937294  | 0.638861184875395  | 0.657913386999193  occ= 0
MO #16  (E2y #1 ) energy= 0.648387285937297  | 0.638861184875399  | 0.657913386999196  occ= 0
MO #17  (A1  #9 ) energy= 0.661286937647966  | 0.65500735896585   | 0.667566516330086  occ= 0
MO #18  (E1x #4 ) energy= 0.72371876749117   | 0.714471468990903  | 0.732966065991442  occ= 0
MO #19  (E1y #4 ) energy= 0.729698515682199  | 0.728446638307587  | 0.730950393056809  occ= 0
MO #20  (E1x #5 ) energy= 0.872773218977219  | 0.84831222476882   | 0.897234213185619  occ= 0
MO #21  (E1y #5 ) energy= 0.875126780867872  | 0.872184228825896  | 0.878069332909849  occ= 0
MO #22  (A1  #10) energy= 0.888763777316222  | 0.883754600263721  | 0.893772954368943  occ= 0
MO #23  (A1  #11) energy= 0.918981997245489  | 0.916992190040386  | 0.920971804450598  occ= 0
MO #24  (E2x #2 ) energy= 0.946379651490905  | 0.944893033561468  | 0.94786626942034   occ= 0
MO #25  (E2y #2 ) energy= 0.946379651490902  | 0.944893033561468  | 0.94786626942034   occ= 0
MO #26  (E1x #6 ) energy= 1.01222543297083   | 0.99045936427267   | 1.033991501669     occ= 0
MO #27  (E1y #6 ) energy= 1.02090047104156   | 1.01800230137289   | 1.02379864071024   occ= 0
MO #28  (A1  #12) energy= 1.05174402868568   | 1.04602527190271   | 1.05746278546867   occ= 0
MO #29  (E1x #7 ) energy= 1.55785291114639   | 1.54136981222576   | 1.57433601006702   occ= 0
MO #30  (E1y #7 ) energy= 1.56545969299181   | 1.56325417241405   | 1.56766521356958   occ= 0
MO #31  (A1  #13) energy= 1.67255089056757   | 1.66264500122334   | 1.68245677991225   occ= 0
MO #32  (E3x #1 ) energy= 2.05027975352546   | 2.04022266033306   | 2.06033684671786   occ= 0
MO #33  (E3y #1 ) energy= 2.05027975352546   | 2.04022266033306   | 2.06033684671786   occ= 0
MO #34  (A1  #14) energy= 2.13463554527927   | 2.12456222909189   | 2.14470886146667   occ= 0
MO #35  (E2x #3 ) energy= 2.13637870581133   | 2.10090729562731   | 2.17185011599535   occ= 0
MO #36  (E2y #3 ) energy= 2.13637870581133   | 2.10090729562731   | 2.17185011599535   occ= 0
MO #37  (E1x #8 ) energy= 2.29761551313011   | 2.27862228074216   | 2.31660874551805   occ= 0
MO #38  (E1y #8 ) energy= 2.31509761583643   | 2.31194236158047   | 2.31825287009238   occ= 0
MO #39  (E2x #4 ) energy= 2.35589743469023   | 2.34787334852839   | 2.36392152085207   occ= 0
MO #40  (E2y #4 ) energy= 2.35589743469023   | 2.34787334852838   | 2.36392152085207   occ= 0
MO #41  (A1  #15) energy= 2.38638041966869   | 2.37856523273905   | 2.39419560659864   occ= 0
MO #42  (A1  #16) energy= 2.58813474696265   | 2.57945269710856   | 2.59681679681674   occ= 0
MO #43  (E1x #9 ) energy= 2.7422212059587    | 2.71791349311137   | 2.76652891880604   occ= 0
MO #44  (E1y #9 ) energy= 2.76381761616939   | 2.75954381184208   | 2.76809142049669   occ= 0
MO #45  (A1  #17) energy= 3.70175933749331   | 3.69660690501854   | 3.70691176996808   occ= 0
MO #46  (E2x #5 ) energy= 4.11708275954592   | 4.11367173686462   | 4.12049378222721   occ= 0
MO #47  (E2y #5 ) energy= 4.11708275954591   | 4.1136717368646    | 4.12049378222719   occ= 0
MO #48  (E1x #10) energy= 4.14089957912629   | 4.09937701405617   | 4.18242214419641   occ= 0
MO #49  (E1y #10) energy= 4.15184485757758   | 4.1461983423428    | 4.15749137281237   occ= 0
MO #50  (E1x #11) energy= 4.33772882210552   | 4.32226778324692   | 4.35318986096411   occ= 0
MO #51  (E1y #11) energy= 4.34857676593594   | 4.34644101045191   | 4.35071252141998   occ= 0
MO #52  (A1  #18) energy= 4.71789380788431   | 4.71251123096702   | 4.72327638480176   occ= 0
MO #53  (A1  #19) energy= 5.45155441931982   | 5.43888743211163   | 5.46422140652818   occ= 0
MO #54  (E1x #12) energy= 5.5224776828986    | 5.50275203788255   | 5.54220332791463   occ= 0
MO #55  (E1y #12) energy= 5.54852044084722   | 5.5445919549304    | 5.55244892676403   occ= 0
MO #56  (A1  #20) energy= 6.15324325470291   | 6.14272493441738   | 6.16376157498876   occ= 0
MO #57  (E3x #2 ) energy= 6.45860476973734   | 6.43360311878683   | 6.48360642068784   occ= 0
MO #58  (E3y #2 ) energy= 6.45860476973733   | 6.43360311878683   | 6.48360642068784   occ= 0
MO #59  (E2x #6 ) energy= 6.65863143616998   | 6.64013655958856   | 6.67712631275138   occ= 0
MO #60  (E2y #6 ) energy= 6.65863143616997   | 6.64013655958855   | 6.67712631275137   occ= 0
MO #61  (E2x #7 ) energy= 7.0145861940155    | 6.97333232484451   | 7.0558400631865    occ= 0
MO #62  (E2y #7 ) energy= 7.01458619401551   | 6.97333232484451   | 7.05584006318651   occ= 0
MO #63  (E1x #13) energy= 7.1452497009879    | 7.11238260305211   | 7.17811679892368   occ= 0
MO #64  (E1y #13) energy= 7.17763452947196   | 7.17188515175856   | 7.18338390718537   occ= 0
MO #65  (E1x #14) energy= 7.46090808146208   | 7.43575824956536   | 7.4860579133588    occ= 0
MO #66  (E1y #14) energy= 7.4941418335188    | 7.48906909033785   | 7.49921457669974   occ= 0
MO #67  (A1  #21) energy= 7.74838703770125   | 7.74066246120812   | 7.75611161419438   occ= 0
MO #68  (A1  #22) energy= 7.91470749352103   | 7.90421606318636   | 7.92519892385568   occ= 0
MO #69  (A1  #23) energy= 14.7369796265358   | 14.7239016855959   | 14.7500575674755   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.77615
pop of  0 O 3s        0.00602
pop of  0 O 4s        0.00149
pop of  0 O 5s        0.00013
pop of  0 O 2px       0.99688
pop of  0 O 2py       1.99217
pop of  0 O 2pz       1.57023
pop of  0 O 3px       0.00019
pop of  0 O 3py       0.00088
pop of  0 O 3pz       0.00303
pop of  0 O 4px       0.00040
pop of  0 O 4py       0.00043
pop of  0 O 4pz       0.00163
pop of  0 O 5px       0.00003
pop of  0 O 5py       0.00016
pop of  0 O 5pz       0.00015
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00242
pop of  0 O 3dz^2     0.01124
pop of  0 O 3dxz      0.00112
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00039
pop of  0 O 4dz^2     0.00061
pop of  0 O 4dxz      0.00016
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00003
pop of  0 O 5dz^2     0.00022
pop of  0 O 5dxz      0.00001
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00019
pop of  0 O 4f 0      0.00137
pop of  0 O 4f 1      0.00002
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00002
pop of  0 O 5f 0      0.00008
pop of  0 O 5f 1      0.00001
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.60130
pop of  1 H 2s        0.01595
pop of  1 H 3s        0.00837
pop of  1 H 4s        0.00035
pop of  1 H 2px       0.00061
pop of  1 H 2py       0.00323
pop of  1 H 2pz       0.00062
pop of  1 H 3px       0.00044
pop of  1 H 3py       0.00002
pop of  1 H 3pz       0.00015
pop of  1 H 4px       0.00006
pop of  1 H 4py       0.00000
pop of  1 H 4pz       0.00030
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00005
pop of  1 H 3dz^2     0.00040
pop of  1 H 3dxz      0.00002
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00000
pop of  1 H 4dz^2     0.00020
pop of  1 H 4dxz      0.00005
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.36786
charge of  1H =      0.36786
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.69256
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.88/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.88)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:16:06 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       102.49

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp48sdznnq
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp48sdznnq
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.24685378626704  LUMO = 0.513731314350291
Initial guess E= -75.4100760198423  |g|= 0.000913764
macro= 0  E= -75.4100763890039  delta_E= -3.69162e-07  |g|= 0.000913764  1 KF 3 JK
macro= 1  E= -75.4100763890039  delta_E= 0  |g|= 1.21184e-05  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4100763890039  |g|= 1.21184e-05  total 3 KF 8 JK
converged SCF energy = -75.4100763890039
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.88/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.88)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:16:07 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       108.56

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpmhkiw2wd
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpmhkiw2wd
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.246854540510494  LUMO = 0.513731591004222
Initial guess E= -75.4100760195343  |g|= 0.000913856
macro= 0  E= -75.4100763890039  delta_E= -3.6947e-07  |g|= 0.000913856  1 KF 3 JK
macro= 1  E= -75.4100763890039  delta_E= 0  |g|= 7.85942e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4100763890039  |g|= 7.85942e-08  total 3 KF 8 JK
converged SCF energy = -75.4100763890039
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.88/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.88)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:16:10 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       114.53

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpjm9yv98n
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpjm9yv98n
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.247143455817558  LUMO = 0.0312778738506867
Initial guess E= -75.4107343496662  |g|= 0.0119567
macro= 0  E= -75.4107663291032  delta_E= -3.19794e-05  |g|= 0.000427638  2 KF 7 JK
macro= 1  E= -75.4107663291033  delta_E= -8.52651e-14  |g|= 8.14634e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4107663291033  |g|= 8.14634e-06  total 4 KF 12 JK
converged SCF energy = -75.4107663291033
u+d contributions  -0.05396963401143895
uu+dd contributions  -0.08561067224299022
ud contributions  -0.18319094532917
u+d contributions  -0.0080171580386326
uu+dd contributions  -0.03956052170653693
ud contributions  -0.13697595838703036
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.88/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.88)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:16:15 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       126.51

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpsbwcurfn
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpsbwcurfn
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.247529838885577  LUMO = 0.513578449341687
Initial guess E= -75.410075911252  |g|= 0.000937778
macro= 0  E= -75.4100763890039  delta_E= -4.77752e-07  |g|= 0.000937778  1 KF 2 JK
macro= 1  E= -75.4100763890039  delta_E= -1.42109e-14  |g|= 1.61315e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4100763890039  |g|= 1.61315e-07  total 3 KF 7 JK
converged SCF energy = -75.4100763890039
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.88/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.88)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:16:17 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       131.98

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpns1t6a6c
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpns1t6a6c
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.247817384380332  LUMO = 0.0312898513763429
Initial guess E= -75.4106926067175  |g|= 0.00786952
macro= 0  E= -75.4107116867714  delta_E= -1.90801e-05  |g|= 0.000308  2 KF 7 JK
macro= 1  E= -75.4107116867714  delta_E= -2.84217e-14  |g|= 4.91931e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4107116867714  |g|= 4.91931e-06  total 4 KF 12 JK
converged SCF energy = -75.4107116867714
u+d contributions  -0.020291057390998013
uu+dd contributions  -0.0447736808270413
ud contributions  -0.10938473635932038
u+d contributions  -0.004455350550458823
uu+dd contributions  -0.02892064599545999
ud contributions  -0.09352559675973628
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.784663, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.235640, i_min=0
In the tapering subroutine, i=2, E(i)=-75.410076, i_min=1
In the tapering subroutine, i=3, E(i)=-74.883158, i_min=2
In the tapering subroutine, i=4, E(i)=-75.405617, i_min=2
In the tapering subroutine, i=5, E(i)=-74.871870, i_min=2
In the tapering subroutine, i=6, E(i)=-74.850832, i_min=2
In the tapering subroutine, i=7, E(i)=-74.924753, i_min=2
In the tapering subroutine, i=8, E(i)=-75.235640, i_min=2
In the tapering subroutine, i=9, E(i)=-75.259000, i_min=2
In the tapering subroutine, i=10, E(i)=-74.909724, i_min=2
In the tapering subroutine, i=11, E(i)=-75.410076, i_min=2
In the tapering subroutine, i=12, E(i)=-74.897628, i_min=2
In the tapering subroutine, i=13, E(i)=-75.405617, i_min=2
In the tapering subroutine, i=14, E(i)=-74.924753, i_min=2
In the tapering subroutine, i=15, E(i)=-74.889361, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0044553336385633364
uu+dd contributions  -0.02892059532166716
ud contributions  -0.0935102172363168
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.004429732325312598
uu+dd contributions  -0.028895420226103058
ud contributions  -0.09348519744813595
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.004429732325312598
uu+dd contributions  -0.028895420226103058
ud contributions  -0.09348519744813595
