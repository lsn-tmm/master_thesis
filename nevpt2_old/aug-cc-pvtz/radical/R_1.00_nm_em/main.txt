#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.00_nm_em/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.00)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

'''
BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------
'''

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
x = np.load('../R_1.00/vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
y = np.load('../../../../tomography/tests_oh/data/tomo_nm_em_bloch.npy',allow_pickle=True).item()['radical_aug-cc-pvtz']
nsample = 100
E = np.zeros(nsample)
for i in range(nsample):
    yi = np.zeros(y.shape)
    for r in range(yi.shape[0]):
        yi[r,0] = np.random.normal(y[r,0],y[r,1])
    SOLVER.set_quantum_variables(VQE_settings,with_bloch_vector=True,bloch_vector=yi)
    Ei = SOLVER.compute_nevpt2_energy()
    outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % Ei)
    E[i] = Ei
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy ---- FINAL AVERAGE ---- %.12f +/- %.12f \n" % (np.mean(E),np.std(E)))

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Thu Mar 24 17:54:27 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.000000000000 AA    0.000000000000   0.000000000000   1.889726124565 Bohr

nuclear repulsion = 4.23341768736
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         6.84
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpds84lu34
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpds84lu34
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.429287553552275  LUMO (A1) = 0.0258949859232241
Initial guess E= -75.4017240211452  |g|= 0.211499
macro= 0  E= -75.4119382659475  delta_E= -0.0102142  |g|= 0.211499  2 KF 5 JK
macro= 1  E= -75.4125633425922  delta_E= -0.000625077  |g|= 0.0920258  2 KF 5 JK
macro= 2  E= -75.4108889381964  delta_E= 0.0016744  |g|= 0.0617717  2 KF 5 JK
macro= 3  E= -75.4123599336374  delta_E= -0.001471  |g|= 0.106675  2 KF 5 JK
macro= 4  E= -75.4107220068167  delta_E= 0.00163793  |g|= 0.0587303  2 KF 5 JK
macro= 5  E= -75.4123360430082  delta_E= -0.00161404  |g|= 0.108285  2 KF 5 JK
macro= 6  E= -75.4108499507799  delta_E= 0.00148609  |g|= 0.0599811  2 KF 5 JK
macro= 7  E= -75.4123892640894  delta_E= -0.00153931  |g|= 0.107233  2 KF 5 JK
macro= 8  E= -75.4110533561579  delta_E= 0.00133591  |g|= 0.0619936  2 KF 5 JK
macro= 9  E= -75.4124214592138  delta_E= -0.0013681  |g|= 0.104953  2 KF 5 JK
macro= 10  E= -75.4109868410918  delta_E= 0.00143462  |g|= 0.0602057  2 KF 5 JK
macro= 11  E= -75.412427159461  delta_E= -0.00144032  |g|= 0.10618  2 KF 5 JK
macro= 12  E= -75.410992576185  delta_E= 0.00143458  |g|= 0.0597009  2 KF 5 JK
macro= 13  E= -75.4124321775754  delta_E= -0.0014396  |g|= 0.106259  2 KF 5 JK
macro= 14  E= -75.4109623870863  delta_E= 0.00146979  |g|= 0.0592985  2 KF 5 JK
macro= 15  E= -75.4124369182568  delta_E= -0.00147453  |g|= 0.1068  2 KF 5 JK
macro= 16  E= -75.4109464464687  delta_E= 0.00149047  |g|= 0.059148  2 KF 5 JK
macro= 17  E= -75.4124415385037  delta_E= -0.00149509  |g|= 0.1071  2 KF 5 JK
macro= 18  E= -75.4109247679884  delta_E= 0.00151677  |g|= 0.0589926  2 KF 5 JK
macro= 19  E= -75.4124462574169  delta_E= -0.00152149  |g|= 0.107464  2 KF 5 JK
macro= 20  E= -75.4109057995331  delta_E= 0.00154046  |g|= 0.0588724  2 KF 5 JK
macro= 21  E= -75.412450907156  delta_E= -0.00154511  |g|= 0.107782  2 KF 5 JK
macro= 22  E= -75.4108860194698  delta_E= 0.00156489  |g|= 0.0587473  2 KF 5 JK
macro= 23  E= -75.412455583265  delta_E= -0.00156956  |g|= 0.108104  2 KF 5 JK
macro= 24  E= -75.4108669739494  delta_E= 0.00158861  |g|= 0.0586268  2 KF 5 JK
macro= 25  E= -75.4124602233793  delta_E= -0.00159325  |g|= 0.108413  2 KF 5 JK
macro= 26  E= -75.4108480090849  delta_E= 0.00161221  |g|= 0.058504  2 KF 5 JK
macro= 27  E= -75.4124648552947  delta_E= -0.00161685  |g|= 0.108716  2 KF 5 JK
macro= 28  E= -75.4108294309262  delta_E= 0.00163542  |g|= 0.058381  2 KF 5 JK
macro= 29  E= -75.4124694577099  delta_E= -0.00164003  |g|= 0.109009  2 KF 5 JK
macro= 30  E= -75.4108111157423  delta_E= 0.00165834  |g|= 0.0582566  2 KF 5 JK
macro= 31  E= -75.4124740361952  delta_E= -0.00166292  |g|= 0.109296  2 KF 5 JK
macro= 32  E= -75.4107931316206  delta_E= 0.0016809  |g|= 0.0581315  2 KF 5 JK
macro= 33  E= -75.4124785820363  delta_E= -0.00168545  |g|= 0.109575  2 KF 5 JK
macro= 34  E= -75.4107754571429  delta_E= 0.00170312  |g|= 0.0580054  2 KF 5 JK
macro= 35  E= -75.4124830943955  delta_E= -0.00170764  |g|= 0.109846  2 KF 5 JK
macro= 36  E= -75.4107581108139  delta_E= 0.00172498  |g|= 0.0578786  2 KF 5 JK
macro= 37  E= -75.4124875683944  delta_E= -0.00172946  |g|= 0.11011  2 KF 5 JK
macro= 38  E= -75.4107410908425  delta_E= 0.00174648  |g|= 0.0577512  2 KF 5 JK
macro= 39  E= -75.4124920015618  delta_E= -0.00175091  |g|= 0.110366  2 KF 5 JK
macro= 40  E= -75.4107244036854  delta_E= 0.0017676  |g|= 0.0576233  2 KF 5 JK
macro= 41  E= -75.4124963903574  delta_E= -0.00177199  |g|= 0.110615  2 KF 5 JK
macro= 42  E= -75.4107080504428  delta_E= 0.00178834  |g|= 0.0574951  2 KF 5 JK
macro= 43  E= -75.4125007320814  delta_E= -0.00179268  |g|= 0.110857  2 KF 5 JK
macro= 44  E= -75.4106920335475  delta_E= 0.0018087  |g|= 0.0573667  2 KF 5 JK
macro= 45  E= -75.4125050238406  delta_E= -0.00181299  |g|= 0.111092  2 KF 5 JK
macro= 46  E= -75.4106763535439  delta_E= 0.00182867  |g|= 0.0572382  2 KF 5 JK
macro= 47  E= -75.4106593437167  delta_E= 1.70098e-05  |g|= 0.11132  2 KF 5 JK
macro= 48  E= -75.4117062299898  delta_E= -0.00104689  |g|= 0.094197  2 KF 5 JK
macro= 49  E= -75.4104865184401  delta_E= 0.00121971  |g|= 0.0962542  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4104865184401  |g|= 0.0962542  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4104865184401

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpds84lu34
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpds84lu34
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.280250074411037  LUMO (A1) = 0.0296868358176268
Initial guess E= -75.4132626022507  |g|= 0.0714767
macro= 0  E= -75.4140683875779  delta_E= -0.000805785  |g|= 0.0714767  2 KF 5 JK
macro= 1  E= -75.4140950451332  delta_E= -2.66576e-05  |g|= 0.0226406  2 KF 5 JK
macro= 2  E= -75.4139173481925  delta_E= 0.000177697  |g|= 0.015834  2 KF 5 JK
macro= 3  E= -75.4140921892643  delta_E= -0.000174841  |g|= 0.0336272  2 KF 5 JK
macro= 4  E= -75.4139302393604  delta_E= 0.00016195  |g|= 0.0123577  2 KF 5 JK
macro= 5  E= -75.4140753370993  delta_E= -0.000145098  |g|= 0.0335496  2 KF 5 JK
macro= 6  E= -75.4140183796305  delta_E= 5.69575e-05  |g|= 0.015118  2 KF 5 JK
macro= 7  E= -75.4140593065679  delta_E= -4.09269e-05  |g|= 0.0274725  2 KF 5 JK
macro= 8  E= -75.4139625606508  delta_E= 9.67459e-05  |g|= 0.0166487  2 KF 5 JK
macro= 9  E= -75.4140967522798  delta_E= -0.000134192  |g|= 0.0309349  2 KF 5 JK
macro= 10  E= -75.4139802980217  delta_E= 0.000116454  |g|= 0.0154657  2 KF 5 JK
macro= 11  E= -75.4140846749069  delta_E= -0.000104377  |g|= 0.0291427  2 KF 5 JK
macro= 12  E= -75.4139972699703  delta_E= 8.74049e-05  |g|= 0.0155116  2 KF 5 JK
macro= 13  E= -75.4140842859328  delta_E= -8.7016e-05  |g|= 0.0280223  2 KF 5 JK
macro= 14  E= -75.413995037973  delta_E= 8.9248e-05  |g|= 0.0153814  2 KF 5 JK
macro= 15  E= -75.4140849564919  delta_E= -8.99185e-05  |g|= 0.0281291  2 KF 5 JK
macro= 16  E= -75.4139914688335  delta_E= 9.34877e-05  |g|= 0.0154818  2 KF 5 JK
macro= 17  E= -75.4140854893585  delta_E= -9.40205e-05  |g|= 0.0283848  2 KF 5 JK
macro= 18  E= -75.4139902686159  delta_E= 9.52207e-05  |g|= 0.0155384  2 KF 5 JK
macro= 19  E= -75.4140856065097  delta_E= -9.53379e-05  |g|= 0.0284868  2 KF 5 JK
macro= 20  E= -75.4139902931963  delta_E= 9.53133e-05  |g|= 0.0155375  2 KF 5 JK
macro= 21  E= -75.4140855832092  delta_E= -9.529e-05  |g|= 0.0284935  2 KF 5 JK
macro= 22  E= -75.4139904054147  delta_E= 9.51778e-05  |g|= 0.0155218  2 KF 5 JK
macro= 23  E= -75.4140855922234  delta_E= -9.51868e-05  |g|= 0.0284902  2 KF 5 JK
macro= 24  E= -75.4139903220228  delta_E= 9.52702e-05  |g|= 0.0155094  2 KF 5 JK
macro= 25  E= -75.4140856388001  delta_E= -9.53168e-05  |g|= 0.0285006  2 KF 5 JK
macro= 26  E= -75.4139901482347  delta_E= 9.54906e-05  |g|= 0.0155007  2 KF 5 JK
macro= 27  E= -75.4140856939899  delta_E= -9.55458e-05  |g|= 0.0285181  2 KF 5 JK
macro= 28  E= -75.4139899758763  delta_E= 9.57181e-05  |g|= 0.0154927  2 KF 5 JK
macro= 29  E= -75.4140857455452  delta_E= -9.57697e-05  |g|= 0.0285359  2 KF 5 JK
macro= 30  E= -75.4139898203471  delta_E= 9.59252e-05  |g|= 0.0154842  2 KF 5 JK
macro= 31  E= -75.4140857941216  delta_E= -9.59738e-05  |g|= 0.0285524  2 KF 5 JK
macro= 32  E= -75.4139896707124  delta_E= 9.61234e-05  |g|= 0.0154755  2 KF 5 JK
macro= 33  E= -75.4140858422532  delta_E= -9.61715e-05  |g|= 0.0285683  2 KF 5 JK
macro= 34  E= -75.4139895200906  delta_E= 9.63222e-05  |g|= 0.0154666  2 KF 5 JK
macro= 35  E= -75.4140858907632  delta_E= -9.63707e-05  |g|= 0.0285843  2 KF 5 JK
macro= 36  E= -75.4139893679487  delta_E= 9.65228e-05  |g|= 0.0154578  2 KF 5 JK
macro= 37  E= -75.414085939482  delta_E= -9.65715e-05  |g|= 0.0286004  2 KF 5 JK
macro= 38  E= -75.4139892153624  delta_E= 9.67241e-05  |g|= 0.015449  2 KF 5 JK
macro= 39  E= -75.4140859881893  delta_E= -9.67728e-05  |g|= 0.0286165  2 KF 5 JK
macro= 40  E= -75.4139890628343  delta_E= 9.69254e-05  |g|= 0.0154401  2 KF 5 JK
macro= 41  E= -75.4140860368316  delta_E= -9.6974e-05  |g|= 0.0286326  2 KF 5 JK
macro= 42  E= -75.4139889103635  delta_E= 9.71265e-05  |g|= 0.0154312  2 KF 5 JK
macro= 43  E= -75.414086085426  delta_E= -9.71751e-05  |g|= 0.0286486  2 KF 5 JK
macro= 44  E= -75.4139887578733  delta_E= 9.73276e-05  |g|= 0.0154223  2 KF 5 JK
macro= 45  E= -75.4140861339831  delta_E= -9.73761e-05  |g|= 0.0286646  2 KF 5 JK
macro= 46  E= -75.4139886053508  delta_E= 9.75286e-05  |g|= 0.0154133  2 KF 5 JK
macro= 47  E= -75.4140861824997  delta_E= -9.75771e-05  |g|= 0.0286805  2 KF 5 JK
macro= 48  E= -75.4139884528214  delta_E= 9.77297e-05  |g|= 0.0154044  2 KF 5 JK
macro= 49  E= -75.414086230968  delta_E= -9.77781e-05  |g|= 0.0286964  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.414086230968  |g|= 0.0286964  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.414086230968
**** SCF Summaries ****
Total Energy =                         -75.414086230967982
Nuclear Repulsion Energy =               4.233417687360000
One-electron Energy =                 -112.396009732275459
Two-electron Energy =                   32.748505813947475
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    0    1    0    0    0    0
single occ                     0    1    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6316577977832  | -20.6484851741675  | -20.614830421399   occ= 2
MO #2   (A1  #2 ) energy= -1.30175790251935  | -1.37264150923582  | -1.23087429580288  occ= 2
MO #3   (A1  #3 ) energy= -0.654652873086611 | -0.674732705616048 | -0.634573040557175 occ= 2
MO #4   (E1y #1 ) energy= -0.538169488801299 | -0.557320242426653 | -0.519018735175946 occ= 2
MO #5   (E1x #1 ) energy= -0.248827608634282 | -0.646521979999433 | 0.148866762730863  occ= 1
MO #6   (A1  #4 ) energy= 0.0300917351840682 | 0.0294787826340446 | 0.0307046877340909 occ= 0
MO #7   (A1  #5 ) energy= 0.137239129080433  | 0.136198655634173  | 0.138279602526688  occ= 0
MO #8   (E1x #2 ) energy= 0.159789532865368  | 0.154128084273994  | 0.165450981456743  occ= 0
MO #9   (E1y #2 ) energy= 0.163863674287284  | 0.163089184804155  | 0.164638163770414  occ= 0
MO #10  (A1  #6 ) energy= 0.184299996169286  | 0.181913810366597  | 0.186686181971968  occ= 0
MO #11  (A1  #7 ) energy= 0.262877197433845  | 0.260818671554638  | 0.264935723313067  occ= 0
MO #12  (E1x #3 ) energy= 0.270669459670934  | 0.267622007838641  | 0.273716911503229  occ= 0
MO #13  (E1y #3 ) energy= 0.274083592567364  | 0.273688465138017  | 0.27447871999671   occ= 0
MO #14  (A1  #8 ) energy= 0.424887398620802  | 0.420584796773227  | 0.429190000468382  occ= 0
MO #15  (A1  #9 ) energy= 0.637555028869831  | 0.631992340335018  | 0.643117717404655  occ= 0
MO #16  (E2x #1 ) energy= 0.646771061191498  | 0.637328108105218  | 0.656214014277778  occ= 0
MO #17  (E2y #1 ) energy= 0.646771061191499  | 0.637328108105219  | 0.656214014277779  occ= 0
MO #18  (E1x #4 ) energy= 0.72347843187186   | 0.714420438660307  | 0.732536425083407  occ= 0
MO #19  (E1y #4 ) energy= 0.729136243895633  | 0.727916539437957  | 0.730355948353309  occ= 0
MO #20  (A1  #10) energy= 0.871051180603015  | 0.868411279982335  | 0.873691081223702  occ= 0
MO #21  (E1x #5 ) energy= 0.884912198000218  | 0.862807788358021  | 0.907016607642415  occ= 0
MO #22  (E1y #5 ) energy= 0.887397513124543  | 0.884643710362     | 0.890151315887086  occ= 0
MO #23  (E2x #2 ) energy= 0.936379961343158  | 0.93476383130602   | 0.9379960913803    occ= 0
MO #24  (E2y #2 ) energy= 0.93637996134316   | 0.93476383130602   | 0.9379960913803    occ= 0
MO #25  (A1  #11) energy= 0.940252344349108  | 0.934708180613038  | 0.945796508085189  occ= 0
MO #26  (A1  #12) energy= 0.994297657228075  | 0.99040265934198   | 0.998192655114145  occ= 0
MO #27  (E1x #6 ) energy= 1.0009411268286    | 0.972886269943916  | 1.02899598371329   occ= 0
MO #28  (E1y #6 ) energy= 1.00748095281864   | 1.00395741865355   | 1.01100448698372   occ= 0
MO #29  (E1x #7 ) energy= 1.49145525672638   | 1.4806882712537    | 1.50222224219906   occ= 0
MO #30  (E1y #7 ) energy= 1.4995704522137    | 1.4980671071638    | 1.5010737972636    occ= 0
MO #31  (A1  #13) energy= 1.7169195950486    | 1.70741508809644   | 1.72642410200076   occ= 0
MO #32  (A1  #14) energy= 2.00091024517713   | 1.99049719088443   | 2.01132329946984   occ= 0
MO #33  (E3x #1 ) energy= 2.05356986994525   | 2.04337167204155   | 2.06376806784895   occ= 0
MO #34  (E3y #1 ) energy= 2.05356986994525   | 2.04337167204155   | 2.06376806784895   occ= 0
MO #35  (E2x #3 ) energy= 2.1333650895524    | 2.09897385631403   | 2.16775632279076   occ= 0
MO #36  (E2y #3 ) energy= 2.13336508955239   | 2.09897385631403   | 2.16775632279075   occ= 0
MO #37  (E1x #8 ) energy= 2.26734479912226   | 2.24407916958477   | 2.29061042865975   occ= 0
MO #38  (E1y #8 ) energy= 2.28379749708646   | 2.2801150192638    | 2.28747997490913   occ= 0
MO #39  (E2x #4 ) energy= 2.32038021527524   | 2.31119086126671   | 2.32956956928378   occ= 0
MO #40  (E2y #4 ) energy= 2.32038021527525   | 2.31119086126671   | 2.32956956928378   occ= 0
MO #41  (A1  #15) energy= 2.46705457785024   | 2.45855646754289   | 2.47555268815759   occ= 0
MO #42  (A1  #16) energy= 2.49452036116798   | 2.48658506251443   | 2.50245565982158   occ= 0
MO #43  (E1x #9 ) energy= 2.74401063324035   | 2.72558848021394   | 2.76243278626674   occ= 0
MO #44  (E1y #9 ) energy= 2.76537312822263   | 2.7619045410752    | 2.76884171537007   occ= 0
MO #45  (A1  #17) energy= 3.53419325405237   | 3.52992626610917   | 3.53846024199559   occ= 0
MO #46  (E2x #5 ) energy= 4.00742859876142   | 4.00494933971199   | 4.00990785781086   occ= 0
MO #47  (E2y #5 ) energy= 4.00742859876142   | 4.00494933971198   | 4.00990785781085   occ= 0
MO #48  (E1x #10) energy= 4.05797314254207   | 4.00401984070655   | 4.11192644437759   occ= 0
MO #49  (E1y #10) energy= 4.06885385915982   | 4.06165692028182   | 4.07605079803781   occ= 0
MO #50  (E1x #11) energy= 4.29277871460486   | 4.28985267559001   | 4.29570475361972   occ= 0
MO #51  (E1y #11) energy= 4.3016052359033    | 4.30108897923993   | 4.30212149256669   occ= 0
MO #52  (A1  #18) energy= 4.59534294265322   | 4.59047254820207   | 4.6002133371044    occ= 0
MO #53  (A1  #19) energy= 5.04217989943267   | 5.03344188350377   | 5.05091791536156   occ= 0
MO #54  (E1x #12) energy= 5.18927969345407   | 5.16946132837881   | 5.20909805852931   occ= 0
MO #55  (E1y #12) energy= 5.21126778913746   | 5.20753494536528   | 5.21500063290963   occ= 0
MO #56  (A1  #20) energy= 6.16690669100548   | 6.15683738453431   | 6.1769759974764    occ= 0
MO #57  (E3x #2 ) energy= 6.45755735889838   | 6.4326028550464    | 6.48251186275037   occ= 0
MO #58  (E3y #2 ) energy= 6.45755735889838   | 6.4326028550464    | 6.48251186275037   occ= 0
MO #59  (E2x #6 ) energy= 6.60060156678152   | 6.58242218713103   | 6.61878094643203   occ= 0
MO #60  (E2y #6 ) energy= 6.60060156678151   | 6.58242218713101   | 6.618780946432     occ= 0
MO #61  (E2x #7 ) energy= 7.0079797951227    | 6.96667273621711   | 7.0492868540283    occ= 0
MO #62  (E2y #7 ) energy= 7.0079797951227    | 6.9666727362171    | 7.04928685402829   occ= 0
MO #63  (E1x #13) energy= 7.08892648597247   | 7.06954048783909   | 7.10831248410586   occ= 0
MO #64  (E1y #13) energy= 7.12400526488305   | 7.11954520520306   | 7.12846532456303   occ= 0
MO #65  (E1x #14) energy= 7.19736468031662   | 7.15777499422742   | 7.2369543664058    occ= 0
MO #66  (E1y #14) energy= 7.2283037455294    | 7.22174241873203   | 7.23486507232678   occ= 0
MO #67  (A1  #21) energy= 7.31344110738657   | 7.30451504568843   | 7.32236716908471   occ= 0
MO #68  (A1  #22) energy= 7.63669883702572   | 7.62437535701124   | 7.64902231704019   occ= 0
MO #69  (A1  #23) energy= 12.3886135728096   | 12.374393578013    | 12.4028335676063   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.82997
pop of  0 O 3s        0.00441
pop of  0 O 4s        0.00118
pop of  0 O 5s        0.00020
pop of  0 O 2px       0.99697
pop of  0 O 2py       1.99197
pop of  0 O 2pz       1.50643
pop of  0 O 3px       0.00015
pop of  0 O 3py       0.00141
pop of  0 O 3pz       0.00134
pop of  0 O 4px       0.00070
pop of  0 O 4py       0.00056
pop of  0 O 4pz       0.00166
pop of  0 O 5px       0.00009
pop of  0 O 5py       0.00023
pop of  0 O 5pz       0.00008
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00180
pop of  0 O 3dz^2     0.00789
pop of  0 O 3dxz      0.00088
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00036
pop of  0 O 4dz^2     0.00056
pop of  0 O 4dxz      0.00016
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00004
pop of  0 O 5dz^2     0.00014
pop of  0 O 5dxz      0.00002
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00018
pop of  0 O 4f 0      0.00082
pop of  0 O 4f 1      0.00001
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00005
pop of  0 O 5f 0      0.00012
pop of  0 O 5f 1      0.00001
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.62741
pop of  1 H 2s        0.01170
pop of  1 H 3s        0.00435
pop of  1 H 4s        0.00011
pop of  1 H 2px       0.00050
pop of  1 H 2py       0.00330
pop of  1 H 2pz       0.00087
pop of  1 H 3px       0.00035
pop of  1 H 3py       0.00000
pop of  1 H 3pz       0.00040
pop of  1 H 4px       0.00010
pop of  1 H 4py       0.00001
pop of  1 H 4pz       0.00011
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00009
pop of  1 H 3dz^2     0.00019
pop of  1 H 3dxz      0.00006
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00000
pop of  1 H 4dz^2     0.00006
pop of  1 H 4dxz      0.00001
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.35037
charge of  1H =      0.35037
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.77459
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.00_nm_em/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.00)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

'''
BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------
'''

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
x = np.load('../R_1.00/vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
y = np.load('../../../../tomography/tests_oh/data/tomo_nm_em_bloch.npy',allow_pickle=True).item()['radical_aug-cc-pvtz']
nsample = 100
E = np.zeros(nsample)
for i in range(nsample):
    yi = np.zeros(y.shape)
    for r in range(yi.shape[0]):
        yi[r,0] = np.random.normal(y[r,0],y[r,1])
    SOLVER.set_quantum_variables(VQE_settings,with_bloch_vector=True,bloch_vector=yi)
    Ei = SOLVER.compute_nevpt2_energy()
    outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % Ei)
    E[i] = Ei
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy ---- FINAL AVERAGE ---- %.12f +/- %.12f \n" % (np.mean(E),np.std(E)))

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Thu Mar 24 17:54:55 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       126.18

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpfbryl1w4
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpfbryl1w4
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.248827608634283  LUMO = 0.398571784860826
Initial guess E= -75.4140922741848  |g|= 0.000530469
macro= 0  E= -75.4140924430256  delta_E= -1.68841e-07  |g|= 0.000530469  1 KF 3 JK
macro= 1  E= -75.4140924430256  delta_E= 0  |g|= 9.33118e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4140924430256  |g|= 9.33118e-06  total 3 KF 8 JK
converged SCF energy = -75.4140924430256
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.00_nm_em/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.00)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

'''
BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------
'''

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
x = np.load('../R_1.00/vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
y = np.load('../../../../tomography/tests_oh/data/tomo_nm_em_bloch.npy',allow_pickle=True).item()['radical_aug-cc-pvtz']
nsample = 100
E = np.zeros(nsample)
for i in range(nsample):
    yi = np.zeros(y.shape)
    for r in range(yi.shape[0]):
        yi[r,0] = np.random.normal(y[r,0],y[r,1])
    SOLVER.set_quantum_variables(VQE_settings,with_bloch_vector=True,bloch_vector=yi)
    Ei = SOLVER.compute_nevpt2_energy()
    outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % Ei)
    E[i] = Ei
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy ---- FINAL AVERAGE ---- %.12f +/- %.12f \n" % (np.mean(E),np.std(E)))

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Thu Mar 24 17:54:57 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       130.45

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpmzo0tmm1
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpmzo0tmm1
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.248657014852039  LUMO = 0.398613511554641
Initial guess E= -75.4140922281855  |g|= 0.000601972
macro= 0  E= -75.4140924430256  delta_E= -2.1484e-07  |g|= 0.000601972  1 KF 2 JK
macro= 1  E= -75.4140924430256  delta_E= 0  |g|= 7.94742e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4140924430256  |g|= 7.94742e-08  total 3 KF 7 JK
converged SCF energy = -75.4140924430256
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvtz/radical/R_1.00_nm_em/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.00)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

'''
BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------
'''

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
x = np.load('../R_1.00/vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.reps = 3
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
y = np.load('../../../../tomography/tests_oh/data/tomo_nm_em_bloch.npy',allow_pickle=True).item()['radical_aug-cc-pvtz']
nsample = 100
E = np.zeros(nsample)
for i in range(nsample):
    yi = np.zeros(y.shape)
    for r in range(yi.shape[0]):
        yi[r,0] = np.random.normal(y[r,0],y[r,1])
    SOLVER.set_quantum_variables(VQE_settings,with_bloch_vector=True,bloch_vector=yi)
    Ei = SOLVER.compute_nevpt2_energy()
    outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % Ei)
    E[i] = Ei
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy ---- FINAL AVERAGE ---- %.12f +/- %.12f \n" % (np.mean(E),np.std(E)))

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Thu Mar 24 17:54:58 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       135.62

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpksnsjjtg
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpksnsjjtg
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.24904642672581  LUMO = 0.0300832664094529
Initial guess E= -75.4146793687146  |g|= 0.00649453
macro= 0  E= -75.414692482011  delta_E= -1.31133e-05  |g|= 0.000252322  2 KF 7 JK
macro= 1  E= -75.414692482011  delta_E= 2.84217e-14  |g|= 4.12047e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.414692482011  |g|= 4.12047e-06  total 4 KF 12 JK
converged SCF energy = -75.414692482011
u+d contributions  -0.023173580871919428
uu+dd contributions  -0.0467813570800488
ud contributions  -0.10826888384992926
u+d contributions  -0.005277185607668305
uu+dd contributions  -0.028860736192452385
ud contributions  -0.09034689743476616
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


Overwritten attributes  get_ovlp get_hcore  of <class 'pyscf.soscf.newton_ah.newton.<locals>.SecondOrderROHF'>
Overwritten attributes  get_ovlp get_hcore  of <class 'pyscf.scf.rohf.ROHF'>
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf/gto/mole.py:1089: UserWarning: Function mol.dumps drops attribute nao_nr because it is not JSON-serializable
  warnings.warn(msg)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf/gto/mole.py:1089: UserWarning: Function mol.dumps drops attribute energy_nuc because it is not JSON-serializable
  warnings.warn(msg)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf/fci/direct_nosym.py:179: UserWarning: direct_nosym.kernel is not able to diagonalize non-Hermitian Hamiltonian. If h1e and h2e is not hermtian, calling symmetric diagonlization in eig can lead to wrong results.
  warnings.warn('direct_nosym.kernel is not able to diagonalize '
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/quantum_info/operators/symplectic/pauli.py:185: DeprecationWarning: Initializing Pauli from `Pauli(z=z, x=x)` kwargs is deprecated as of version 0.17.0 and will be removed no earlier than 3 months after the release date. Use tuple initialization `Pauli((z, x))` instead.
  base_z, base_x, base_phase = self._from_array_deprecated(z, x)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/operators/legacy/weighted_pauli_operator.py:291: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  new_pauli, sign = Pauli.sgn_prod(existed_pauli, pauli)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/operators/legacy/op_converter.py:122: DeprecationWarning: `to_spmatrix` is deprecated and will be removed no earlier than 3 months after the release date. Use `to_matrix(sparse=True)` instead.
  hamiltonian += weight * pauli.to_spmatrix()
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.888285, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.249019, i_min=0
In the tapering subroutine, i=2, E(i)=-75.414092, i_min=1
In the tapering subroutine, i=3, E(i)=-75.003200, i_min=2
In the tapering subroutine, i=4, E(i)=-75.409728, i_min=2
In the tapering subroutine, i=5, E(i)=-74.991754, i_min=2
In the tapering subroutine, i=6, E(i)=-74.857767, i_min=2
In the tapering subroutine, i=7, E(i)=-75.035471, i_min=2
In the tapering subroutine, i=8, E(i)=-75.249019, i_min=2
In the tapering subroutine, i=9, E(i)=-75.264190, i_min=2
In the tapering subroutine, i=10, E(i)=-75.027827, i_min=2
In the tapering subroutine, i=11, E(i)=-75.414092, i_min=2
In the tapering subroutine, i=12, E(i)=-75.015625, i_min=2
In the tapering subroutine, i=13, E(i)=-75.409728, i_min=2
In the tapering subroutine, i=14, E(i)=-75.035471, i_min=2
In the tapering subroutine, i=15, E(i)=-74.896069, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032382598152947487
uu+dd contributions  -0.026009076422122756
ud contributions  -0.08516505993684302
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003251775863913839
uu+dd contributions  -0.02599062108925119
ud contributions  -0.08512305094423075
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032485161380202575
uu+dd contributions  -0.026029227976336892
ud contributions  -0.085223290620108
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003207311182854364
uu+dd contributions  -0.025967225976372448
ud contributions  -0.08510449273316564
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0033273916014129627
uu+dd contributions  -0.026061412756314177
ud contributions  -0.08515906293277244
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032180997183355563
uu+dd contributions  -0.025997704921650475
ud contributions  -0.08519685147301954
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.00323561304607255
uu+dd contributions  -0.026010486800758893
ud contributions  -0.08518915146648014
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003249478289511117
uu+dd contributions  -0.026015679431304055
ud contributions  -0.08515608123549971
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003279994321143197
uu+dd contributions  -0.026044756317495456
ud contributions  -0.08518808848190401
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003238890239938373
uu+dd contributions  -0.026035511361663544
ud contributions  -0.08528991365167939
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032202324557562816
uu+dd contributions  -0.026023293879755587
ud contributions  -0.08529860985670326
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003275386109322385
uu+dd contributions  -0.02603399164422851
ud contributions  -0.0852313082430715
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003218213844471193
uu+dd contributions  -0.025986747173462988
ud contributions  -0.08515987174363357
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032586368787051396
uu+dd contributions  -0.026021775537555695
ud contributions  -0.08515291096263063
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032111965335161275
uu+dd contributions  -0.025990661332179747
ud contributions  -0.08515829093296748
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032372379958858725
uu+dd contributions  -0.02601706311594958
ud contributions  -0.08521296191066063
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032933578433533253
uu+dd contributions  -0.02604038314103682
ud contributions  -0.08514032863541139
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003278184375102485
uu+dd contributions  -0.02603693299186925
ud contributions  -0.08515890408370427
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.00327160278299081
uu+dd contributions  -0.026035937427194972
ud contributions  -0.08518177040694759
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003264266960341637
uu+dd contributions  -0.02605819970214068
ud contributions  -0.08528755104331985
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003271370254962059
uu+dd contributions  -0.026041720491788246
ud contributions  -0.08517706847202756
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032654509603469053
uu+dd contributions  -0.026050607039911855
ud contributions  -0.08521868735925098
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003222389807902866
uu+dd contributions  -0.026006387872107996
ud contributions  -0.08526232757734128
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003286502785682506
uu+dd contributions  -0.02603879626288735
ud contributions  -0.08514991645532467
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.

u+d contributions  -0.0032264731659292422
uu+dd contributions  -0.026021939422758253
ud contributions  -0.085228620251438
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032653529091805937
uu+dd contributions  -0.02605894835680985
ud contributions  -0.08529008924253309
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032554082817626813
uu+dd contributions  -0.02603071106724197
ud contributions  -0.08520302140467867
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003257620219986688
uu+dd contributions  -0.02602079096370288
ud contributions  -0.08518442357459578
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032209184436191723
uu+dd contributions  -0.02598722168000825
ud contributions  -0.08520514933223726
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032417619008060167
uu+dd contributions  -0.025997617652659948
ud contributions  -0.08517067239887942
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003277124064827586
uu+dd contributions  -0.026033218370432893
ud contributions  -0.08529847503444783
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032778232690885045
uu+dd contributions  -0.02605700093432797
ud contributions  -0.08522805249923025
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032480829328481553
uu+dd contributions  -0.0260227364142034
ud contributions  -0.085193561110136
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003253330069728149
uu+dd contributions  -0.02603917002604042
ud contributions  -0.0852227981936467
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003218431875119725
uu+dd contributions  -0.026000551017175726
ud contributions  -0.08521225910208616
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032634400040607373
uu+dd contributions  -0.026039319002199406
ud contributions  -0.08521715618634573
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003270291082920355
uu+dd contributions  -0.02604213958744424
ud contributions  -0.08516340476140644
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003241365933005966
uu+dd contributions  -0.026012051670428134
ud contributions  -0.08519660842938552
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003234336821232744
uu+dd contributions  -0.026010091127360892
ud contributions  -0.08518467768769446
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003260431962837836
uu+dd contributions  -0.02601024095521069
ud contributions  -0.08516470818226624
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003288994005075754
uu+dd contributions  -0.02601092319716848
ud contributions  -0.08507130971905778
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032133434161740206
uu+dd contributions  -0.026001174406843262
ud contributions  -0.08521019568695092
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003246627445081976
uu+dd contributions  -0.026001750438865014
ud contributions  -0.08514714776980409
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003340092641314433
uu+dd contributions  -0.02609774620952738
ud contributions  -0.08522475151066121
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032673322481353044
uu+dd contributions  -0.026054574138999084
ud contributions  -0.08526756147286844
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032812513141785384
uu+dd contributions  -0.026052634272446445
ud contributions  -0.085244340413479
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032265650979754878
uu+dd contributions  -0.026003782859250247
ud contributions  -0.08517250003131102
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032908913424062915
uu+dd contributions  -0.0260498527842841
ud contributions  -0.08518105695627194
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032534540084526316
uu+dd contributions  -0.02600549151376768
ud contributions  -0.08512419033876817
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0033398447262288082
uu+dd contributions  -0.026128465206043384
ud contributions  -0.08533758277281875
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003261102526357715
uu+dd contributions  -0.02602736664655548
ud contributions  -0.08518155779329725
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032726993040676404
uu+dd contributions  -0.02602690523667301
ud contributions  -0.08515022563818977
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0031919703706308365
uu+dd contributions  -0.02602149939735518
ud contributions  -0.08527382739606032
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003309478312566058
uu+dd contributions  -0.026062182445855318
ud contributions  -0.08518958230312129
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.

u+d contributions  -0.0032051743271759993
uu+dd contributions  -0.026000018462770818
ud contributions  -0.0852098014984731
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003255456952057077
uu+dd contributions  -0.02600740926448919
ud contributions  -0.08518452388900354
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032364844159484597
uu+dd contributions  -0.026009148972933927
ud contributions  -0.08523235212825572
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032484072099768905
uu+dd contributions  -0.02602808623591591
ud contributions  -0.08518331777082981
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032509396591532355
uu+dd contributions  -0.02600672698064816
ud contributions  -0.08516810461355992
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032820013264345635
uu+dd contributions  -0.026041251142541647
ud contributions  -0.08520759086841408
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0033097094127479965
uu+dd contributions  -0.026133448681354237
ud contributions  -0.08543836020913573
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003247283130417393
uu+dd contributions  -0.026006521728343366
ud contributions  -0.0851259963983633
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032533184649171073
uu+dd contributions  -0.026032568660202027
ud contributions  -0.08526433132457133
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032344820692987103
uu+dd contributions  -0.02598480673613157
ud contributions  -0.08510558217422387
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032175564371334188
uu+dd contributions  -0.025989450323069364
ud contributions  -0.08516571036760334
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032786666143631593
uu+dd contributions  -0.02599608705237886
ud contributions  -0.08508556111349828
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032848534558765356
uu+dd contributions  -0.026042019300155858
ud contributions  -0.08517242624120575
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003271666919983075
uu+dd contributions  -0.026058280653695896
ud contributions  -0.08524987830413758
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0033501338315484355
uu+dd contributions  -0.02609517150078773
ud contributions  -0.08519364579754811
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003205766394415165
uu+dd contributions  -0.02597208825798116
ud contributions  -0.0851443531762849
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032804185935563094
uu+dd contributions  -0.026040602804607942
ud contributions  -0.08514610086006295
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0031808112747097246
uu+dd contributions  -0.025979398170133644
ud contributions  -0.08524309153040424
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.00321723201026657
uu+dd contributions  -0.025982665443743863
ud contributions  -0.08514249440009791
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003243196817795672
uu+dd contributions  -0.02600878693135989
ud contributions  -0.08519241544807335
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003206219749140719
uu+dd contributions  -0.02599002281693715
ud contributions  -0.08518135313885304
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032430071986471426
uu+dd contributions  -0.02598849517888243
ud contributions  -0.08513176448044754
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032309697164835892
uu+dd contributions  -0.02596810612864513
ud contributions  -0.08510419576368647
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032888915092773446
uu+dd contributions  -0.02603607510040679
ud contributions  -0.08514643252418995
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032596282108138005
uu+dd contributions  -0.026014671175912395
ud contributions  -0.08517275257019837
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003260693535392163
uu+dd contributions  -0.026023536112666407
ud contributions  -0.08517345966076308
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032460240682198943
uu+dd contributions  -0.026013184505086315
ud contributions  -0.08518270025561074
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032487138944762564
uu+dd contributions  -0.02598570000717032
ud contributions  -0.0851079552286791
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032286240989469225
uu+dd contributions  -0.0259646845131523
ud contributions  -0.0851017696844991
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032443888212281627
uu+dd contributions  -0.026018400476008986
ud contributions  -0.08518819926800592
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.

u+d contributions  -0.003297069597486921
uu+dd contributions  -0.02605698913383276
ud contributions  -0.0851628029648969
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032555504987032175
uu+dd contributions  -0.026008935666187148
ud contributions  -0.08514356869968615
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003212562603043613
uu+dd contributions  -0.025987825340865616
ud contributions  -0.0851706681924936
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032911542900599918
uu+dd contributions  -0.026039177002479975
ud contributions  -0.08517343851937614
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.00328813034576611
uu+dd contributions  -0.026041105155165375
ud contributions  -0.08514690027421652
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.00325429979892492
uu+dd contributions  -0.026035340956801687
ud contributions  -0.08522862305811661
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003274056927003468
uu+dd contributions  -0.026022398018114654
ud contributions  -0.08514498119447388
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003243266040117448
uu+dd contributions  -0.02599979519455754
ud contributions  -0.0851216638737918
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003301558211310752
uu+dd contributions  -0.02604959706540209
ud contributions  -0.08517952275550372
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003237827532000925
uu+dd contributions  -0.02600146775605788
ud contributions  -0.08512752082266128
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032808259594009816
uu+dd contributions  -0.026035946074588083
ud contributions  -0.0851906586094234
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032476950710256247
uu+dd contributions  -0.0259868189857359
ud contributions  -0.08512246403947651
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032517429330938346
uu+dd contributions  -0.02600879037235037
ud contributions  -0.08520786273625745
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003224067092499102
uu+dd contributions  -0.026013411175386976
ud contributions  -0.08523381006407826
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032696733063728653
uu+dd contributions  -0.026013414901088962
ud contributions  -0.08504585792542325
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0032877279210367454
uu+dd contributions  -0.02603321692757222
ud contributions  -0.08518667049014443
