#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.02/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.02)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:09:25 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.020000000000 AA    0.000000000000   0.000000000000   1.927520647056 Bohr

nuclear repulsion = 4.15040949741176
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         4.67
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp7x82to2b
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp7x82to2b
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.426883530288352  LUMO (A1) = 0.0250968908889931
Initial guess E= -75.3994056891229  |g|= 0.211894
macro= 0  E= -75.4099481952072  delta_E= -0.0105425  |g|= 0.211894  2 KF 5 JK
macro= 1  E= -75.410532828053  delta_E= -0.000584633  |g|= 0.0913019  2 KF 5 JK
macro= 2  E= -75.4088720260536  delta_E= 0.0016608  |g|= 0.0617749  2 KF 5 JK
macro= 3  E= -75.4103201244886  delta_E= -0.0014481  |g|= 0.106316  2 KF 5 JK
macro= 4  E= -75.408724695293  delta_E= 0.00159543  |g|= 0.0589423  2 KF 5 JK
macro= 5  E= -75.4102962686318  delta_E= -0.00157157  |g|= 0.107517  2 KF 5 JK
macro= 6  E= -75.4090366193187  delta_E= 0.00125965  |g|= 0.0604591  2 KF 5 JK
macro= 7  E= -75.4103950336133  delta_E= -0.00135841  |g|= 0.103517  2 KF 5 JK
macro= 8  E= -75.4089402661798  delta_E= 0.00145477  |g|= 0.0606934  2 KF 5 JK
macro= 9  E= -75.4103971191391  delta_E= -0.00145685  |g|= 0.105564  2 KF 5 JK
macro= 10  E= -75.4089471701921  delta_E= 0.00144995  |g|= 0.060455  2 KF 5 JK
macro= 11  E= -75.4104048309884  delta_E= -0.00145766  |g|= 0.105631  2 KF 5 JK
macro= 12  E= -75.4089114729979  delta_E= 0.00149336  |g|= 0.0601701  2 KF 5 JK
macro= 13  E= -75.4104092457444  delta_E= -0.00149777  |g|= 0.106258  2 KF 5 JK
macro= 14  E= -75.4088958169116  delta_E= 0.00151343  |g|= 0.0600642  2 KF 5 JK
macro= 15  E= -75.4104150793216  delta_E= -0.00151926  |g|= 0.106556  2 KF 5 JK
macro= 16  E= -75.4088710483014  delta_E= 0.00154403  |g|= 0.0598972  2 KF 5 JK
macro= 17  E= -75.4104202523313  delta_E= -0.0015492  |g|= 0.106965  2 KF 5 JK
macro= 18  E= -75.4088507779  delta_E= 0.00156947  |g|= 0.0597654  2 KF 5 JK
macro= 19  E= -75.4104257387021  delta_E= -0.00157496  |g|= 0.107303  2 KF 5 JK
macro= 20  E= -75.408828777251  delta_E= 0.00159696  |g|= 0.059616  2 KF 5 JK
macro= 21  E= -75.4104310881082  delta_E= -0.00160231  |g|= 0.107658  2 KF 5 JK
macro= 22  E= -75.4088079371191  delta_E= 0.00162315  |g|= 0.0594719  2 KF 5 JK
macro= 23  E= -75.4104364969541  delta_E= -0.00162856  |g|= 0.107993  2 KF 5 JK
macro= 24  E= -75.4087869621482  delta_E= 0.00164953  |g|= 0.0593217  2 KF 5 JK
macro= 25  E= -75.4104418683995  delta_E= -0.00165491  |g|= 0.108326  2 KF 5 JK
macro= 26  E= -75.4087664684745  delta_E= 0.0016754  |g|= 0.0591707  2 KF 5 JK
macro= 27  E= -75.4104472376781  delta_E= -0.00168077  |g|= 0.108648  2 KF 5 JK
macro= 28  E= -75.4087461980347  delta_E= 0.00170104  |g|= 0.0590165  2 KF 5 JK
macro= 29  E= -75.4104525809233  delta_E= -0.00170638  |g|= 0.108964  2 KF 5 JK
macro= 30  E= -75.408726288182  delta_E= 0.00172629  |g|= 0.0588605  2 KF 5 JK
macro= 31  E= -75.4104579006775  delta_E= -0.00173161  |g|= 0.109271  2 KF 5 JK
macro= 32  E= -75.4087066947228  delta_E= 0.00175121  |g|= 0.0587024  2 KF 5 JK
macro= 33  E= -75.4104631879302  delta_E= -0.00175649  |g|= 0.10957  2 KF 5 JK
macro= 34  E= -75.4086874535162  delta_E= 0.00177573  |g|= 0.0585424  2 KF 5 JK
macro= 35  E= -75.410468438934  delta_E= -0.00178099  |g|= 0.109861  2 KF 5 JK
macro= 36  E= -75.4086685622238  delta_E= 0.00179988  |g|= 0.0583809  2 KF 5 JK
macro= 37  E= -75.4104736478593  delta_E= -0.00180509  |g|= 0.110145  2 KF 5 JK
macro= 38  E= -75.4086500337245  delta_E= 0.00182361  |g|= 0.058218  2 KF 5 JK
macro= 39  E= -75.4104788100396  delta_E= -0.00182878  |g|= 0.11042  2 KF 5 JK
macro= 40  E= -75.4086318721315  delta_E= 0.00184694  |g|= 0.0580539  2 KF 5 JK
macro= 41  E= -75.4084582785026  delta_E= 0.000173594  |g|= 0.110688  2 KF 5 JK
macro= 42  E= -75.4096933218106  delta_E= -0.00123504  |g|= 0.09813  2 KF 5 JK
macro= 43  E= -75.408226276569  delta_E= 0.00146705  |g|= 0.0950848  2 KF 5 JK
macro= 44  E= -75.4095538886884  delta_E= -0.00132761  |g|= 0.101578  2 KF 5 JK
macro= 45  E= -75.408161728352  delta_E= 0.00139216  |g|= 0.0983345  2 KF 5 JK
macro= 46  E= -75.409559883667  delta_E= -0.00139816  |g|= 0.102356  2 KF 5 JK
macro= 47  E= -75.4081436810884  delta_E= 0.0014162  |g|= 0.0983828  2 KF 5 JK
macro= 48  E= -75.4095386697206  delta_E= -0.00139499  |g|= 0.102459  2 KF 5 JK
macro= 49  E= -75.4081086471403  delta_E= 0.00143002  |g|= 0.0989093  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4081086471403  |g|= 0.0989093  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4081086471403

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp7x82to2b
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp7x82to2b
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.281313236777245  LUMO (A1) = 0.0293250962144025
Initial guess E= -75.4111216547161  |g|= 0.0754059
macro= 0  E= -75.4120326337354  delta_E= -0.000910979  |g|= 0.0754059  2 KF 5 JK
macro= 1  E= -75.412057706349  delta_E= -2.50726e-05  |g|= 0.0226204  2 KF 5 JK
macro= 2  E= -75.411884305312  delta_E= 0.000173401  |g|= 0.0158578  2 KF 5 JK
macro= 3  E= -75.4120590268479  delta_E= -0.000174722  |g|= 0.0330916  2 KF 5 JK
macro= 4  E= -75.4119228073438  delta_E= 0.00013622  |g|= 0.011798  2 KF 5 JK
macro= 5  E= -75.4120532209969  delta_E= -0.000130414  |g|= 0.03033  2 KF 5 JK
macro= 6  E= -75.4118946957615  delta_E= 0.000158525  |g|= 0.017363  2 KF 5 JK
macro= 7  E= -75.4120529410706  delta_E= -0.000158245  |g|= 0.03238  2 KF 5 JK
macro= 8  E= -75.4118948395931  delta_E= 0.000158101  |g|= 0.0122383  2 KF 5 JK
macro= 9  E= -75.4120455662665  delta_E= -0.000150727  |g|= 0.0330489  2 KF 5 JK
macro= 10  E= -75.4119734642219  delta_E= 7.2102e-05  |g|= 0.0156351  2 KF 5 JK
macro= 11  E= -75.4120281981531  delta_E= -5.47339e-05  |g|= 0.026988  2 KF 5 JK
macro= 12  E= -75.4119545215274  delta_E= 7.36766e-05  |g|= 0.0164871  2 KF 5 JK
macro= 13  E= -75.412007376526  delta_E= -5.2855e-05  |g|= 0.0284309  2 KF 5 JK
macro= 14  E= -75.4119522853501  delta_E= 5.50912e-05  |g|= 0.0190677  2 KF 5 JK
macro= 15  E= -75.4119956401763  delta_E= -4.33548e-05  |g|= 0.0290214  2 KF 5 JK
macro= 16  E= -75.4119528474563  delta_E= 4.27927e-05  |g|= 0.0201318  2 KF 5 JK
macro= 17  E= -75.4119915423778  delta_E= -3.86949e-05  |g|= 0.02907  2 KF 5 JK
macro= 18  E= -75.4119525528069  delta_E= 3.89896e-05  |g|= 0.0204688  2 KF 5 JK
macro= 19  E= -75.4119902108551  delta_E= -3.7658e-05  |g|= 0.0291406  2 KF 5 JK
macro= 20  E= -75.4119526340224  delta_E= 3.75768e-05  |g|= 0.0205641  2 KF 5 JK
macro= 21  E= -75.411989739413  delta_E= -3.71054e-05  |g|= 0.0291561  2 KF 5 JK
macro= 22  E= -75.4119523535328  delta_E= 3.73859e-05  |g|= 0.0205835  2 KF 5 JK
macro= 23  E= -75.4119893430211  delta_E= -3.69895e-05  |g|= 0.0291862  2 KF 5 JK
macro= 24  E= -75.4119522903135  delta_E= 3.70527e-05  |g|= 0.020607  2 KF 5 JK
macro= 25  E= -75.4119890219088  delta_E= -3.67316e-05  |g|= 0.029203  2 KF 5 JK
macro= 26  E= -75.4119520764918  delta_E= 3.69454e-05  |g|= 0.0206193  2 KF 5 JK
macro= 27  E= -75.4119886773397  delta_E= -3.66008e-05  |g|= 0.0292264  2 KF 5 JK
macro= 28  E= -75.4119519641963  delta_E= 3.67131e-05  |g|= 0.0206382  2 KF 5 JK
macro= 29  E= -75.4119883546744  delta_E= -3.63905e-05  |g|= 0.0292447  2 KF 5 JK
macro= 30  E= -75.4119517822155  delta_E= 3.65725e-05  |g|= 0.0206525  2 KF 5 JK
macro= 31  E= -75.4119880217738  delta_E= -3.62396e-05  |g|= 0.0292661  2 KF 5 JK
macro= 32  E= -75.4119516477614  delta_E= 3.6374e-05  |g|= 0.0206696  2 KF 5 JK
macro= 33  E= -75.411987699616  delta_E= -3.60519e-05  |g|= 0.0292851  2 KF 5 JK
macro= 34  E= -75.4119514800648  delta_E= 3.62196e-05  |g|= 0.0206844  2 KF 5 JK
macro= 35  E= -75.4119873744117  delta_E= -3.58943e-05  |g|= 0.0293056  2 KF 5 JK
macro= 36  E= -75.4119513350791  delta_E= 3.60393e-05  |g|= 0.0207004  2 KF 5 JK
macro= 37  E= -75.4119870554134  delta_E= -3.57203e-05  |g|= 0.029325  2 KF 5 JK
macro= 38  E= -75.4119511738517  delta_E= 3.58816e-05  |g|= 0.0207151  2 KF 5 JK
macro= 39  E= -75.4119867364847  delta_E= -3.55626e-05  |g|= 0.029345  2 KF 5 JK
macro= 40  E= -75.4119510236784  delta_E= 3.57128e-05  |g|= 0.0207302  2 KF 5 JK
macro= 41  E= -75.4119864217672  delta_E= -3.53981e-05  |g|= 0.0293644  2 KF 5 JK
macro= 42  E= -75.4119508653803  delta_E= 3.55564e-05  |g|= 0.0207445  2 KF 5 JK
macro= 43  E= -75.4119861085013  delta_E= -3.52431e-05  |g|= 0.0293841  2 KF 5 JK
macro= 44  E= -75.4119507125459  delta_E= 3.5396e-05  |g|= 0.0207589  2 KF 5 JK
macro= 45  E= -75.411985798564  delta_E= -3.5086e-05  |g|= 0.0294035  2 KF 5 JK
macro= 46  E= -75.411950555552  delta_E= 3.5243e-05  |g|= 0.0207728  2 KF 5 JK
macro= 47  E= -75.4119854907075  delta_E= -3.49352e-05  |g|= 0.0294229  2 KF 5 JK
macro= 48  E= -75.411950401294  delta_E= 3.50894e-05  |g|= 0.0207865  2 KF 5 JK
macro= 49  E= -75.4119851857897  delta_E= -3.47845e-05  |g|= 0.0294421  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4119851857897  |g|= 0.0294421  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4119851857897
**** SCF Summaries ****
Total Energy =                         -75.411985185789661
Nuclear Repulsion Energy =               4.150409497411765
One-electron Energy =                 -112.235188928641179
Two-electron Energy =                   32.672794245439746
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    0    1    0    0    0    0
single occ                     0    1    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6364855981038  | -20.6532763090998  | -20.6196948871077  occ= 2
MO #2   (A1  #2 ) energy= -1.29717882818829  | -1.36834802710155  | -1.22600962927504  occ= 2
MO #3   (A1  #3 ) energy= -0.649894707626289 | -0.669620720247629 | -0.630168695004948 occ= 2
MO #4   (E1y #1 ) energy= -0.538011390827792 | -0.557150103714918 | -0.518872677940666 occ= 2
MO #5   (E1x #1 ) energy= -0.249014094375528 | -0.64645938826959  | 0.148431199518535  occ= 1
MO #6   (A1  #4 ) energy= 0.0297895889247556 | 0.0291530207515804 | 0.0304261570979318 occ= 0
MO #7   (A1  #5 ) energy= 0.136844937046213  | 0.135712467933456  | 0.137977406158984  occ= 0
MO #8   (E1x #2 ) energy= 0.160138753567421  | 0.15453989013284   | 0.165737617002003  occ= 0
MO #9   (E1y #2 ) energy= 0.164380212487376  | 0.163605596771987  | 0.165154828202764  occ= 0
MO #10  (A1  #6 ) energy= 0.183113782566817  | 0.180713278374327  | 0.185514286759306  occ= 0
MO #11  (A1  #7 ) energy= 0.262000647948732  | 0.259885059039647  | 0.264116236857819  occ= 0
MO #12  (E1x #3 ) energy= 0.269880535431158  | 0.266946890192313  | 0.272814180670004  occ= 0
MO #13  (E1y #3 ) energy= 0.273320201653791  | 0.272938018053483  | 0.273702385254097  occ= 0
MO #14  (A1  #8 ) energy= 0.420294843846789  | 0.415943266777216  | 0.424646420916397  occ= 0
MO #15  (A1  #9 ) energy= 0.633929832244206  | 0.62856150947967   | 0.639298155008768  occ= 0
MO #16  (E2x #1 ) energy= 0.646599332147889  | 0.637183309440989  | 0.656015354854788  occ= 0
MO #17  (E2y #1 ) energy= 0.646599332147888  | 0.637183309440988  | 0.656015354854787  occ= 0
MO #18  (E1x #4 ) energy= 0.724329697902542  | 0.715269681213313  | 0.733389714591767  occ= 0
MO #19  (E1y #4 ) energy= 0.729985557559507  | 0.72876613455902   | 0.73120498055999   occ= 0
MO #20  (A1  #10) energy= 0.866050647249651  | 0.86344329837296   | 0.868657996126346  occ= 0
MO #21  (E1x #5 ) energy= 0.887031882210899  | 0.865458982705325  | 0.908604781716471  occ= 0
MO #22  (E1y #5 ) energy= 0.88953118873118   | 0.88682570627448   | 0.892236671187882  occ= 0
MO #23  (E2x #2 ) energy= 0.934476097926402  | 0.932833874470576  | 0.936118321382232  occ= 0
MO #24  (E2y #2 ) energy= 0.9344760979264    | 0.932833874470572  | 0.936118321382228  occ= 0
MO #25  (A1  #11) energy= 0.94660245443889   | 0.940829346119841  | 0.952375562757972  occ= 0
MO #26  (A1  #12) energy= 0.988441198956815  | 0.984786803757743  | 0.992095594155929  occ= 0
MO #27  (E1x #6 ) energy= 0.998210028969056  | 0.969073972386911  | 1.0273460855512    occ= 0
MO #28  (E1y #6 ) energy= 1.00436121317259   | 1.00073246561678   | 1.00798996072841   occ= 0
MO #29  (E1x #7 ) energy= 1.48082362109362   | 1.4708783968309    | 1.49076884535633   occ= 0
MO #30  (E1y #7 ) energy= 1.48908318209032   | 1.4876753282783    | 1.49049103590233   occ= 0
MO #31  (A1  #13) energy= 1.72332079847205   | 1.71397759137429   | 1.73266400556996   occ= 0
MO #32  (A1  #14) energy= 1.97356334563938   | 1.96304299483492   | 1.98408369644383   occ= 0
MO #33  (E3x #1 ) energy= 2.05435066134598   | 2.04412324489433   | 2.06457807779763   occ= 0
MO #34  (E3y #1 ) energy= 2.05435066134598   | 2.04412324489433   | 2.06457807779763   occ= 0
MO #35  (E2x #3 ) energy= 2.13298228637374   | 2.09881984155062   | 2.16714473119686   occ= 0
MO #36  (E2y #3 ) energy= 2.13298228637373   | 2.09881984155061   | 2.16714473119686   occ= 0
MO #37  (E1x #8 ) energy= 2.26342074393584   | 2.23934845755944   | 2.28749303031223   occ= 0
MO #38  (E1y #8 ) energy= 2.27969605123653   | 2.27591230695621   | 2.28347979551686   occ= 0
MO #39  (E2x #4 ) energy= 2.31502466795331   | 2.30556065911164   | 2.32448867679498   occ= 0
MO #40  (E2y #4 ) energy= 2.31502466795331   | 2.30556065911164   | 2.32448867679498   occ= 0
MO #41  (A1  #15) energy= 2.45425268792445   | 2.44602850460012   | 2.46247687124879   occ= 0
MO #42  (A1  #16) energy= 2.5252390061003    | 2.5168752532629    | 2.53360275893784   occ= 0
MO #43  (E1x #9 ) energy= 2.74002792260977   | 2.72255857296097   | 2.75749727225856   occ= 0
MO #44  (E1y #9 ) energy= 2.76131139466591   | 2.75798039967237   | 2.76464238965944   occ= 0
MO #45  (A1  #17) energy= 3.500974527847     | 3.4968453432628    | 3.50510371243121   occ= 0
MO #46  (E2x #5 ) energy= 3.99192246114251   | 3.98958619660511   | 3.99425872567992   occ= 0
MO #47  (E2y #5 ) energy= 3.99192246114251   | 3.98958619660511   | 3.99425872567992   occ= 0
MO #48  (E1x #10) energy= 4.04751203565411   | 3.99311743029821   | 4.10190664101      occ= 0
MO #49  (E1y #10) energy= 4.0585100067265    | 4.05125014918781   | 4.06576986426519   occ= 0
MO #50  (E1x #11) energy= 4.28718873741409   | 4.28484435755635   | 4.28953311727183   occ= 0
MO #51  (E1y #11) energy= 4.2957065324378    | 4.29526875148616   | 4.29614431338947   occ= 0
MO #52  (A1  #18) energy= 4.55737644642669   | 4.55235510441886   | 4.56239778843455   occ= 0
MO #53  (A1  #19) energy= 4.99746315985835   | 4.98965288245747   | 5.00527343725928   occ= 0
MO #54  (E1x #12) energy= 5.13294395404332   | 5.11304161307019   | 5.15284629501644   occ= 0
MO #55  (E1y #12) energy= 5.15424841489739   | 5.15054499646464   | 5.15795183333015   occ= 0
MO #56  (A1  #20) energy= 6.18443035108166   | 6.17437667611315   | 6.19448402605002   occ= 0
MO #57  (E3x #2 ) energy= 6.45758555027322   | 6.43263097508707   | 6.48254012545938   occ= 0
MO #58  (E3y #2 ) energy= 6.45758555027323   | 6.43263097508708   | 6.48254012545938   occ= 0
MO #59  (E2x #6 ) energy= 6.59332980123854   | 6.57519422271274   | 6.61146537976435   occ= 0
MO #60  (E2y #6 ) energy= 6.59332980123854   | 6.57519422271274   | 6.61146537976434   occ= 0
MO #61  (E2x #7 ) energy= 7.0066677285705    | 6.96536452387921   | 7.04797093326179   occ= 0
MO #62  (E2y #7 ) energy= 7.00666772857051   | 6.96536452387921   | 7.04797093326179   occ= 0
MO #63  (E1x #13) energy= 7.04635922514972   | 7.02635651621728   | 7.06636193408217   occ= 0
MO #64  (E1y #13) energy= 7.08143483948369   | 7.07687746137083   | 7.08599221759654   occ= 0
MO #65  (E1x #14) energy= 7.19661504832149   | 7.15754228185952   | 7.23568781478345   occ= 0
MO #66  (E1y #14) energy= 7.22764569725403   | 7.2211544952367    | 7.23413689927135   occ= 0
MO #67  (A1  #21) energy= 7.28671601049108   | 7.27769772907485   | 7.2957342919073    occ= 0
MO #68  (A1  #22) energy= 7.59627321405557   | 7.58363663662242   | 7.60890979148873   occ= 0
MO #69  (A1  #23) energy= 12.0659088132297   | 12.0515354813031   | 12.0802821451565   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.83751
pop of  0 O 3s        0.00412
pop of  0 O 4s        0.00113
pop of  0 O 5s        0.00021
pop of  0 O 2px       0.99692
pop of  0 O 2py       1.99198
pop of  0 O 2pz       1.49794
pop of  0 O 3px       0.00016
pop of  0 O 3py       0.00146
pop of  0 O 3pz       0.00113
pop of  0 O 4px       0.00080
pop of  0 O 4py       0.00066
pop of  0 O 4pz       0.00165
pop of  0 O 5px       0.00011
pop of  0 O 5py       0.00027
pop of  0 O 5pz       0.00008
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00166
pop of  0 O 3dz^2     0.00730
pop of  0 O 3dxz      0.00081
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00035
pop of  0 O 4dz^2     0.00055
pop of  0 O 4dxz      0.00016
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00004
pop of  0 O 5dz^2     0.00013
pop of  0 O 5dxz      0.00002
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00018
pop of  0 O 4f 0      0.00075
pop of  0 O 4f 1      0.00001
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00005
pop of  0 O 5f 0      0.00012
pop of  0 O 5f 1      0.00001
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.63092
pop of  1 H 2s        0.01094
pop of  1 H 3s        0.00381
pop of  1 H 4s        0.00010
pop of  1 H 2px       0.00047
pop of  1 H 2py       0.00323
pop of  1 H 2pz       0.00090
pop of  1 H 3px       0.00036
pop of  1 H 3py       0.00000
pop of  1 H 3pz       0.00043
pop of  1 H 4px       0.00011
pop of  1 H 4py       0.00001
pop of  1 H 4pz       0.00008
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00011
pop of  1 H 3dz^2     0.00017
pop of  1 H 3dxz      0.00006
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00000
pop of  1 H 4dz^2     0.00005
pop of  1 H 4dxz      0.00001
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.34824
charge of  1H =      0.34824
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.79983
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.02/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.02)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:09:51 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       122.94

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpxh4_mfuz
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpxh4_mfuz
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.249014094375525  LUMO = 0.380525724647621
Initial guess E= -75.4119936408206  |g|= 0.000516242
macro= 0  E= -75.4119937666932  delta_E= -1.25873e-07  |g|= 0.000516242  1 KF 3 JK
macro= 1  E= -75.4119937666932  delta_E= -2.84217e-14  |g|= 2.08023e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4119937666932  |g|= 2.08023e-06  total 3 KF 8 JK
converged SCF energy = -75.4119937666932
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.02/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.02)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:09:53 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       128.93

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp0x4hkurw
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp0x4hkurw
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.2490140019565  LUMO = 0.380525683676033
Initial guess E= -75.4119936408084  |g|= 0.000516222
macro= 0  E= -75.4119937666932  delta_E= -1.25885e-07  |g|= 0.000516222  1 KF 3 JK
macro= 1  E= -75.4119937666932  delta_E= 0  |g|= 2.63968e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4119937666932  |g|= 2.63968e-08  total 3 KF 8 JK
converged SCF energy = -75.4119937666932
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.02/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.02)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:09:55 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       135.03

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpdfkkeyle
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpdfkkeyle
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.249468802115373  LUMO = 0.0297834871768191
Initial guess E= -75.4126832330805  |g|= 0.0106477
macro= 0  E= -75.4127105908504  delta_E= -2.73578e-05  |g|= 0.000395497  2 KF 7 JK
macro= 1  E= -75.4127105908505  delta_E= -4.26326e-14  |g|= 8.07545e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4127105908505  |g|= 8.07545e-06  total 4 KF 12 JK
converged SCF energy = -75.4127105908505
u+d contributions  -0.05663321668781596
uu+dd contributions  -0.08746500229029244
ud contributions  -0.1824544370337402
u+d contributions  -0.008362595902914298
uu+dd contributions  -0.03909191041585081
ud contributions  -0.13389779836635993
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.02/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.02)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:09:59 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       147.69

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpn22345ai
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpn22345ai
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.248580913933801  LUMO = 0.380635378354798
Initial guess E= -75.411993583603  |g|= 0.000551725
macro= 0  E= -75.4119937666932  delta_E= -1.8309e-07  |g|= 0.000551725  1 KF 2 JK
macro= 1  E= -75.4119937666932  delta_E= 0  |g|= 6.86503e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4119937666932  |g|= 6.86503e-08  total 3 KF 7 JK
converged SCF energy = -75.4119937666932
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.02/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.02)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:10:00 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       153.36

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpvmhzs6jh
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpvmhzs6jh
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.24903317182534  LUMO = 0.0297782924825227
Initial guess E= -75.4126375837078  |g|= 0.00756796
macro= 0  E= -75.4126568598332  delta_E= -1.92761e-05  |g|= 0.000307072  2 KF 7 JK
macro= 1  E= -75.4126568598332  delta_E= -1.42109e-14  |g|= 4.27832e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4126568598332  |g|= 4.27832e-06  total 4 KF 12 JK
converged SCF energy = -75.4126568598332
u+d contributions  -0.023607454974429957
uu+dd contributions  -0.04705377531784045
ud contributions  -0.10800903840679953
u+d contributions  -0.005465874484248188
uu+dd contributions  -0.02888690612321409
ud contributions  -0.0898333614696957
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.907317, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.248604, i_min=0
In the tapering subroutine, i=2, E(i)=-75.411994, i_min=1
In the tapering subroutine, i=3, E(i)=-75.019251, i_min=2
In the tapering subroutine, i=4, E(i)=-75.407628, i_min=2
In the tapering subroutine, i=5, E(i)=-75.007763, i_min=2
In the tapering subroutine, i=6, E(i)=-74.856080, i_min=2
In the tapering subroutine, i=7, E(i)=-75.049527, i_min=2
In the tapering subroutine, i=8, E(i)=-75.248604, i_min=2
In the tapering subroutine, i=9, E(i)=-75.262278, i_min=2
In the tapering subroutine, i=10, E(i)=-75.043531, i_min=2
In the tapering subroutine, i=11, E(i)=-75.411994, i_min=2
In the tapering subroutine, i=12, E(i)=-75.031287, i_min=2
In the tapering subroutine, i=13, E(i)=-75.407628, i_min=2
In the tapering subroutine, i=14, E(i)=-75.049527, i_min=2
In the tapering subroutine, i=15, E(i)=-74.894357, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0054658652164439134
uu+dd contributions  -0.028886969538234195
ud contributions  -0.0898102629096571
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005465786812680507
uu+dd contributions  -0.0288869272014701
ud contributions  -0.0898103762637154
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005465786812680507
uu+dd contributions  -0.0288869272014701
ud contributions  -0.0898103762637154
