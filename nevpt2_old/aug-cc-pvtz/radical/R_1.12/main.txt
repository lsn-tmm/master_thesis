#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.12/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.12)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:12:43 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.120000000000 AA    0.000000000000   0.000000000000   2.116493259513 Bohr

nuclear repulsion = 3.77983722085714
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         4.33
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgefl0ql7
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgefl0ql7
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.416870057385849  LUMO (A1) = 0.0190735684398009
Initial guess E= -75.3809376587578  |g|= 0.213912
macro= 0  E= -75.3934238424494  delta_E= -0.0124862  |g|= 0.213912  2 KF 5 JK
macro= 1  E= -75.3937633423279  delta_E= -0.0003395  |g|= 0.0879345  2 KF 5 JK
macro= 2  E= -75.3922239249987  delta_E= 0.00153942  |g|= 0.0607837  2 KF 5 JK
macro= 3  E= -75.3935605667501  delta_E= -0.00133664  |g|= 0.104684  2 KF 5 JK
macro= 4  E= -75.3921708146702  delta_E= 0.00138975  |g|= 0.059787  2 KF 5 JK
macro= 5  E= -75.3935818663992  delta_E= -0.00141105  |g|= 0.104659  2 KF 5 JK
macro= 6  E= -75.3923729755195  delta_E= 0.00120889  |g|= 0.0611678  2 KF 5 JK
macro= 7  E= -75.3936290621102  delta_E= -0.00125609  |g|= 0.102097  2 KF 5 JK
macro= 8  E= -75.392229308328  delta_E= 0.00139975  |g|= 0.0605497  2 KF 5 JK
macro= 9  E= -75.3936256719383  delta_E= -0.00139636  |g|= 0.104652  2 KF 5 JK
macro= 10  E= -75.3922504789106  delta_E= 0.00137519  |g|= 0.0606087  2 KF 5 JK
macro= 11  E= -75.3936363625781  delta_E= -0.00138588  |g|= 0.104426  2 KF 5 JK
macro= 12  E= -75.3922039012087  delta_E= 0.00143246  |g|= 0.0603503  2 KF 5 JK
macro= 13  E= -75.3936409048424  delta_E= -0.001437  |g|= 0.105215  2 KF 5 JK
macro= 14  E= -75.3921859318197  delta_E= 0.00145497  |g|= 0.0602415  2 KF 5 JK
macro= 15  E= -75.3936481011014  delta_E= -0.00146217  |g|= 0.105547  2 KF 5 JK
macro= 16  E= -75.3921561426403  delta_E= 0.00149196  |g|= 0.0600585  2 KF 5 JK
macro= 17  E= -75.3936542274592  delta_E= -0.00149808  |g|= 0.106047  2 KF 5 JK
macro= 18  E= -75.3921315121612  delta_E= 0.00152272  |g|= 0.0599011  2 KF 5 JK
macro= 19  E= -75.3936608715322  delta_E= -0.00152936  |g|= 0.106463  2 KF 5 JK
macro= 20  E= -75.3921049969319  delta_E= 0.00155587  |g|= 0.0597255  2 KF 5 JK
macro= 21  E= -75.3936673505126  delta_E= -0.00156235  |g|= 0.106901  2 KF 5 JK
macro= 22  E= -75.3920795821334  delta_E= 0.00158777  |g|= 0.0595509  2 KF 5 JK
macro= 23  E= -75.393673940905  delta_E= -0.00159436  |g|= 0.107317  2 KF 5 JK
macro= 24  E= -75.3920540750025  delta_E= 0.00161987  |g|= 0.0593691  2 KF 5 JK
macro= 25  E= -75.3936805138025  delta_E= -0.00162644  |g|= 0.107729  2 KF 5 JK
macro= 26  E= -75.3920290158412  delta_E= 0.0016515  |g|= 0.0591839  2 KF 5 JK
macro= 27  E= -75.3936871104028  delta_E= -0.00165809  |g|= 0.10813  2 KF 5 JK
macro= 28  E= -75.3920042238191  delta_E= 0.00168289  |g|= 0.058994  2 KF 5 JK
macro= 29  E= -75.3936937003951  delta_E= -0.00168948  |g|= 0.108521  2 KF 5 JK
macro= 30  E= -75.3919798128673  delta_E= 0.00171389  |g|= 0.0588004  2 KF 5 JK
macro= 31  E= -75.3937002831626  delta_E= -0.00172047  |g|= 0.108903  2 KF 5 JK
macro= 32  E= -75.3919557722791  delta_E= 0.00174451  |g|= 0.058603  2 KF 5 JK
macro= 33  E= -75.3937068457012  delta_E= -0.00175107  |g|= 0.109275  2 KF 5 JK
macro= 34  E= -75.3919321392097  delta_E= 0.00177471  |g|= 0.0584023  2 KF 5 JK
macro= 35  E= -75.3937133801878  delta_E= -0.00178124  |g|= 0.109636  2 KF 5 JK
macro= 36  E= -75.3919089279085  delta_E= 0.00180445  |g|= 0.0581985  2 KF 5 JK
macro= 37  E= -75.3937198768177  delta_E= -0.00181095  |g|= 0.109988  2 KF 5 JK
macro= 38  E= -75.3918861586503  delta_E= 0.00183372  |g|= 0.0579921  2 KF 5 JK
macro= 39  E= -75.3937263268507  delta_E= -0.00184017  |g|= 0.110329  2 KF 5 JK
macro= 40  E= -75.39186384598  delta_E= 0.00186248  |g|= 0.0577834  2 KF 5 JK
macro= 41  E= -75.393732721455  delta_E= -0.00186888  |g|= 0.110661  2 KF 5 JK
macro= 42  E= -75.3918420035469  delta_E= 0.00189072  |g|= 0.0575728  2 KF 5 JK
macro= 43  E= -75.3937390522654  delta_E= -0.00189705  |g|= 0.110982  2 KF 5 JK
macro= 44  E= -75.3918206422312  delta_E= 0.00191841  |g|= 0.0573605  2 KF 5 JK
macro= 45  E= -75.3914529877324  delta_E= 0.000367654  |g|= 0.111293  2 KF 5 JK
macro= 46  E= -75.392965516387  delta_E= -0.00151253  |g|= 0.102059  2 KF 5 JK
macro= 47  E= -75.3912915067283  delta_E= 0.00167401  |g|= 0.0942754  2 KF 5 JK
macro= 48  E= -75.3928033663377  delta_E= -0.00151186  |g|= 0.10405  2 KF 5 JK
macro= 49  E= -75.3912177814106  delta_E= 0.00158558  |g|= 0.0982454  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3912177814106  |g|= 0.0982454  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3912177814106

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgefl0ql7
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgefl0ql7
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.27872810558367  LUMO (A1) = 0.0274399918582196
Initial guess E= -75.3942193057943  |g|= 0.079828
macro= 0  E= -75.3952889834784  delta_E= -0.00106968  |g|= 0.079828  2 KF 5 JK
macro= 1  E= -75.3953125974239  delta_E= -2.36139e-05  |g|= 0.0226854  2 KF 5 JK
macro= 2  E= -75.3951366155671  delta_E= 0.000175982  |g|= 0.015853  2 KF 5 JK
macro= 3  E= -75.3953164090092  delta_E= -0.000179793  |g|= 0.0331888  2 KF 5 JK
macro= 4  E= -75.3951735227978  delta_E= 0.000142886  |g|= 0.0115453  2 KF 5 JK
macro= 5  E= -75.3952837551112  delta_E= -0.000110232  |g|= 0.0302995  2 KF 5 JK
macro= 6  E= -75.3952356386349  delta_E= 4.81165e-05  |g|= 0.0175989  2 KF 5 JK
macro= 7  E= -75.3952986304082  delta_E= -6.29918e-05  |g|= 0.0259279  2 KF 5 JK
macro= 8  E= -75.3952161290574  delta_E= 8.25014e-05  |g|= 0.0157656  2 KF 5 JK
macro= 9  E= -75.3952990469307  delta_E= -8.29179e-05  |g|= 0.0271998  2 KF 5 JK
macro= 10  E= -75.3952087668238  delta_E= 9.02801e-05  |g|= 0.0159689  2 KF 5 JK
macro= 11  E= -75.3952995182442  delta_E= -9.07514e-05  |g|= 0.0277622  2 KF 5 JK
macro= 12  E= -75.3952064368488  delta_E= 9.30814e-05  |g|= 0.0161628  2 KF 5 JK
macro= 13  E= -75.3952997029344  delta_E= -9.32661e-05  |g|= 0.0279705  2 KF 5 JK
macro= 14  E= -75.3952058929802  delta_E= 9.381e-05  |g|= 0.0161968  2 KF 5 JK
macro= 15  E= -75.3952997494347  delta_E= -9.38565e-05  |g|= 0.0280379  2 KF 5 JK
macro= 16  E= -75.3952058962517  delta_E= 9.38532e-05  |g|= 0.0161865  2 KF 5 JK
macro= 17  E= -75.3952997709102  delta_E= -9.38747e-05  |g|= 0.0280541  2 KF 5 JK
macro= 18  E= -75.3952059129745  delta_E= 9.38579e-05  |g|= 0.0161694  2 KF 5 JK
macro= 19  E= -75.3952998071166  delta_E= -9.38941e-05  |g|= 0.0280636  2 KF 5 JK
macro= 20  E= -75.3952058257571  delta_E= 9.39814e-05  |g|= 0.0161561  2 KF 5 JK
macro= 21  E= -75.3952998580223  delta_E= -9.40323e-05  |g|= 0.0280787  2 KF 5 JK
macro= 22  E= -75.3952056706885  delta_E= 9.41873e-05  |g|= 0.0161464  2 KF 5 JK
macro= 23  E= -75.3952999155142  delta_E= -9.42448e-05  |g|= 0.0280986  2 KF 5 JK
macro= 24  E= -75.3952054932857  delta_E= 9.44222e-05  |g|= 0.0161384  2 KF 5 JK
macro= 25  E= -75.3952999745224  delta_E= -9.44812e-05  |g|= 0.0281202  2 KF 5 JK
macro= 26  E= -75.3952053143204  delta_E= 9.46602e-05  |g|= 0.0161305  2 KF 5 JK
macro= 27  E= -75.395300033442  delta_E= -9.47191e-05  |g|= 0.0281421  2 KF 5 JK
macro= 28  E= -75.3952051378239  delta_E= 9.48956e-05  |g|= 0.0161224  2 KF 5 JK
macro= 29  E= -75.3953000922633  delta_E= -9.49544e-05  |g|= 0.0281639  2 KF 5 JK
macro= 30  E= -75.3952049623184  delta_E= 9.51299e-05  |g|= 0.016114  2 KF 5 JK
macro= 31  E= -75.3953001512924  delta_E= -9.5189e-05  |g|= 0.0281857  2 KF 5 JK
macro= 32  E= -75.3952047861542  delta_E= 9.53651e-05  |g|= 0.0161054  2 KF 5 JK
macro= 33  E= -75.3953002107154  delta_E= -9.54246e-05  |g|= 0.0282074  2 KF 5 JK
macro= 34  E= -75.3952046086397  delta_E= 9.56021e-05  |g|= 0.0160966  2 KF 5 JK
macro= 35  E= -75.3953002705763  delta_E= -9.56619e-05  |g|= 0.0282293  2 KF 5 JK
macro= 36  E= -75.3952044297019  delta_E= 9.58409e-05  |g|= 0.0160877  2 KF 5 JK
macro= 37  E= -75.3953003308565  delta_E= -9.59012e-05  |g|= 0.0282512  2 KF 5 JK
macro= 38  E= -75.3952042494555  delta_E= 9.60814e-05  |g|= 0.0160786  2 KF 5 JK
macro= 39  E= -75.3953003915258  delta_E= -9.61421e-05  |g|= 0.0282733  2 KF 5 JK
macro= 40  E= -75.3952040680091  delta_E= 9.63235e-05  |g|= 0.0160694  2 KF 5 JK
macro= 41  E= -75.3953004525613  delta_E= -9.63846e-05  |g|= 0.0282954  2 KF 5 JK
macro= 42  E= -75.3952038854282  delta_E= 9.65671e-05  |g|= 0.0160601  2 KF 5 JK
macro= 43  E= -75.3953005139459  delta_E= -9.66285e-05  |g|= 0.0283176  2 KF 5 JK
macro= 44  E= -75.3952037017551  delta_E= 9.68122e-05  |g|= 0.0160506  2 KF 5 JK
macro= 45  E= -75.395300575665  delta_E= -9.68739e-05  |g|= 0.0283399  2 KF 5 JK
macro= 46  E= -75.3952035170262  delta_E= 9.70586e-05  |g|= 0.0160409  2 KF 5 JK
macro= 47  E= -75.3953006377035  delta_E= -9.71207e-05  |g|= 0.0283622  2 KF 5 JK
macro= 48  E= -75.3952033312791  delta_E= 9.73064e-05  |g|= 0.0160311  2 KF 5 JK
macro= 49  E= -75.3953007000467  delta_E= -9.73688e-05  |g|= 0.0283846  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3953007000467  |g|= 0.0283846  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3953007000467
**** SCF Summaries ****
Total Energy =                         -75.395300700046690
Nuclear Repulsion Energy =               3.779837220857142
One-electron Energy =                 -111.572470549409076
Two-electron Energy =                   32.397332628505239
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    1    0    0    0    0    0
single occ                     0    0    1    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6397462492751  | -20.6566963103836  | -20.6227961881666  occ= 2
MO #2   (A1  #2 ) energy= -1.27252544087083  | -1.3452370636906   | -1.19981381805107  occ= 2
MO #3   (A1  #3 ) energy= -0.621280554868116 | -0.639346950805084 | -0.603214158931148 occ= 2
MO #4   (E1x #1 ) energy= -0.533894679292483 | -0.553101791288088 | -0.514687567296879 occ= 2
MO #5   (E1y #1 ) energy= -0.244213500921365 | -0.642911443785462 | 0.154484441942733  occ= 1
MO #6   (A1  #4 ) energy= 0.0281079384489542 | 0.0272848141124672 | 0.0289310627854407 occ= 0
MO #7   (A1  #5 ) energy= 0.133810096632668  | 0.132006173974181  | 0.135614019291152  occ= 0
MO #8   (E1y #2 ) energy= 0.162248399996784  | 0.156260609651771  | 0.168236190341797  occ= 0
MO #9   (E1x #2 ) energy= 0.166439614502634  | 0.165610254792826  | 0.167268974212441  occ= 0
MO #10  (A1  #6 ) energy= 0.175779999707994  | 0.173445513172145  | 0.178114486243842  occ= 0
MO #11  (A1  #7 ) energy= 0.258239036029011  | 0.255850384130587  | 0.260627687927439  occ= 0
MO #12  (E1y #3 ) energy= 0.266838242057888  | 0.264322640194954  | 0.269353843920821  occ= 0
MO #13  (E1x #3 ) energy= 0.27024141339252   | 0.269912469920421  | 0.270570356864619  occ= 0
MO #14  (A1  #8 ) energy= 0.398844646417464  | 0.394472305203354  | 0.403216987631565  occ= 0
MO #15  (A1  #9 ) energy= 0.618481030571726  | 0.614251372431894  | 0.622710688711576  occ= 0
MO #16  (E2x #1 ) energy= 0.645941316173644  | 0.636793534136664  | 0.655089098210624  occ= 0
MO #17  (E2y #1 ) energy= 0.645941316173644  | 0.636793534136664  | 0.655089098210624  occ= 0
MO #18  (E1y #4 ) energy= 0.731834050216392  | 0.722737546697523  | 0.740930553735259  occ= 0
MO #19  (E1x #4 ) energy= 0.737683932554629  | 0.736457278060095  | 0.73891058704916   occ= 0
MO #20  (A1  #10) energy= 0.843104612158871  | 0.840418963057502  | 0.845790261260237  occ= 0
MO #21  (E1y #5 ) energy= 0.897432922205199  | 0.879405478399997  | 0.9154603660104    occ= 0
MO #22  (E1x #5 ) energy= 0.900289534434642  | 0.897952088950697  | 0.902626979918588  occ= 0
MO #23  (E2x #2 ) energy= 0.924814549078722  | 0.923056492341194  | 0.926572605816251  occ= 0
MO #24  (E2y #2 ) energy= 0.924814549078722  | 0.923056492341194  | 0.92657260581625   occ= 0
MO #25  (A1  #11) energy= 0.968630738435051  | 0.965508772068556  | 0.971752704801654  occ= 0
MO #26  (E1y #6 ) energy= 0.98274422851584   | 0.949342542704931  | 1.01614591432675   occ= 0
MO #27  (A1  #12) energy= 0.98395638305489   | 0.977642228973722  | 0.990270537136071  occ= 0
MO #28  (E1x #6 ) energy= 0.987292413345967  | 0.983255731469889  | 0.991329095222046  occ= 0
MO #29  (E1y #7 ) energy= 1.43207079623374   | 1.42540923891813   | 1.43873235354936   occ= 0
MO #30  (E1x #7 ) energy= 1.44105546682842   | 1.44001066309001   | 1.44210027056684   occ= 0
MO #31  (A1  #13) energy= 1.73571942232055   | 1.72838950388772   | 1.74304934075346   occ= 0
MO #32  (A1  #14) energy= 1.84978432048261   | 1.83783476590289   | 1.86173387506233   occ= 0
MO #33  (E3x #1 ) energy= 2.05822428183491   | 2.04804770348199   | 2.06840086018784   occ= 0
MO #34  (E3y #1 ) energy= 2.05822428183491   | 2.04804770348198   | 2.06840086018784   occ= 0
MO #35  (E2x #3 ) energy= 2.13392469834593   | 2.10131578216722   | 2.16653361452464   occ= 0
MO #36  (E2y #3 ) energy= 2.13392469834593   | 2.10131578216722   | 2.16653361452464   occ= 0
MO #37  (E1y #8 ) energy= 2.24725423623569   | 2.21944944367833   | 2.27505902879305   occ= 0
MO #38  (E1x #8 ) energy= 2.26264727903395   | 2.25839654385963   | 2.26689801420828   occ= 0
MO #39  (E2x #4 ) energy= 2.28923650140596   | 2.27827686691112   | 2.30019613590079   occ= 0
MO #40  (E2y #4 ) energy= 2.28923650140596   | 2.27827686691113   | 2.30019613590079   occ= 0
MO #41  (A1  #15) energy= 2.40464702446654   | 2.39650769746398   | 2.41278635146911   occ= 0
MO #42  (E1y #9 ) energy= 2.70711683094612   | 2.69379585972008   | 2.72043780217218   occ= 0
MO #43  (A1  #16) energy= 2.71171844826784   | 2.70201784166788   | 2.72141905486777   occ= 0
MO #44  (E1x #9 ) energy= 2.72767966595365   | 2.72498788561223   | 2.73037144629506   occ= 0
MO #45  (A1  #17) energy= 3.32707139803537   | 3.32361437939037   | 3.33052841668039   occ= 0
MO #46  (E2x #5 ) energy= 3.9296359686917    | 3.92796744353736   | 3.93130449384603   occ= 0
MO #47  (E2y #5 ) energy= 3.92963596869169   | 3.92796744353736   | 3.93130449384603   occ= 0
MO #48  (E1y #10) energy= 4.02003773011312   | 3.96632673027777   | 4.07374872994845   occ= 0
MO #49  (E1x #10) energy= 4.03134384318128   | 4.02414879370321   | 4.03853889265935   occ= 0
MO #50  (E1y #11) energy= 4.26360954809375   | 4.26165314786309   | 4.2655659483244    occ= 0
MO #51  (E1x #11) energy= 4.27071657354127   | 4.27034488718316   | 4.27108825989938   occ= 0
MO #52  (A1  #18) energy= 4.33387171748811   | 4.32843905440463   | 4.33930438057158   occ= 0
MO #53  (A1  #19) energy= 4.84419677589294   | 4.83995651087166   | 4.84843704091428   occ= 0
MO #54  (E1y #12) energy= 4.87193931666478   | 4.85096255668047   | 4.89291607664908   occ= 0
MO #55  (E1x #12) energy= 4.88982907180312   | 4.88619740822164   | 4.89346073538461   occ= 0
MO #56  (A1  #20) energy= 6.24166291569604   | 6.23163178830336   | 6.25169404308867   occ= 0
MO #57  (E3x #2 ) energy= 6.46200050121277   | 6.43698038089393   | 6.48702062153161   occ= 0
MO #58  (E3y #2 ) energy= 6.46200050121277   | 6.43698038089393   | 6.48702062153161   occ= 0
MO #59  (E2x #6 ) energy= 6.56892198418503   | 6.55090483011971   | 6.58693913825034   occ= 0
MO #60  (E2y #6 ) energy= 6.56892198418502   | 6.5509048301197    | 6.58693913825034   occ= 0
MO #61  (E1y #13) energy= 6.87835454798514   | 6.85751825081561   | 6.89919084515469   occ= 0
MO #62  (E1x #13) energy= 6.91391588315329   | 6.90919728209794   | 6.91863448420863   occ= 0
MO #63  (E2x #7 ) energy= 7.00653184768526   | 6.96474366238459   | 7.04832003298593   occ= 0
MO #64  (E2y #7 ) energy= 7.00653184768526   | 6.96474366238459   | 7.04832003298593   occ= 0
MO #65  (E1y #14) energy= 7.19015517624143   | 7.15086381159731   | 7.22944654088554   occ= 0
MO #66  (E1x #14) energy= 7.22105998518011   | 7.2145216032205    | 7.22759836713972   occ= 0
MO #67  (A1  #21) energy= 7.24438458579191   | 7.23547093589204   | 7.25329823569178   occ= 0
MO #68  (A1  #22) energy= 7.50320657624897   | 7.48928570073684   | 7.51712745176114   occ= 0
MO #69  (A1  #23) energy= 10.8194417323443   | 10.8039776352804   | 10.8349058294082   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.87321
pop of  0 O 3s        0.00293
pop of  0 O 4s        0.00088
pop of  0 O 5s        0.00022
pop of  0 O 2px       1.99316
pop of  0 O 2py       0.99748
pop of  0 O 2pz       1.45445
pop of  0 O 3px       0.00144
pop of  0 O 3py       0.00019
pop of  0 O 3pz       0.00040
pop of  0 O 4px       0.00047
pop of  0 O 4py       0.00068
pop of  0 O 4pz       0.00158
pop of  0 O 5px       0.00025
pop of  0 O 5py       0.00010
pop of  0 O 5pz       0.00008
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00062
pop of  0 O 3dz^2     0.00537
pop of  0 O 3dxz      0.00125
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00014
pop of  0 O 4dz^2     0.00043
pop of  0 O 4dxz      0.00031
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00002
pop of  0 O 5dz^2     0.00008
pop of  0 O 5dxz      0.00005
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00000
pop of  0 O 4f 0      0.00046
pop of  0 O 4f 1      0.00014
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00001
pop of  0 O 5f 0      0.00009
pop of  0 O 5f 1      0.00005
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.64846
pop of  1 H 2s        0.00762
pop of  1 H 3s        0.00185
pop of  1 H 4s        0.00012
pop of  1 H 2px       0.00268
pop of  1 H 2py       0.00032
pop of  1 H 2pz       0.00110
pop of  1 H 3px       0.00001
pop of  1 H 3py       0.00026
pop of  1 H 3pz       0.00057
pop of  1 H 4px       0.00001
pop of  1 H 4py       0.00010
pop of  1 H 4pz       0.00002
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00006
pop of  1 H 3dz^2     0.00009
pop of  1 H 3dxz      0.00015
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00000
pop of  1 H 4dz^2     0.00001
pop of  1 H 4dxz      0.00000
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.33656
charge of  1H =      0.33656
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.87682
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.12/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.12)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:13:13 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       100.48

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp703t1nmo
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp703t1nmo
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.244213500921369  LUMO = 0.303053982334355
Initial guess E= -75.3953058150069  |g|= 0.000336825
macro= 0  E= -75.3953058675994  delta_E= -5.25924e-08  |g|= 0.000336825  1 KF 4 JK
macro= 1  E= -75.3953058675994  delta_E= -4.26326e-14  |g|= 1.19158e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3953058675994  |g|= 1.19158e-08  total 3 KF 9 JK
converged SCF energy = -75.3953058675994
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.12/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.12)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:13:15 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       105.37

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmps5x24plu
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmps5x24plu
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.244213570972282  LUMO = 0.303054015645305
Initial guess E= -75.3953058150019  |g|= 0.000336857
macro= 0  E= -75.3953058675994  delta_E= -5.25975e-08  |g|= 0.000336857  1 KF 3 JK
macro= 1  E= -75.3953058675994  delta_E= 0  |g|= 1.19013e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3953058675994  |g|= 1.19013e-08  total 3 KF 8 JK
converged SCF energy = -75.3953058675994
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.12/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.12)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:13:16 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       110.85

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmph5tmy8gw
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmph5tmy8gw
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.244616149643332  LUMO = 0.0281015672291568
Initial guess E= -75.3959480243872  |g|= 0.00862064
macro= 0  E= -75.3959674166441  delta_E= -1.93923e-05  |g|= 0.000373662  2 KF 7 JK
macro= 1  E= -75.3959674166441  delta_E= -2.84217e-14  |g|= 7.98724e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3959674166441  |g|= 7.98724e-06  total 4 KF 12 JK
converged SCF energy = -75.3959674166441
u+d contributions  -0.05792731500984134
uu+dd contributions  -0.08817805158076111
ud contributions  -0.181187283498773
u+d contributions  -0.008321434145318895
uu+dd contributions  -0.03846786217552322
ud contributions  -0.13128277359553459
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.12/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.12)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:13:20 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       121.55

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpn7qd0d_c
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpn7qd0d_c
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.24389504317514  LUMO = 0.303139530673633
Initial guess E= -75.3953057925642  |g|= 0.000341499
macro= 0  E= -75.3953058675994  delta_E= -7.50353e-08  |g|= 0.000341499  1 KF 2 JK
macro= 1  E= -75.3953058675994  delta_E= 0  |g|= 2.91183e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3953058675994  |g|= 2.91183e-08  total 3 KF 7 JK
converged SCF energy = -75.3953058675994
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.12/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.12)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:13:22 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       126.59

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpa3aoy5y2
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpa3aoy5y2
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.244296181643493  LUMO = 0.0280993827726202
Initial guess E= -75.3959002560208  |g|= 0.00627428
macro= 0  E= -75.3959140621614  delta_E= -1.38061e-05  |g|= 0.000279381  2 KF 7 JK
macro= 1  E= -75.3959140621614  delta_E= -1.42109e-14  |g|= 5.01467e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3959140621614  |g|= 5.01467e-06  total 4 KF 12 JK
converged SCF energy = -75.3959140621614
u+d contributions  -0.0249612730510404
uu+dd contributions  -0.04761841041174348
ud contributions  -0.1059552462477701
u+d contributions  -0.005809816114319575
uu+dd contributions  -0.028436382201796794
ud contributions  -0.08675850366814834
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.979070, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.238045, i_min=0
In the tapering subroutine, i=2, E(i)=-75.395306, i_min=1
In the tapering subroutine, i=3, E(i)=-75.080642, i_min=2
In the tapering subroutine, i=4, E(i)=-75.390788, i_min=2
In the tapering subroutine, i=5, E(i)=-75.068997, i_min=2
In the tapering subroutine, i=6, E(i)=-74.843256, i_min=2
In the tapering subroutine, i=7, E(i)=-75.105677, i_min=2
In the tapering subroutine, i=8, E(i)=-75.238045, i_min=2
In the tapering subroutine, i=9, E(i)=-75.239728, i_min=2
In the tapering subroutine, i=10, E(i)=-75.103729, i_min=2
In the tapering subroutine, i=11, E(i)=-75.395306, i_min=2
In the tapering subroutine, i=12, E(i)=-75.091349, i_min=2
In the tapering subroutine, i=13, E(i)=-75.390788, i_min=2
In the tapering subroutine, i=14, E(i)=-75.105677, i_min=2
In the tapering subroutine, i=15, E(i)=-74.881671, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005809779673477578
uu+dd contributions  -0.028436385267179433
ud contributions  -0.08673484675035371
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005875244717645231
uu+dd contributions  -0.028508600684671027
ud contributions  -0.08691341276708188
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005875244717645231
uu+dd contributions  -0.028508600684671027
ud contributions  -0.08691341276708188
