#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.70/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.70)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 22:19:09 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.700000000000 AA    0.000000000000   0.000000000000   1.322808287196 Bohr

nuclear repulsion = 6.04773955337143
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         7.19
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmphosmn886
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmphosmn886
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.489863307826037  LUMO (A1) = 0.0305536153969544
Initial guess E= -75.2817462610402  |g|= 0.20782
macro= 0  E= -75.2886495118133  delta_E= -0.00690325  |g|= 0.20782  2 KF 5 JK
macro= 1  E= -75.2898561226665  delta_E= -0.00120661  |g|= 0.103334  2 KF 5 JK
macro= 2  E= -75.2885164305008  delta_E= 0.00133969  |g|= 0.0610759  2 KF 5 JK
macro= 3  E= -75.2898347377285  delta_E= -0.00131831  |g|= 0.105028  2 KF 5 JK
macro= 4  E= -75.2888682018174  delta_E= 0.000966536  |g|= 0.0609377  2 KF 5 JK
macro= 5  E= -75.2898431034168  delta_E= -0.000974902  |g|= 0.0991561  2 KF 5 JK
macro= 6  E= -75.2887617158143  delta_E= 0.00108139  |g|= 0.0598283  2 KF 5 JK
macro= 7  E= -75.2898442929039  delta_E= -0.00108258  |g|= 0.101018  2 KF 5 JK
macro= 8  E= -75.2887809352207  delta_E= 0.00106336  |g|= 0.060172  2 KF 5 JK
macro= 9  E= -75.289846851987  delta_E= -0.00106592  |g|= 0.100725  2 KF 5 JK
macro= 10  E= -75.2887586233043  delta_E= 0.00108823  |g|= 0.0600317  2 KF 5 JK
macro= 11  E= -75.2898490590005  delta_E= -0.00109044  |g|= 0.101159  2 KF 5 JK
macro= 12  E= -75.2887497725178  delta_E= 0.00109929  |g|= 0.0600403  2 KF 5 JK
macro= 13  E= -75.2898513668653  delta_E= -0.00110159  |g|= 0.101359  2 KF 5 JK
macro= 14  E= -75.2887366137536  delta_E= 0.00111475  |g|= 0.059992  2 KF 5 JK
macro= 15  E= -75.2898536534865  delta_E= -0.00111704  |g|= 0.101632  2 KF 5 JK
macro= 16  E= -75.2887248691424  delta_E= 0.00112878  |g|= 0.0599593  2 KF 5 JK
macro= 17  E= -75.2898559453138  delta_E= -0.00113108  |g|= 0.101877  2 KF 5 JK
macro= 18  E= -75.2887127050249  delta_E= 0.00114324  |g|= 0.0599199  2 KF 5 JK
macro= 19  E= -75.2898582370599  delta_E= -0.00114553  |g|= 0.102127  2 KF 5 JK
macro= 20  E= -75.2887007165249  delta_E= 0.00115752  |g|= 0.0598817  2 KF 5 JK
macro= 21  E= -75.2898605280291  delta_E= -0.00115981  |g|= 0.102372  2 KF 5 JK
macro= 22  E= -75.2886887255208  delta_E= 0.0011718  |g|= 0.0598424  2 KF 5 JK
macro= 23  E= -75.2898628180754  delta_E= -0.00117409  |g|= 0.102614  2 KF 5 JK
macro= 24  E= -75.2886767983703  delta_E= 0.00118602  |g|= 0.0598028  2 KF 5 JK
macro= 25  E= -75.2898651061572  delta_E= -0.00118831  |g|= 0.102852  2 KF 5 JK
macro= 26  E= -75.288664924394  delta_E= 0.00120018  |g|= 0.0597627  2 KF 5 JK
macro= 27  E= -75.2898673917442  delta_E= -0.00120247  |g|= 0.103087  2 KF 5 JK
macro= 28  E= -75.288653116357  delta_E= 0.00121428  |g|= 0.0597222  2 KF 5 JK
macro= 29  E= -75.2898696740579  delta_E= -0.00121656  |g|= 0.103318  2 KF 5 JK
macro= 30  E= -75.2886413793476  delta_E= 0.00122829  |g|= 0.0596812  2 KF 5 JK
macro= 31  E= -75.2898719524218  delta_E= -0.00123057  |g|= 0.103545  2 KF 5 JK
macro= 32  E= -75.2886297202934  delta_E= 0.00124223  |g|= 0.0596398  2 KF 5 JK
macro= 33  E= -75.2898742261183  delta_E= -0.00124451  |g|= 0.103769  2 KF 5 JK
macro= 34  E= -75.2886181450907  delta_E= 0.00125608  |g|= 0.0595979  2 KF 5 JK
macro= 35  E= -75.2898764944476  delta_E= -0.00125835  |g|= 0.10399  2 KF 5 JK
macro= 36  E= -75.2886066594593  delta_E= 0.00126983  |g|= 0.0595556  2 KF 5 JK
macro= 37  E= -75.2898787567055  delta_E= -0.0012721  |g|= 0.104206  2 KF 5 JK
macro= 38  E= -75.2885952686984  delta_E= 0.00128349  |g|= 0.0595129  2 KF 5 JK
macro= 39  E= -75.2898810121957  delta_E= -0.00128574  |g|= 0.104419  2 KF 5 JK
macro= 40  E= -75.2885839777617  delta_E= 0.00129703  |g|= 0.0594697  2 KF 5 JK
macro= 41  E= -75.2898832602262  delta_E= -0.00129928  |g|= 0.104628  2 KF 5 JK
macro= 42  E= -75.288572791244  delta_E= 0.00131047  |g|= 0.0594261  2 KF 5 JK
macro= 43  E= -75.2898855001124  delta_E= -0.00131271  |g|= 0.104834  2 KF 5 JK
macro= 44  E= -75.2885617133925  delta_E= 0.00132379  |g|= 0.0593821  2 KF 5 JK
macro= 45  E= -75.2898877311769  delta_E= -0.00132602  |g|= 0.105035  2 KF 5 JK
macro= 46  E= -75.2885507481155  delta_E= 0.00133698  |g|= 0.0593377  2 KF 5 JK
macro= 47  E= -75.2898899527532  delta_E= -0.0013392  |g|= 0.105233  2 KF 5 JK
macro= 48  E= -75.2885398989888  delta_E= 0.00135005  |g|= 0.0592929  2 KF 5 JK
macro= 49  E= -75.2898921641842  delta_E= -0.00135227  |g|= 0.105427  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.2898921641842  |g|= 0.105427  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.2898921641842

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmphosmn886
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmphosmn886
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.280372102462573  LUMO (A1) = 0.0322899073780883
Initial guess E= -75.2913078959508  |g|= 0.0367835
macro= 0  E= -75.2914270861352  delta_E= -0.00011919  |g|= 0.0367835  2 KF 5 JK
macro= 1  E= -75.2914103387606  delta_E= 1.67474e-05  |g|= 0.0198945  2 KF 5 JK
macro= 2  E= -75.2914086126969  delta_E= 1.72606e-06  |g|= 0.0286497  2 KF 5 JK
macro= 3  E= -75.2914128551069  delta_E= -4.24241e-06  |g|= 0.0218229  2 KF 5 JK
macro= 4  E= -75.2914080486263  delta_E= 4.80648e-06  |g|= 0.0281878  2 KF 5 JK
macro= 5  E= -75.2914134620693  delta_E= -5.41344e-06  |g|= 0.0220252  2 KF 5 JK
macro= 6  E= -75.2914086076505  delta_E= 4.85442e-06  |g|= 0.0280627  2 KF 5 JK
macro= 7  E= -75.2914125313862  delta_E= -3.92374e-06  |g|= 0.0220093  2 KF 5 JK
macro= 8  E= -75.2914093930391  delta_E= 3.13835e-06  |g|= 0.0281115  2 KF 5 JK
macro= 9  E= -75.2914121318883  delta_E= -2.73885e-06  |g|= 0.0219758  2 KF 5 JK
macro= 10  E= -75.2914102456119  delta_E= 1.88628e-06  |g|= 0.0281697  2 KF 5 JK
macro= 11  E= -75.2914125599562  delta_E= -2.31434e-06  |g|= 0.021963  2 KF 5 JK
macro= 12  E= -75.2914102375744  delta_E= 2.32238e-06  |g|= 0.0281909  2 KF 5 JK
macro= 13  E= -75.2914133048866  delta_E= -3.06731e-06  |g|= 0.0220174  2 KF 5 JK
macro= 14  E= -75.2914097833217  delta_E= 3.52156e-06  |g|= 0.0281625  2 KF 5 JK
macro= 15  E= -75.291413461967  delta_E= -3.67865e-06  |g|= 0.0220741  2 KF 5 JK
macro= 16  E= -75.2914096093987  delta_E= 3.85257e-06  |g|= 0.0281512  2 KF 5 JK
macro= 17  E= -75.2914134760128  delta_E= -3.86661e-06  |g|= 0.0220935  2 KF 5 JK
macro= 18  E= -75.2914095886564  delta_E= 3.88736e-06  |g|= 0.0281469  2 KF 5 JK
macro= 19  E= -75.2914134533754  delta_E= -3.86472e-06  |g|= 0.0220969  2 KF 5 JK
macro= 20  E= -75.2914095869305  delta_E= 3.86644e-06  |g|= 0.028147  2 KF 5 JK
macro= 21  E= -75.2914134430486  delta_E= -3.85612e-06  |g|= 0.0220978  2 KF 5 JK
macro= 22  E= -75.2914095795433  delta_E= 3.86351e-06  |g|= 0.0281475  2 KF 5 JK
macro= 23  E= -75.2914134351234  delta_E= -3.85558e-06  |g|= 0.0220986  2 KF 5 JK
macro= 24  E= -75.2914095693334  delta_E= 3.86579e-06  |g|= 0.0281481  2 KF 5 JK
macro= 25  E= -75.2914134281784  delta_E= -3.85885e-06  |g|= 0.0220994  2 KF 5 JK
macro= 26  E= -75.2914095587884  delta_E= 3.86939e-06  |g|= 0.0281488  2 KF 5 JK
macro= 27  E= -75.2914134210125  delta_E= -3.86222e-06  |g|= 0.0221001  2 KF 5 JK
macro= 28  E= -75.2914095483388  delta_E= 3.87267e-06  |g|= 0.0281495  2 KF 5 JK
macro= 29  E= -75.2914134138544  delta_E= -3.86552e-06  |g|= 0.0221008  2 KF 5 JK
macro= 30  E= -75.291409537932  delta_E= 3.87592e-06  |g|= 0.0281502  2 KF 5 JK
macro= 31  E= -75.2914134066846  delta_E= -3.86875e-06  |g|= 0.0221015  2 KF 5 JK
macro= 32  E= -75.2914095275258  delta_E= 3.87916e-06  |g|= 0.0281509  2 KF 5 JK
macro= 33  E= -75.2914133995245  delta_E= -3.872e-06  |g|= 0.0221021  2 KF 5 JK
macro= 34  E= -75.2914095171141  delta_E= 3.88241e-06  |g|= 0.0281516  2 KF 5 JK
macro= 35  E= -75.291413392363  delta_E= -3.87525e-06  |g|= 0.0221028  2 KF 5 JK
macro= 36  E= -75.2914095066992  delta_E= 3.88566e-06  |g|= 0.0281524  2 KF 5 JK
macro= 37  E= -75.2914133851999  delta_E= -3.8785e-06  |g|= 0.0221034  2 KF 5 JK
macro= 38  E= -75.2914094962823  delta_E= 3.88892e-06  |g|= 0.0281531  2 KF 5 JK
macro= 39  E= -75.291413378034  delta_E= -3.88175e-06  |g|= 0.0221041  2 KF 5 JK
macro= 40  E= -75.2914094858639  delta_E= 3.89217e-06  |g|= 0.0281538  2 KF 5 JK
macro= 41  E= -75.2914133708655  delta_E= -3.885e-06  |g|= 0.0221047  2 KF 5 JK
macro= 42  E= -75.2914094754432  delta_E= 3.89542e-06  |g|= 0.0281546  2 KF 5 JK
macro= 43  E= -75.2914133636945  delta_E= -3.88825e-06  |g|= 0.0221054  2 KF 5 JK
macro= 44  E= -75.2914094650205  delta_E= 3.89867e-06  |g|= 0.0281553  2 KF 5 JK
macro= 45  E= -75.2914133565203  delta_E= -3.8915e-06  |g|= 0.022106  2 KF 5 JK
macro= 46  E= -75.2914094545966  delta_E= 3.90192e-06  |g|= 0.028156  2 KF 5 JK
macro= 47  E= -75.2914133493436  delta_E= -3.89475e-06  |g|= 0.0221067  2 KF 5 JK
macro= 48  E= -75.2914094441703  delta_E= 3.90517e-06  |g|= 0.0281568  2 KF 5 JK
macro= 49  E= -75.2914133421637  delta_E= -3.89799e-06  |g|= 0.0221073  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.2914133421637  |g|= 0.0221073  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.2914133421637
**** SCF Summaries ****
Total Energy =                         -75.291413342163651
Nuclear Repulsion Energy =               6.047739553371430
One-electron Energy =                 -115.433310750243862
Two-electron Energy =                   34.094157854708776
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    0    1    0    0    0    0
single occ                     0    1    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.5812052583865  | -20.5982316824448  | -20.5641788343282  occ= 2
MO #2   (A1  #2 ) energy= -1.43208948872086  | -1.49756185405539  | -1.36661712338633  occ= 2
MO #3   (A1  #3 ) energy= -0.728806797425836 | -0.755865934449721 | -0.70174766040195  occ= 2
MO #4   (E1y #1 ) energy= -0.551051626843535 | -0.570441288999641 | -0.531661964687429 occ= 2
MO #5   (E1x #1 ) energy= -0.257457433614349 | -0.65868869807286  | 0.143773830844162  occ= 1
MO #6   (A1  #4 ) energy= 0.032404194007897  | 0.0319568674036572 | 0.0328515206121363 occ= 0
MO #7   (A1  #5 ) energy= 0.13609770379615   | 0.135545785617305  | 0.13664962197497   occ= 0
MO #8   (E1x #2 ) energy= 0.150062350646859  | 0.145297280071626  | 0.154827421222093  occ= 0
MO #9   (E1y #2 ) energy= 0.153450318563484  | 0.152840235703334  | 0.154060401423634  occ= 0
MO #10  (A1  #6 ) energy= 0.189549839082195  | 0.187593943415558  | 0.191505734748816  occ= 0
MO #11  (A1  #7 ) energy= 0.278085620283313  | 0.27689498317057   | 0.279276257396052  occ= 0
MO #12  (E1x #3 ) energy= 0.290041772262379  | 0.285550103225954  | 0.294533441298802  occ= 0
MO #13  (E1y #3 ) energy= 0.293421635837257  | 0.292861137791303  | 0.293982133883207  occ= 0
MO #14  (A1  #8 ) energy= 0.47263349554709   | 0.469107830416465  | 0.476159160677482  occ= 0
MO #15  (E2x #1 ) energy= 0.649230757884529  | 0.639626215421362  | 0.658835300347696  occ= 0
MO #16  (E2y #1 ) energy= 0.649230757884529  | 0.639626215421362  | 0.658835300347695  occ= 0
MO #17  (A1  #9 ) energy= 0.701527748240322  | 0.695520911711805  | 0.707534584768826  occ= 0
MO #18  (E1x #4 ) energy= 0.734539847837819  | 0.724212978396638  | 0.744866717278995  occ= 0
MO #19  (E1y #4 ) energy= 0.741280732297334  | 0.739862180388019  | 0.742699284206649  occ= 0
MO #20  (A1  #10) energy= 0.848934959083891  | 0.844283063757973  | 0.853586854409714  occ= 0
MO #21  (E1x #5 ) energy= 0.856105631914716  | 0.830072762082164  | 0.882138501747267  occ= 0
MO #22  (E1y #5 ) energy= 0.857642256507931  | 0.854604956350404  | 0.860679556665458  occ= 0
MO #23  (A1  #11) energy= 0.951109930260539  | 0.949891404985463  | 0.952328455535573  occ= 0
MO #24  (E2x #2 ) energy= 0.958468168335514  | 0.957036476605108  | 0.959899860065923  occ= 0
MO #25  (E2y #2 ) energy= 0.958468168335517  | 0.957036476605112  | 0.959899860065928  occ= 0
MO #26  (E1x #6 ) energy= 1.01297296191394   | 0.999325568804134  | 1.02662035502374   occ= 0
MO #27  (E1y #6 ) energy= 1.02288822241258   | 1.020958489691     | 1.02481795513416   occ= 0
MO #28  (A1  #12) energy= 1.20309295884031   | 1.19525155763218   | 1.21093436004814   occ= 0
MO #29  (A1  #13) energy= 1.65151765281642   | 1.64109207116992   | 1.66194323446294   occ= 0
MO #30  (E1x #7 ) energy= 1.67123437962831   | 1.6457602197637    | 1.69670853949293   occ= 0
MO #31  (E1y #7 ) energy= 1.67923879409194   | 1.67580381153675   | 1.68267377664712   occ= 0
MO #32  (E3x #1 ) energy= 2.04394798472863   | 2.03394197272753   | 2.05395399672973   occ= 0
MO #33  (E3y #1 ) energy= 2.04394798472863   | 2.03394197272753   | 2.05395399672973   occ= 0
MO #34  (E2x #3 ) energy= 2.13633250423774   | 2.09980686932224   | 2.17285813915323   occ= 0
MO #35  (E2y #3 ) energy= 2.13633250423773   | 2.09980686932223   | 2.17285813915322   occ= 0
MO #36  (A1  #14) energy= 2.22673889886561   | 2.21606353385565   | 2.23741426387548   occ= 0
MO #37  (E1x #8 ) energy= 2.34175352299792   | 2.32586157408069   | 2.35764547191515   occ= 0
MO #38  (E1y #8 ) energy= 2.35964095652766   | 2.35688578263238   | 2.36239613042294   occ= 0
MO #39  (A1  #15) energy= 2.3972278251527    | 2.38990711326738   | 2.40454853703782   occ= 0
MO #40  (E2x #4 ) energy= 2.41156926407486   | 2.4043526523299    | 2.41878587581983   occ= 0
MO #41  (E2y #4 ) energy= 2.41156926407487   | 2.4043526523299    | 2.41878587581983   occ= 0
MO #42  (E1x #9 ) energy= 2.65321063742746   | 2.62363966790002   | 2.68278160695489   occ= 0
MO #43  (E1y #9 ) energy= 2.67431556490225   | 2.66942162009264   | 2.67920950971185   occ= 0
MO #44  (A1  #16) energy= 2.93760502989261   | 2.92680409246329   | 2.94840596732185   occ= 0
MO #45  (A1  #17) energy= 3.92787112808728   | 3.92235527432641   | 3.93338698184813   occ= 0
MO #46  (E1x #10) energy= 4.26334713860327   | 4.25650887066375   | 4.27018540654278   occ= 0
MO #47  (E1y #10) energy= 4.27769542047029   | 4.27631531276199   | 4.2790755281786    occ= 0
MO #48  (E2x #5 ) energy= 4.3482283273481    | 4.34317108354489   | 4.35328557115129   occ= 0
MO #49  (E2y #5 ) energy= 4.34822832734808   | 4.34317108354488   | 4.35328557115128   occ= 0
MO #50  (E1x #11) energy= 4.55924651749146   | 4.50707137042204   | 4.61142166456089   occ= 0
MO #51  (E1y #11) energy= 4.57305202561706   | 4.56598283045634   | 4.58012122077777   occ= 0
MO #52  (A1  #18) energy= 4.76332439171406   | 4.75590967639299   | 4.77073910703512   occ= 0
MO #53  (E1x #12) energy= 5.81248022737127   | 5.79105080948951   | 5.833909645253     occ= 0
MO #54  (E1y #12) energy= 5.84113621565736   | 5.83706166316546   | 5.84521076814925   occ= 0
MO #55  (A1  #19) energy= 6.14113068954404   | 6.12806958032659   | 6.15419179876156   occ= 0
MO #56  (E3x #2 ) energy= 6.44929622186576   | 6.42424969042784   | 6.47434275330368   occ= 0
MO #57  (E3y #2 ) energy= 6.44929622186575   | 6.42424969042783   | 6.47434275330367   occ= 0
MO #58  (A1  #20) energy= 6.47253883245652   | 6.45797553811314   | 6.48710212679991   occ= 0
MO #59  (E2x #6 ) energy= 6.7932071640215    | 6.77499748604502   | 6.81141684199799   occ= 0
MO #60  (E2y #6 ) energy= 6.79320716402149   | 6.77499748604501   | 6.81141684199798   occ= 0
MO #61  (E1x #13) energy= 6.96588483340806   | 6.93804236264095   | 6.99372730417518   occ= 0
MO #62  (E2x #7 ) energy= 6.99330951918294   | 6.95184650392258   | 7.03477253444332   occ= 0
MO #63  (E2y #7 ) energy= 6.99330951918293   | 6.95184650392258   | 7.03477253444332   occ= 0
MO #64  (E1y #13) energy= 7.00004402197613   | 6.99475822968375   | 7.00532981426849   occ= 0
MO #65  (E1x #14) energy= 8.45138445758389   | 8.4265196463983    | 8.47624926876947   occ= 0
MO #66  (A1  #21) energy= 8.46512767251673   | 8.45682126469496   | 8.47343408033846   occ= 0
MO #67  (E1y #14) energy= 8.48408233397259   | 8.47913680587032   | 8.48902786207485   occ= 0
MO #68  (A1  #22) energy= 9.5316921120778    | 9.52598501949802   | 9.53739920465758   occ= 0
MO #69  (A1  #23) energy= 18.8173127270971   | 18.8066631948454   | 18.8279622593486   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.67832
pop of  0 O 3s        0.00808
pop of  0 O 4s        0.00172
pop of  0 O 5s        0.00001
pop of  0 O 2px       0.99603
pop of  0 O 2py       1.99158
pop of  0 O 2pz       1.67786
pop of  0 O 3px       0.00029
pop of  0 O 3py       0.00043
pop of  0 O 3pz       0.00711
pop of  0 O 4px       0.00042
pop of  0 O 4py       0.00045
pop of  0 O 4pz       0.00119
pop of  0 O 5px       0.00002
pop of  0 O 5py       0.00006
pop of  0 O 5pz       0.00048
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00329
pop of  0 O 3dz^2     0.01886
pop of  0 O 3dxz      0.00151
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00022
pop of  0 O 4dz^2     0.00028
pop of  0 O 4dxz      0.00011
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00000
pop of  0 O 5dz^2     0.00023
pop of  0 O 5dxz      0.00000
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00025
pop of  0 O 4f 0      0.00254
pop of  0 O 4f 1      0.00002
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00000
pop of  0 O 5f 0      0.00006
pop of  0 O 5f 1      0.00000
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.56015
pop of  1 H 2s        0.02070
pop of  1 H 3s        0.01735
pop of  1 H 4s        0.00227
pop of  1 H 2px       0.00068
pop of  1 H 2py       0.00343
pop of  1 H 2pz       0.00027
pop of  1 H 3px       0.00081
pop of  1 H 3py       0.00019
pop of  1 H 3pz       0.00014
pop of  1 H 4px       0.00003
pop of  1 H 4py       0.00000
pop of  1 H 4pz       0.00063
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00004
pop of  1 H 3dz^2     0.00108
pop of  1 H 3dxz      0.00000
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00005
pop of  1 H 4dz^2     0.00068
pop of  1 H 4dxz      0.00009
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.39141
charge of  1H =      0.39141
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.52778
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.70/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.70)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 22:22:01 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        49.24

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpii3_s6_1
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpii3_s6_1
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.257457433614343  LUMO = 0.696650533841749
Initial guess E= -75.291425021386  |g|= 0.000936883
macro= 0  E= -75.2914253093498  delta_E= -2.87964e-07  |g|= 0.000936883  1 KF 4 JK
macro= 1  E= -75.2914253093498  delta_E= -1.42109e-14  |g|= 4.25253e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.2914253093498  |g|= 4.25253e-08  total 3 KF 9 JK
converged SCF energy = -75.2914253093498
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.70/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.70)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 22:22:04 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        52.71

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpcfiywtm4
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpcfiywtm4
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.257458483509053  LUMO = 0.696650775718679
Initial guess E= -75.2914250212003  |g|= 0.0009368
macro= 0  E= -75.2914253093499  delta_E= -2.8815e-07  |g|= 0.0009368  1 KF 3 JK
macro= 1  E= -75.2914253093499  delta_E= 0  |g|= 4.24695e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.2914253093499  |g|= 4.24695e-08  total 3 KF 8 JK
converged SCF energy = -75.2914253093499
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.70/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.70)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 22:22:08 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        56.81

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpzzl9grpi
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpzzl9grpi
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.257747941638591  LUMO = 0.0323981640339557
Initial guess E= -75.2921029659669  |g|= 0.0117024
macro= 0  E= -75.2921331197722  delta_E= -3.01538e-05  |g|= 0.000411353  2 KF 7 JK
macro= 1  E= -75.2921331197722  delta_E= -1.42109e-14  |g|= 7.5183e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.2921331197722  |g|= 7.5183e-06  total 4 KF 12 JK
converged SCF energy = -75.2921331197722
u+d contributions  -0.048592916233505735
uu+dd contributions  -0.08153571990628085
ud contributions  -0.18271039591999405
u+d contributions  -0.007720326790932471
uu+dd contributions  -0.04057711283825283
ud contributions  -0.1416114449734481
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.70/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.70)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 22:22:25 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        63.15

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmptpdet8m7
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmptpdet8m7
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.258209674296034  LUMO = 0.69650380735868
Initial guess E= -75.2914251023814  |g|= 0.000661209
macro= 0  E= -75.2914253093498  delta_E= -2.06968e-07  |g|= 0.000661209  1 KF 2 JK
macro= 1  E= -75.2914253093499  delta_E= -1.42109e-14  |g|= 5.23796e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.2914253093499  |g|= 5.23796e-08  total 3 KF 7 JK
converged SCF energy = -75.2914253093499
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.70/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.70)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 22:22:30 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        67.38

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmprppcs6je
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmprppcs6je
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.258497717766108  LUMO = 0.0324121168507883
Initial guess E= -75.292059430052  |g|= 0.00772476
macro= 0  E= -75.2920778005841  delta_E= -1.83705e-05  |g|= 0.000297641  2 KF 7 JK
macro= 1  E= -75.2920778005841  delta_E= 0  |g|= 4.67254e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.2920778005841  |g|= 4.67254e-06  total 4 KF 12 JK
converged SCF energy = -75.2920778005841
u+d contributions  -0.014585339734048292
uu+dd contributions  -0.04009841648850607
ud contributions  -0.10909990592410218
u+d contributions  -0.0030116051696694817
uu+dd contributions  -0.02851632770384453
ud contributions  -0.09751461141707345
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.652570, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.104790, i_min=0
In the tapering subroutine, i=2, E(i)=-75.291425, i_min=1
In the tapering subroutine, i=3, E(i)=-74.588789, i_min=2
In the tapering subroutine, i=4, E(i)=-75.287197, i_min=2
In the tapering subroutine, i=5, E(i)=-74.595658, i_min=2
In the tapering subroutine, i=6, E(i)=-74.719991, i_min=2
In the tapering subroutine, i=7, E(i)=-74.615612, i_min=2
In the tapering subroutine, i=8, E(i)=-75.104790, i_min=2
In the tapering subroutine, i=9, E(i)=-75.148680, i_min=2
In the tapering subroutine, i=10, E(i)=-74.609274, i_min=2
In the tapering subroutine, i=11, E(i)=-75.291425, i_min=2
In the tapering subroutine, i=12, E(i)=-74.598172, i_min=2
In the tapering subroutine, i=13, E(i)=-75.287197, i_min=2
In the tapering subroutine, i=14, E(i)=-74.615612, i_min=2
In the tapering subroutine, i=15, E(i)=-74.758770, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0030116194952266285
uu+dd contributions  -0.028516329523121622
ud contributions  -0.0975083072248886
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0029748172606387695
uu+dd contributions  -0.02847908931154897
ud contributions  -0.09747428659277793
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0029748172606387695
uu+dd contributions  -0.02847908931154897
ud contributions  -0.09747428659277793
