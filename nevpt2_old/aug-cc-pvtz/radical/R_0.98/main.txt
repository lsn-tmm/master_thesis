#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.98/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.98)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:44:32 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.980000000000 AA    0.000000000000   0.000000000000   1.851931602074 Bohr

nuclear repulsion = 4.31981396669388
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         4.46
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpa00xyvjt
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpa00xyvjt
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.431844673113271  LUMO (A1) = 0.0265937131079537
Initial guess E= -75.4034248944643  |g|= 0.211088
macro= 0  E= -75.4133272359421  delta_E= -0.00990234  |g|= 0.211088  2 KF 5 JK
macro= 1  E= -75.4139888892892  delta_E= -0.000661653  |g|= 0.0927366  2 KF 5 JK
macro= 2  E= -75.412304695642  delta_E= 0.00168419  |g|= 0.0616619  2 KF 5 JK
macro= 3  E= -75.4137988049074  delta_E= -0.00149411  |g|= 0.107052  2 KF 5 JK
macro= 4  E= -75.4121500862278  delta_E= 0.00164872  |g|= 0.0585677  2 KF 5 JK
macro= 5  E= -75.4137840503203  delta_E= -0.00163396  |g|= 0.108889  2 KF 5 JK
macro= 6  E= -75.4126627719283  delta_E= 0.00112128  |g|= 0.0612278  2 KF 5 JK
macro= 7  E= -75.4138532425038  delta_E= -0.00119047  |g|= 0.102532  2 KF 5 JK
macro= 8  E= -75.4124705123348  delta_E= 0.00138273  |g|= 0.0598351  2 KF 5 JK
macro= 9  E= -75.4138489202483  delta_E= -0.00137841  |g|= 0.105472  2 KF 5 JK
macro= 10  E= -75.4125057179069  delta_E= 0.0013432  |g|= 0.0598657  2 KF 5 JK
macro= 11  E= -75.4138548135991  delta_E= -0.0013491  |g|= 0.105023  2 KF 5 JK
macro= 12  E= -75.4124647855524  delta_E= 0.00139003  |g|= 0.0595687  2 KF 5 JK
macro= 13  E= -75.4138590334263  delta_E= -0.00139425  |g|= 0.105712  2 KF 5 JK
macro= 14  E= -75.412452923552  delta_E= 0.00140611  |g|= 0.0595048  2 KF 5 JK
macro= 15  E= -75.4138635237792  delta_E= -0.0014106  |g|= 0.105949  2 KF 5 JK
macro= 16  E= -75.4124297220188  delta_E= 0.0014338  |g|= 0.0593656  2 KF 5 JK
macro= 17  E= -75.4138680203996  delta_E= -0.0014383  |g|= 0.106346  2 KF 5 JK
macro= 18  E= -75.4124113863135  delta_E= 0.00145663  |g|= 0.059267  2 KF 5 JK
macro= 19  E= -75.4138724902462  delta_E= -0.0014611  |g|= 0.106665  2 KF 5 JK
macro= 20  E= -75.4123913214477  delta_E= 0.00148117  |g|= 0.059153  2 KF 5 JK
macro= 21  E= -75.4138769866469  delta_E= -0.00148567  |g|= 0.107004  2 KF 5 JK
macro= 22  E= -75.412372288463  delta_E= 0.0015047  |g|= 0.059045  2 KF 5 JK
macro= 23  E= -75.4138814620318  delta_E= -0.00150917  |g|= 0.107323  2 KF 5 JK
macro= 24  E= -75.4123531474772  delta_E= 0.00152831  |g|= 0.0589328  2 KF 5 JK
macro= 25  E= -75.413885939671  delta_E= -0.00153279  |g|= 0.10764  2 KF 5 JK
macro= 26  E= -75.412334402911  delta_E= 0.00155154  |g|= 0.0588206  2 KF 5 JK
macro= 27  E= -75.4138904003456  delta_E= -0.001556  |g|= 0.107948  2 KF 5 JK
macro= 28  E= -75.4123158539247  delta_E= 0.00157455  |g|= 0.0587065  2 KF 5 JK
macro= 29  E= -75.4138948490615  delta_E= -0.001579  |g|= 0.108248  2 KF 5 JK
macro= 30  E= -75.412297603453  delta_E= 0.00159725  |g|= 0.0585915  2 KF 5 JK
macro= 31  E= -75.4138992776118  delta_E= -0.00160167  |g|= 0.108541  2 KF 5 JK
macro= 32  E= -75.412279619504  delta_E= 0.00161966  |g|= 0.0584752  2 KF 5 JK
macro= 33  E= -75.4139036850197  delta_E= -0.00162407  |g|= 0.108827  2 KF 5 JK
macro= 34  E= -75.4122619284946  delta_E= 0.00164176  |g|= 0.0583578  2 KF 5 JK
macro= 35  E= -75.4139080665552  delta_E= -0.00164614  |g|= 0.109105  2 KF 5 JK
macro= 36  E= -75.4122445290352  delta_E= 0.00166354  |g|= 0.0582396  2 KF 5 JK
macro= 37  E= -75.4139124196227  delta_E= -0.00166789  |g|= 0.109377  2 KF 5 JK
macro= 38  E= -75.412227430962  delta_E= 0.00168499  |g|= 0.0581205  2 KF 5 JK
macro= 39  E= -75.4139167406451  delta_E= -0.00168931  |g|= 0.10964  2 KF 5 JK
macro= 40  E= -75.4122106375163  delta_E= 0.0017061  |g|= 0.0580007  2 KF 5 JK
macro= 41  E= -75.4139210267427  delta_E= -0.00171039  |g|= 0.109897  2 KF 5 JK
macro= 42  E= -75.4121941536751  delta_E= 0.00172687  |g|= 0.0578803  2 KF 5 JK
macro= 43  E= -75.4139252748542  delta_E= -0.00173112  |g|= 0.110147  2 KF 5 JK
macro= 44  E= -75.4121779822957  delta_E= 0.00174729  |g|= 0.0577594  2 KF 5 JK
macro= 45  E= -75.4139294822239  delta_E= -0.0017515  |g|= 0.11039  2 KF 5 JK
macro= 46  E= -75.4121621260198  delta_E= 0.00176736  |g|= 0.0576382  2 KF 5 JK
macro= 47  E= -75.4139336461517  delta_E= -0.00177152  |g|= 0.110626  2 KF 5 JK
macro= 48  E= -75.4121465864191  delta_E= 0.00178706  |g|= 0.0575167  2 KF 5 JK
macro= 49  E= -75.4139377641411  delta_E= -0.00179118  |g|= 0.110855  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4139377641411  |g|= 0.110855  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4139377641411

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpa00xyvjt
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpa00xyvjt
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.264704355108417  LUMO (A1) = 0.0302839589569801
Initial guess E= -75.415289566377  |g|= 0.0396081
macro= 0  E= -75.4154152576239  delta_E= -0.000125691  |g|= 0.0396081  2 KF 5 JK
macro= 1  E= -75.4154227884994  delta_E= -7.53088e-06  |g|= 0.024207  2 KF 5 JK
macro= 2  E= -75.415362800417  delta_E= 5.99881e-05  |g|= 0.0314946  2 KF 5 JK
macro= 3  E= -75.4154334503435  delta_E= -7.06499e-05  |g|= 0.0289074  2 KF 5 JK
macro= 4  E= -75.4153722463603  delta_E= 6.1204e-05  |g|= 0.0305981  2 KF 5 JK
macro= 5  E= -75.4154356284955  delta_E= -6.33821e-05  |g|= 0.0284258  2 KF 5 JK
macro= 6  E= -75.4153721422099  delta_E= 6.34863e-05  |g|= 0.0303583  2 KF 5 JK
macro= 7  E= -75.4154348108613  delta_E= -6.26687e-05  |g|= 0.0284237  2 KF 5 JK
macro= 8  E= -75.4153720782192  delta_E= 6.27326e-05  |g|= 0.0304223  2 KF 5 JK
macro= 9  E= -75.4154349218103  delta_E= -6.28436e-05  |g|= 0.0284289  2 KF 5 JK
macro= 10  E= -75.4153720931205  delta_E= 6.28287e-05  |g|= 0.0304136  2 KF 5 JK
macro= 11  E= -75.4154348992318  delta_E= -6.28061e-05  |g|= 0.0284275  2 KF 5 JK
macro= 12  E= -75.4153720831811  delta_E= 6.28161e-05  |g|= 0.0304155  2 KF 5 JK
macro= 13  E= -75.4154348967676  delta_E= -6.28136e-05  |g|= 0.0284281  2 KF 5 JK
macro= 14  E= -75.41537207686  delta_E= 6.28199e-05  |g|= 0.0304158  2 KF 5 JK
macro= 15  E= -75.4154348917336  delta_E= -6.28149e-05  |g|= 0.0284284  2 KF 5 JK
macro= 16  E= -75.4153720699865  delta_E= 6.28217e-05  |g|= 0.0304163  2 KF 5 JK
macro= 17  E= -75.4154348868595  delta_E= -6.28169e-05  |g|= 0.0284288  2 KF 5 JK
macro= 18  E= -75.4153720631642  delta_E= 6.28237e-05  |g|= 0.0304168  2 KF 5 JK
macro= 19  E= -75.4154348818902  delta_E= -6.28187e-05  |g|= 0.0284292  2 KF 5 JK
macro= 20  E= -75.4153720563284  delta_E= 6.28256e-05  |g|= 0.0304173  2 KF 5 JK
macro= 21  E= -75.4154348768792  delta_E= -6.28206e-05  |g|= 0.0284296  2 KF 5 JK
macro= 22  E= -75.4153720494865  delta_E= 6.28274e-05  |g|= 0.0304178  2 KF 5 JK
macro= 23  E= -75.4154348718406  delta_E= -6.28224e-05  |g|= 0.02843  2 KF 5 JK
macro= 24  E= -75.4153720426393  delta_E= 6.28292e-05  |g|= 0.0304183  2 KF 5 JK
macro= 25  E= -75.4154348667847  delta_E= -6.28241e-05  |g|= 0.0284304  2 KF 5 JK
macro= 26  E= -75.4153720357865  delta_E= 6.2831e-05  |g|= 0.0304188  2 KF 5 JK
macro= 27  E= -75.4154348617164  delta_E= -6.28259e-05  |g|= 0.0284308  2 KF 5 JK
macro= 28  E= -75.4153720289282  delta_E= 6.28328e-05  |g|= 0.0304193  2 KF 5 JK
macro= 29  E= -75.4154348566393  delta_E= -6.28277e-05  |g|= 0.0284311  2 KF 5 JK
macro= 30  E= -75.4153720220652  delta_E= 6.28346e-05  |g|= 0.0304198  2 KF 5 JK
macro= 31  E= -75.4154348515552  delta_E= -6.28295e-05  |g|= 0.0284315  2 KF 5 JK
macro= 32  E= -75.4153720151966  delta_E= 6.28364e-05  |g|= 0.0304204  2 KF 5 JK
macro= 33  E= -75.4154348464653  delta_E= -6.28313e-05  |g|= 0.0284319  2 KF 5 JK
macro= 34  E= -75.4153720083234  delta_E= 6.28381e-05  |g|= 0.0304209  2 KF 5 JK
macro= 35  E= -75.4154348413708  delta_E= -6.2833e-05  |g|= 0.0284323  2 KF 5 JK
macro= 36  E= -75.4153720014443  delta_E= 6.28399e-05  |g|= 0.0304214  2 KF 5 JK
macro= 37  E= -75.4154348362714  delta_E= -6.28348e-05  |g|= 0.0284327  2 KF 5 JK
macro= 38  E= -75.415371994561  delta_E= 6.28417e-05  |g|= 0.0304219  2 KF 5 JK
macro= 39  E= -75.4154348311677  delta_E= -6.28366e-05  |g|= 0.0284331  2 KF 5 JK
macro= 40  E= -75.415371987672  delta_E= 6.28435e-05  |g|= 0.0304224  2 KF 5 JK
macro= 41  E= -75.4154348260602  delta_E= -6.28384e-05  |g|= 0.0284334  2 KF 5 JK
macro= 42  E= -75.4153719807782  delta_E= 6.28453e-05  |g|= 0.0304229  2 KF 5 JK
macro= 43  E= -75.4154348209481  delta_E= -6.28402e-05  |g|= 0.0284338  2 KF 5 JK
macro= 44  E= -75.4153719738792  delta_E= 6.28471e-05  |g|= 0.0304234  2 KF 5 JK
macro= 45  E= -75.4154348158323  delta_E= -6.2842e-05  |g|= 0.0284342  2 KF 5 JK
macro= 46  E= -75.4153719669754  delta_E= 6.28489e-05  |g|= 0.030424  2 KF 5 JK
macro= 47  E= -75.4154348107127  delta_E= -6.28437e-05  |g|= 0.0284346  2 KF 5 JK
macro= 48  E= -75.4153719600662  delta_E= 6.28506e-05  |g|= 0.0304245  2 KF 5 JK
macro= 49  E= -75.4154348055885  delta_E= -6.28455e-05  |g|= 0.028435  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4154348055885  |g|= 0.028435  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4154348055885
**** SCF Summaries ****
Total Energy =                         -75.415434805588546
Nuclear Repulsion Energy =               4.319813966693878
One-electron Energy =                 -112.646734000298210
Two-electron Energy =                   32.911485228015792
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    1    0    0    0    0    0
single occ                     0    0    1    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6058935052363  | -20.6229059466426  | -20.58888106383    occ= 2
MO #2   (A1  #2 ) energy= -1.3000222420075   | -1.37059195014971  | -1.22945253386529  occ= 2
MO #3   (A1  #3 ) energy= -0.653684231874894 | -0.674279558941392 | -0.633088904808396 occ= 2
MO #4   (E1x #1 ) energy= -0.532446451985135 | -0.551711493642415 | -0.513181410327854 occ= 2
MO #5   (E1y #1 ) energy= -0.240700551929266 | -0.639670682059046 | 0.158269578200505  occ= 1
MO #6   (A1  #4 ) energy= 0.0303259523570147 | 0.0297325651830809 | 0.0309193395309556 occ= 0
MO #7   (A1  #5 ) energy= 0.137715829628036  | 0.136761866518152  | 0.138669792737965  occ= 0
MO #8   (E1y #2 ) energy= 0.160025249027332  | 0.154082886616914  | 0.165967611437751  occ= 0
MO #9   (E1x #2 ) energy= 0.163592402100511  | 0.162827642276478  | 0.164357161924545  occ= 0
MO #10  (A1  #6 ) energy= 0.185909545148381  | 0.183568561722929  | 0.18825052857384   occ= 0
MO #11  (A1  #7 ) energy= 0.264000731546478  | 0.262001266678797  | 0.2660001964142    occ= 0
MO #12  (E1y #3 ) energy= 0.271359128636429  | 0.268162863755549  | 0.274555393517308  occ= 0
MO #13  (E1x #3 ) energy= 0.274680832148607  | 0.27427805482675   | 0.275083609470464  occ= 0
MO #14  (A1  #8 ) energy= 0.43010493673031   | 0.425888608494723  | 0.434321264966123  occ= 0
MO #15  (A1  #9 ) energy= 0.642119718870219  | 0.636423247099654  | 0.647816190640848  occ= 0
MO #16  (E2x #1 ) energy= 0.647727046476835  | 0.638336214285924  | 0.657117878667746  occ= 0
MO #17  (E2y #1 ) energy= 0.647727046476836  | 0.638336214285925  | 0.657117878667747  occ= 0
MO #18  (E1y #4 ) energy= 0.7234918274       | 0.714535320552134  | 0.732448334247864  occ= 0
MO #19  (E1x #4 ) energy= 0.729163606276485  | 0.727957624442995  | 0.730369588109978  occ= 0
MO #20  (A1  #10) energy= 0.876338963201571  | 0.87366875902258   | 0.879009167380523  occ= 0
MO #21  (E1y #5 ) energy= 0.88390720430237   | 0.86194717202809   | 0.90586723657665   occ= 0
MO #22  (E1x #5 ) energy= 0.886486079922493  | 0.883767184084486  | 0.889204975760503  occ= 0
MO #23  (A1  #11) energy= 0.936698185790356  | 0.931419163975155  | 0.941977207605555  occ= 0
MO #24  (E2x #2 ) energy= 0.938030588786909  | 0.936438699883313  | 0.939622477690505  occ= 0
MO #25  (E2y #2 ) energy= 0.938030588786905  | 0.93643869988331   | 0.939622477690502  occ= 0
MO #26  (A1  #12) energy= 1.00192038395662   | 0.997749643652614  | 1.00609112426072   occ= 0
MO #27  (E1y #6 ) energy= 1.00453255949424   | 0.977314950054845  | 1.03175016893364   occ= 0
MO #28  (E1x #6 ) energy= 1.01137902297103   | 1.00793497440829   | 1.01482307153378   occ= 0
MO #29  (E1y #7 ) energy= 1.50257927454888   | 1.49104987699281   | 1.51410867210494   occ= 0
MO #30  (E1x #7 ) energy= 1.51051522728238   | 1.50892400500607   | 1.5121064495587    occ= 0
MO #31  (A1  #13) energy= 1.71220648675408   | 1.70263527246294   | 1.72177770104529   occ= 0
MO #32  (A1  #14) energy= 2.02985263560041   | 2.01949974064283   | 2.04020553055798   occ= 0
MO #33  (E3x #1 ) energy= 2.05457468032677   | 2.04448224495995   | 2.0646671156936    occ= 0
MO #34  (E3y #1 ) energy= 2.05457468032677   | 2.04448224495995   | 2.0646671156936    occ= 0
MO #35  (E2x #3 ) energy= 2.13751927262147   | 2.1030721467886    | 2.17196639845434   occ= 0
MO #36  (E2y #3 ) energy= 2.13751927262147   | 2.1030721467886    | 2.17196639845433   occ= 0
MO #37  (E1y #8 ) energy= 2.27522640790455   | 2.25279888903847   | 2.29765392677062   occ= 0
MO #38  (E1x #8 ) energy= 2.29179526868811   | 2.28822123879971   | 2.2953692985765    occ= 0
MO #39  (E2x #4 ) energy= 2.32813300198197   | 2.31916235891635   | 2.33710364504759   occ= 0
MO #40  (E2y #4 ) energy= 2.32813300198197   | 2.31916235891635   | 2.33710364504759   occ= 0
MO #41  (A1  #15) energy= 2.46744834499959   | 2.45882891981702   | 2.47606777018215   occ= 0
MO #42  (A1  #16) energy= 2.48741219950785   | 2.47972019427304   | 2.49510420474261   occ= 0
MO #43  (E1y #9 ) energy= 2.74928831186979   | 2.72992721601893   | 2.76864940772066   occ= 0
MO #44  (E1x #9 ) energy= 2.77065078974944   | 2.76705388422456   | 2.77424769527432   occ= 0
MO #45  (A1  #17) energy= 3.56633938461596   | 3.56192608174012   | 3.5707526874918    occ= 0
MO #46  (E2x #5 ) energy= 4.0231692111546    | 4.02056145268497   | 4.02577696962424   occ= 0
MO #47  (E2y #5 ) energy= 4.0231692111546    | 4.02056145268496   | 4.02577696962423   occ= 0
MO #48  (E1y #10) energy= 4.07713504008863   | 4.0239123819521    | 4.13035769822515   occ= 0
MO #49  (E1x #10) energy= 4.08766531295212   | 4.08057699004186   | 4.09475363586237   occ= 0
MO #50  (E1y #11) energy= 4.2980207030584    | 4.29409842706518   | 4.30194297905163   occ= 0
MO #51  (E1x #11) energy= 4.30708267354711   | 4.30643681847503   | 4.30772852861919   occ= 0
MO #52  (A1  #18) energy= 4.63315623180522   | 4.62838619208305   | 4.63792627152734   occ= 0
MO #53  (A1  #19) energy= 5.09631166906022   | 5.08661915210475   | 5.10600418601565   occ= 0
MO #54  (E1y #12) energy= 5.24908637075441   | 5.22912279925513   | 5.26904994225367   occ= 0
MO #55  (E1x #12) energy= 5.27170447112073   | 5.2679197360103    | 5.27548920623115   occ= 0
MO #56  (A1  #20) energy= 6.15808569564242   | 6.14798521638463   | 6.1681861749       occ= 0
MO #57  (E3x #2 ) energy= 6.46441131882478   | 6.43941931522872   | 6.48940332242085   occ= 0
MO #58  (E3y #2 ) energy= 6.46441131882479   | 6.43941931522872   | 6.48940332242085   occ= 0
MO #59  (E2x #6 ) energy= 6.61513342971045   | 6.59689632058145   | 6.63337053883945   occ= 0
MO #60  (E2y #6 ) energy= 6.61513342971044   | 6.59689632058144   | 6.63337053883944   occ= 0
MO #61  (E2x #7 ) energy= 7.01957546806805   | 6.97801324661075   | 7.06113768952534   occ= 0
MO #62  (E2y #7 ) energy= 7.01957546806805   | 6.97801324661076   | 7.06113768952535   occ= 0
MO #63  (E1y #13) energy= 7.13768703927559   | 7.11893906647884   | 7.15643501207236   occ= 0
MO #64  (E1x #13) energy= 7.17297210692548   | 7.16864179402811   | 7.17730241982283   occ= 0
MO #65  (E1y #14) energy= 7.21039674922608   | 7.17002646176577   | 7.25076703668635   occ= 0
MO #66  (E1x #14) energy= 7.24131831034117   | 7.23461903164843   | 7.24801758903392   occ= 0
MO #67  (A1  #21) energy= 7.35811631784288   | 7.34932334395027   | 7.36690929173551   occ= 0
MO #68  (A1  #22) energy= 7.6888681326361    | 7.67676192046684   | 7.70097434480535   occ= 0
MO #69  (A1  #23) energy= 12.7434934334998   | 12.7293369482262   | 12.7576499187733   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.82176
pop of  0 O 3s        0.00455
pop of  0 O 4s        0.00122
pop of  0 O 5s        0.00019
pop of  0 O 2px       1.99302
pop of  0 O 2py       0.99733
pop of  0 O 2pz       1.51994
pop of  0 O 3px       0.00094
pop of  0 O 3py       0.00016
pop of  0 O 3pz       0.00164
pop of  0 O 4px       0.00035
pop of  0 O 4py       0.00041
pop of  0 O 4pz       0.00164
pop of  0 O 5px       0.00017
pop of  0 O 5py       0.00005
pop of  0 O 5pz       0.00008
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00091
pop of  0 O 3dz^2     0.00835
pop of  0 O 3dxz      0.00184
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00016
pop of  0 O 4dz^2     0.00059
pop of  0 O 4dxz      0.00035
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00002
pop of  0 O 5dz^2     0.00015
pop of  0 O 5dxz      0.00003
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00001
pop of  0 O 4f 0      0.00090
pop of  0 O 4f 1      0.00017
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00001
pop of  0 O 5f 0      0.00012
pop of  0 O 5f 1      0.00005
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.61983
pop of  1 H 2s        0.01236
pop of  1 H 3s        0.00494
pop of  1 H 4s        0.00012
pop of  1 H 2px       0.00300
pop of  1 H 2py       0.00050
pop of  1 H 2pz       0.00082
pop of  1 H 3px       0.00000
pop of  1 H 3py       0.00031
pop of  1 H 3pz       0.00034
pop of  1 H 4px       0.00001
pop of  1 H 4py       0.00007
pop of  1 H 4pz       0.00014
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00004
pop of  1 H 3dz^2     0.00023
pop of  1 H 3dxz      0.00006
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00002
pop of  1 H 4dz^2     0.00008
pop of  1 H 4dxz      0.00001
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.35712
charge of  1H =      0.35712
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.78650
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.98/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.98)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:44:59 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       122.49

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp7dtsuhlm
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp7dtsuhlm
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.240700551929265  LUMO = 0.419778238218943
Initial guess E= -75.4154677044521  |g|= 0.00111403
macro= 0  E= -75.4154683520474  delta_E= -6.47595e-07  |g|= 0.00111403  1 KF 4 JK
macro= 1  E= -75.4154683520474  delta_E= -2.84217e-14  |g|= 1.85967e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4154683520474  |g|= 1.85967e-07  total 3 KF 9 JK
converged SCF energy = -75.4154683520474
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.98/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.98)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:45:00 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       128.22

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpn1ea9son
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpn1ea9son
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.24070178194695  LUMO = 0.419778754230929
Initial guess E= -75.4154677034892  |g|= 0.00111442
macro= 0  E= -75.4154683520474  delta_E= -6.48558e-07  |g|= 0.00111442  1 KF 3 JK
macro= 1  E= -75.4154683520474  delta_E= 0  |g|= 1.86671e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4154683520474  |g|= 1.86671e-07  total 3 KF 8 JK
converged SCF energy = -75.4154683520474
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.98/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.98)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:45:02 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       134.92

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpi9zne0p7
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpi9zne0p7
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.240990500026493  LUMO = 0.0303204278426285
Initial guess E= -75.4161309042917  |g|= 0.0141583
macro= 0  E= -75.4161786971816  delta_E= -4.77929e-05  |g|= 0.000504044  2 KF 7 JK
macro= 1  E= -75.4161786971818  delta_E= -1.42109e-13  |g|= 9.29083e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4161786971818  |g|= 9.29083e-06  total 4 KF 12 JK
converged SCF energy = -75.4161786971818
u+d contributions  -0.05622357651154959
uu+dd contributions  -0.08720694153036526
ud contributions  -0.18277598682199334
u+d contributions  -0.008068200167999008
uu+dd contributions  -0.0389496243567264
ud contributions  -0.13433911736118984
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.98/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.98)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:45:06 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       150.44

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpthx53mjj
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpthx53mjj
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.241441137983969  LUMO = 0.419599853142354
Initial guess E= -75.4154673961977  |g|= 0.00127796
macro= 0  E= -75.4154683520474  delta_E= -9.5585e-07  |g|= 0.00127796  1 KF 2 JK
macro= 1  E= -75.4154683520474  delta_E= -5.68434e-14  |g|= 3.48085e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4154683520474  |g|= 3.48085e-07  total 3 KF 7 JK
converged SCF energy = -75.4154683520474
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.98/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.98)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:45:07 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       156.16

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp2_oipl39
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp2_oipl39
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.241728690209823  LUMO = 0.0303321969279833
Initial guess E= -75.4160941292949  |g|= 0.00915858
macro= 0  E= -75.4161229906969  delta_E= -2.88614e-05  |g|= 0.000354814  2 KF 7 JK
macro= 1  E= -75.4161229906969  delta_E= -2.84217e-14  |g|= 5.78397e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4161229906969  |g|= 5.78397e-06  total 4 KF 12 JK
converged SCF energy = -75.4161229906969
u+d contributions  -0.022942908260217398
uu+dd contributions  -0.04665600161006056
ud contributions  -0.10856769070761704
u+d contributions  -0.005109987581452216
uu+dd contributions  -0.028799756500450805
ud contributions  -0.09070720386461713
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.863692, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.247640, i_min=0
In the tapering subroutine, i=2, E(i)=-75.415468, i_min=1
In the tapering subroutine, i=3, E(i)=-74.983226, i_min=2
In the tapering subroutine, i=4, E(i)=-75.411172, i_min=2
In the tapering subroutine, i=5, E(i)=-74.972537, i_min=2
In the tapering subroutine, i=6, E(i)=-74.861385, i_min=2
In the tapering subroutine, i=7, E(i)=-75.022458, i_min=2
In the tapering subroutine, i=8, E(i)=-75.247640, i_min=2
In the tapering subroutine, i=9, E(i)=-75.259655, i_min=2
In the tapering subroutine, i=10, E(i)=-75.008367, i_min=2
In the tapering subroutine, i=11, E(i)=-75.415468, i_min=2
In the tapering subroutine, i=12, E(i)=-74.996979, i_min=2
In the tapering subroutine, i=13, E(i)=-75.411172, i_min=2
In the tapering subroutine, i=14, E(i)=-75.022458, i_min=2
In the tapering subroutine, i=15, E(i)=-74.899915, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005109932818389659
uu+dd contributions  -0.028799802733977486
ud contributions  -0.09068230266387443
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005108793520520454
uu+dd contributions  -0.02879889138327396
ud contributions  -0.09068176619003582
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005108793520520454
uu+dd contributions  -0.02879889138327396
ud contributions  -0.09068176619003582
