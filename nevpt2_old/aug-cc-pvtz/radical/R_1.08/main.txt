#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.08/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.08)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:48:57 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.080000000000 AA    0.000000000000   0.000000000000   2.040904214530 Bohr

nuclear repulsion = 3.919831192
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         3.88
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp5zen7ex5
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp5zen7ex5
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.420505045188128  LUMO (A1) = 0.0219601697402687
Initial guess E= -75.3894682900878  |g|= 0.213056
macro= 0  E= -75.4011096663871  delta_E= -0.0116414  |g|= 0.213056  2 KF 5 JK
macro= 1  E= -75.401552776805  delta_E= -0.00044311  |g|= 0.0891808  2 KF 5 JK
macro= 2  E= -75.3999566003877  delta_E= 0.00159618  |g|= 0.0612893  2 KF 5 JK
macro= 3  E= -75.401336019344  delta_E= -0.00137942  |g|= 0.105293  2 KF 5 JK
macro= 4  E= -75.3998915790483  delta_E= 0.00144444  |g|= 0.0595561  2 KF 5 JK
macro= 5  E= -75.4013460368743  delta_E= -0.00145446  |g|= 0.105419  2 KF 5 JK
macro= 6  E= -75.4002017691208  delta_E= 0.00114427  |g|= 0.0614327  2 KF 5 JK
macro= 7  E= -75.4014062086482  delta_E= -0.00120444  |g|= 0.101306  2 KF 5 JK
macro= 8  E= -75.3999894303037  delta_E= 0.00141678  |g|= 0.0605278  2 KF 5 JK
macro= 9  E= -75.4013978533372  delta_E= -0.00140842  |g|= 0.104963  2 KF 5 JK
macro= 10  E= -75.4000449001934  delta_E= 0.00135295  |g|= 0.0607782  2 KF 5 JK
macro= 11  E= -75.4014106718595  delta_E= -0.00136577  |g|= 0.104217  2 KF 5 JK
macro= 12  E= -75.3999838429598  delta_E= 0.00142683  |g|= 0.06043  2 KF 5 JK
macro= 13  E= -75.4014136137486  delta_E= -0.00142977  |g|= 0.105222  2 KF 5 JK
macro= 14  E= -75.3999747691251  delta_E= 0.00143884  |g|= 0.0603809  2 KF 5 JK
macro= 15  E= -75.4014209363121  delta_E= -0.00144617  |g|= 0.105422  2 KF 5 JK
macro= 16  E= -75.3999430002027  delta_E= 0.00147794  |g|= 0.0601888  2 KF 5 JK
macro= 17  E= -75.4014263405926  delta_E= -0.00148334  |g|= 0.105949  2 KF 5 JK
macro= 18  E= -75.3999214706361  delta_E= 0.00150487  |g|= 0.0600576  2 KF 5 JK
macro= 19  E= -75.4014326496224  delta_E= -0.00151118  |g|= 0.10632  2 KF 5 JK
macro= 20  E= -75.3998956942756  delta_E= 0.00153696  |g|= 0.0598925  2 KF 5 JK
macro= 21  E= -75.4014386024448  delta_E= -0.00154291  |g|= 0.106746  2 KF 5 JK
macro= 22  E= -75.3998720794082  delta_E= 0.00156652  |g|= 0.0597369  2 KF 5 JK
macro= 23  E= -75.4014447477707  delta_E= -0.00157267  |g|= 0.107136  2 KF 5 JK
macro= 24  E= -75.3998478561277  delta_E= 0.00159689  |g|= 0.0595711  2 KF 5 JK
macro= 25  E= -75.4014508329992  delta_E= -0.00160298  |g|= 0.107529  2 KF 5 JK
macro= 26  E= -75.3998242764652  delta_E= 0.00162656  |g|= 0.0594041  2 KF 5 JK
macro= 27  E= -75.4014569583239  delta_E= -0.00163268  |g|= 0.107908  2 KF 5 JK
macro= 28  E= -75.3998008313266  delta_E= 0.00165613  |g|= 0.0592322  2 KF 5 JK
macro= 29  E= -75.4014630688758  delta_E= -0.00166224  |g|= 0.108281  2 KF 5 JK
macro= 30  E= -75.3997777769423  delta_E= 0.00168529  |g|= 0.0590574  2 KF 5 JK
macro= 31  E= -75.4014691774571  delta_E= -0.0016914  |g|= 0.108644  2 KF 5 JK
macro= 32  E= -75.399755033946  delta_E= 0.00171414  |g|= 0.0588791  2 KF 5 JK
macro= 33  E= -75.4014752673733  delta_E= -0.00172023  |g|= 0.108998  2 KF 5 JK
macro= 34  E= -75.3997326656699  delta_E= 0.0017426  |g|= 0.0586979  2 KF 5 JK
macro= 35  E= -75.401481334754  delta_E= -0.00174867  |g|= 0.109343  2 KF 5 JK
macro= 36  E= -75.3997106709066  delta_E= 0.00177066  |g|= 0.0585138  2 KF 5 JK
macro= 37  E= -75.401487370305  delta_E= -0.0017767  |g|= 0.109679  2 KF 5 JK
macro= 38  E= -75.3996890734507  delta_E= 0.0017983  |g|= 0.0583274  2 KF 5 JK
macro= 39  E= -75.4014933672517  delta_E= -0.00180429  |g|= 0.110006  2 KF 5 JK
macro= 40  E= -75.3996678835531  delta_E= 0.00182548  |g|= 0.0581388  2 KF 5 JK
macro= 41  E= -75.4014993179989  delta_E= -0.00183143  |g|= 0.110323  2 KF 5 JK
macro= 42  E= -75.399647114536  delta_E= 0.0018522  |g|= 0.0579483  2 KF 5 JK
macro= 43  E= -75.4015052156254  delta_E= -0.0018581  |g|= 0.110631  2 KF 5 JK
macro= 44  E= -75.399626775741  delta_E= 0.00187844  |g|= 0.0577563  2 KF 5 JK
macro= 45  E= -75.3993483760422  delta_E= 0.0002784  |g|= 0.11093  2 KF 5 JK
macro= 46  E= -75.40073525107  delta_E= -0.00138688  |g|= 0.100215  2 KF 5 JK
macro= 47  E= -75.3991550016895  delta_E= 0.00158025  |g|= 0.0944489  2 KF 5 JK
macro= 48  E= -75.4005836633361  delta_E= -0.00142866  |g|= 0.102859  2 KF 5 JK
macro= 49  E= -75.399085535423  delta_E= 0.00149813  |g|= 0.0981073  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.399085535423  |g|= 0.0981073  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.399085535423

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp5zen7ex5
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp5zen7ex5
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.279484154012104  LUMO (A1) = 0.028298971674827
Initial guess E= -75.4020664401158  |g|= 0.0776935
macro= 0  E= -75.4030607651976  delta_E= -0.000994325  |g|= 0.0776935  2 KF 5 JK
macro= 1  E= -75.4030851772706  delta_E= -2.44121e-05  |g|= 0.0226714  2 KF 5 JK
macro= 2  E= -75.402909536258  delta_E= 0.000175641  |g|= 0.0158499  2 KF 5 JK
macro= 3  E= -75.4030877461595  delta_E= -0.00017821  |g|= 0.033229  2 KF 5 JK
macro= 4  E= -75.402947893584  delta_E= 0.000139853  |g|= 0.0116534  2 KF 5 JK
macro= 5  E= -75.4030781431207  delta_E= -0.00013025  |g|= 0.0301906  2 KF 5 JK
macro= 6  E= -75.4029210547245  delta_E= 0.000157088  |g|= 0.016531  2 KF 5 JK
macro= 7  E= -75.4030702471073  delta_E= -0.000149192  |g|= 0.0325107  2 KF 5 JK
macro= 8  E= -75.4029999252662  delta_E= 7.03218e-05  |g|= 0.0166105  2 KF 5 JK
macro= 9  E= -75.4030719976163  delta_E= -7.20724e-05  |g|= 0.0267238  2 KF 5 JK
macro= 10  E= -75.4029882159682  delta_E= 8.37816e-05  |g|= 0.0156642  2 KF 5 JK
macro= 11  E= -75.4030721702115  delta_E= -8.39542e-05  |g|= 0.0273371  2 KF 5 JK
macro= 12  E= -75.4029836734077  delta_E= 8.84968e-05  |g|= 0.0159911  2 KF 5 JK
macro= 13  E= -75.4030724388898  delta_E= -8.87655e-05  |g|= 0.0276479  2 KF 5 JK
macro= 14  E= -75.4029816651462  delta_E= 9.07737e-05  |g|= 0.0161082  2 KF 5 JK
macro= 15  E= -75.40307259184  delta_E= -9.09267e-05  |g|= 0.0278132  2 KF 5 JK
macro= 16  E= -75.402981023007  delta_E= 9.15688e-05  |g|= 0.0161417  2 KF 5 JK
macro= 17  E= -75.4030726532925  delta_E= -9.16303e-05  |g|= 0.0278796  2 KF 5 JK
macro= 18  E= -75.4029808970591  delta_E= 9.17562e-05  |g|= 0.016139  2 KF 5 JK
macro= 19  E= -75.403072687892  delta_E= -9.17908e-05  |g|= 0.0279027  2 KF 5 JK
macro= 20  E= -75.4029808489038  delta_E= 9.1839e-05  |g|= 0.0161272  2 KF 5 JK
macro= 21  E= -75.4030727275006  delta_E= -9.18786e-05  |g|= 0.0279162  2 KF 5 JK
macro= 22  E= -75.4029807493779  delta_E= 9.19781e-05  |g|= 0.0161163  2 KF 5 JK
macro= 23  E= -75.403072775702  delta_E= -9.20263e-05  |g|= 0.0279319  2 KF 5 JK
macro= 24  E= -75.4029806052889  delta_E= 9.21704e-05  |g|= 0.0161078  2 KF 5 JK
macro= 25  E= -75.4030728283537  delta_E= -9.22231e-05  |g|= 0.0279504  2 KF 5 JK
macro= 26  E= -75.4029804440347  delta_E= 9.23843e-05  |g|= 0.0161004  2 KF 5 JK
macro= 27  E= -75.4030728823407  delta_E= -9.24383e-05  |g|= 0.0279703  2 KF 5 JK
macro= 28  E= -75.4029802799605  delta_E= 9.26024e-05  |g|= 0.0160933  2 KF 5 JK
macro= 29  E= -75.4030729365753  delta_E= -9.26566e-05  |g|= 0.0279904  2 KF 5 JK
macro= 30  E= -75.4029801164223  delta_E= 9.28202e-05  |g|= 0.016086  2 KF 5 JK
macro= 31  E= -75.4030729909798  delta_E= -9.28746e-05  |g|= 0.0280106  2 KF 5 JK
macro= 32  E= -75.4029799528344  delta_E= 9.30381e-05  |g|= 0.0160785  2 KF 5 JK
macro= 33  E= -75.4030730457007  delta_E= -9.30929e-05  |g|= 0.0280308  2 KF 5 JK
macro= 34  E= -75.4029797882978  delta_E= 9.32574e-05  |g|= 0.0160708  2 KF 5 JK
macro= 35  E= -75.4030731008295  delta_E= -9.33125e-05  |g|= 0.028051  2 KF 5 JK
macro= 36  E= -75.4029796224309  delta_E= 9.34784e-05  |g|= 0.0160629  2 KF 5 JK
macro= 37  E= -75.4030731563857  delta_E= -9.3534e-05  |g|= 0.0280714  2 KF 5 JK
macro= 38  E= -75.4029794551996  delta_E= 9.37012e-05  |g|= 0.016055  2 KF 5 JK
macro= 39  E= -75.4030732123557  delta_E= -9.37572e-05  |g|= 0.0280919  2 KF 5 JK
macro= 40  E= -75.4029792866726  delta_E= 9.39257e-05  |g|= 0.0160469  2 KF 5 JK
macro= 41  E= -75.403073268721  delta_E= -9.3982e-05  |g|= 0.0281125  2 KF 5 JK
macro= 42  E= -75.4029791169146  delta_E= 9.41518e-05  |g|= 0.0160386  2 KF 5 JK
macro= 43  E= -75.4030733254667  delta_E= -9.42086e-05  |g|= 0.0281332  2 KF 5 JK
macro= 44  E= -75.4029789459681  delta_E= 9.43795e-05  |g|= 0.0160303  2 KF 5 JK
macro= 45  E= -75.4030733825797  delta_E= -9.44366e-05  |g|= 0.028154  2 KF 5 JK
macro= 46  E= -75.4029787738653  delta_E= 9.46087e-05  |g|= 0.0160218  2 KF 5 JK
macro= 47  E= -75.4030734400494  delta_E= -9.46662e-05  |g|= 0.0281748  2 KF 5 JK
macro= 48  E= -75.4029786006359  delta_E= 9.48394e-05  |g|= 0.0160131  2 KF 5 JK
macro= 49  E= -75.4030734978633  delta_E= -9.48972e-05  |g|= 0.0281958  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4030734978633  |g|= 0.0281958  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4030734978633
**** SCF Summaries ****
Total Energy =                         -75.403073497863346
Nuclear Repulsion Energy =               3.919831192000001
One-electron Energy =                 -111.829580143744977
Two-electron Energy =                   32.506675453881620
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    0    1    0    0    0    0
single occ                     0    1    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6374387678856  | -20.6543436477739  | -20.6205338879973  occ= 2
MO #2   (A1  #2 ) energy= -1.28116591710231  | -1.35329394555837  | -1.20903788864625  occ= 2
MO #3   (A1  #3 ) energy= -0.632349348932195 | -0.651049972634359 | -0.613648725230032 occ= 2
MO #4   (E1y #1 ) energy= -0.535171091905375 | -0.554354576540482 | -0.515987607270269 occ= 2
MO #5   (E1x #1 ) energy= -0.245677149798863 | -0.643978984330759 | 0.152624684733032  occ= 1
MO #6   (A1  #4 ) energy= 0.028861998913139  | 0.0281243764665418 | 0.0295996213597366 occ= 0
MO #7   (A1  #5 ) energy= 0.135436865073986  | 0.133954721629244  | 0.136919008518703  occ= 0
MO #8   (E1x #2 ) energy= 0.161525792799453  | 0.155638238848217  | 0.16741334675069   occ= 0
MO #9   (E1y #2 ) energy= 0.165688752181819  | 0.16487571156945   | 0.166501792794189  occ= 0
MO #10  (A1  #6 ) energy= 0.178950704157644  | 0.176544138172621  | 0.181357270142662  occ= 0
MO #11  (A1  #7 ) energy= 0.259629017357768  | 0.25733819660245   | 0.261919838113067  occ= 0
MO #12  (E1x #3 ) energy= 0.267981481223578  | 0.265291327193176  | 0.270671635253982  occ= 0
MO #13  (E1y #3 ) energy= 0.271393667527247  | 0.27104274207586   | 0.271744592978635  occ= 0
MO #14  (A1  #8 ) energy= 0.407507042943182  | 0.403090696223454  | 0.411923389662769  occ= 0
MO #15  (A1  #9 ) energy= 0.624276928919307  | 0.619586870744392  | 0.62896698709413   occ= 0
MO #16  (E2x #1 ) energy= 0.646168174173221  | 0.636917865257749  | 0.655418483088694  occ= 0
MO #17  (E2y #1 ) energy= 0.646168174173221  | 0.636917865257749  | 0.655418483088693  occ= 0
MO #18  (E1x #4 ) energy= 0.728365815321321  | 0.719333482079613  | 0.737398148563031  occ= 0
MO #19  (E1y #4 ) energy= 0.734109432199884  | 0.732893164123045  | 0.735325700276725  occ= 0
MO #20  (A1  #10) energy= 0.851718758272197  | 0.849092627397252  | 0.854344889147136  occ= 0
MO #21  (E1x #5 ) energy= 0.893302108200256  | 0.873799809672821  | 0.912804406727693  occ= 0
MO #22  (E1y #5 ) energy= 0.896061221805705  | 0.893569594479785  | 0.898552849131626  occ= 0
MO #23  (E2x #2 ) energy= 0.928739271985892  | 0.92702835116522   | 0.930450192806564  occ= 0
MO #24  (E2y #2 ) energy= 0.928739271985893  | 0.92702835116522   | 0.930450192806565  occ= 0
MO #25  (A1  #11) energy= 0.965888160073174  | 0.960125641602183  | 0.97165067854403   occ= 0
MO #26  (A1  #12) energy= 0.977882820522106  | 0.974243189222406  | 0.981522451821769  occ= 0
MO #27  (E1x #6 ) energy= 0.989327621069147  | 0.957568132869324  | 1.02108710926897   occ= 0
MO #28  (E1y #6 ) energy= 0.994540693895092  | 0.990655105009812  | 0.998426282780373  occ= 0
MO #29  (E1x #7 ) energy= 1.45107665528164   | 1.44330885843942   | 1.45884445212386   occ= 0
MO #30  (E1y #7 ) energy= 1.45977007830828   | 1.45860782648095   | 1.46093233013561   occ= 0
MO #31  (A1  #13) energy= 1.73735140283988   | 1.72895670694397   | 1.74574609873559   occ= 0
MO #32  (A1  #14) energy= 1.89431139782836   | 1.88315663139856   | 1.90546616425818   occ= 0
MO #33  (E3x #1 ) energy= 2.05670544312459   | 2.04651903954375   | 2.06689184670544   occ= 0
MO #34  (E3y #1 ) energy= 2.0567054431246    | 2.04651903954376   | 2.06689184670544   occ= 0
MO #35  (E2x #3 ) energy= 2.13370961585986   | 2.10043962442635   | 2.16697960729338   occ= 0
MO #36  (E2y #3 ) energy= 2.13370961585986   | 2.10043962442634   | 2.16697960729338   occ= 0
MO #37  (E1x #8 ) energy= 2.25332135555631   | 2.22699029985916   | 2.27965241125346   occ= 0
MO #38  (E1y #8 ) energy= 2.26904795861708   | 2.26498383611694   | 2.27311208111723   occ= 0
MO #39  (E2x #4 ) energy= 2.29936215169639   | 2.28906440208724   | 2.30965990130553   occ= 0
MO #40  (E2y #4 ) energy= 2.29936215169638   | 2.28906440208724   | 2.30965990130553   occ= 0
MO #41  (A1  #15) energy= 2.4220808497024    | 2.41398207602505   | 2.43017962337974   occ= 0
MO #42  (A1  #16) energy= 2.63402690798602   | 2.62488651300479   | 2.64316730296694   occ= 0
MO #43  (E1x #9 ) energy= 2.72289467376246   | 2.70805308900631   | 2.7377362585186    occ= 0
MO #44  (E1y #9 ) energy= 2.74375709722517   | 2.74082622757343   | 2.7466879668769    occ= 0
MO #45  (A1  #17) energy= 3.39798184686824   | 3.3942475367678    | 3.40171615696869   occ= 0
MO #46  (E2x #5 ) energy= 3.95222803984988   | 3.95031056200089   | 3.95414551769887   occ= 0
MO #47  (E2y #5 ) energy= 3.95222803984988   | 3.95031056200089   | 3.95414551769887   occ= 0
MO #48  (E1x #10) energy= 4.02792545471894   | 3.97334119546942   | 4.08250971396845   occ= 0
MO #49  (E1y #10) energy= 4.0390846252391    | 4.03179001514903   | 4.04637923532917   occ= 0
MO #50  (E1x #11) energy= 4.27319841698645   | 4.2714538579844    | 4.27494297598849   occ= 0
MO #51  (E1y #11) energy= 4.28081757000966   | 4.28046839075297   | 4.28116674926636   occ= 0
MO #52  (A1  #18) energy= 4.42698622455974   | 4.42157653968613   | 4.43239590943333   occ= 0
MO #53  (A1  #19) energy= 4.89582938703722   | 4.8904344357381    | 4.90122433833628   occ= 0
MO #54  (E1x #12) energy= 4.97257354992435   | 4.95210351049916   | 4.99304358934952   occ= 0
MO #55  (E1y #12) energy= 4.99178266428195   | 4.98813392958998   | 4.99543139897392   occ= 0
MO #56  (A1  #20) energy= 6.23433437408552   | 6.22431454360442   | 6.24435420456642   occ= 0
MO #57  (E3x #2 ) energy= 6.4606030279081    | 6.43560611186996   | 6.48559994394623   occ= 0
MO #58  (E3y #2 ) energy= 6.46060302790809   | 6.43560611186996   | 6.48559994394622   occ= 0
MO #59  (E2x #6 ) energy= 6.57775397417227   | 6.55969590898736   | 6.59581203935719   occ= 0
MO #60  (E2y #6 ) energy= 6.57775397417225   | 6.55969590898735   | 6.59581203935717   occ= 0
MO #61  (E1x #13) energy= 6.93762056155909   | 6.91692692723508   | 6.9583141958831    occ= 0
MO #62  (E1y #13) energy= 6.97295619422652   | 6.96827558855362   | 6.97763679989942   occ= 0
MO #63  (E2x #7 ) energy= 7.00730359186779   | 6.96567065554601   | 7.04893652818957   occ= 0
MO #64  (E2y #7 ) energy= 7.00730359186778   | 6.96567065554601   | 7.04893652818957   occ= 0
MO #65  (E1x #14) energy= 7.19588495354377   | 7.15683208566328   | 7.23493782142427   occ= 0
MO #66  (E1y #14) energy= 7.2268838572251    | 7.22038369811962   | 7.23338401633057   occ= 0
MO #67  (A1  #21) energy= 7.26099531972307   | 7.252187179125     | 7.26980346032109   occ= 0
MO #68  (A1  #22) energy= 7.50861036362314   | 7.49480754974429   | 7.52241317750197   occ= 0
MO #69  (A1  #23) energy= 11.2458433464384   | 11.2308441675289   | 11.2608425253479   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.85977
pop of  0 O 3s        0.00338
pop of  0 O 4s        0.00098
pop of  0 O 5s        0.00022
pop of  0 O 2px       0.99733
pop of  0 O 2py       1.99277
pop of  0 O 2pz       1.47109
pop of  0 O 3px       0.00017
pop of  0 O 3py       0.00146
pop of  0 O 3pz       0.00064
pop of  0 O 4px       0.00069
pop of  0 O 4py       0.00050
pop of  0 O 4pz       0.00161
pop of  0 O 5px       0.00010
pop of  0 O 5py       0.00024
pop of  0 O 5pz       0.00008
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00140
pop of  0 O 3dz^2     0.00608
pop of  0 O 3dxz      0.00069
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00033
pop of  0 O 4dz^2     0.00048
pop of  0 O 4dxz      0.00015
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00005
pop of  0 O 5dz^2     0.00009
pop of  0 O 5dxz      0.00002
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00016
pop of  0 O 4f 0      0.00056
pop of  0 O 4f 1      0.00001
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00005
pop of  0 O 5f 0      0.00010
pop of  0 O 5f 1      0.00001
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.64169
pop of  1 H 2s        0.00889
pop of  1 H 3s        0.00252
pop of  1 H 4s        0.00011
pop of  1 H 2px       0.00037
pop of  1 H 2py       0.00289
pop of  1 H 2pz       0.00102
pop of  1 H 3px       0.00029
pop of  1 H 3py       0.00001
pop of  1 H 3pz       0.00052
pop of  1 H 4px       0.00010
pop of  1 H 4py       0.00001
pop of  1 H 4pz       0.00004
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00013
pop of  1 H 3dz^2     0.00011
pop of  1 H 3dxz      0.00006
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00000
pop of  1 H 4dz^2     0.00002
pop of  1 H 4dxz      0.00000
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.34120
charge of  1H =      0.34120
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.84737
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.08/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.08)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:49:21 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       103.44

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpmko3hq68
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpmko3hq68
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.245677149798859  LUMO = 0.332778861894779
Initial guess E= -75.4030786814486  |g|= 0.000365835
macro= 0  E= -75.4030787430658  delta_E= -6.16171e-08  |g|= 0.000365835  1 KF 4 JK
macro= 1  E= -75.4030787430658  delta_E= -2.84217e-14  |g|= 1.29647e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4030787430658  |g|= 1.29647e-08  total 3 KF 9 JK
converged SCF energy = -75.4030787430658
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.08/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.08)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:49:23 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       108.03

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp8zd5_aeb
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp8zd5_aeb
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.245677199227571  LUMO = 0.332778884801948
Initial guess E= -75.4030786814476  |g|= 0.00036585
macro= 0  E= -75.4030787430658  delta_E= -6.16182e-08  |g|= 0.00036585  1 KF 3 JK
macro= 1  E= -75.4030787430658  delta_E= 0  |g|= 1.29456e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4030787430658  |g|= 1.29456e-08  total 3 KF 8 JK
converged SCF energy = -75.4030787430658
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.08/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.08)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:49:24 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       113.89

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpg0_9y6nm
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpg0_9y6nm
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.246076970177555  LUMO = 0.0288557619276597
Initial guess E= -75.4037198179576  |g|= 0.00865584
macro= 0  E= -75.4037388861873  delta_E= -1.90682e-05  |g|= 0.00036449  2 KF 7 JK
macro= 1  E= -75.4037388861873  delta_E= 0  |g|= 7.5245e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4037388861873  |g|= 7.5245e-06  total 4 KF 12 JK
converged SCF energy = -75.4037388861873
u+d contributions  -0.05749539325182412
uu+dd contributions  -0.08797244508663606
ud contributions  -0.18177404990887577
u+d contributions  -0.008305147145303133
uu+dd contributions  -0.03867827273748477
ud contributions  -0.13228951623970756
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.08/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.08)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:49:28 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       126.55

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp_8vkplw7
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp_8vkplw7
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.245341604881576  LUMO = 0.332866910452964
Initial guess E= -75.4030786552274  |g|= 0.000374363
macro= 0  E= -75.4030787430658  delta_E= -8.78383e-08  |g|= 0.000374363  1 KF 2 JK
macro= 1  E= -75.4030787430658  delta_E= 0  |g|= 3.36813e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4030787430658  |g|= 3.36813e-08  total 3 KF 7 JK
converged SCF energy = -75.4030787430658
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.08/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.08)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:49:30 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       130.72

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp4w246wkb
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp4w246wkb
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.245739812092632  LUMO = 0.0288526349390515
Initial guess E= -75.4036721486204  |g|= 0.00628922
macro= 0  E= -75.4036856130705  delta_E= -1.34645e-05  |g|= 0.000270915  2 KF 7 JK
macro= 1  E= -75.4036856130705  delta_E= 0  |g|= 4.46017e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4036856130705  |g|= 4.46017e-06  total 4 KF 12 JK
converged SCF energy = -75.4036856130705
u+d contributions  -0.02452985323011376
uu+dd contributions  -0.04749970077873896
ud contributions  -0.10687423302909847
u+d contributions  -0.00566490795655882
uu+dd contributions  -0.028606123887376593
ud contributions  -0.08796550274483196
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.952909, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.243259, i_min=0
In the tapering subroutine, i=2, E(i)=-75.403079, i_min=1
In the tapering subroutine, i=3, E(i)=-75.058450, i_min=2
In the tapering subroutine, i=4, E(i)=-75.398604, i_min=2
In the tapering subroutine, i=5, E(i)=-75.046838, i_min=2
In the tapering subroutine, i=6, E(i)=-74.849746, i_min=2
In the tapering subroutine, i=7, E(i)=-75.086055, i_min=2
In the tapering subroutine, i=8, E(i)=-75.243259, i_min=2
In the tapering subroutine, i=9, E(i)=-75.249393, i_min=2
In the tapering subroutine, i=10, E(i)=-75.082016, i_min=2
In the tapering subroutine, i=11, E(i)=-75.403079, i_min=2
In the tapering subroutine, i=12, E(i)=-75.069659, i_min=2
In the tapering subroutine, i=13, E(i)=-75.398604, i_min=2
In the tapering subroutine, i=14, E(i)=-75.086055, i_min=2
In the tapering subroutine, i=15, E(i)=-74.888113, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005664885412712289
uu+dd contributions  -0.02860619346222625
ud contributions  -0.08794494482622782
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.00566927817362415
uu+dd contributions  -0.028612044463562393
ud contributions  -0.08795566547025967
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.00566927817362415
uu+dd contributions  -0.028612044463562393
ud contributions  -0.08795566547025967
