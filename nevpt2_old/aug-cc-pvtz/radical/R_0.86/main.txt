#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.86/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.86)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:02:56 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.860000000000 AA    0.000000000000   0.000000000000   1.625164467126 Bohr

nuclear repulsion = 4.92257870623256
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         5.29
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmps_6ss86p
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmps_6ss86p
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.450953776213555  LUMO (A1) = 0.0292771735191092
Initial guess E= -75.3948338055134  |g|= 0.208211
macro= 0  E= -75.4031305493176  delta_E= -0.00829674  |g|= 0.208211  2 KF 5 JK
macro= 1  E= -75.4039744103153  delta_E= -0.000843861  |g|= 0.0970498  2 KF 5 JK
macro= 2  E= -75.4023543290541  delta_E= 0.00162008  |g|= 0.0599729  2 KF 5 JK
macro= 3  E= -75.4039171576058  delta_E= -0.00156283  |g|= 0.10866  2 KF 5 JK
macro= 4  E= -75.4028105600757  delta_E= 0.0011066  |g|= 0.0604966  2 KF 5 JK
macro= 5  E= -75.4039318768213  delta_E= -0.00112132  |g|= 0.101693  2 KF 5 JK
macro= 6  E= -75.4026717376465  delta_E= 0.00126014  |g|= 0.0596105  2 KF 5 JK
macro= 7  E= -75.4039339553884  delta_E= -0.00126222  |g|= 0.103898  2 KF 5 JK
macro= 8  E= -75.4027031832811  delta_E= 0.00123077  |g|= 0.0600336  2 KF 5 JK
macro= 9  E= -75.4039376638231  delta_E= -0.00123448  |g|= 0.103434  2 KF 5 JK
macro= 10  E= -75.4026685410924  delta_E= 0.00126912  |g|= 0.0598499  2 KF 5 JK
macro= 11  E= -75.4039409803743  delta_E= -0.00127244  |g|= 0.104031  2 KF 5 JK
macro= 12  E= -75.402659179532  delta_E= 0.0012818  |g|= 0.0598633  2 KF 5 JK
macro= 13  E= -75.4039443616698  delta_E= -0.00128518  |g|= 0.104226  2 KF 5 JK
macro= 14  E= -75.4026402046149  delta_E= 0.00130416  |g|= 0.0597746  2 KF 5 JK
macro= 15  E= -75.4039477589095  delta_E= -0.00130755  |g|= 0.104569  2 KF 5 JK
macro= 16  E= -75.4026251044267  delta_E= 0.00132265  |g|= 0.0597171  2 KF 5 JK
macro= 17  E= -75.4039511386243  delta_E= -0.00132603  |g|= 0.104847  2 KF 5 JK
macro= 18  E= -75.4026086616636  delta_E= 0.00134248  |g|= 0.0596426  2 KF 5 JK
macro= 19  E= -75.4039545340767  delta_E= -0.00134587  |g|= 0.105144  2 KF 5 JK
macro= 20  E= -75.4025929194074  delta_E= 0.00136161  |g|= 0.0595722  2 KF 5 JK
macro= 21  E= -75.4039579204239  delta_E= -0.001365  |g|= 0.105426  2 KF 5 JK
macro= 22  E= -75.4025770941913  delta_E= 0.00138083  |g|= 0.0594983  2 KF 5 JK
macro= 23  E= -75.4039613090748  delta_E= -0.00138421  |g|= 0.105706  2 KF 5 JK
macro= 24  E= -75.4025615062668  delta_E= 0.0013998  |g|= 0.0594243  2 KF 5 JK
macro= 25  E= -75.4039646912805  delta_E= -0.00140319  |g|= 0.105979  2 KF 5 JK
macro= 26  E= -75.4025460425286  delta_E= 0.00141865  |g|= 0.0593488  2 KF 5 JK
macro= 27  E= -75.4039680687067  delta_E= -0.00142203  |g|= 0.106247  2 KF 5 JK
macro= 28  E= -75.4025307593842  delta_E= 0.00143731  |g|= 0.0592726  2 KF 5 JK
macro= 29  E= -75.4039714378211  delta_E= -0.00144068  |g|= 0.10651  2 KF 5 JK
macro= 30  E= -75.402515645453  delta_E= 0.00145579  |g|= 0.0591953  2 KF 5 JK
macro= 31  E= -75.4039747976207  delta_E= -0.00145915  |g|= 0.106767  2 KF 5 JK
macro= 32  E= -75.4025007152782  delta_E= 0.00147408  |g|= 0.0591173  2 KF 5 JK
macro= 33  E= -75.403978145916  delta_E= -0.00147743  |g|= 0.107019  2 KF 5 JK
macro= 34  E= -75.4024859722066  delta_E= 0.00149217  |g|= 0.0590384  2 KF 5 JK
macro= 35  E= -75.4039814811056  delta_E= -0.00149551  |g|= 0.107265  2 KF 5 JK
macro= 36  E= -75.4024714231687  delta_E= 0.00151006  |g|= 0.0589587  2 KF 5 JK
macro= 37  E= -75.4039848013499  delta_E= -0.00151338  |g|= 0.107506  2 KF 5 JK
macro= 38  E= -75.4024570728039  delta_E= 0.00152773  |g|= 0.0588784  2 KF 5 JK
macro= 39  E= -75.403988104968  delta_E= -0.00153103  |g|= 0.107741  2 KF 5 JK
macro= 40  E= -75.4024429258413  delta_E= 0.00154518  |g|= 0.0587973  2 KF 5 JK
macro= 41  E= -75.4039913902588  delta_E= -0.00154846  |g|= 0.107971  2 KF 5 JK
macro= 42  E= -75.4024289861688  delta_E= 0.0015624  |g|= 0.0587156  2 KF 5 JK
macro= 43  E= -75.4039946555913  delta_E= -0.00156567  |g|= 0.108195  2 KF 5 JK
macro= 44  E= -75.4024152572413  delta_E= 0.0015794  |g|= 0.0586334  2 KF 5 JK
macro= 45  E= -75.4039978993709  delta_E= -0.00158264  |g|= 0.108415  2 KF 5 JK
macro= 46  E= -75.4024017419453  delta_E= 0.00159616  |g|= 0.0585507  2 KF 5 JK
macro= 47  E= -75.4040011200614  delta_E= -0.00159938  |g|= 0.108629  2 KF 5 JK
macro= 48  E= -75.4023884426885  delta_E= 0.00161268  |g|= 0.0584675  2 KF 5 JK
macro= 49  E= -75.4040043161793  delta_E= -0.00161587  |g|= 0.108838  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4040043161793  |g|= 0.108838  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4040043161793

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmps_6ss86p
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmps_6ss86p
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.270743997880972  LUMO (A1) = 0.0313742440068832
Initial guess E= -75.4053887138427  |g|= 0.0383966
macro= 0  E= -75.4055556839034  delta_E= -0.00016697  |g|= 0.0383966  2 KF 5 JK
macro= 1  E= -75.4055420463687  delta_E= 1.36375e-05  |g|= 0.0194199  2 KF 5 JK
macro= 2  E= -75.405549156768  delta_E= -7.1104e-06  |g|= 0.0282019  2 KF 5 JK
macro= 3  E= -75.4055396510148  delta_E= 9.50575e-06  |g|= 0.0202401  2 KF 5 JK
macro= 4  E= -75.4055451523972  delta_E= -5.50138e-06  |g|= 0.02811  2 KF 5 JK
macro= 5  E= -75.4055407820386  delta_E= 4.37036e-06  |g|= 0.0206841  2 KF 5 JK
macro= 6  E= -75.4055450595193  delta_E= -4.27748e-06  |g|= 0.0280018  2 KF 5 JK
macro= 7  E= -75.405540386753  delta_E= 4.67277e-06  |g|= 0.0207198  2 KF 5 JK
macro= 8  E= -75.4055451991926  delta_E= -4.81244e-06  |g|= 0.0280223  2 KF 5 JK
macro= 9  E= -75.4055402419339  delta_E= 4.95726e-06  |g|= 0.0207216  2 KF 5 JK
macro= 10  E= -75.405545890093  delta_E= -5.64816e-06  |g|= 0.0280382  2 KF 5 JK
macro= 11  E= -75.4055402221746  delta_E= 5.66792e-06  |g|= 0.0207004  2 KF 5 JK
macro= 12  E= -75.4055466180485  delta_E= -6.39587e-06  |g|= 0.028046  2 KF 5 JK
macro= 13  E= -75.4055413236275  delta_E= 5.29442e-06  |g|= 0.0207359  2 KF 5 JK
macro= 14  E= -75.4055462017898  delta_E= -4.87816e-06  |g|= 0.027946  2 KF 5 JK
macro= 15  E= -75.4055419345357  delta_E= 4.26725e-06  |g|= 0.0208667  2 KF 5 JK
macro= 16  E= -75.4055457981413  delta_E= -3.86361e-06  |g|= 0.0278666  2 KF 5 JK
macro= 17  E= -75.4055419544158  delta_E= 3.84373e-06  |g|= 0.0209468  2 KF 5 JK
macro= 18  E= -75.4055456754589  delta_E= -3.72104e-06  |g|= 0.0278421  2 KF 5 JK
macro= 19  E= -75.405541923666  delta_E= 3.75179e-06  |g|= 0.0209767  2 KF 5 JK
macro= 20  E= -75.4055456140692  delta_E= -3.6904e-06  |g|= 0.0278347  2 KF 5 JK
macro= 21  E= -75.4055418815098  delta_E= 3.73256e-06  |g|= 0.0209898  2 KF 5 JK
macro= 22  E= -75.4055455551971  delta_E= -3.67369e-06  |g|= 0.0278345  2 KF 5 JK
macro= 23  E= -75.4055418467109  delta_E= 3.70849e-06  |g|= 0.0209977  2 KF 5 JK
macro= 24  E= -75.4055454947215  delta_E= -3.64801e-06  |g|= 0.0278364  2 KF 5 JK
macro= 25  E= -75.4055418111752  delta_E= 3.68355e-06  |g|= 0.0210035  2 KF 5 JK
macro= 26  E= -75.4055454345252  delta_E= -3.62335e-06  |g|= 0.0278393  2 KF 5 JK
macro= 27  E= -75.4055417761467  delta_E= 3.65838e-06  |g|= 0.0210083  2 KF 5 JK
macro= 28  E= -75.4055453745012  delta_E= -3.59835e-06  |g|= 0.0278427  2 KF 5 JK
macro= 29  E= -75.4055417410687  delta_E= 3.63343e-06  |g|= 0.0210127  2 KF 5 JK
macro= 30  E= -75.4055453146358  delta_E= -3.57357e-06  |g|= 0.0278462  2 KF 5 JK
macro= 31  E= -75.4055417060661  delta_E= 3.60857e-06  |g|= 0.0210168  2 KF 5 JK
macro= 32  E= -75.4055452548776  delta_E= -3.54881e-06  |g|= 0.0278499  2 KF 5 JK
macro= 33  E= -75.4055416710646  delta_E= 3.58381e-06  |g|= 0.0210209  2 KF 5 JK
macro= 34  E= -75.4055451952288  delta_E= -3.52416e-06  |g|= 0.0278535  2 KF 5 JK
macro= 35  E= -75.4055416360667  delta_E= 3.55916e-06  |g|= 0.0210249  2 KF 5 JK
macro= 36  E= -75.4055451356863  delta_E= -3.49962e-06  |g|= 0.0278572  2 KF 5 JK
macro= 37  E= -75.405541601063  delta_E= 3.53462e-06  |g|= 0.0210289  2 KF 5 JK
macro= 38  E= -75.4055450762489  delta_E= -3.47519e-06  |g|= 0.0278609  2 KF 5 JK
macro= 39  E= -75.4055415660526  delta_E= 3.5102e-06  |g|= 0.0210329  2 KF 5 JK
macro= 40  E= -75.4055450169171  delta_E= -3.45086e-06  |g|= 0.0278646  2 KF 5 JK
macro= 41  E= -75.405541531035  delta_E= 3.48588e-06  |g|= 0.0210369  2 KF 5 JK
macro= 42  E= -75.4055449576903  delta_E= -3.42666e-06  |g|= 0.0278683  2 KF 5 JK
macro= 43  E= -75.4055414960092  delta_E= 3.46168e-06  |g|= 0.0210408  2 KF 5 JK
macro= 44  E= -75.4055448985683  delta_E= -3.40256e-06  |g|= 0.027872  2 KF 5 JK
macro= 45  E= -75.4055414609758  delta_E= 3.43759e-06  |g|= 0.0210447  2 KF 5 JK
macro= 46  E= -75.4055448395517  delta_E= -3.37858e-06  |g|= 0.0278757  2 KF 5 JK
macro= 47  E= -75.4055414259347  delta_E= 3.41362e-06  |g|= 0.0210487  2 KF 5 JK
macro= 48  E= -75.4055447806397  delta_E= -3.35471e-06  |g|= 0.0278794  2 KF 5 JK
macro= 49  E= -75.4055413908856  delta_E= 3.38975e-06  |g|= 0.0210526  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4055413908856  |g|= 0.0210526  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4055413908856
**** SCF Summaries ****
Total Energy =                         -75.405541390885645
Nuclear Repulsion Energy =               4.922578706232559
One-electron Energy =                 -113.665379056378640
Two-electron Energy =                   33.337258959260438
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    0    1    0    0    0    0
single occ                     0    1    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.5983563175525  | -20.6153455911386  | -20.5813670439663  occ= 2
MO #2   (A1  #2 ) energy= -1.34600028214338  | -1.41445689542023  | -1.27754366886653  occ= 2
MO #3   (A1  #3 ) energy= -0.687637766784794 | -0.710783026628038 | -0.66449250694155  occ= 2
MO #4   (E1y #1 ) energy= -0.539694060664202 | -0.55896327178769  | -0.520424849540714 occ= 2
MO #5   (E1x #1 ) energy= -0.247956352264563 | -0.647484283568234 | 0.151571579039107  occ= 1
MO #6   (A1  #4 ) energy= 0.0314361381630382 | 0.0309332752121669 | 0.0319390011139165 occ= 0
MO #7   (A1  #5 ) energy= 0.13779950980115   | 0.137113608803012  | 0.138485410799302  occ= 0
MO #8   (E1x #2 ) energy= 0.156333712846002  | 0.150855229706273  | 0.16181219598573   occ= 0
MO #9   (E1y #2 ) energy= 0.159910098667852  | 0.159208070435721  | 0.160612126899983  occ= 0
MO #10  (A1  #6 ) energy= 0.189599585262514  | 0.187432439633818  | 0.191766730891226  occ= 0
MO #11  (A1  #7 ) energy= 0.269115857213196  | 0.267505067258734  | 0.270726647167682  occ= 0
MO #12  (E1x #3 ) energy= 0.277232435203677  | 0.273507463534227  | 0.280957406873126  occ= 0
MO #13  (E1y #3 ) energy= 0.280639320366916  | 0.280172680803553  | 0.281105959930276  occ= 0
MO #14  (A1  #8 ) energy= 0.452195533785539  | 0.448461299039598  | 0.455929768531523  occ= 0
MO #15  (E2x #1 ) energy= 0.648532010302308  | 0.638980221559497  | 0.65808379904512   occ= 0
MO #16  (E2y #1 ) energy= 0.648532010302309  | 0.638980221559498  | 0.658083799045121  occ= 0
MO #17  (A1  #9 ) energy= 0.665384164707396  | 0.659056597049707  | 0.671711732365103  occ= 0
MO #18  (E1x #4 ) energy= 0.724504955713036  | 0.715175550809753  | 0.733834360616323  occ= 0
MO #19  (E1y #4 ) energy= 0.730557462428653  | 0.729292394862944  | 0.731822529994362  occ= 0
MO #20  (E1x #5 ) energy= 0.870629129371187  | 0.845800015166596  | 0.895458243575771  occ= 0
MO #21  (E1y #5 ) energy= 0.872890942074559  | 0.86991627901953   | 0.875865605129591  occ= 0
MO #22  (A1  #10) energy= 0.886091885551892  | 0.880738025317631  | 0.891445745786235  occ= 0
MO #23  (A1  #11) energy= 0.920861934374882  | 0.919377848960847  | 0.922346019788918  occ= 0
MO #24  (E2x #2 ) energy= 0.947895935423222  | 0.946425092913315  | 0.949366777933127  occ= 0
MO #25  (E2y #2 ) energy= 0.947895935423217  | 0.946425092913313  | 0.949366777933126  occ= 0
MO #26  (E1x #6 ) energy= 1.013112371374     | 0.992371409890047  | 1.03385333285794   occ= 0
MO #27  (E1y #6 ) energy= 1.02201275232917   | 1.01923041636054   | 1.02479508829779   occ= 0
MO #28  (A1  #12) energy= 1.06540708732225   | 1.05938271923518   | 1.07143145540941   occ= 0
MO #29  (E1x #7 ) energy= 1.56952163350839   | 1.5519852071424    | 1.58705805987438   occ= 0
MO #30  (E1y #7 ) energy= 1.57709856405036   | 1.57475717118989   | 1.57943995691083   occ= 0
MO #31  (A1  #13) energy= 1.66584993166223   | 1.65589713037476   | 1.67580273294976   occ= 0
MO #32  (E3x #1 ) energy= 2.04949411708852   | 2.03943882096105   | 2.05954941321599   occ= 0
MO #33  (E3y #1 ) energy= 2.04949411708852   | 2.03943882096105   | 2.05954941321599   occ= 0
MO #34  (E2x #3 ) energy= 2.13629239702446   | 2.10065704718455   | 2.17192774686436   occ= 0
MO #35  (E2y #3 ) energy= 2.13629239702445   | 2.10065704718455   | 2.17192774686436   occ= 0
MO #36  (A1  #14) energy= 2.14975470746858   | 2.13970175797973   | 2.15980765695744   occ= 0
MO #37  (E1x #8 ) energy= 2.30276558548971   | 2.28436110628407   | 2.32117006469535   occ= 0
MO #38  (E1y #8 ) energy= 2.3203901318306    | 2.3173060198378    | 2.32347424382339   occ= 0
MO #39  (E2x #4 ) energy= 2.36175025260834   | 2.35386506948192   | 2.36963543573476   occ= 0
MO #40  (E2y #4 ) energy= 2.36175025260834   | 2.35386506948192   | 2.36963543573475   occ= 0
MO #41  (A1  #15) energy= 2.38169052902261   | 2.37391535431288   | 2.38946570373225   occ= 0
MO #42  (A1  #16) energy= 2.61556719369686   | 2.60670542171387   | 2.62442896567983   occ= 0
MO #43  (E1x #9 ) energy= 2.73676222255628   | 2.7115321319153    | 2.76199231319727   occ= 0
MO #44  (E1y #9 ) energy= 2.75833855505068   | 2.75394540203626   | 2.76273170806511   occ= 0
MO #45  (A1  #17) energy= 3.72491103951551   | 3.71963928751407   | 3.73018279151697   occ= 0
MO #46  (E2x #5 ) energy= 4.13885280718511   | 4.13527031073453   | 4.14243530363568   occ= 0
MO #47  (E2y #5 ) energy= 4.1388528071851    | 4.13527031073452   | 4.14243530363567   occ= 0
MO #48  (E1x #10) energy= 4.15549880749496   | 4.11810912167183   | 4.19288849331808   occ= 0
MO #49  (E1y #10) energy= 4.16664085237671   | 4.16149882098748   | 4.17178288376595   occ= 0
MO #50  (E1x #11) energy= 4.35018244422442   | 4.33063417685752   | 4.3697307115913    occ= 0
MO #51  (E1y #11) energy= 4.3613538705175    | 4.35869326135408   | 4.36401447968093   occ= 0
MO #52  (A1  #18) energy= 4.72602973833716   | 4.72041006515764   | 4.73164941151671   occ= 0
MO #53  (A1  #19) energy= 5.53887476116323   | 5.52588063853889   | 5.55186888378751   occ= 0
MO #54  (E1x #12) energy= 5.57259543295632   | 5.55283773153904   | 5.59235313437361   occ= 0
MO #55  (E1y #12) energy= 5.59923320126614   | 5.59527641663203   | 5.60318998590026   occ= 0
MO #56  (A1  #20) energy= 6.16752775205694   | 6.1567962922005    | 6.17825921191346   occ= 0
MO #57  (E3x #2 ) energy= 6.45758520196138   | 6.43258446420618   | 6.48258593971658   occ= 0
MO #58  (E3y #2 ) energy= 6.45758520196138   | 6.43258446420618   | 6.48258593971658   occ= 0
MO #59  (E2x #6 ) energy= 6.66980605362977   | 6.65126423280229   | 6.68834787445724   occ= 0
MO #60  (E2y #6 ) energy= 6.66980605362975   | 6.65126423280227   | 6.68834787445722   occ= 0
MO #61  (E2x #7 ) energy= 7.01325075979713   | 6.9720679393689    | 7.05443358022537   occ= 0
MO #62  (E2y #7 ) energy= 7.01325075979712   | 6.97206793936889   | 7.05443358022536   occ= 0
MO #63  (E1x #13) energy= 7.13041062746563   | 7.09764278593295   | 7.16317846899832   occ= 0
MO #64  (E1y #13) energy= 7.16281627828659   | 7.15708145267355   | 7.16855110389962   occ= 0
MO #65  (E1x #14) energy= 7.53943806328766   | 7.51451962726281   | 7.56435649931252   occ= 0
MO #66  (E1y #14) energy= 7.57257615212668   | 7.56754058731094   | 7.5776117169424    occ= 0
MO #67  (A1  #21) energy= 7.87058138643919   | 7.86259016377027   | 7.87857260910811   occ= 0
MO #68  (A1  #22) energy= 7.96718756683216   | 7.9575165460581    | 7.97685858760621   occ= 0
MO #69  (A1  #23) energy= 15.1764739995297   | 15.1636573086549   | 15.1892906904046   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.76621
pop of  0 O 3s        0.00631
pop of  0 O 4s        0.00154
pop of  0 O 5s        0.00012
pop of  0 O 2px       0.99678
pop of  0 O 2py       1.99207
pop of  0 O 2pz       1.58129
pop of  0 O 3px       0.00019
pop of  0 O 3py       0.00085
pop of  0 O 3pz       0.00338
pop of  0 O 4px       0.00041
pop of  0 O 4py       0.00044
pop of  0 O 4pz       0.00161
pop of  0 O 5px       0.00003
pop of  0 O 5py       0.00015
pop of  0 O 5pz       0.00018
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00252
pop of  0 O 3dz^2     0.01191
pop of  0 O 3dxz      0.00117
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00039
pop of  0 O 4dz^2     0.00060
pop of  0 O 4dxz      0.00015
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00003
pop of  0 O 5dz^2     0.00023
pop of  0 O 5dxz      0.00001
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00019
pop of  0 O 4f 0      0.00149
pop of  0 O 4f 1      0.00002
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00002
pop of  0 O 5f 0      0.00006
pop of  0 O 5f 1      0.00001
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.59709
pop of  1 H 2s        0.01664
pop of  1 H 3s        0.00920
pop of  1 H 4s        0.00044
pop of  1 H 2px       0.00063
pop of  1 H 2py       0.00327
pop of  1 H 2pz       0.00058
pop of  1 H 3px       0.00048
pop of  1 H 3py       0.00003
pop of  1 H 3pz       0.00011
pop of  1 H 4px       0.00005
pop of  1 H 4py       0.00000
pop of  1 H 4pz       0.00034
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00003
pop of  1 H 3dz^2     0.00045
pop of  1 H 3dxz      0.00002
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00001
pop of  1 H 4dz^2     0.00023
pop of  1 H 4dxz      0.00006
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.37034
charge of  1H =      0.37034
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.67511
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.86/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.86)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:03:24 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       105.86

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpe759dqlz
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpe759dqlz
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.247956352264564  LUMO = 0.533727073334488
Initial guess E= -75.4055574455492  |g|= 0.000929425
macro= 0  E= -75.4055578182854  delta_E= -3.72736e-07  |g|= 0.000929425  1 KF 4 JK
macro= 1  E= -75.4055578182854  delta_E= -1.42109e-14  |g|= 7.66206e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4055578182854  |g|= 7.66206e-08  total 3 KF 9 JK
converged SCF energy = -75.4055578182854
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.86/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.86)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:03:26 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       111.45

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpx0xj1a9t
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpx0xj1a9t
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.247957167672353  LUMO = 0.533727362407817
Initial guess E= -75.4055574452366  |g|= 0.000929519
macro= 0  E= -75.4055578182854  delta_E= -3.73049e-07  |g|= 0.000929519  1 KF 3 JK
macro= 1  E= -75.4055578182854  delta_E= 0  |g|= 7.67807e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4055578182854  |g|= 7.67807e-08  total 3 KF 8 JK
converged SCF energy = -75.4055578182854
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.86/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.86)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:03:28 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       117.63

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp3cxydigd
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp3cxydigd
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.248246133890375  LUMO = 0.0314301901432576
Initial guess E= -75.4062175775012  |g|= 0.0119162
macro= 0  E= -75.4062492676373  delta_E= -3.16901e-05  |g|= 0.000424705  2 KF 7 JK
macro= 1  E= -75.4062492676374  delta_E= -1.42109e-14  |g|= 7.96029e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4062492676374  |g|= 7.96029e-06  total 4 KF 12 JK
converged SCF energy = -75.4062492676374
u+d contributions  -0.05345233293362866
uu+dd contributions  -0.08522911588180154
ud contributions  -0.1832073256472229
u+d contributions  -0.007998708087317948
uu+dd contributions  -0.03967889052447213
ud contributions  -0.13749586346964385
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.86/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.86)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:03:33 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       129.67

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpawt0inu_
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpawt0inu_
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.248644770397449  LUMO = 0.533573643572219
Initial guess E= -75.4055573510547  |g|= 0.000934533
macro= 0  E= -75.4055578182854  delta_E= -4.67231e-07  |g|= 0.000934533  1 KF 2 JK
macro= 1  E= -75.4055578182854  delta_E= -1.42109e-14  |g|= 1.54544e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4055578182854  |g|= 1.54544e-07  total 3 KF 7 JK
converged SCF energy = -75.4055578182854
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.86/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.86)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:03:35 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       135.29

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpyw_9qqwb
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpyw_9qqwb
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.248932348024561  LUMO = 0.0314425735621277
Initial guess E= -75.4061756756059  |g|= 0.00784274
macro= 0  E= -75.4061945937635  delta_E= -1.89182e-05  |g|= 0.000306445  2 KF 7 JK
macro= 1  E= -75.4061945937635  delta_E= -2.84217e-14  |g|= 4.84259e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4061945937635  |g|= 4.84259e-06  total 4 KF 12 JK
converged SCF energy = -75.4061945937635
u+d contributions  -0.01968740549048179
uu+dd contributions  -0.04431128415325441
ud contributions  -0.10944999200603923
u+d contributions  -0.004301107422507377
uu+dd contributions  -0.02890881769237456
ud contributions  -0.09404272556402123
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.778912, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.229839, i_min=0
In the tapering subroutine, i=2, E(i)=-75.405558, i_min=1
In the tapering subroutine, i=3, E(i)=-74.858506, i_min=2
In the tapering subroutine, i=4, E(i)=-75.401122, i_min=2
In the tapering subroutine, i=5, E(i)=-74.847262, i_min=2
In the tapering subroutine, i=6, E(i)=-74.845161, i_min=2
In the tapering subroutine, i=7, E(i)=-74.900230, i_min=2
In the tapering subroutine, i=8, E(i)=-75.229839, i_min=2
In the tapering subroutine, i=9, E(i)=-75.255475, i_min=2
In the tapering subroutine, i=10, E(i)=-74.885346, i_min=2
In the tapering subroutine, i=11, E(i)=-75.405558, i_min=2
In the tapering subroutine, i=12, E(i)=-74.873298, i_min=2
In the tapering subroutine, i=13, E(i)=-75.401122, i_min=2
In the tapering subroutine, i=14, E(i)=-74.900230, i_min=2
In the tapering subroutine, i=15, E(i)=-74.883699, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.004301040128145333
uu+dd contributions  -0.028908742084410053
ud contributions  -0.09402763446770486
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.004184306677066807
uu+dd contributions  -0.028792510849359222
ud contributions  -0.09391082839068282
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.004184306677066807
uu+dd contributions  -0.028792510849359222
ud contributions  -0.09391082839068282
