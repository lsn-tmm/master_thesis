#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.96/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.96)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:32:45 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.960000000000 AA    0.000000000000   0.000000000000   1.814137079582 Bohr

nuclear repulsion = 4.409810091
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         4.58
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpau5q_n0q
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpau5q_n0q
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.434564093440011  LUMO (A1) = 0.0272051466935838
Initial guess E= -75.4044210429283  |g|= 0.210657
macro= 0  E= -75.4140260607703  delta_E= -0.00960502  |g|= 0.210657  2 KF 5 JK
macro= 1  E= -75.4147210974857  delta_E= -0.000695037  |g|= 0.0934698  2 KF 5 JK
macro= 2  E= -75.4130289890172  delta_E= 0.00169211  |g|= 0.0614396  2 KF 5 JK
macro= 3  E= -75.4145480947365  delta_E= -0.00151911  |g|= 0.107492  2 KF 5 JK
macro= 4  E= -75.4129459130226  delta_E= 0.00160218  |g|= 0.0585256  2 KF 5 JK
macro= 5  E= -75.4145668152144  delta_E= -0.0016209  |g|= 0.10897  2 KF 5 JK
macro= 6  E= -75.4134621817337  delta_E= 0.00110463  |g|= 0.0617917  2 KF 5 JK
macro= 7  E= -75.4145803430058  delta_E= -0.00111816  |g|= 0.101349  2 KF 5 JK
macro= 8  E= -75.4132838839457  delta_E= 0.00129646  |g|= 0.059877  2 KF 5 JK
macro= 9  E= -75.4145820524768  delta_E= -0.00129817  |g|= 0.10431  2 KF 5 JK
macro= 10  E= -75.41332833558  delta_E= 0.00125372  |g|= 0.0601735  2 KF 5 JK
macro= 11  E= -75.4145873316505  delta_E= -0.001259  |g|= 0.103702  2 KF 5 JK
macro= 12  E= -75.4132843071447  delta_E= 0.00130302  |g|= 0.059888  2 KF 5 JK
macro= 13  E= -75.4145911773052  delta_E= -0.00130687  |g|= 0.104458  2 KF 5 JK
macro= 14  E= -75.4132739717647  delta_E= 0.00131721  |g|= 0.059858  2 KF 5 JK
macro= 15  E= -75.4145955390414  delta_E= -0.00132157  |g|= 0.104679  2 KF 5 JK
macro= 16  E= -75.413250566137  delta_E= 0.00134497  |g|= 0.0597339  2 KF 5 JK
macro= 17  E= -75.4145997674646  delta_E= -0.0013492  |g|= 0.105094  2 KF 5 JK
macro= 18  E= -75.4132324745168  delta_E= 0.00136729  |g|= 0.0596491  2 KF 5 JK
macro= 19  E= -75.414604049333  delta_E= -0.00137157  |g|= 0.105422  2 KF 5 JK
macro= 20  E= -75.4132124552037  delta_E= 0.00139159  |g|= 0.0595473  2 KF 5 JK
macro= 21  E= -75.414608334358  delta_E= -0.00139588  |g|= 0.105774  2 KF 5 JK
macro= 22  E= -75.4131934340728  delta_E= 0.0014149  |g|= 0.0594507  2 KF 5 JK
macro= 23  E= -75.4146126242664  delta_E= -0.00141919  |g|= 0.106107  2 KF 5 JK
macro= 24  E= -75.4131742496374  delta_E= 0.00143837  |g|= 0.0593499  2 KF 5 JK
macro= 25  E= -75.4146169197807  delta_E= -0.00144267  |g|= 0.106438  2 KF 5 JK
macro= 26  E= -75.4131553993101  delta_E= 0.00146152  |g|= 0.0592487  2 KF 5 JK
macro= 27  E= -75.4146212132008  delta_E= -0.00146581  |g|= 0.10676  2 KF 5 JK
macro= 28  E= -75.4131366971955  delta_E= 0.00148452  |g|= 0.0591455  2 KF 5 JK
macro= 29  E= -75.4146255043685  delta_E= -0.00148881  |g|= 0.107076  2 KF 5 JK
macro= 30  E= -75.413118239814  delta_E= 0.00150726  |g|= 0.0590411  2 KF 5 JK
macro= 31  E= -75.4146297881297  delta_E= -0.00151155  |g|= 0.107384  2 KF 5 JK
macro= 32  E= -75.4131000034898  delta_E= 0.00152978  |g|= 0.0589352  2 KF 5 JK
macro= 33  E= -75.4146340623044  delta_E= -0.00153406  |g|= 0.107685  2 KF 5 JK
macro= 34  E= -75.4130820141411  delta_E= 0.00155205  |g|= 0.058828  2 KF 5 JK
macro= 35  E= -75.4146383230743  delta_E= -0.00155631  |g|= 0.10798  2 KF 5 JK
macro= 36  E= -75.4130642749005  delta_E= 0.00157405  |g|= 0.0587197  2 KF 5 JK
macro= 37  E= -75.4146425675599  delta_E= -0.00157829  |g|= 0.108267  2 KF 5 JK
macro= 38  E= -75.4130467973652  delta_E= 0.00159577  |g|= 0.0586102  2 KF 5 JK
macro= 39  E= -75.4146467924499  delta_E= -0.0016  |g|= 0.108547  2 KF 5 JK
macro= 40  E= -75.4130295879969  delta_E= 0.0016172  |g|= 0.0584997  2 KF 5 JK
macro= 41  E= -75.4146509947518  delta_E= -0.00162141  |g|= 0.10882  2 KF 5 JK
macro= 42  E= -75.4130126541652  delta_E= 0.00163834  |g|= 0.0583883  2 KF 5 JK
macro= 43  E= -75.4146551714141  delta_E= -0.00164252  |g|= 0.109086  2 KF 5 JK
macro= 44  E= -75.4129960014937  delta_E= 0.00165917  |g|= 0.0582761  2 KF 5 JK
macro= 45  E= -75.4146593195443  delta_E= -0.00166332  |g|= 0.109345  2 KF 5 JK
macro= 46  E= -75.4129796351077  delta_E= 0.00167968  |g|= 0.0581631  2 KF 5 JK
macro= 47  E= -75.4146634363107  delta_E= -0.0016838  |g|= 0.109598  2 KF 5 JK
macro= 48  E= -75.4129635591169  delta_E= 0.00169988  |g|= 0.0580495  2 KF 5 JK
macro= 49  E= -75.4146675190101  delta_E= -0.00170396  |g|= 0.109844  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4146675190101  |g|= 0.109844  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4146675190101

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpau5q_n0q
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpau5q_n0q
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.265801578705637  LUMO (A1) = 0.0304992347197734
Initial guess E= -75.416033373032  |g|= 0.0397449
macro= 0  E= -75.4161612262415  delta_E= -0.000127853  |g|= 0.0397449  2 KF 5 JK
macro= 1  E= -75.4161661135243  delta_E= -4.88728e-06  |g|= 0.0240168  2 KF 5 JK
macro= 2  E= -75.416109641135  delta_E= 5.64724e-05  |g|= 0.0314933  2 KF 5 JK
macro= 3  E= -75.4161774692671  delta_E= -6.78281e-05  |g|= 0.0286762  2 KF 5 JK
macro= 4  E= -75.4161190449742  delta_E= 5.84243e-05  |g|= 0.0305437  2 KF 5 JK
macro= 5  E= -75.4161795525238  delta_E= -6.05075e-05  |g|= 0.0281937  2 KF 5 JK
macro= 6  E= -75.4161189726566  delta_E= 6.05799e-05  |g|= 0.0303112  2 KF 5 JK
macro= 7  E= -75.4161787221639  delta_E= -5.97495e-05  |g|= 0.0281874  2 KF 5 JK
macro= 8  E= -75.416118925673  delta_E= 5.97965e-05  |g|= 0.0303762  2 KF 5 JK
macro= 9  E= -75.4161788288471  delta_E= -5.99032e-05  |g|= 0.028191  2 KF 5 JK
macro= 10  E= -75.4161189384613  delta_E= 5.98904e-05  |g|= 0.030368  2 KF 5 JK
macro= 11  E= -75.4161788065687  delta_E= -5.98681e-05  |g|= 0.0281896  2 KF 5 JK
macro= 12  E= -75.4161189294277  delta_E= 5.98771e-05  |g|= 0.0303699  2 KF 5 JK
macro= 13  E= -75.4161788042233  delta_E= -5.98748e-05  |g|= 0.0281901  2 KF 5 JK
macro= 14  E= -75.4161189234668  delta_E= 5.98808e-05  |g|= 0.0303702  2 KF 5 JK
macro= 15  E= -75.4161787993852  delta_E= -5.98759e-05  |g|= 0.0281904  2 KF 5 JK
macro= 16  E= -75.4161189170015  delta_E= 5.98824e-05  |g|= 0.0303707  2 KF 5 JK
macro= 17  E= -75.4161787947488  delta_E= -5.98777e-05  |g|= 0.0281908  2 KF 5 JK
macro= 18  E= -75.4161189105858  delta_E= 5.98842e-05  |g|= 0.0303712  2 KF 5 JK
macro= 19  E= -75.41617879003  delta_E= -5.98794e-05  |g|= 0.0281911  2 KF 5 JK
macro= 20  E= -75.4161189041577  delta_E= 5.98859e-05  |g|= 0.0303717  2 KF 5 JK
macro= 21  E= -75.4161787852792  delta_E= -5.98811e-05  |g|= 0.0281915  2 KF 5 JK
macro= 22  E= -75.4161188977243  delta_E= 5.98876e-05  |g|= 0.0303722  2 KF 5 JK
macro= 23  E= -75.4161787805057  delta_E= -5.98828e-05  |g|= 0.0281918  2 KF 5 JK
macro= 24  E= -75.4161188912865  delta_E= 5.98892e-05  |g|= 0.0303726  2 KF 5 JK
macro= 25  E= -75.4161787757165  delta_E= -5.98844e-05  |g|= 0.0281922  2 KF 5 JK
macro= 26  E= -75.4161188848434  delta_E= 5.98909e-05  |g|= 0.0303731  2 KF 5 JK
macro= 27  E= -75.4161787709166  delta_E= -5.98861e-05  |g|= 0.0281926  2 KF 5 JK
macro= 28  E= -75.4161188783952  delta_E= 5.98925e-05  |g|= 0.0303736  2 KF 5 JK
macro= 29  E= -75.4161787661084  delta_E= -5.98877e-05  |g|= 0.0281929  2 KF 5 JK
macro= 30  E= -75.4161188719423  delta_E= 5.98942e-05  |g|= 0.0303741  2 KF 5 JK
macro= 31  E= -75.4161787612935  delta_E= -5.98894e-05  |g|= 0.0281933  2 KF 5 JK
macro= 32  E= -75.4161188654846  delta_E= 5.98958e-05  |g|= 0.0303746  2 KF 5 JK
macro= 33  E= -75.4161787564735  delta_E= -5.9891e-05  |g|= 0.0281937  2 KF 5 JK
macro= 34  E= -75.4161188590222  delta_E= 5.98975e-05  |g|= 0.0303751  2 KF 5 JK
macro= 35  E= -75.4161787516482  delta_E= -5.98926e-05  |g|= 0.028194  2 KF 5 JK
macro= 36  E= -75.4161188525545  delta_E= 5.98991e-05  |g|= 0.0303756  2 KF 5 JK
macro= 37  E= -75.4161787468187  delta_E= -5.98943e-05  |g|= 0.0281944  2 KF 5 JK
macro= 38  E= -75.4161188460825  delta_E= 5.99007e-05  |g|= 0.0303761  2 KF 5 JK
macro= 39  E= -75.4161787419853  delta_E= -5.98959e-05  |g|= 0.0281947  2 KF 5 JK
macro= 40  E= -75.4161188396053  delta_E= 5.99024e-05  |g|= 0.0303765  2 KF 5 JK
macro= 41  E= -75.4161787371475  delta_E= -5.98975e-05  |g|= 0.0281951  2 KF 5 JK
macro= 42  E= -75.4161188331234  delta_E= 5.9904e-05  |g|= 0.030377  2 KF 5 JK
macro= 43  E= -75.4161787323062  delta_E= -5.98992e-05  |g|= 0.0281955  2 KF 5 JK
macro= 44  E= -75.4161188266368  delta_E= 5.99057e-05  |g|= 0.0303775  2 KF 5 JK
macro= 45  E= -75.4161787274607  delta_E= -5.99008e-05  |g|= 0.0281958  2 KF 5 JK
macro= 46  E= -75.4161188201452  delta_E= 5.99073e-05  |g|= 0.030378  2 KF 5 JK
macro= 47  E= -75.4161787226114  delta_E= -5.99025e-05  |g|= 0.0281962  2 KF 5 JK
macro= 48  E= -75.4161188136489  delta_E= 5.9909e-05  |g|= 0.0303785  2 KF 5 JK
macro= 49  E= -75.4161787177583  delta_E= -5.99041e-05  |g|= 0.0281966  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4161787177583  |g|= 0.0281966  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4161787177583
**** SCF Summaries ****
Total Energy =                         -75.416178717758342
Nuclear Repulsion Energy =               4.409810091000001
One-electron Energy =                 -112.803983838866941
Two-electron Energy =                   32.977995030108602
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    1    0    0    0    0    0
single occ                     0    0    1    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6044389292509  | -20.6214374265901  | -20.5874404319118  occ= 2
MO #2   (A1  #2 ) energy= -1.30653887417082  | -1.37676426785718  | -1.23631348048446  occ= 2
MO #3   (A1  #3 ) energy= -0.659267968534285 | -0.680259664394791 | -0.638276272673778 occ= 2
MO #4   (E1x #1 ) energy= -0.533436701503588 | -0.552698364499611 | -0.514175038507564 occ= 2
MO #5   (E1y #1 ) energy= -0.241696332300262 | -0.640628831730549 | 0.157236167130026  occ= 1
MO #6   (A1  #4 ) energy= 0.0305429653815394 | 0.0299695653165202 | 0.0311163654465634 occ= 0
MO #7   (A1  #5 ) energy= 0.137843274160888  | 0.136951901120892  | 0.1387346472009    occ= 0
MO #8   (E1y #2 ) energy= 0.159480100803894  | 0.153616050082733  | 0.165344151525055  occ= 0
MO #9   (E1x #2 ) energy= 0.16304451035798   | 0.162289693664247  | 0.163799327051712  occ= 0
MO #10  (A1  #6 ) energy= 0.186824749684947  | 0.184512059488326  | 0.189137439881579  occ= 0
MO #11  (A1  #7 ) energy= 0.264842935813336  | 0.262908584034562  | 0.266777287592127  occ= 0
MO #12  (E1y #3 ) energy= 0.272162874090247  | 0.268881125440925  | 0.27544462273957   occ= 0
MO #13  (E1x #3 ) energy= 0.27548584290963   | 0.27507249634253   | 0.27589918947673   occ= 0
MO #14  (A1  #8 ) energy= 0.434104355520597  | 0.429964008255534  | 0.438244702785688  occ= 0
MO #15  (A1  #9 ) energy= 0.645834640699639  | 0.639972926006901  | 0.651696355392387  occ= 0
MO #16  (E2x #1 ) energy= 0.647872174325032  | 0.638443065857408  | 0.657301282792655  occ= 0
MO #17  (E2y #1 ) energy= 0.647872174325032  | 0.638443065857408  | 0.657301282792656  occ= 0
MO #18  (E1y #4 ) energy= 0.723051312041406  | 0.714051590127131  | 0.732051033955681  occ= 0
MO #19  (E1x #4 ) energy= 0.728740229088441  | 0.727527506530603  | 0.72995295164628   occ= 0
MO #20  (A1  #10) energy= 0.880946100374627  | 0.878121665520422  | 0.883770535228786  occ= 0
MO #21  (E1y #5 ) energy= 0.881773143456373  | 0.859256549064296  | 0.904289737848447  occ= 0
MO #22  (E1x #5 ) energy= 0.884278114407017  | 0.881505261093216  | 0.887050967720823  occ= 0
MO #23  (A1  #11) energy= 0.930901237308296  | 0.925978470245816  | 0.935824004370806  occ= 0
MO #24  (E2x #2 ) energy= 0.939780321811094  | 0.938210866614779  | 0.941349777007416  occ= 0
MO #25  (E2y #2 ) energy= 0.93978032181109   | 0.938210866614773  | 0.94134977700741   occ= 0
MO #26  (E1y #6 ) energy= 1.00662248498719   | 0.980437393973898  | 1.03280757600048   occ= 0
MO #27  (A1  #12) energy= 1.00951257725338   | 1.00505284468694   | 1.01397230981981   occ= 0
MO #28  (E1x #6 ) energy= 1.01378718277646   | 1.01045025748708   | 1.01712410806583   occ= 0
MO #29  (E1y #7 ) energy= 1.51327422457108   | 1.50081815840523   | 1.52573029073694   occ= 0
MO #30  (E1x #7 ) energy= 1.52109910086586   | 1.51939626283685   | 1.52280193889488   occ= 0
MO #31  (A1  #13) energy= 1.70432677535328   | 1.69464948255251   | 1.71400406815399   occ= 0
MO #32  (E3x #1 ) energy= 2.0537432268352    | 2.04365042270838   | 2.06383603096203   occ= 0
MO #33  (E3y #1 ) energy= 2.0537432268352    | 2.04365042270838   | 2.06383603096203   occ= 0
MO #34  (A1  #14) energy= 2.05459491286279   | 2.04431993751823   | 2.06486988820735   occ= 0
MO #35  (E2x #3 ) energy= 2.13736536112205   | 2.1026861921688    | 2.1720445300753    occ= 0
MO #36  (E2y #3 ) energy= 2.13736536112205   | 2.1026861921688    | 2.1720445300753    occ= 0
MO #37  (E1y #8 ) energy= 2.27940409573618   | 2.25770945000193   | 2.30109874147043   occ= 0
MO #38  (E1x #8 ) energy= 2.29615447380746   | 2.29267012426607   | 2.29963882334886   occ= 0
MO #39  (E2x #4 ) energy= 2.33360705416192   | 2.32485406188643   | 2.34236004643742   occ= 0
MO #40  (E2y #4 ) energy= 2.33360705416191   | 2.32485406188642   | 2.34236004643741   occ= 0
MO #41  (A1  #15) energy= 2.44336103619568   | 2.43516254132378   | 2.45155953106765   occ= 0
MO #42  (A1  #16) energy= 2.50309615792342   | 2.49503107942934   | 2.51116123641753   occ= 0
MO #43  (E1y #9 ) energy= 2.7506438681074    | 2.73028987239771   | 2.77099786381711   occ= 0
MO #44  (E1x #9 ) energy= 2.77208193001843   | 2.76834393452483   | 2.77581992551203   occ= 0
MO #45  (A1  #17) energy= 3.59646963052031   | 3.59190599915565   | 3.60103326188498   occ= 0
MO #46  (E2x #5 ) energy= 4.03998483348009   | 4.03722335582731   | 4.04274631113287   occ= 0
MO #47  (E2y #5 ) energy= 4.03998483348009   | 4.03722335582731   | 4.04274631113287   occ= 0
MO #48  (E1y #10) energy= 4.08839753503422   | 4.03648678453793   | 4.14030828553051   occ= 0
MO #49  (E1x #10) energy= 4.09891568157728   | 4.09199183834521   | 4.10583952480936   occ= 0
MO #50  (E1y #11) energy= 4.30398441895047   | 4.29876600470019   | 4.30920283320076   occ= 0
MO #51  (E1x #11) energy= 4.31339077792034   | 4.31257504825965   | 4.31420650758104   occ= 0
MO #52  (A1  #18) energy= 4.65919065481664   | 4.65444712332258   | 4.6639341863107    occ= 0
MO #53  (A1  #19) energy= 5.15435006416317   | 5.14385404482632   | 5.16484608349996   occ= 0
MO #54  (E1y #12) energy= 5.30521201648764   | 5.28534437590367   | 5.32507965707161   occ= 0
MO #55  (E1x #12) energy= 5.32853584775722   | 5.32472384982961   | 5.33234784568483   occ= 0
MO #56  (A1  #20) energy= 6.14632904155573   | 6.13621019485217   | 6.15644788825915   occ= 0
MO #57  (E3x #2 ) energy= 6.46346196207797   | 6.43847429920737   | 6.48844962494857   occ= 0
MO #58  (E3y #2 ) energy= 6.46346196207797   | 6.43847429920738   | 6.48844962494857   occ= 0
MO #59  (E2x #6 ) energy= 6.62262924000092   | 6.6043480915325    | 6.64091038846935   occ= 0
MO #60  (E2y #6 ) energy= 6.62262924000092   | 6.6043480915325    | 6.64091038846935   occ= 0
MO #61  (E2x #7 ) energy= 7.01919856260771   | 6.97771513752994   | 7.06068198768548   occ= 0
MO #62  (E2y #7 ) energy= 7.01919856260773   | 6.97771513752996   | 7.06068198768549   occ= 0
MO #63  (E1y #13) energy= 7.16834652320802   | 7.14588511951384   | 7.19080792690221   occ= 0
MO #64  (E1x #13) energy= 7.20279065696678   | 7.19811411921318   | 7.20746719472037   occ= 0
MO #65  (E1y #14) energy= 7.22550944021352   | 7.18905396534904   | 7.26196491507798   occ= 0
MO #66  (E1x #14) energy= 7.25716393112329   | 7.25085187328565   | 7.26347598896094   occ= 0
MO #67  (A1  #21) energy= 7.40798057187698   | 7.3994065059793    | 7.41655463777467   occ= 0
MO #68  (A1  #22) energy= 7.73163151884426   | 7.71981432617512   | 7.74344871151338   occ= 0
MO #69  (A1  #23) energy= 13.1076676533978   | 13.0937077876632   | 13.1216275191326   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.81320
pop of  0 O 3s        0.00482
pop of  0 O 4s        0.00127
pop of  0 O 5s        0.00018
pop of  0 O 2px       1.99286
pop of  0 O 2py       0.99724
pop of  0 O 2pz       1.52966
pop of  0 O 3px       0.00092
pop of  0 O 3py       0.00016
pop of  0 O 3pz       0.00189
pop of  0 O 4px       0.00036
pop of  0 O 4py       0.00042
pop of  0 O 4pz       0.00164
pop of  0 O 5px       0.00016
pop of  0 O 5py       0.00005
pop of  0 O 5pz       0.00009
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00095
pop of  0 O 3dz^2     0.00886
pop of  0 O 3dxz      0.00193
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00016
pop of  0 O 4dz^2     0.00060
pop of  0 O 4dxz      0.00036
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00001
pop of  0 O 5dz^2     0.00016
pop of  0 O 5dxz      0.00003
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00001
pop of  0 O 4f 0      0.00098
pop of  0 O 4f 1      0.00018
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00001
pop of  0 O 5f 0      0.00012
pop of  0 O 5f 1      0.00005
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.61614
pop of  1 H 2s        0.01308
pop of  1 H 3s        0.00554
pop of  1 H 4s        0.00015
pop of  1 H 2px       0.00307
pop of  1 H 2py       0.00053
pop of  1 H 2pz       0.00078
pop of  1 H 3px       0.00001
pop of  1 H 3py       0.00033
pop of  1 H 3pz       0.00030
pop of  1 H 4px       0.00000
pop of  1 H 4py       0.00007
pop of  1 H 4pz       0.00017
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00004
pop of  1 H 3dz^2     0.00025
pop of  1 H 3dxz      0.00005
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00003
pop of  1 H 4dz^2     0.00010
pop of  1 H 4dxz      0.00001
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.35936
charge of  1H =      0.35936
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.76922
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.96/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.96)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:33:10 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       103.46

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpaaysni76
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpaaysni76
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.241696332300255  LUMO = 0.437761894373837
Initial guess E= -75.4162102117024  |g|= 0.00112907
macro= 0  E= -75.4162108607642  delta_E= -6.49062e-07  |g|= 0.00112907  1 KF 3 JK
macro= 1  E= -75.4162108607642  delta_E= -1.42109e-14  |g|= 1.46221e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4162108607642  |g|= 1.46221e-06  total 3 KF 8 JK
converged SCF energy = -75.4162108607642
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.96/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.96)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:33:11 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       107.48

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpekzoz_k2
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpekzoz_k2
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.241697603754087  LUMO = 0.437762416089515
Initial guess E= -75.4162102107519  |g|= 0.00112945
macro= 0  E= -75.4162108607641  delta_E= -6.50012e-07  |g|= 0.00112945  1 KF 3 JK
macro= 1  E= -75.4162108607641  delta_E= -1.42109e-14  |g|= 1.79972e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4162108607641  |g|= 1.79972e-07  total 3 KF 8 JK
converged SCF energy = -75.4162108607641
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.96/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.96)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:33:13 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       112.29

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpjd0d8bne
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpjd0d8bne
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.24198635122308  LUMO = 0.030537405998591
Initial guess E= -75.4168752343699  |g|= 0.0140214
macro= 0  E= -75.416921930794  delta_E= -4.66964e-05  |g|= 0.000498613  2 KF 7 JK
macro= 1  E= -75.4169219307941  delta_E= -1.56319e-13  |g|= 9.05797e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4169219307941  |g|= 9.05797e-06  total 4 KF 12 JK
converged SCF energy = -75.4169219307941
u+d contributions  -0.05583732838639984
uu+dd contributions  -0.08694639341466896
ud contributions  -0.18291137279920577
u+d contributions  -0.008064895812896376
uu+dd contributions  -0.03907272152404378
ud contributions  -0.13486091133429157
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.96/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.96)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:33:17 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       124.76

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgji8ki60
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgji8ki60
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.242452466326678  LUMO = 0.437582107084745
Initial guess E= -75.4162099198467  |g|= 0.00127712
macro= 0  E= -75.4162108607641  delta_E= -9.40917e-07  |g|= 0.00127712  1 KF 2 JK
macro= 1  E= -75.4162108607641  delta_E= -7.10543e-14  |g|= 3.38661e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4162108607641  |g|= 3.38661e-07  total 3 KF 7 JK
converged SCF energy = -75.4162108607641
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.96/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.96)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:33:19 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       129.78

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpwag_nhuc
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpwag_nhuc
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.242739999390905  LUMO = 0.0305498378445432
Initial guess E= -75.4168381075174  |g|= 0.00906535
macro= 0  E= -75.4168662533103  delta_E= -2.81458e-05  |g|= 0.000351778  2 KF 7 JK
macro= 1  E= -75.4168662533103  delta_E= -1.42109e-14  |g|= 5.65906e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4168662533103  |g|= 5.65906e-06  total 4 KF 12 JK
converged SCF energy = -75.4168662533103
u+d contributions  -0.022486367600057053
uu+dd contributions  -0.046357624662414845
ud contributions  -0.10880749213562521
u+d contributions  -0.005000969300813717
uu+dd contributions  -0.02885009626927383
ud contributions  -0.09129216760158729
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.843534, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.247119, i_min=0
In the tapering subroutine, i=2, E(i)=-75.416211, i_min=1
In the tapering subroutine, i=3, E(i)=-74.965848, i_min=2
In the tapering subroutine, i=4, E(i)=-75.411918, i_min=2
In the tapering subroutine, i=5, E(i)=-74.955149, i_min=2
In the tapering subroutine, i=6, E(i)=-74.861245, i_min=2
In the tapering subroutine, i=7, E(i)=-75.005900, i_min=2
In the tapering subroutine, i=8, E(i)=-75.247119, i_min=2
In the tapering subroutine, i=9, E(i)=-75.261323, i_min=2
In the tapering subroutine, i=10, E(i)=-74.991263, i_min=2
In the tapering subroutine, i=11, E(i)=-75.416211, i_min=2
In the tapering subroutine, i=12, E(i)=-74.979861, i_min=2
In the tapering subroutine, i=13, E(i)=-75.411918, i_min=2
In the tapering subroutine, i=14, E(i)=-75.005900, i_min=2
In the tapering subroutine, i=15, E(i)=-74.899768, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005000949139250475
uu+dd contributions  -0.02885011476388107
ud contributions  -0.09127228010540611
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005001014150566853
uu+dd contributions  -0.02885013326627616
ud contributions  -0.09127228635492397
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005001014150566853
uu+dd contributions  -0.02885013326627616
ud contributions  -0.09127228635492397
