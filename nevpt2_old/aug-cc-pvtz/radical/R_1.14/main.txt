#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.14/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.14)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:23:59 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.140000000000 AA    0.000000000000   0.000000000000   2.154287782004 Bohr

nuclear repulsion = 3.7135242871579
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         3.99
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpjsg6847u
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpjsg6847u
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.415216706171523  LUMO (A1) = 0.0173308915664983
Initial guess E= -75.3762397010764  |g|= 0.2144
macro= 0  E= -75.3891873247855  delta_E= -0.0129476  |g|= 0.2144  2 KF 5 JK
macro= 1  E= -75.3894752489038  delta_E= -0.000287924  |g|= 0.0874044  2 KF 5 JK
macro= 2  E= -75.3879629028369  delta_E= 0.00151235  |g|= 0.0605238  2 KF 5 JK
macro= 3  E= -75.3892830592408  delta_E= -0.00132016  |g|= 0.104467  2 KF 5 JK
macro= 4  E= -75.3878960737161  delta_E= 0.00138699  |g|= 0.0598099  2 KF 5 JK
macro= 5  E= -75.3893039026415  delta_E= -0.00140783  |g|= 0.104622  2 KF 5 JK
macro= 6  E= -75.3880707828736  delta_E= 0.00123312  |g|= 0.0609863  2 KF 5 JK
macro= 7  E= -75.3893513647449  delta_E= -0.00128058  |g|= 0.102424  2 KF 5 JK
macro= 8  E= -75.3879474177214  delta_E= 0.00140395  |g|= 0.060493  2 KF 5 JK
macro= 9  E= -75.3893498636013  delta_E= -0.00140245  |g|= 0.104668  2 KF 5 JK
macro= 10  E= -75.3879572019788  delta_E= 0.00139266  |g|= 0.0604864  2 KF 5 JK
macro= 11  E= -75.3893599119204  delta_E= -0.00140271  |g|= 0.104618  2 KF 5 JK
macro= 12  E= -75.3879148762779  delta_E= 0.00144504  |g|= 0.0602496  2 KF 5 JK
macro= 13  E= -75.3893650803662  delta_E= -0.0014502  |g|= 0.105342  2 KF 5 JK
macro= 14  E= -75.3878939768203  delta_E= 0.0014711  |g|= 0.06012  2 KF 5 JK
macro= 15  E= -75.3893723305977  delta_E= -0.00147835  |g|= 0.105717  2 KF 5 JK
macro= 16  E= -75.3878645177627  delta_E= 0.00150781  |g|= 0.0599346  2 KF 5 JK
macro= 17  E= -75.3893787799426  delta_E= -0.00151426  |g|= 0.106211  2 KF 5 JK
macro= 18  E= -75.3878387545994  delta_E= 0.00154003  |g|= 0.0597652  2 KF 5 JK
macro= 19  E= -75.3893856246542  delta_E= -0.00154687  |g|= 0.106643  2 KF 5 JK
macro= 20  E= -75.3878117878353  delta_E= 0.00157384  |g|= 0.0595815  2 KF 5 JK
macro= 21  E= -75.3893923616723  delta_E= -0.00158057  |g|= 0.107086  2 KF 5 JK
macro= 22  E= -75.3877856452538  delta_E= 0.00160672  |g|= 0.0593965  2 KF 5 JK
macro= 23  E= -75.389399184032  delta_E= -0.00161354  |g|= 0.107511  2 KF 5 JK
macro= 24  E= -75.3877595624682  delta_E= 0.00163962  |g|= 0.059205  2 KF 5 JK
macro= 25  E= -75.3894059993231  delta_E= -0.00164644  |g|= 0.10793  2 KF 5 JK
macro= 26  E= -75.3877338935146  delta_E= 0.00167211  |g|= 0.0590094  2 KF 5 JK
macro= 27  E= -75.3894128311289  delta_E= -0.00167894  |g|= 0.108338  2 KF 5 JK
macro= 28  E= -75.387708541128  delta_E= 0.00170429  |g|= 0.0588092  2 KF 5 JK
macro= 29  E= -75.3894196556697  delta_E= -0.00171111  |g|= 0.108736  2 KF 5 JK
macro= 30  E= -75.3876835848126  delta_E= 0.00173607  |g|= 0.058605  2 KF 5 JK
macro= 31  E= -75.3894264681953  delta_E= -0.00174288  |g|= 0.109124  2 KF 5 JK
macro= 32  E= -75.3876590302313  delta_E= 0.00176744  |g|= 0.0583969  2 KF 5 JK
macro= 33  E= -75.3894332562708  delta_E= -0.00177423  |g|= 0.109501  2 KF 5 JK
macro= 34  E= -75.3876349087702  delta_E= 0.00179835  |g|= 0.0581854  2 KF 5 JK
macro= 35  E= -75.389440010641  delta_E= -0.0018051  |g|= 0.109868  2 KF 5 JK
macro= 36  E= -75.3876112380761  delta_E= 0.00182877  |g|= 0.0579709  2 KF 5 JK
macro= 37  E= -75.3894467209897  delta_E= -0.00183548  |g|= 0.110224  2 KF 5 JK
macro= 38  E= -75.3875880376436  delta_E= 0.00185868  |g|= 0.0577538  2 KF 5 JK
macro= 39  E= -75.3894533777413  delta_E= -0.00186534  |g|= 0.11057  2 KF 5 JK
macro= 40  E= -75.3875653227274  delta_E= 0.00188806  |g|= 0.0575344  2 KF 5 JK
macro= 41  E= -75.3894599714464  delta_E= -0.00189465  |g|= 0.110905  2 KF 5 JK
macro= 42  E= -75.387543106799  delta_E= 0.00191686  |g|= 0.0573131  2 KF 5 JK
macro= 43  E= -75.3871493568494  delta_E= 0.00039375  |g|= 0.11123  2 KF 5 JK
macro= 44  E= -75.3886990634066  delta_E= -0.00154971  |g|= 0.102445  2 KF 5 JK
macro= 45  E= -75.387001328688  delta_E= 0.00169773  |g|= 0.0938851  2 KF 5 JK
macro= 46  E= -75.3885325875807  delta_E= -0.00153126  |g|= 0.104183  2 KF 5 JK
macro= 47  E= -75.3869253453638  delta_E= 0.00160724  |g|= 0.0979958  2 KF 5 JK
macro= 48  E= -75.3885399279698  delta_E= -0.00161458  |g|= 0.105115  2 KF 5 JK
macro= 49  E= -75.3869069061461  delta_E= 0.00163302  |g|= 0.0980833  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3869069061461  |g|= 0.0980833  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3869069061461

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpjsg6847u
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpjsg6847u
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.278295830555873  LUMO (A1) = 0.0269554816983327
Initial guess E= -75.389907653804  |g|= 0.0807163
macro= 0  E= -75.3910112709388  delta_E= -0.00110362  |g|= 0.0807163  2 KF 5 JK
macro= 1  E= -75.3910344798307  delta_E= -2.32089e-05  |g|= 0.022693  2 KF 5 JK
macro= 2  E= -75.3908581062218  delta_E= 0.000176374  |g|= 0.0158626  2 KF 5 JK
macro= 3  E= -75.3910388157879  delta_E= -0.00018071  |g|= 0.0331897  2 KF 5 JK
macro= 4  E= -75.390894706534  delta_E= 0.000144109  |g|= 0.0115203  2 KF 5 JK
macro= 5  E= -75.3910065469494  delta_E= -0.00011184  |g|= 0.030357  2 KF 5 JK
macro= 6  E= -75.3909604495747  delta_E= 4.60974e-05  |g|= 0.0174421  2 KF 5 JK
macro= 7  E= -75.3910197097237  delta_E= -5.92601e-05  |g|= 0.0254451  2 KF 5 JK
macro= 8  E= -75.3909450063839  delta_E= 7.47033e-05  |g|= 0.0157139  2 KF 5 JK
macro= 9  E= -75.3910211055825  delta_E= -7.60992e-05  |g|= 0.0270126  2 KF 5 JK
macro= 10  E= -75.3909293637899  delta_E= 9.17418e-05  |g|= 0.0157302  2 KF 5 JK
macro= 11  E= -75.3910214765975  delta_E= -9.21128e-05  |g|= 0.0278931  2 KF 5 JK
macro= 12  E= -75.3909265994226  delta_E= 9.48772e-05  |g|= 0.0161163  2 KF 5 JK
macro= 13  E= -75.3910217814465  delta_E= -9.5182e-05  |g|= 0.0281412  2 KF 5 JK
macro= 14  E= -75.3909255229846  delta_E= 9.62585e-05  |g|= 0.0161588  2 KF 5 JK
macro= 15  E= -75.3910218940601  delta_E= -9.63711e-05  |g|= 0.0282526  2 KF 5 JK
macro= 16  E= -75.3909253237479  delta_E= 9.65703e-05  |g|= 0.0161551  2 KF 5 JK
macro= 17  E= -75.3910219248174  delta_E= -9.66011e-05  |g|= 0.0282877  2 KF 5 JK
macro= 18  E= -75.3909253369938  delta_E= 9.65878e-05  |g|= 0.0161378  2 KF 5 JK
macro= 19  E= -75.3910219528618  delta_E= -9.66159e-05  |g|= 0.0282992  2 KF 5 JK
macro= 20  E= -75.390925286148  delta_E= 9.66667e-05  |g|= 0.0161216  2 KF 5 JK
macro= 21  E= -75.3910219994399  delta_E= -9.67133e-05  |g|= 0.0283124  2 KF 5 JK
macro= 22  E= -75.390925144935  delta_E= 9.68545e-05  |g|= 0.0161091  2 KF 5 JK
macro= 23  E= -75.3910220589337  delta_E= -9.6914e-05  |g|= 0.0283314  2 KF 5 JK
macro= 24  E= -75.3909249591583  delta_E= 9.70998e-05  |g|= 0.016099  2 KF 5 JK
macro= 25  E= -75.3910221230523  delta_E= -9.71639e-05  |g|= 0.0283539  2 KF 5 JK
macro= 26  E= -75.3909247634453  delta_E= 9.73596e-05  |g|= 0.0160896  2 KF 5 JK
macro= 27  E= -75.3910221875901  delta_E= -9.74241e-05  |g|= 0.0283773  2 KF 5 JK
macro= 28  E= -75.3909245700775  delta_E= 9.76175e-05  |g|= 0.01608  2 KF 5 JK
macro= 29  E= -75.391022251598  delta_E= -9.76815e-05  |g|= 0.0284006  2 KF 5 JK
macro= 30  E= -75.3909243796058  delta_E= 9.7872e-05  |g|= 0.0160701  2 KF 5 JK
macro= 31  E= -75.3910223153657  delta_E= -9.79358e-05  |g|= 0.0284236  2 KF 5 JK
macro= 32  E= -75.390924189844  delta_E= 9.81255e-05  |g|= 0.01606  2 KF 5 JK
macro= 33  E= -75.391022379273  delta_E= -9.81894e-05  |g|= 0.0284466  2 KF 5 JK
macro= 34  E= -75.3909239993426  delta_E= 9.83799e-05  |g|= 0.0160497  2 KF 5 JK
macro= 35  E= -75.3910224434873  delta_E= -9.84441e-05  |g|= 0.0284695  2 KF 5 JK
macro= 36  E= -75.3909238076917  delta_E= 9.86358e-05  |g|= 0.0160393  2 KF 5 JK
macro= 37  E= -75.3910225080211  delta_E= -9.87003e-05  |g|= 0.0284925  2 KF 5 JK
macro= 38  E= -75.3909236149717  delta_E= 9.8893e-05  |g|= 0.0160288  2 KF 5 JK
macro= 39  E= -75.3910225728352  delta_E= -9.89579e-05  |g|= 0.0285156  2 KF 5 JK
macro= 40  E= -75.3909234213483  delta_E= 9.91515e-05  |g|= 0.0160181  2 KF 5 JK
macro= 41  E= -75.3910226378916  delta_E= -9.92165e-05  |g|= 0.0285387  2 KF 5 JK
macro= 42  E= -75.3909232269346  delta_E= 9.9411e-05  |g|= 0.0160073  2 KF 5 JK
macro= 43  E= -75.3910227031647  delta_E= -9.94762e-05  |g|= 0.0285617  2 KF 5 JK
macro= 44  E= -75.3909230317927  delta_E= 9.96714e-05  |g|= 0.0159963  2 KF 5 JK
macro= 45  E= -75.3910227686365  delta_E= -9.97368e-05  |g|= 0.0285848  2 KF 5 JK
macro= 46  E= -75.3909228359651  delta_E= 9.99327e-05  |g|= 0.0159852  2 KF 5 JK
macro= 47  E= -75.391022834291  delta_E= -9.99983e-05  |g|= 0.0286079  2 KF 5 JK
macro= 48  E= -75.3909226394932  delta_E= 0.000100195  |g|= 0.015974  2 KF 5 JK
macro= 49  E= -75.3910229001121  delta_E= -0.000100261  |g|= 0.028631  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3910229001121  |g|= 0.028631  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3910229001121
**** SCF Summaries ****
Total Energy =                         -75.391022900112119
Nuclear Repulsion Energy =               3.713524287157895
One-electron Energy =                 -111.449789033408464
Two-electron Energy =                   32.345241846138457
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    1    0    0    0    0    0
single occ                     0    0    1    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6407555086389  | -20.6577295988721  | -20.6237814184058  occ= 2
MO #2   (A1  #2 ) energy= -1.26858531913379  | -1.34157469509003  | -1.19559594317755  occ= 2
MO #3   (A1  #3 ) energy= -0.615790729010036 | -0.633557910114243 | -0.598023547905828 occ= 2
MO #4   (E1x #1 ) energy= -0.533307159728783 | -0.552527844989887 | -0.514086474467679 occ= 2
MO #5   (E1y #1 ) energy= -0.243507117400552 | -0.64242790810826  | 0.155413673307165  occ= 1
MO #6   (A1  #4 ) energy= 0.0276791191292595 | 0.0268056902518288 | 0.0285525480066896 occ= 0
MO #7   (A1  #5 ) energy= 0.132739700876597  | 0.130746521230825  | 0.134732880522374  occ= 0
MO #8   (E1y #2 ) energy= 0.162575314685215  | 0.156542605441689  | 0.168608023928741  occ= 0
MO #9   (E1x #2 ) energy= 0.166779782353873  | 0.165943010013768  | 0.167616554693978  occ= 0
MO #10  (A1  #6 ) energy= 0.174159043964639  | 0.171889751148012  | 0.176428336781264  occ= 0
MO #11  (A1  #7 ) energy= 0.257616551743656  | 0.255184287383396  | 0.260048816103916  occ= 0
MO #12  (E1y #3 ) energy= 0.266278782870214  | 0.263850867877179  | 0.268706697863248  occ= 0
MO #13  (E1x #3 ) energy= 0.269676321893315  | 0.269358451829185  | 0.269994191957445  occ= 0
MO #14  (A1  #8 ) energy= 0.394562391049173  | 0.390237057376333  | 0.398887724722025  occ= 0
MO #15  (A1  #9 ) energy= 0.615785724608618  | 0.611783082105113  | 0.619788367112157  occ= 0
MO #16  (E2x #1 ) energy= 0.645842987586089  | 0.636748062155276  | 0.654937913016903  occ= 0
MO #17  (E2y #1 ) energy= 0.645842987586088  | 0.636748062155275  | 0.654937913016901  occ= 0
MO #18  (E1y #4 ) energy= 0.733713397759766  | 0.724567545718123  | 0.742859249801409  occ= 0
MO #19  (E1x #4 ) energy= 0.739629135076087  | 0.738394538505     | 0.740863731647178  occ= 0
MO #20  (A1  #10) energy= 0.839134518397398  | 0.836413109140096  | 0.841855927654702  occ= 0
MO #21  (E1y #5 ) energy= 0.899486739054986  | 0.882240004867465  | 0.916733473242504  occ= 0
MO #22  (E1x #5 ) energy= 0.902383471716717  | 0.900128730607309  | 0.904638212826125  occ= 0
MO #23  (E2x #2 ) energy= 0.922814669059852  | 0.921033291458204  | 0.9245960466615    occ= 0
MO #24  (E2y #2 ) energy= 0.922814669059854  | 0.921033291458206  | 0.924596046661502  occ= 0
MO #25  (A1  #11) energy= 0.966978040586972  | 0.964194167697426  | 0.969761913476472  occ= 0
MO #26  (E1y #6 ) energy= 0.979321196201584  | 0.945148785383763  | 1.0134936070194    occ= 0
MO #27  (E1x #6 ) energy= 0.98354292015838   | 0.979437612867263  | 0.987648227449499  occ= 0
MO #28  (A1  #12) energy= 0.990700102016633  | 0.984011175999407  | 0.997389028033869  occ= 0
MO #29  (E1y #7 ) energy= 1.42280471188125   | 1.4165953632362    | 1.42901406052631   occ= 0
MO #30  (E1x #7 ) energy= 1.43192926625731   | 1.43093025266131   | 1.43292827985332   occ= 0
MO #31  (A1  #13) energy= 1.72866030104476   | 1.72183686137654   | 1.73548374071298   occ= 0
MO #32  (A1  #14) energy= 1.8336738424756    | 1.82136715296664   | 1.84598053198456   occ= 0
MO #33  (E3x #1 ) energy= 2.05896900046323   | 2.0487981061452    | 2.06913989478125   occ= 0
MO #34  (E3y #1 ) energy= 2.05896900046323   | 2.0487981061452    | 2.06913989478125   occ= 0
MO #35  (E2x #3 ) energy= 2.1340159490693    | 2.10176879580107   | 2.16626310233753   occ= 0
MO #36  (E2y #3 ) energy= 2.1340159490693    | 2.10176879580107   | 2.16626310233753   occ= 0
MO #37  (E1y #8 ) energy= 2.24444356068983   | 2.21592807673302   | 2.27295904464662   occ= 0
MO #38  (E1x #8 ) energy= 2.25967994993406   | 2.25533836018951   | 2.26402153967861   occ= 0
MO #39  (E2x #4 ) energy= 2.28430690127522   | 2.27298290320324   | 2.29563089934719   occ= 0
MO #40  (E2y #4 ) energy= 2.28430690127522   | 2.27298290320325   | 2.29563089934719   occ= 0
MO #41  (A1  #15) energy= 2.39693962622114   | 2.38876063299153   | 2.40511861945075   occ= 0
MO #42  (E1y #9 ) energy= 2.69824323031818   | 2.68560886714936   | 2.710877593487     occ= 0
MO #43  (E1x #9 ) energy= 2.71865318417943   | 2.71607162794582   | 2.72123474041304   occ= 0
MO #44  (A1  #16) energy= 2.75045665242263   | 2.74045263456298   | 2.76046067028229   occ= 0
MO #45  (A1  #17) energy= 3.2915461783622    | 3.28825099607872   | 3.29484136064569   occ= 0
MO #46  (E2x #5 ) energy= 3.91936948597293   | 3.91781749129695   | 3.92092148064891   occ= 0
MO #47  (E2y #5 ) energy= 3.91936948597292   | 3.91781749129694   | 3.92092148064891   occ= 0
MO #48  (E1y #10) energy= 4.01769923671431   | 3.96464777705159   | 4.07075069637702   occ= 0
MO #49  (E1x #10) energy= 4.02906746337801   | 4.02195123899951   | 4.03618368775651   occ= 0
MO #50  (E1y #11) energy= 4.25858846211198   | 4.25641278272943   | 4.26076414149451   occ= 0
MO #51  (E1x #11) energy= 4.26546336876635   | 4.26506474841629   | 4.2658619891164    occ= 0
MO #52  (A1  #18) energy= 4.28839571275835   | 4.28300767421208   | 4.29378375130461   occ= 0
MO #53  (A1  #19) energy= 4.82148300600946   | 4.81769092880171   | 4.82527508321726   occ= 0
MO #54  (E1y #12) energy= 4.82396385026437   | 4.802673270328     | 4.84525443020073   occ= 0
MO #55  (E1x #12) energy= 4.84121745665941   | 4.83758544288998   | 4.84484947042885   occ= 0
MO #56  (A1  #20) energy= 6.23459899465268   | 6.22454403926467   | 6.24465395004063   occ= 0
MO #57  (E3x #2 ) energy= 6.46267190882424   | 6.43763923660991   | 6.48770458103858   occ= 0
MO #58  (E3y #2 ) energy= 6.46267190882425   | 6.43763923660991   | 6.48770458103858   occ= 0
MO #59  (E2x #6 ) energy= 6.56500066033108   | 6.54699939042465   | 6.58300193023752   occ= 0
MO #60  (E2y #6 ) energy= 6.56500066033106   | 6.54699939042463   | 6.5830019302375    occ= 0
MO #61  (E1y #13) energy= 6.85252364287894   | 6.83164233945309   | 6.87340494630479   occ= 0
MO #62  (E1x #13) energy= 6.88820023632707   | 6.8834666076942    | 6.89293386495994   occ= 0
MO #63  (E2x #7 ) energy= 7.00610016494531   | 6.96423577466185   | 7.04796455522877   occ= 0
MO #64  (E2y #7 ) energy= 7.00610016494532   | 6.96423577466186   | 7.04796455522878   occ= 0
MO #65  (E1y #14) energy= 7.18613771223387   | 7.14669967832277   | 7.22557574614498   occ= 0
MO #66  (E1x #14) energy= 7.21698666839004   | 7.21042591494797   | 7.2235474218321    occ= 0
MO #67  (A1  #21) energy= 7.22422577620768   | 7.21496978534967   | 7.23348176706564   occ= 0
MO #68  (A1  #22) energy= 7.52226390019956   | 7.50869051521936   | 7.53583728517974   occ= 0
MO #69  (A1  #23) energy= 10.6428977779253   | 10.6271729042484   | 10.658622651602    occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.87951
pop of  0 O 3s        0.00272
pop of  0 O 4s        0.00083
pop of  0 O 5s        0.00022
pop of  0 O 2px       1.99337
pop of  0 O 2py       0.99756
pop of  0 O 2pz       1.44648
pop of  0 O 3px       0.00143
pop of  0 O 3py       0.00020
pop of  0 O 3pz       0.00030
pop of  0 O 4px       0.00046
pop of  0 O 4py       0.00067
pop of  0 O 4pz       0.00156
pop of  0 O 5px       0.00025
pop of  0 O 5py       0.00011
pop of  0 O 5pz       0.00008
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00059
pop of  0 O 3dz^2     0.00504
pop of  0 O 3dxz      0.00118
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00014
pop of  0 O 4dz^2     0.00041
pop of  0 O 4dxz      0.00030
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00002
pop of  0 O 5dz^2     0.00007
pop of  0 O 5dxz      0.00005
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00000
pop of  0 O 4f 0      0.00042
pop of  0 O 4f 1      0.00014
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00001
pop of  0 O 5f 0      0.00008
pop of  0 O 5f 1      0.00005
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.65175
pop of  1 H 2s        0.00701
pop of  1 H 3s        0.00156
pop of  1 H 4s        0.00012
pop of  1 H 2px       0.00258
pop of  1 H 2py       0.00029
pop of  1 H 2pz       0.00115
pop of  1 H 3px       0.00002
pop of  1 H 3py       0.00025
pop of  1 H 3pz       0.00059
pop of  1 H 4px       0.00001
pop of  1 H 4py       0.00010
pop of  1 H 4pz       0.00001
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00005
pop of  1 H 3dz^2     0.00008
pop of  1 H 3dxz      0.00015
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00000
pop of  1 H 4dz^2     0.00001
pop of  1 H 4dxz      0.00001
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.33425
charge of  1H =      0.33425
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.89127
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.14/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.14)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:24:24 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       113.79

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpxwv2u46l
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpxwv2u46l
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.243507117400562  LUMO = 0.288897469983662
Initial guess E= -75.3910278758954  |g|= 0.000321662
macro= 0  E= -75.3910279235299  delta_E= -4.76345e-08  |g|= 0.000321662  1 KF 4 JK
macro= 1  E= -75.3910279235299  delta_E= 1.42109e-14  |g|= 1.1453e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3910279235299  |g|= 1.1453e-08  total 3 KF 9 JK
converged SCF energy = -75.3910279235299
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.14/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.14)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:24:25 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       115.81

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpqjpz1xy4
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpqjpz1xy4
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.243507216093213  LUMO = 0.288897517447965
Initial guess E= -75.3910278758842  |g|= 0.000321725
macro= 0  E= -75.3910279235299  delta_E= -4.76458e-08  |g|= 0.000321725  1 KF 3 JK
macro= 1  E= -75.3910279235299  delta_E= 1.42109e-14  |g|= 1.1444e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3910279235299  |g|= 1.1444e-08  total 3 KF 8 JK
converged SCF energy = -75.3910279235299
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.14/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.14)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:24:27 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       118.64

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpmiyo04dm
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpmiyo04dm
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.243910977123908  LUMO = 0.0276726612121562
Initial guess E= -75.3916704724448  |g|= 0.00855323
macro= 0  E= -75.3916899237513  delta_E= -1.94513e-05  |g|= 0.000377988  2 KF 7 JK
macro= 1  E= -75.3916899237513  delta_E= 4.26326e-14  |g|= 8.26097e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3916899237513  |g|= 8.26097e-06  total 4 KF 12 JK
converged SCF energy = -75.3916899237513
u+d contributions  -0.058098479373673975
uu+dd contributions  -0.08823781991432
ud contributions  -0.18084791229883387
u+d contributions  -0.008327254660811686
uu+dd contributions  -0.038362227475830304
ud contributions  -0.13077625050146444
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.14/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.14)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:24:33 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       126.08

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpl1h5okvn
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpl1h5okvn
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.243197184137982  LUMO = 0.288981707350268
Initial guess E= -75.3910278571128  |g|= 0.000319243
macro= 0  E= -75.3910279235299  delta_E= -6.64171e-08  |g|= 0.000319243  1 KF 2 JK
macro= 1  E= -75.3910279235299  delta_E= 0  |g|= 2.59029e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3910279235299  |g|= 2.59029e-08  total 3 KF 7 JK
converged SCF energy = -75.3910279235299
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.14/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.14)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:24:34 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       131.29

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp2uvv_6r8
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp2uvv_6r8
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.243599569654995  LUMO = 0.0276709813315492
Initial guess E= -75.3916226035875  |g|= 0.00623517
macro= 0  E= -75.3916365369458  delta_E= -1.39334e-05  |g|= 0.000282661  2 KF 7 JK
macro= 1  E= -75.3916365369458  delta_E= 1.42109e-14  |g|= 5.33148e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3916365369458  |g|= 5.33148e-06  total 4 KF 12 JK
converged SCF energy = -75.3916365369458
u+d contributions  -0.02511521632464619
uu+dd contributions  -0.04761795076546661
ud contributions  -0.10544099543760017
u+d contributions  -0.005870998551125804
uu+dd contributions  -0.02834227578396624
ud contributions  -0.0861508563470454
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.990864, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.235037, i_min=0
In the tapering subroutine, i=2, E(i)=-75.391028, i_min=1
In the tapering subroutine, i=3, E(i)=-75.090635, i_min=2
In the tapering subroutine, i=4, E(i)=-75.386490, i_min=2
In the tapering subroutine, i=5, E(i)=-75.078978, i_min=2
In the tapering subroutine, i=6, E(i)=-74.839555, i_min=2
In the tapering subroutine, i=7, E(i)=-75.114324, i_min=2
In the tapering subroutine, i=8, E(i)=-75.235037, i_min=2
In the tapering subroutine, i=9, E(i)=-75.234519, i_min=2
In the tapering subroutine, i=10, E(i)=-75.113492, i_min=2
In the tapering subroutine, i=11, E(i)=-75.391028, i_min=2
In the tapering subroutine, i=12, E(i)=-75.101107, i_min=2
In the tapering subroutine, i=13, E(i)=-75.386490, i_min=2
In the tapering subroutine, i=14, E(i)=-75.114324, i_min=2
In the tapering subroutine, i=15, E(i)=-74.877996, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005871033243178379
uu+dd contributions  -0.0283423806602313
ud contributions  -0.0861258613076808
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005878121737466706
uu+dd contributions  -0.02835173327876854
ud contributions  -0.08614280360406068
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005878121737466706
uu+dd contributions  -0.02835173327876854
ud contributions  -0.08614280360406068
