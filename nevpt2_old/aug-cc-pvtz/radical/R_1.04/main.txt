#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.04/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.04)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:22:56 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.040000000000 AA    0.000000000000   0.000000000000   1.965315169548 Bohr

nuclear repulsion = 4.07059393015385
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         4.18
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpfutobgrv
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpfutobgrv
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.424623876834216  LUMO (A1) = 0.0241856906027424
Initial guess E= -75.3965466356429  |g|= 0.212279
macro= 0  E= -75.4074352807241  delta_E= -0.0108886  |g|= 0.212279  2 KF 5 JK
macro= 1  E= -75.4079758007073  delta_E= -0.00054052  |g|= 0.0905795  2 KF 5 JK
macro= 2  E= -75.4063323744023  delta_E= 0.00164343  |g|= 0.0616789  2 KF 5 JK
macro= 3  E= -75.407757900965  delta_E= -0.00142553  |g|= 0.105973  2 KF 5 JK
macro= 4  E= -75.4062153007143  delta_E= 0.0015426  |g|= 0.0591626  2 KF 5 JK
macro= 5  E= -75.4077433219958  delta_E= -0.00152802  |g|= 0.106753  2 KF 5 JK
macro= 6  E= -75.40663249869  delta_E= 0.00111082  |g|= 0.0611614  2 KF 5 JK
macro= 7  E= -75.4078383191914  delta_E= -0.00120582  |g|= 0.101224  2 KF 5 JK
macro= 8  E= -75.4063492345124  delta_E= 0.00148908  |g|= 0.0602621  2 KF 5 JK
macro= 9  E= -75.4078255056058  delta_E= -0.00147627  |g|= 0.106007  2 KF 5 JK
macro= 10  E= -75.406437802432  delta_E= 0.0013877  |g|= 0.0607035  2 KF 5 JK
macro= 11  E= -75.4078400233085  delta_E= -0.00140222  |g|= 0.104806  2 KF 5 JK
macro= 12  E= -75.4063623547279  delta_E= 0.00147767  |g|= 0.0602085  2 KF 5 JK
macro= 13  E= -75.4078416705424  delta_E= -0.00147932  |g|= 0.106001  2 KF 5 JK
macro= 14  E= -75.4063629843206  delta_E= 0.00147869  |g|= 0.0602304  2 KF 5 JK
macro= 15  E= -75.4078491027413  delta_E= -0.00148612  |g|= 0.106059  2 KF 5 JK
macro= 16  E= -75.4063292072156  delta_E= 0.0015199  |g|= 0.0600091  2 KF 5 JK
macro= 17  E= -75.4078538649179  delta_E= -0.00152466  |g|= 0.106601  2 KF 5 JK
macro= 18  E= -75.4063114568655  delta_E= 0.00154241  |g|= 0.0599015  2 KF 5 JK
macro= 19  E= -75.4078598638317  delta_E= -0.00154841  |g|= 0.106908  2 KF 5 JK
macro= 20  E= -75.4062867390334  delta_E= 0.00157312  |g|= 0.0597364  2 KF 5 JK
macro= 21  E= -75.4078653193338  delta_E= -0.00157858  |g|= 0.107308  2 KF 5 JK
macro= 22  E= -75.4062655312143  delta_E= 0.00159979  |g|= 0.059594  2 KF 5 JK
macro= 23  E= -75.4078710304161  delta_E= -0.0016055  |g|= 0.107654  2 KF 5 JK
macro= 24  E= -75.4062431126129  delta_E= 0.00162792  |g|= 0.0594363  2 KF 5 JK
macro= 25  E= -75.4078766280722  delta_E= -0.00163352  |g|= 0.108012  2 KF 5 JK
macro= 26  E= -75.4062216474802  delta_E= 0.00165498  |g|= 0.0592813  2 KF 5 JK
macro= 27  E= -75.4078822687821  delta_E= -0.00166062  |g|= 0.108353  2 KF 5 JK
macro= 28  E= -75.4062001871831  delta_E= 0.00168208  |g|= 0.0591209  2 KF 5 JK
macro= 29  E= -75.407887873554  delta_E= -0.00168769  |g|= 0.10869  2 KF 5 JK
macro= 30  E= -75.4061791834737  delta_E= 0.00170869  |g|= 0.058959  2 KF 5 JK
macro= 31  E= -75.4078934683745  delta_E= -0.00171428  |g|= 0.109017  2 KF 5 JK
macro= 32  E= -75.4061584564079  delta_E= 0.00173501  |g|= 0.0587941  2 KF 5 JK
macro= 33  E= -75.4078990327565  delta_E= -0.00174058  |g|= 0.109336  2 KF 5 JK
macro= 34  E= -75.4061381068194  delta_E= 0.00176093  |g|= 0.0586273  2 KF 5 JK
macro= 35  E= -75.4079045668567  delta_E= -0.00176646  |g|= 0.109646  2 KF 5 JK
macro= 36  E= -75.4061181076756  delta_E= 0.00178646  |g|= 0.0584584  2 KF 5 JK
macro= 37  E= -75.4079100619601  delta_E= -0.00179195  |g|= 0.109949  2 KF 5 JK
macro= 38  E= -75.4060984866943  delta_E= 0.00181158  |g|= 0.0582877  2 KF 5 JK
macro= 39  E= -75.4079155134663  delta_E= -0.00181703  |g|= 0.110243  2 KF 5 JK
macro= 40  E= -75.4060792449996  delta_E= 0.00183627  |g|= 0.0581156  2 KF 5 JK
macro= 41  E= -75.4079209152725  delta_E= -0.00184167  |g|= 0.110528  2 KF 5 JK
macro= 42  E= -75.40606039338  delta_E= 0.00186052  |g|= 0.0579422  2 KF 5 JK
macro= 43  E= -75.4058497310791  delta_E= 0.000210662  |g|= 0.110806  2 KF 5 JK
macro= 44  E= -75.4071387677081  delta_E= -0.00128904  |g|= 0.098905  2 KF 5 JK
macro= 45  E= -75.4056302690207  delta_E= 0.0015085  |g|= 0.0949161  2 KF 5 JK
macro= 46  E= -75.406995416632  delta_E= -0.00136515  |g|= 0.102083  2 KF 5 JK
macro= 47  E= -75.405564242729  delta_E= 0.00143117  |g|= 0.0982999  2 KF 5 JK
macro= 48  E= -75.4070014838483  delta_E= -0.00143724  |g|= 0.102877  2 KF 5 JK
macro= 49  E= -75.4055459956639  delta_E= 0.00145549  |g|= 0.0983613  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4055459956639  |g|= 0.0983613  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4055459956639

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpfutobgrv
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpfutobgrv
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.280599413354607  LUMO (A1) = 0.0290139746870879
Initial guess E= -75.4085401393694  |g|= 0.0760362
macro= 0  E= -75.4094750179732  delta_E= -0.000934879  |g|= 0.0760362  2 KF 5 JK
macro= 1  E= -75.4094999081684  delta_E= -2.48902e-05  |g|= 0.022642  2 KF 5 JK
macro= 2  E= -75.4093254488443  delta_E= 0.000174459  |g|= 0.0158595  2 KF 5 JK
macro= 3  E= -75.4095015633533  delta_E= -0.000176115  |g|= 0.0331681  2 KF 5 JK
macro= 4  E= -75.4093678551849  delta_E= 0.000133708  |g|= 0.0117592  2 KF 5 JK
macro= 5  E= -75.4094949718263  delta_E= -0.000127117  |g|= 0.0299851  2 KF 5 JK
macro= 6  E= -75.4093374823941  delta_E= 0.000157489  |g|= 0.017894  2 KF 5 JK
macro= 7  E= -75.4094968211949  delta_E= -0.000159339  |g|= 0.0322621  2 KF 5 JK
macro= 8  E= -75.409336709898  delta_E= 0.000160111  |g|= 0.0127454  2 KF 5 JK
macro= 9  E= -75.4094828680679  delta_E= -0.000146158  |g|= 0.0331221  2 KF 5 JK
macro= 10  E= -75.4094206066767  delta_E= 6.22614e-05  |g|= 0.0147584  2 KF 5 JK
macro= 11  E= -75.4094671693106  delta_E= -4.65626e-05  |g|= 0.0270713  2 KF 5 JK
macro= 12  E= -75.409360707429  delta_E= 0.000106462  |g|= 0.0164717  2 KF 5 JK
macro= 13  E= -75.4094985626257  delta_E= -0.000137855  |g|= 0.0311586  2 KF 5 JK
macro= 14  E= -75.409354349727  delta_E= 0.000144213  |g|= 0.0161433  2 KF 5 JK
macro= 15  E= -75.4094921556667  delta_E= -0.000137806  |g|= 0.0316639  2 KF 5 JK
macro= 16  E= -75.4093923281247  delta_E= 9.98275e-05  |g|= 0.0157688  2 KF 5 JK
macro= 17  E= -75.4094893437759  delta_E= -9.70157e-05  |g|= 0.028631  2 KF 5 JK
macro= 18  E= -75.409393445872  delta_E= 9.58979e-05  |g|= 0.0153714  2 KF 5 JK
macro= 19  E= -75.4094898117944  delta_E= -9.63659e-05  |g|= 0.0285235  2 KF 5 JK
macro= 20  E= -75.4093904446958  delta_E= 9.93671e-05  |g|= 0.0153897  2 KF 5 JK
macro= 21  E= -75.4094904539649  delta_E= -0.000100009  |g|= 0.0287395  2 KF 5 JK
macro= 22  E= -75.409388902131  delta_E= 0.000101552  |g|= 0.0154173  2 KF 5 JK
macro= 23  E= -75.409490703082  delta_E= -0.000101801  |g|= 0.0288676  2 KF 5 JK
macro= 24  E= -75.409388641817  delta_E= 0.000102061  |g|= 0.0154118  2 KF 5 JK
macro= 25  E= -75.4094588997729  delta_E= -7.0258e-05  |g|= 0.0288964  2 KF 5 JK
macro= 26  E= -75.4094039113238  delta_E= 5.49884e-05  |g|= 0.0182461  2 KF 5 JK
macro= 27  E= -75.4094532263886  delta_E= -4.93151e-05  |g|= 0.0282563  2 KF 5 JK
macro= 28  E= -75.4093950812446  delta_E= 5.81451e-05  |g|= 0.0186148  2 KF 5 JK
macro= 29  E= -75.4094444847279  delta_E= -4.94035e-05  |g|= 0.0288187  2 KF 5 JK
macro= 30  E= -75.4093990038059  delta_E= 4.54809e-05  |g|= 0.0196763  2 KF 5 JK
macro= 31  E= -75.4094439623958  delta_E= -4.49586e-05  |g|= 0.0287367  2 KF 5 JK
macro= 32  E= -75.4093967757275  delta_E= 4.71867e-05  |g|= 0.0195962  2 KF 5 JK
macro= 33  E= -75.4094423087625  delta_E= -4.5533e-05  |g|= 0.0288553  2 KF 5 JK
macro= 34  E= -75.4093978496849  delta_E= 4.44591e-05  |g|= 0.0197935  2 KF 5 JK
macro= 35  E= -75.4094422917594  delta_E= -4.44421e-05  |g|= 0.0288323  2 KF 5 JK
macro= 36  E= -75.4093970391392  delta_E= 4.52526e-05  |g|= 0.0197489  2 KF 5 JK
macro= 37  E= -75.4094416507915  delta_E= -4.46117e-05  |g|= 0.0288821  2 KF 5 JK
macro= 38  E= -75.4093973104456  delta_E= 4.43403e-05  |g|= 0.0198156  2 KF 5 JK
macro= 39  E= -75.4094414489399  delta_E= -4.41385e-05  |g|= 0.0288856  2 KF 5 JK
macro= 40  E= -75.4093969450999  delta_E= 4.45038e-05  |g|= 0.0198129  2 KF 5 JK
macro= 41  E= -75.4094410108574  delta_E= -4.40658e-05  |g|= 0.0289154  2 KF 5 JK
macro= 42  E= -75.4093969580883  delta_E= 4.40528e-05  |g|= 0.0198496  2 KF 5 JK
macro= 43  E= -75.4094407191502  delta_E= -4.37611e-05  |g|= 0.028929  2 KF 5 JK
macro= 44  E= -75.4093967424666  delta_E= 4.39767e-05  |g|= 0.0198626  2 KF 5 JK
macro= 45  E= -75.4094403429275  delta_E= -4.36005e-05  |g|= 0.0289522  2 KF 5 JK
macro= 46  E= -75.409396665894  delta_E= 4.3677e-05  |g|= 0.0198895  2 KF 5 JK
macro= 47  E= -75.4094400209384  delta_E= -4.3355e-05  |g|= 0.0289693  2 KF 5 JK
macro= 48  E= -75.4093965029533  delta_E= 4.3518e-05  |g|= 0.0199076  2 KF 5 JK
macro= 49  E= -75.4094396686597  delta_E= -4.31657e-05  |g|= 0.0289901  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4094396686597  |g|= 0.0289901  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4094396686597
**** SCF Summaries ****
Total Energy =                         -75.409439668659658
Nuclear Repulsion Energy =               4.070593930153847
One-electron Energy =                 -112.094159515383780
Two-electron Energy =                   32.614125916570273
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    1    0    0    0    0    0
single occ                     0    0    1    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6373722980854  | -20.6541934068707  | -20.6205511893     occ= 2
MO #2   (A1  #2 ) energy= -1.2915205115722   | -1.36304751804522  | -1.21999350509918  occ= 2
MO #3   (A1  #3 ) energy= -0.644092060948809 | -0.663430287895424 | -0.624753834002194 occ= 2
MO #4   (E1x #1 ) energy= -0.537129686716797 | -0.556279476586676 | -0.517979896846917 occ= 2
MO #5   (E1y #1 ) energy= -0.248023546053621 | -0.645678567596706 | 0.149631475489468  occ= 1
MO #6   (A1  #4 ) energy= 0.0295578753089606 | 0.0288930825515923 | 0.0302226680663268 occ= 0
MO #7   (A1  #5 ) energy= 0.136538748953526  | 0.135311047223407  | 0.137766450683638  occ= 0
MO #8   (E1y #2 ) energy= 0.160589520695537  | 0.154908423450011  | 0.166270617941063  occ= 0
MO #9   (E1x #2 ) energy= 0.164817777518976  | 0.164031928591024  | 0.165603626446928  occ= 0
MO #10  (A1  #6 ) energy= 0.181794287336933  | 0.179376862043868  | 0.184211712629998  occ= 0
MO #11  (A1  #7 ) energy= 0.261216601886222  | 0.259041185578465  | 0.26339201819396   occ= 0
MO #12  (E1y #3 ) energy= 0.269339426508253  | 0.26648151548141   | 0.272197337535093  occ= 0
MO #13  (E1x #3 ) energy= 0.272767870325445  | 0.27239538531873   | 0.273140355332159  occ= 0
MO #14  (A1  #8 ) energy= 0.41625688654913   | 0.411866180972604  | 0.420647592125636  occ= 0
MO #15  (A1  #9 ) energy= 0.630697126907542  | 0.6255417604399    | 0.635852493375162  occ= 0
MO #16  (E2x #1 ) energy= 0.646495199260604  | 0.637127333705424  | 0.655863064815784  occ= 0
MO #17  (E2y #1 ) energy= 0.646495199260606  | 0.637127333705426  | 0.655863064815785  occ= 0
MO #18  (E1y #4 ) energy= 0.725515432698995  | 0.716467333358824  | 0.734563532039168  occ= 0
MO #19  (E1x #4 ) energy= 0.73119491129482   | 0.729977023580296  | 0.732412799009342  occ= 0
MO #20  (A1  #10) energy= 0.861178660809603  | 0.858579029403853  | 0.863778292215353  occ= 0
MO #21  (E1y #5 ) energy= 0.889134687937721  | 0.868182144439567  | 0.910087231435874  occ= 0
MO #22  (E1x #5 ) energy= 0.891707188520333  | 0.889064822869716  | 0.894349554170949  occ= 0
MO #23  (E2x #2 ) energy= 0.932743964736682  | 0.9310811061859    | 0.934406823287463  occ= 0
MO #24  (E2y #2 ) energy= 0.93274396473667   | 0.931081106185891  | 0.934406823287454  occ= 0
MO #25  (A1  #11) energy= 0.952851872099446  | 0.946912685619811  | 0.958791058579083  occ= 0
MO #26  (A1  #12) energy= 0.984167006477008  | 0.980694954338018  | 0.987639058615993  occ= 0
MO #27  (E1y #6 ) energy= 0.995545045346445  | 0.965528331232361  | 1.02556175946053   occ= 0
MO #28  (E1x #6 ) energy= 1.00137617335948   | 0.99766057176233   | 1.00509177495664   occ= 0
MO #29  (E1y #7 ) energy= 1.47108119932798   | 1.46190109523404   | 1.48026130342193   occ= 0
MO #30  (E1x #7 ) energy= 1.47947617844224   | 1.47815588918358   | 1.4807964677009    occ= 0
MO #31  (A1  #13) energy= 1.72944305511175   | 1.72033089992008   | 1.73855521030331   occ= 0
MO #32  (A1  #14) energy= 1.94680851931635   | 1.93613349152661   | 1.95748354710609   occ= 0
MO #33  (E3x #1 ) energy= 2.05511888807105   | 2.0449014965104    | 2.0653362796317    occ= 0
MO #34  (E3y #1 ) energy= 2.05511888807105   | 2.0449014965104    | 2.0653362796317    occ= 0
MO #35  (E2x #3 ) energy= 2.13330098760189   | 2.09938833311434   | 2.16721364208944   occ= 0
MO #36  (E2y #3 ) energy= 2.13330098760189   | 2.09938833311434   | 2.16721364208945   occ= 0
MO #37  (E1y #8 ) energy= 2.25953236467813   | 2.2347339751345    | 2.28433075422175   occ= 0
MO #38  (E1x #8 ) energy= 2.27563241546755   | 2.27175921764945   | 2.27950561328565   occ= 0
MO #39  (E2x #4 ) energy= 2.30953580999984   | 2.29983964082752   | 2.31923197917216   occ= 0
MO #40  (E2y #4 ) energy= 2.30953580999984   | 2.29983964082752   | 2.31923197917216   occ= 0
MO #41  (A1  #15) energy= 2.44233934529822   | 2.43420567313595   | 2.45047301746048   occ= 0
MO #42  (A1  #16) energy= 2.55945955935419   | 2.55083334800352   | 2.56808577070457   occ= 0
MO #43  (E1y #9 ) energy= 2.73534923507898   | 2.71877211389407   | 2.75192635626387   occ= 0
MO #44  (E1x #9 ) energy= 2.75649877623423   | 2.75330182307376   | 2.7596957293947    occ= 0
MO #45  (A1  #17) energy= 3.46788919943406   | 3.4638947777977    | 3.4718836210704    occ= 0
MO #46  (E2x #5 ) energy= 3.97853057772506   | 3.97633561201303   | 3.98072554343709   occ= 0
MO #47  (E2y #5 ) energy= 3.97853057772505   | 3.97633561201303   | 3.98072554343709   occ= 0
MO #48  (E1y #10) energy= 4.0397269846177    | 3.98504987028313   | 4.09440409895226   occ= 0
MO #49  (E1x #10) energy= 4.05077669054686   | 4.04347821347471   | 4.05807516761902   occ= 0
MO #50  (E1y #11) energy= 4.28322922938588   | 4.28124189440615   | 4.2852165643656    occ= 0
MO #51  (E1x #11) energy= 4.2914391727481    | 4.29105138813421   | 4.29182695736199   occ= 0
MO #52  (A1  #18) energy= 4.51690310678388   | 4.5117149540516    | 4.52209125951617   occ= 0
MO #53  (A1  #19) energy= 4.95962380780264   | 4.95269344916807   | 4.96655416643728   occ= 0
MO #54  (E1y #12) energy= 5.07879834451653   | 5.05874865962264   | 5.0988480294104    occ= 0
MO #55  (E1x #12) energy= 5.09940805655515   | 5.09572696832706   | 5.10308914478323   occ= 0
MO #56  (A1  #20) energy= 6.20379356424532   | 6.19375253941992   | 6.21383458907067   occ= 0
MO #57  (E3x #2 ) energy= 6.45847795656614   | 6.43351349306222   | 6.48344242007006   occ= 0
MO #58  (E3y #2 ) energy= 6.45847795656614   | 6.43351349306222   | 6.48344242007006   occ= 0
MO #59  (E2x #6 ) energy= 6.5876094066515    | 6.56950473757521   | 6.60571407572779   occ= 0
MO #60  (E2y #6 ) energy= 6.58760940665148   | 6.56950473757519   | 6.60571407572777   occ= 0
MO #61  (E2x #7 ) energy= 7.00666971573529   | 6.96526819430221   | 7.04807123716838   occ= 0
MO #62  (E2y #7 ) energy= 7.0066697157353    | 6.96526819430221   | 7.04807123716838   occ= 0
MO #63  (E1y #13) energy= 7.00729596061399   | 6.98695593618316   | 7.02763598504482   occ= 0
MO #64  (E1x #13) energy= 7.0424353596355    | 7.03782247224148   | 7.04704824702951   occ= 0
MO #65  (E1y #14) energy= 7.19690795309668   | 7.1579639227473    | 7.23585198344607   occ= 0
MO #66  (E1x #14) energy= 7.22795697832885   | 7.22147933827184   | 7.23443461838585   occ= 0
MO #67  (A1  #21) energy= 7.27126115256708   | 7.26223252880889   | 7.28028977632523   occ= 0
MO #68  (A1  #22) energy= 7.56079734114159   | 7.54779293020862   | 7.57380175207455   occ= 0
MO #69  (A1  #23) energy= 11.7686880857044   | 11.7541178900321   | 11.7832582813766   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.84565
pop of  0 O 3s        0.00389
pop of  0 O 4s        0.00108
pop of  0 O 5s        0.00021
pop of  0 O 2px       1.99213
pop of  0 O 2py       0.99700
pop of  0 O 2pz       1.48792
pop of  0 O 3px       0.00146
pop of  0 O 3py       0.00016
pop of  0 O 3pz       0.00096
pop of  0 O 4px       0.00062
pop of  0 O 4py       0.00077
pop of  0 O 4pz       0.00164
pop of  0 O 5px       0.00026
pop of  0 O 5py       0.00011
pop of  0 O 5pz       0.00008
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00080
pop of  0 O 3dz^2     0.00699
pop of  0 O 3dxz      0.00162
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00016
pop of  0 O 4dz^2     0.00052
pop of  0 O 4dxz      0.00035
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00002
pop of  0 O 5dz^2     0.00012
pop of  0 O 5dxz      0.00004
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00001
pop of  0 O 4f 0      0.00068
pop of  0 O 4f 1      0.00017
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00001
pop of  0 O 5f 0      0.00011
pop of  0 O 5f 1      0.00005
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.63471
pop of  1 H 2s        0.01029
pop of  1 H 3s        0.00337
pop of  1 H 4s        0.00010
pop of  1 H 2px       0.00315
pop of  1 H 2py       0.00044
pop of  1 H 2pz       0.00095
pop of  1 H 3px       0.00000
pop of  1 H 3py       0.00033
pop of  1 H 3pz       0.00047
pop of  1 H 4px       0.00001
pop of  1 H 4py       0.00011
pop of  1 H 4pz       0.00007
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00006
pop of  1 H 3dz^2     0.00015
pop of  1 H 3dxz      0.00013
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00001
pop of  1 H 4dz^2     0.00004
pop of  1 H 4dxz      0.00000
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.34561
charge of  1H =      0.34561
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.80489
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.04/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.04)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:23:21 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        92.40

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpdgg2epuw
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpdgg2epuw
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.248023546053627  LUMO = 0.36454238910388
Initial guess E= -75.4094496977062  |g|= 0.000614728
macro= 0  E= -75.4094499304553  delta_E= -2.32749e-07  |g|= 0.000614728  1 KF 4 JK
macro= 1  E= -75.4094499304553  delta_E= 0  |g|= 1.04537e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4094499304553  |g|= 1.04537e-07  total 3 KF 9 JK
converged SCF energy = -75.4094499304553
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.04/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.04)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:23:22 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        96.99

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmppyu87ujr
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmppyu87ujr
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.24802226863411  LUMO = 0.364541811569952
Initial guess E= -75.4094496966307  |g|= 0.000615988
macro= 0  E= -75.4094499304553  delta_E= -2.33825e-07  |g|= 0.000615988  1 KF 3 JK
macro= 1  E= -75.4094499304553  delta_E= 0  |g|= 1.05082e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4094499304553  |g|= 1.05082e-07  total 3 KF 8 JK
converged SCF energy = -75.4094499304553
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.04/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.04)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:23:24 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       102.16

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpimnsbcmx
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpimnsbcmx
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.24846633448777  LUMO = 0.0295516033262702
Initial guess E= -75.4101263869937  |g|= 0.0105606
macro= 0  E= -75.4101530501984  delta_E= -2.66632e-05  |g|= 0.000384459  2 KF 7 JK
macro= 1  E= -75.4101530501985  delta_E= -5.68434e-14  |g|= 7.48362e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4101530501985  |g|= 7.48362e-06  total 4 KF 12 JK
converged SCF energy = -75.4101530501985
u+d contributions  -0.05694289544556264
uu+dd contributions  -0.0876616674499896
ud contributions  -0.18227274433519597
u+d contributions  -0.00835885745064016
uu+dd contributions  -0.038974584334088375
ud contributions  -0.13339955221485608
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.04/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.04)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:23:27 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       113.40

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpi92iylhb
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpi92iylhb
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.247797750237751  LUMO = 0.364599273510039
Initial guess E= -75.4094496218396  |g|= 0.000711462
macro= 0  E= -75.4094499304553  delta_E= -3.08616e-07  |g|= 0.000711462  1 KF 2 JK
macro= 1  E= -75.4094499304553  delta_E= 0  |g|= 1.16538e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4094499304553  |g|= 1.16538e-07  total 3 KF 7 JK
converged SCF energy = -75.4094499304553
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.04/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.04)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:23:29 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       118.21

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpei1sto_4
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpei1sto_4
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.248240603923324  LUMO = 0.0295490224274482
Initial guess E= -75.4100805221643  |g|= 0.00774764
macro= 0  E= -75.4100997115615  delta_E= -1.91894e-05  |g|= 0.00029234  2 KF 7 JK
macro= 1  E= -75.4100997115615  delta_E= 0  |g|= 4.5542e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4100997115615  |g|= 4.5542e-06  total 4 KF 12 JK
converged SCF energy = -75.4100997115615
u+d contributions  -0.023956087915310634
uu+dd contributions  -0.047250478880752754
ud contributions  -0.10768331997270437
u+d contributions  -0.005554338394524308
uu+dd contributions  -0.02882230684872012
ud contributions  -0.08923310422020601
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.923362, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.247239, i_min=0
In the tapering subroutine, i=2, E(i)=-75.409450, i_min=1
In the tapering subroutine, i=3, E(i)=-75.032864, i_min=2
In the tapering subroutine, i=4, E(i)=-75.405055, i_min=2
In the tapering subroutine, i=5, E(i)=-75.021352, i_min=2
In the tapering subroutine, i=6, E(i)=-74.854526, i_min=2
In the tapering subroutine, i=7, E(i)=-75.062406, i_min=2
In the tapering subroutine, i=8, E(i)=-75.247239, i_min=2
In the tapering subroutine, i=9, E(i)=-75.258408, i_min=2
In the tapering subroutine, i=10, E(i)=-75.056918, i_min=2
In the tapering subroutine, i=11, E(i)=-75.409450, i_min=2
In the tapering subroutine, i=12, E(i)=-75.044653, i_min=2
In the tapering subroutine, i=13, E(i)=-75.405055, i_min=2
In the tapering subroutine, i=14, E(i)=-75.062406, i_min=2
In the tapering subroutine, i=15, E(i)=-74.892826, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005554342636766438
uu+dd contributions  -0.028822369057974487
ud contributions  -0.08922168255536309
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0055544880914795355
uu+dd contributions  -0.028824087836327776
ud contributions  -0.08922726998529934
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0055544880914795355
uu+dd contributions  -0.028824087836327776
ud contributions  -0.08922726998529934
