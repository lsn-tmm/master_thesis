#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.16/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.16)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:39:43 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.160000000000 AA    0.000000000000   0.000000000000   2.192082304495 Bohr

nuclear repulsion = 3.64949800634483
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         4.92
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpk2bbogiw
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpk2bbogiw
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.413664302542378  LUMO (A1) = 0.0153601132754229
Initial guess E= -75.3713025287385  |g|= 0.214943
macro= 0  E= -75.3847397941245  delta_E= -0.0134373  |g|= 0.214943  2 KF 5 JK
macro= 1  E= -75.3849776685614  delta_E= -0.000237874  |g|= 0.086951  2 KF 5 JK
macro= 2  E= -75.3834893490239  delta_E= 0.00148832  |g|= 0.0602808  2 KF 5 JK
macro= 3  E= -75.3847978977099  delta_E= -0.00130855  |g|= 0.104336  2 KF 5 JK
macro= 4  E= -75.3833968354066  delta_E= 0.00140106  |g|= 0.059771  2 KF 5 JK
macro= 5  E= -75.3848147452241  delta_E= -0.00141791  |g|= 0.104835  2 KF 5 JK
macro= 6  E= -75.3835531422975  delta_E= 0.0012616  |g|= 0.0607611  2 KF 5 JK
macro= 7  E= -75.3848653682045  delta_E= -0.00131223  |g|= 0.102834  2 KF 5 JK
macro= 8  E= -75.3834529283943  delta_E= 0.00141244  |g|= 0.0604113  2 KF 5 JK
macro= 9  E= -75.3848666264118  delta_E= -0.0014137  |g|= 0.104743  2 KF 5 JK
macro= 10  E= -75.3834499393831  delta_E= 0.00141669  |g|= 0.0603282  2 KF 5 JK
macro= 11  E= -75.3848758343292  delta_E= -0.00142589  |g|= 0.104895  2 KF 5 JK
macro= 12  E= -75.3834120635009  delta_E= 0.00146377  |g|= 0.0601107  2 KF 5 JK
macro= 13  E= -75.3848817005634  delta_E= -0.00146964  |g|= 0.10555  2 KF 5 JK
macro= 14  E= -75.3833883381118  delta_E= 0.00149336  |g|= 0.0599604  2 KF 5 JK
macro= 15  E= -75.3848890058028  delta_E= -0.00150067  |g|= 0.105967  2 KF 5 JK
macro= 16  E= -75.3833591710533  delta_E= 0.00152983  |g|= 0.0597708  2 KF 5 JK
macro= 17  E= -75.384895787222  delta_E= -0.00153662  |g|= 0.106455  2 KF 5 JK
macro= 18  E= -75.3833323815119  delta_E= 0.00156341  |g|= 0.0595886  2 KF 5 JK
macro= 19  E= -75.3849028410287  delta_E= -0.00157046  |g|= 0.106899  2 KF 5 JK
macro= 20  E= -75.3833049900906  delta_E= 0.00159785  |g|= 0.0593955  2 KF 5 JK
macro= 21  E= -75.3849098395763  delta_E= -0.00160485  |g|= 0.107346  2 KF 5 JK
macro= 22  E= -75.3832782045396  delta_E= 0.00163164  |g|= 0.0591991  2 KF 5 JK
macro= 23  E= -75.3849168977836  delta_E= -0.00163869  |g|= 0.107778  2 KF 5 JK
macro= 24  E= -75.3832516114754  delta_E= 0.00166529  |g|= 0.0589968  2 KF 5 JK
macro= 25  E= -75.3849239557164  delta_E= -0.00167234  |g|= 0.108202  2 KF 5 JK
macro= 26  E= -75.3832254187002  delta_E= 0.00169854  |g|= 0.0587899  2 KF 5 JK
macro= 27  E= -75.384931021631  delta_E= -0.0017056  |g|= 0.108615  2 KF 5 JK
macro= 28  E= -75.3831995916229  delta_E= 0.00173143  |g|= 0.0585784  2 KF 5 JK
macro= 29  E= -75.3849380769041  delta_E= -0.00173849  |g|= 0.109017  2 KF 5 JK
macro= 30  E= -75.3831741847901  delta_E= 0.00176389  |g|= 0.0583627  2 KF 5 JK
macro= 31  E= -75.3849451132864  delta_E= -0.00177093  |g|= 0.109409  2 KF 5 JK
macro= 32  E= -75.3831492149542  delta_E= 0.0017959  |g|= 0.0581433  2 KF 5 JK
macro= 33  E= -75.384952118547  delta_E= -0.0018029  |g|= 0.109789  2 KF 5 JK
macro= 34  E= -75.3831247094137  delta_E= 0.00182741  |g|= 0.0579204  2 KF 5 JK
macro= 35  E= -75.3849590821611  delta_E= -0.00183437  |g|= 0.110159  2 KF 5 JK
macro= 36  E= -75.3831006876445  delta_E= 0.00185839  |g|= 0.0576945  2 KF 5 JK
macro= 37  E= -75.3849659932423  delta_E= -0.00186531  |g|= 0.110518  2 KF 5 JK
macro= 38  E= -75.3830771682743  delta_E= 0.00188882  |g|= 0.0574661  2 KF 5 JK
macro= 39  E= -75.3849728414557  delta_E= -0.00189567  |g|= 0.110865  2 KF 5 JK
macro= 40  E= -75.3830541665106  delta_E= 0.00191867  |g|= 0.0572356  2 KF 5 JK
macro= 41  E= -75.3826320973793  delta_E= 0.000422069  |g|= 0.111202  2 KF 5 JK
macro= 42  E= -75.3842220826995  delta_E= -0.00158999  |g|= 0.102896  2 KF 5 JK
macro= 43  E= -75.3824980160956  delta_E= 0.00172407  |g|= 0.0935405  2 KF 5 JK
macro= 44  E= -75.3840513696292  delta_E= -0.00155335  |g|= 0.104372  2 KF 5 JK
macro= 45  E= -75.3824197061285  delta_E= 0.00163166  |g|= 0.0977895  2 KF 5 JK
macro= 46  E= -75.3840592899613  delta_E= -0.00163958  |g|= 0.105338  2 KF 5 JK
macro= 47  E= -75.3824013242863  delta_E= 0.00165797  |g|= 0.097871  2 KF 5 JK
macro= 48  E= -75.384035072141  delta_E= -0.00163375  |g|= 0.105442  2 KF 5 JK
macro= 49  E= -75.3823585236788  delta_E= 0.00167655  |g|= 0.0985021  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3823585236788  |g|= 0.0985021  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3823585236788

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpk2bbogiw
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpk2bbogiw
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.278070133654004  LUMO (A1) = 0.0264141316964608
Initial guess E= -75.3853770021957  |g|= 0.0819289
macro= 0  E= -75.3865244742707  delta_E= -0.00114747  |g|= 0.0819289  2 KF 5 JK
macro= 1  E= -75.3865472484078  delta_E= -2.27741e-05  |g|= 0.0226974  2 KF 5 JK
macro= 2  E= -75.3863710215623  delta_E= 0.000176227  |g|= 0.0158655  2 KF 5 JK
macro= 3  E= -75.3865521443396  delta_E= -0.000181123  |g|= 0.0331342  2 KF 5 JK
macro= 4  E= -75.3864071333343  delta_E= 0.000145011  |g|= 0.0114971  2 KF 5 JK
macro= 5  E= -75.3865184236488  delta_E= -0.00011129  |g|= 0.0303849  2 KF 5 JK
macro= 6  E= -75.3864749636938  delta_E= 4.346e-05  |g|= 0.017586  2 KF 5 JK
macro= 7  E= -75.3865322449064  delta_E= -5.72812e-05  |g|= 0.0250039  2 KF 5 JK
macro= 8  E= -75.3864606069197  delta_E= 7.1638e-05  |g|= 0.0155023  2 KF 5 JK
macro= 9  E= -75.386534858672  delta_E= -7.42518e-05  |g|= 0.0276572  2 KF 5 JK
macro= 10  E= -75.3864349723297  delta_E= 9.98863e-05  |g|= 0.0153072  2 KF 5 JK
macro= 11  E= -75.3865361540726  delta_E= -0.000101182  |g|= 0.0284935  2 KF 5 JK
macro= 12  E= -75.3864302061727  delta_E= 0.000105948  |g|= 0.0159598  2 KF 5 JK
macro= 13  E= -75.3865366703376  delta_E= -0.000106464  |g|= 0.0290138  2 KF 5 JK
macro= 14  E= -75.3864309858423  delta_E= 0.000105684  |g|= 0.0159695  2 KF 5 JK
macro= 15  E= -75.3865362582614  delta_E= -0.000105272  |g|= 0.0289916  2 KF 5 JK
macro= 16  E= -75.3864322263172  delta_E= 0.000104032  |g|= 0.0159155  2 KF 5 JK
macro= 17  E= -75.3865360255945  delta_E= -0.000103799  |g|= 0.0289107  2 KF 5 JK
macro= 18  E= -75.3864326597506  delta_E= 0.000103366  |g|= 0.0158792  2 KF 5 JK
macro= 19  E= -75.3865360181927  delta_E= -0.000103358  |g|= 0.0288827  2 KF 5 JK
macro= 20  E= -75.38643249902  delta_E= 0.000103519  |g|= 0.0158609  2 KF 5 JK
macro= 21  E= -75.3865361055496  delta_E= -0.000103607  |g|= 0.0288995  2 KF 5 JK
macro= 22  E= -75.386432180433  delta_E= 0.000103925  |g|= 0.01585  2 KF 5 JK
macro= 23  E= -75.3865362019201  delta_E= -0.000104021  |g|= 0.0289302  2 KF 5 JK
macro= 24  E= -75.3864319016015  delta_E= 0.0001043  |g|= 0.0158394  2 KF 5 JK
macro= 25  E= -75.386536281819  delta_E= -0.00010438  |g|= 0.0289589  2 KF 5 JK
macro= 26  E= -75.3864316805315  delta_E= 0.000104601  |g|= 0.0158272  2 KF 5 JK
macro= 27  E= -75.3865363498723  delta_E= -0.000104669  |g|= 0.0289833  2 KF 5 JK
macro= 28  E= -75.3864314840652  delta_E= 0.000104866  |g|= 0.0158142  2 KF 5 JK
macro= 29  E= -75.3865364147515  delta_E= -0.000104931  |g|= 0.0290056  2 KF 5 JK
macro= 30  E= -75.386431288957  delta_E= 0.000105126  |g|= 0.0158008  2 KF 5 JK
macro= 31  E= -75.3865364804212  delta_E= -0.000105191  |g|= 0.0290276  2 KF 5 JK
macro= 32  E= -75.386431089294  delta_E= 0.000105391  |g|= 0.0157875  2 KF 5 JK
macro= 33  E= -75.3865365471713  delta_E= -0.000105458  |g|= 0.0290498  2 KF 5 JK
macro= 34  E= -75.3864308869442  delta_E= 0.00010566  |g|= 0.0157742  2 KF 5 JK
macro= 35  E= -75.3865366142519  delta_E= -0.000105727  |g|= 0.0290721  2 KF 5 JK
macro= 36  E= -75.3864306843127  delta_E= 0.00010593  |g|= 0.0157609  2 KF 5 JK
macro= 37  E= -75.3865366811588  delta_E= -0.000105997  |g|= 0.0290944  2 KF 5 JK
macro= 38  E= -75.3864304823572  delta_E= 0.000106199  |g|= 0.0157475  2 KF 5 JK
macro= 39  E= -75.3865367477696  delta_E= -0.000106265  |g|= 0.0291165  2 KF 5 JK
macro= 40  E= -75.3864302811034  delta_E= 0.000106467  |g|= 0.0157341  2 KF 5 JK
macro= 41  E= -75.3865368141199  delta_E= -0.000106533  |g|= 0.0291384  2 KF 5 JK
macro= 42  E= -75.3864300803825  delta_E= 0.000106734  |g|= 0.0157206  2 KF 5 JK
macro= 43  E= -75.3865368802485  delta_E= -0.0001068  |g|= 0.0291603  2 KF 5 JK
macro= 44  E= -75.3864298801264  delta_E= 0.000107  |g|= 0.015707  2 KF 5 JK
macro= 45  E= -75.3865024887513  delta_E= -7.26086e-05  |g|= 0.0291819  2 KF 5 JK
macro= 46  E= -75.3864462499342  delta_E= 5.62388e-05  |g|= 0.0186895  2 KF 5 JK
macro= 47  E= -75.3864947233014  delta_E= -4.84734e-05  |g|= 0.0285354  2 KF 5 JK
macro= 48  E= -75.3864351294349  delta_E= 5.95939e-05  |g|= 0.0191545  2 KF 5 JK
macro= 49  E= -75.3864844980355  delta_E= -4.93686e-05  |g|= 0.0291804  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3864844980355  |g|= 0.0291804  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3864844980355
**** SCF Summaries ****
Total Energy =                         -75.386484498035486
Nuclear Repulsion Energy =               3.649498006344828
One-electron Energy =                 -111.319163695984940
Two-electron Energy =                   32.283181191604626
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    1    0    0    0    0    0
single occ                     0    0    1    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6447723104354  | -20.6617230196415  | -20.6278216012293  occ= 2
MO #2   (A1  #2 ) energy= -1.26581091481564  | -1.33904409060947  | -1.19257773902181  occ= 2
MO #3   (A1  #3 ) energy= -0.611061939956759 | -0.628527130903998 | -0.593596749009519 occ= 2
MO #4   (E1x #1 ) energy= -0.533453287651142 | -0.552670553307907 | -0.514236021994376 occ= 2
MO #5   (E1y #1 ) energy= -0.243840977672231 | -0.642604407058143 | 0.154922451713687  occ= 1
MO #6   (A1  #4 ) energy= 0.027200998811742  | 0.0262718023819895 | 0.0281301952414952 occ= 0
MO #7   (A1  #5 ) energy= 0.131375464133835  | 0.129172103189047  | 0.133578825078627  occ= 0
MO #8   (E1y #2 ) energy= 0.162788824425329  | 0.156794442835517  | 0.168783206015141  occ= 0
MO #9   (E1x #2 ) energy= 0.167088941812188  | 0.166253242406744  | 0.167924641217632  occ= 0
MO #10  (A1  #6 ) energy= 0.172513456100821  | 0.170332124358208  | 0.174694787843429  occ= 0
MO #11  (A1  #7 ) energy= 0.257034705253784  | 0.254563842093506  | 0.259505568414072  occ= 0
MO #12  (E1y #3 ) energy= 0.265743371138033  | 0.263409396378506  | 0.268077345897562  occ= 0
MO #13  (E1x #3 ) energy= 0.269145980662385  | 0.268839718931489  | 0.269452242393279  occ= 0
MO #14  (A1  #8 ) energy= 0.390168826437867  | 0.385910540874094  | 0.39442711200164   occ= 0
MO #15  (A1  #9 ) energy= 0.613192739971953  | 0.60940353844341   | 0.616981941500552  occ= 0
MO #16  (E2x #1 ) energy= 0.645744157878168  | 0.636680443670936  | 0.654807872085399  occ= 0
MO #17  (E2y #1 ) energy= 0.645744157878167  | 0.636680443670935  | 0.654807872085398  occ= 0
MO #18  (E1y #4 ) energy= 0.735594894373521  | 0.726359258013418  | 0.744830530733626  occ= 0
MO #19  (E1x #4 ) energy= 0.741583460779032  | 0.740335175229804  | 0.742831746328259  occ= 0
MO #20  (A1  #10) energy= 0.835345767440242  | 0.832579439512133  | 0.838112095368354  occ= 0
MO #21  (E1y #5 ) energy= 0.901520843888254  | 0.885001979135276  | 0.918039708641231  occ= 0
MO #22  (E1x #5 ) energy= 0.904394373651069  | 0.902212818677913  | 0.906575928624223  occ= 0
MO #23  (E2x #2 ) energy= 0.92082987599467   | 0.919022428187665  | 0.922637323801676  occ= 0
MO #24  (E2y #2 ) energy= 0.92082987599467   | 0.919022428187665  | 0.922637323801677  occ= 0
MO #25  (A1  #11) energy= 0.965102285892826  | 0.962483994548707  | 0.967720577237031  occ= 0
MO #26  (E1y #6 ) energy= 0.975798951863009  | 0.940815973955923  | 1.0107819297701    occ= 0
MO #27  (E1x #6 ) energy= 0.979621252188878  | 0.975449796991521  | 0.983792707386235  occ= 0
MO #28  (A1  #12) energy= 0.997615153986114  | 0.990712856733773  | 1.00451745123847   occ= 0
MO #29  (E1y #7 ) energy= 1.41368466624254   | 1.40784062087711   | 1.41952871160797   occ= 0
MO #30  (E1x #7 ) energy= 1.42295067087713   | 1.42198592949126   | 1.423915412263     occ= 0
MO #31  (A1  #13) energy= 1.71609571840764   | 1.7095440876707    | 1.72264734914464   occ= 0
MO #32  (A1  #14) energy= 1.82261337860922   | 1.81017779420222   | 1.83504896301623   occ= 0
MO #33  (E3x #1 ) energy= 2.05962697933343   | 2.0494353372411    | 2.06981862142575   occ= 0
MO #34  (E3y #1 ) energy= 2.05962697933343   | 2.0494353372411    | 2.06981862142575   occ= 0
MO #35  (E2x #3 ) energy= 2.13371123385474   | 2.1018048180683    | 2.16561764964119   occ= 0
MO #36  (E2y #3 ) energy= 2.13371123385474   | 2.1018048180683    | 2.16561764964119   occ= 0
MO #37  (E1y #8 ) energy= 2.24134982573447   | 2.21213658276426   | 2.27056306870467   occ= 0
MO #38  (E1x #8 ) energy= 2.25644690518536   | 2.25201465177015   | 2.26087915860057   occ= 0
MO #39  (E2x #4 ) energy= 2.27928734827254   | 2.26758262574343   | 2.29099207080165   occ= 0
MO #40  (E2y #4 ) energy= 2.27928734827253   | 2.26758262574342   | 2.29099207080165   occ= 0
MO #41  (A1  #15) energy= 2.38947842831446   | 2.38124276612327   | 2.39771409050565   occ= 0
MO #42  (E1y #9 ) energy= 2.68867364465624   | 2.67666130090553   | 2.70068598840694   occ= 0
MO #43  (E1x #9 ) energy= 2.70894842735709   | 2.70646666275688   | 2.71143019195731   occ= 0
MO #44  (A1  #16) energy= 2.78800180073172   | 2.77768134243558   | 2.79832225902819   occ= 0
MO #45  (A1  #17) energy= 3.25620740403038   | 3.25310234366953   | 3.25931246439123   occ= 0
MO #46  (E2x #5 ) energy= 3.9097775010755    | 3.908332727971     | 3.91122227418001   occ= 0
MO #47  (E2y #5 ) energy= 3.90977750107549   | 3.90833272797099   | 3.91122227418      occ= 0
MO #48  (E1y #10) energy= 4.01534194517443   | 3.96313448122809   | 4.06754940912076   occ= 0
MO #49  (E1x #10) energy= 4.02680752202877   | 4.01979107353342   | 4.03382397052413   occ= 0
MO #50  (A1  #18) energy= 4.24371960882952   | 4.2384055096993    | 4.24903370795974   occ= 0
MO #51  (E1y #11) energy= 4.25340306116599   | 4.25095635350522   | 4.25584976882673   occ= 0
MO #52  (E1x #11) energy= 4.26007469399116   | 4.25964129322167   | 4.26050809476064   occ= 0
MO #53  (E1y #12) energy= 4.77721474914856   | 4.75563099930969   | 4.79879849898743   occ= 0
MO #54  (E1x #12) energy= 4.79387456584932   | 4.79024199228357   | 4.79750713941506   occ= 0
MO #55  (A1  #19) energy= 4.8002913485004    | 4.79687907710661   | 4.8037036198942    occ= 0
MO #56  (A1  #20) energy= 6.21956711895789   | 6.20948754563071   | 6.22964669228514   occ= 0
MO #57  (E3x #2 ) energy= 6.46251948025844   | 6.43748710647728   | 6.4875518540396    occ= 0
MO #58  (E3y #2 ) energy= 6.46251948025844   | 6.43748710647728   | 6.4875518540396    occ= 0
MO #59  (E2x #6 ) energy= 6.56055936832806   | 6.54258135479287   | 6.57853738186325   occ= 0
MO #60  (E2y #6 ) energy= 6.56055936832804   | 6.54258135479285   | 6.57853738186323   occ= 0
MO #61  (E1y #13) energy= 6.82829959742761   | 6.80739546835361   | 6.84920372650161   occ= 0
MO #62  (E1x #13) energy= 6.8640890523116    | 6.85934487852801   | 6.86883322609518   occ= 0
MO #63  (E2x #7 ) energy= 7.00430611663108   | 6.96244797191834   | 7.04616426134382   occ= 0
MO #64  (E2y #7 ) energy= 7.00430611663108   | 6.96244797191834   | 7.04616426134381   occ= 0
MO #65  (E1y #14) energy= 7.18014187427759   | 7.14062864298524   | 7.21965510556995   occ= 0
MO #66  (A1  #21) energy= 7.19634117949437   | 7.18671957289419   | 7.20596278609454   occ= 0
MO #67  (E1x #14) energy= 7.21094058373567   | 7.2043674345139    | 7.21751373295744   occ= 0
MO #68  (A1  #22) energy= 7.54945911829469   | 7.5363522743088    | 7.56256596228065   occ= 0
MO #69  (A1  #23) energy= 10.4891585691458   | 10.4731880101592   | 10.5051291281324   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.88552
pop of  0 O 3s        0.00251
pop of  0 O 4s        0.00079
pop of  0 O 5s        0.00022
pop of  0 O 2px       1.99339
pop of  0 O 2py       0.99752
pop of  0 O 2pz       1.43873
pop of  0 O 3px       0.00144
pop of  0 O 3py       0.00020
pop of  0 O 3pz       0.00022
pop of  0 O 4px       0.00053
pop of  0 O 4py       0.00074
pop of  0 O 4pz       0.00153
pop of  0 O 5px       0.00028
pop of  0 O 5py       0.00012
pop of  0 O 5pz       0.00009
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00056
pop of  0 O 3dz^2     0.00473
pop of  0 O 3dxz      0.00112
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00014
pop of  0 O 4dz^2     0.00038
pop of  0 O 4dxz      0.00029
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00002
pop of  0 O 5dz^2     0.00006
pop of  0 O 5dxz      0.00005
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00000
pop of  0 O 4f 0      0.00038
pop of  0 O 4f 1      0.00013
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00001
pop of  0 O 5f 0      0.00007
pop of  0 O 5f 1      0.00005
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.65502
pop of  1 H 2s        0.00643
pop of  1 H 3s        0.00131
pop of  1 H 4s        0.00013
pop of  1 H 2px       0.00249
pop of  1 H 2py       0.00027
pop of  1 H 2pz       0.00119
pop of  1 H 3px       0.00002
pop of  1 H 3py       0.00025
pop of  1 H 3pz       0.00060
pop of  1 H 4px       0.00002
pop of  1 H 4py       0.00011
pop of  1 H 4pz       0.00001
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00006
pop of  1 H 3dz^2     0.00007
pop of  1 H 3dxz      0.00017
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00000
pop of  1 H 4dz^2     0.00001
pop of  1 H 4dxz      0.00001
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.33185
charge of  1H =      0.33185
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.90404
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.16/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.16)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:40:10 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        92.98

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpqbygo7lg
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpqbygo7lg
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.243840977672229  LUMO = 0.274718518443399
Initial guess E= -75.3864935100992  |g|= 0.000395625
macro= 0  E= -75.3864935871543  delta_E= -7.7055e-08  |g|= 0.000395625  1 KF 3 JK
macro= 1  E= -75.3864935871543  delta_E= 0  |g|= 6.40675e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3864935871543  |g|= 6.40675e-06  total 3 KF 8 JK
converged SCF energy = -75.3864935871543
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.16/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.16)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:40:11 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        98.22

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp3vgsvrm1
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp3vgsvrm1
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.243841016527116  LUMO = 0.274718537382695
Initial guess E= -75.3864935100964  |g|= 0.000395644
macro= 0  E= -75.3864935871543  delta_E= -7.70579e-08  |g|= 0.000395644  1 KF 3 JK
macro= 1  E= -75.3864935871543  delta_E= 0  |g|= 1.7861e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3864935871543  |g|= 1.7861e-08  total 3 KF 8 JK
converged SCF energy = -75.3864935871543
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.16/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.16)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:40:13 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       102.86

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpolyl_8yo
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpolyl_8yo
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.244294365059363  LUMO = 0.027194554359427
Initial guess E= -75.3871754988025  |g|= 0.0105573
macro= 0  E= -75.3872033471599  delta_E= -2.78484e-05  |g|= 0.00041828  2 KF 7 JK
macro= 1  E= -75.38720334716  delta_E= -4.26326e-14  |g|= 1.046e-05  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.38720334716  |g|= 1.046e-05  total 4 KF 12 JK
converged SCF energy = -75.38720334716
u+d contributions  -0.05825940506238256
uu+dd contributions  -0.08829846846177347
ud contributions  -0.1805294971049201
u+d contributions  -0.008428841955494346
uu+dd contributions  -0.03836370962813095
ud contributions  -0.13039743380456553
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.16/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.16)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:40:17 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       114.04

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpqw6qpiy7
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpqw6qpiy7
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.24346511384486  LUMO = 0.274821902076635
Initial guess E= -75.3864934673472  |g|= 0.000426082
macro= 0  E= -75.3864935871543  delta_E= -1.19807e-07  |g|= 0.000426082  1 KF 2 JK
macro= 1  E= -75.3864935871543  delta_E= 0  |g|= 4.7059e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3864935871543  |g|= 4.7059e-08  total 3 KF 7 JK
converged SCF energy = -75.3864935871543
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.16/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.16)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:40:19 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       117.28

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpdgavvfoo
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpdgavvfoo
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.243916442833468  LUMO = 0.0271932062542469
Initial guess E= -75.3871297846629  |g|= 0.00750655
macro= 0  E= -75.3871494809556  delta_E= -1.96963e-05  |g|= 0.000327496  2 KF 7 JK
macro= 1  E= -75.3871494809556  delta_E= -1.42109e-14  |g|= 6.12806e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3871494809556  |g|= 6.12806e-06  total 4 KF 12 JK
converged SCF energy = -75.3871494809556
u+d contributions  -0.025272169795423058
uu+dd contributions  -0.04762917875727241
ud contributions  -0.10495317944638369
u+d contributions  -0.006011239591320911
uu+dd contributions  -0.028336034762744503
ud contributions  -0.08564602404402111
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-75.002906, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.232137, i_min=0
In the tapering subroutine, i=2, E(i)=-75.386494, i_min=1
In the tapering subroutine, i=3, E(i)=-75.100402, i_min=2
In the tapering subroutine, i=4, E(i)=-75.381989, i_min=2
In the tapering subroutine, i=5, E(i)=-75.088817, i_min=2
In the tapering subroutine, i=6, E(i)=-74.835280, i_min=2
In the tapering subroutine, i=7, E(i)=-75.121980, i_min=2
In the tapering subroutine, i=8, E(i)=-75.232137, i_min=2
In the tapering subroutine, i=9, E(i)=-75.230058, i_min=2
In the tapering subroutine, i=10, E(i)=-75.122988, i_min=2
In the tapering subroutine, i=11, E(i)=-75.386494, i_min=2
In the tapering subroutine, i=12, E(i)=-75.110682, i_min=2
In the tapering subroutine, i=13, E(i)=-75.381989, i_min=2
In the tapering subroutine, i=14, E(i)=-75.121980, i_min=2
In the tapering subroutine, i=15, E(i)=-74.873715, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.006011178124315147
uu+dd contributions  -0.02833610744379222
ud contributions  -0.08561987460195825
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.006013594274810757
uu+dd contributions  -0.02833886949955472
ud contributions  -0.08562320432641049
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.006013594274810757
uu+dd contributions  -0.02833886949955472
ud contributions  -0.08562320432641049
