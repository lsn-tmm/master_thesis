#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.78/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.78)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:56:59 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.780000000000 AA    0.000000000000   0.000000000000   1.473986377161 Bohr

nuclear repulsion = 5.42745857353846
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         5.45
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpa00l4l6p
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpa00l4l6p
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.468122810196001  LUMO (A1) = 0.0301342835273515
Initial guess E= -75.3597283702225  |g|= 0.206605
macro= 0  E= -75.3671700234195  delta_E= -0.00744165  |g|= 0.206605  2 KF 5 JK
macro= 1  E= -75.368180168592  delta_E= -0.00101015  |g|= 0.100171  2 KF 5 JK
macro= 2  E= -75.3667513582236  delta_E= 0.00142881  |g|= 0.0597473  2 KF 5 JK
macro= 3  E= -75.3681816160483  delta_E= -0.00143026  |g|= 0.106904  2 KF 5 JK
macro= 4  E= -75.3670760322552  delta_E= 0.00110558  |g|= 0.0606903  2 KF 5 JK
macro= 5  E= -75.3681784282309  delta_E= -0.0011024  |g|= 0.101369  2 KF 5 JK
macro= 6  E= -75.3669839000953  delta_E= 0.00119453  |g|= 0.0595991  2 KF 5 JK
macro= 7  E= -75.368182655129  delta_E= -0.00119876  |g|= 0.102929  2 KF 5 JK
macro= 8  E= -75.3669978108245  delta_E= 0.00118484  |g|= 0.0599863  2 KF 5 JK
macro= 9  E= -75.3681852627957  delta_E= -0.00118745  |g|= 0.102732  2 KF 5 JK
macro= 10  E= -75.3669742962197  delta_E= 0.00121097  |g|= 0.0598537  2 KF 5 JK
macro= 11  E= -75.3681880825667  delta_E= -0.00121379  |g|= 0.103158  2 KF 5 JK
macro= 12  E= -75.3669636923905  delta_E= 0.00122439  |g|= 0.0598555  2 KF 5 JK
macro= 13  E= -75.3681908367444  delta_E= -0.00122714  |g|= 0.103373  2 KF 5 JK
macro= 14  E= -75.3669486125636  delta_E= 0.00124222  |g|= 0.0597947  2 KF 5 JK
macro= 15  E= -75.3681936193119  delta_E= -0.00124501  |g|= 0.103658  2 KF 5 JK
macro= 16  E= -75.3669352137991  delta_E= 0.00125841  |g|= 0.0597491  2 KF 5 JK
macro= 17  E= -75.3681963854255  delta_E= -0.00126117  |g|= 0.103913  2 KF 5 JK
macro= 18  E= -75.3669213373495  delta_E= 0.00127505  |g|= 0.0596947  2 KF 5 JK
macro= 19  E= -75.3681991576363  delta_E= -0.00127782  |g|= 0.104173  2 KF 5 JK
macro= 20  E= -75.366907755032  delta_E= 0.0012914  |g|= 0.0596415  2 KF 5 JK
macro= 21  E= -75.3682019237717  delta_E= -0.00129417  |g|= 0.104426  2 KF 5 JK
macro= 22  E= -75.3668942067764  delta_E= 0.00130772  |g|= 0.0595866  2 KF 5 JK
macro= 23  E= -75.3682046880187  delta_E= -0.00131048  |g|= 0.104675  2 KF 5 JK
macro= 24  E= -75.3668807937493  delta_E= 0.00132389  |g|= 0.0595312  2 KF 5 JK
macro= 25  E= -75.3682074469865  delta_E= -0.00132665  |g|= 0.10492  2 KF 5 JK
macro= 26  E= -75.3668674903413  delta_E= 0.00133996  |g|= 0.059475  2 KF 5 JK
macro= 27  E= -75.3682102005657  delta_E= -0.00134271  |g|= 0.10516  2 KF 5 JK
macro= 28  E= -75.366854314343  delta_E= 0.00135589  |g|= 0.0594182  2 KF 5 JK
macro= 29  E= -75.3682129472343  delta_E= -0.00135863  |g|= 0.105396  2 KF 5 JK
macro= 30  E= -75.3668412679067  delta_E= 0.00137168  |g|= 0.0593608  2 KF 5 JK
macro= 31  E= -75.3682156860589  delta_E= -0.00137442  |g|= 0.105627  2 KF 5 JK
macro= 32  E= -75.3668283579259  delta_E= 0.00138733  |g|= 0.0593027  2 KF 5 JK
macro= 33  E= -75.368218415874  delta_E= -0.00139006  |g|= 0.105854  2 KF 5 JK
macro= 34  E= -75.3668155890584  delta_E= 0.00140283  |g|= 0.0592441  2 KF 5 JK
macro= 35  E= -75.3682211356212  delta_E= -0.00140555  |g|= 0.106077  2 KF 5 JK
macro= 36  E= -75.3668029661185  delta_E= 0.00141817  |g|= 0.0591849  2 KF 5 JK
macro= 37  E= -75.3682238442184  delta_E= -0.00142088  |g|= 0.106295  2 KF 5 JK
macro= 38  E= -75.3667904932816  delta_E= 0.00143335  |g|= 0.0591251  2 KF 5 JK
macro= 39  E= -75.3682265406157  delta_E= -0.00143605  |g|= 0.106508  2 KF 5 JK
macro= 40  E= -75.3667781743697  delta_E= 0.00144837  |g|= 0.0590649  2 KF 5 JK
macro= 41  E= -75.3682292237763  delta_E= -0.00145105  |g|= 0.106717  2 KF 5 JK
macro= 42  E= -75.3667660127738  delta_E= 0.00146321  |g|= 0.0590041  2 KF 5 JK
macro= 43  E= -75.3682318926883  delta_E= -0.00146588  |g|= 0.106922  2 KF 5 JK
macro= 44  E= -75.3667540114982  delta_E= 0.00147788  |g|= 0.0589429  2 KF 5 JK
macro= 45  E= -75.368234546363  delta_E= -0.00148053  |g|= 0.107122  2 KF 5 JK
macro= 46  E= -75.366742173166  delta_E= 0.00149237  |g|= 0.0588812  2 KF 5 JK
macro= 47  E= -75.3682371838383  delta_E= -0.00149501  |g|= 0.107318  2 KF 5 JK
macro= 48  E= -75.3667305000387  delta_E= 0.00150668  |g|= 0.0588192  2 KF 5 JK
macro= 49  E= -75.368239804181  delta_E= -0.0015093  |g|= 0.10751  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.368239804181  |g|= 0.10751  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.368239804181

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpa00l4l6p
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpa00l4l6p
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.27530412329633  LUMO (A1) = 0.0318868224495854
Initial guess E= -75.369638346843  |g|= 0.0374555
macro= 0  E= -75.3697407355831  delta_E= -0.000102389  |g|= 0.0374555  2 KF 5 JK
macro= 1  E= -75.3697291065332  delta_E= 1.1629e-05  |g|= 0.022552  2 KF 5 JK
macro= 2  E= -75.3696965549519  delta_E= 3.25516e-05  |g|= 0.031094  2 KF 5 JK
macro= 3  E= -75.3697424590277  delta_E= -4.59041e-05  |g|= 0.0266804  2 KF 5 JK
macro= 4  E= -75.3697040753736  delta_E= 3.83837e-05  |g|= 0.0299151  2 KF 5 JK
macro= 5  E= -75.3697434352931  delta_E= -3.93599e-05  |g|= 0.0263377  2 KF 5 JK
macro= 6  E= -75.3697039666862  delta_E= 3.94686e-05  |g|= 0.029755  2 KF 5 JK
macro= 7  E= -75.3697428037937  delta_E= -3.88371e-05  |g|= 0.0263396  2 KF 5 JK
macro= 8  E= -75.3697040869391  delta_E= 3.87169e-05  |g|= 0.0297988  2 KF 5 JK
macro= 9  E= -75.3697428464218  delta_E= -3.87595e-05  |g|= 0.0263333  2 KF 5 JK
macro= 10  E= -75.3697040968111  delta_E= 3.87496e-05  |g|= 0.029793  2 KF 5 JK
macro= 11  E= -75.3697428418213  delta_E= -3.8745e-05  |g|= 0.0263332  2 KF 5 JK
macro= 12  E= -75.3697041108484  delta_E= 3.8731e-05  |g|= 0.0297928  2 KF 5 JK
macro= 13  E= -75.3697428488746  delta_E= -3.8738e-05  |g|= 0.0263326  2 KF 5 JK
macro= 14  E= -75.3697041225848  delta_E= 3.87263e-05  |g|= 0.0297919  2 KF 5 JK
macro= 15  E= -75.369742855279  delta_E= -3.87327e-05  |g|= 0.026332  2 KF 5 JK
macro= 16  E= -75.3697041344648  delta_E= 3.87208e-05  |g|= 0.0297911  2 KF 5 JK
macro= 17  E= -75.3697428618727  delta_E= -3.87274e-05  |g|= 0.0263313  2 KF 5 JK
macro= 18  E= -75.369704146291  delta_E= 3.87156e-05  |g|= 0.0297903  2 KF 5 JK
macro= 19  E= -75.3697428684412  delta_E= -3.87222e-05  |g|= 0.0263306  2 KF 5 JK
macro= 20  E= -75.3697041581207  delta_E= 3.87103e-05  |g|= 0.0297895  2 KF 5 JK
macro= 21  E= -75.3697428749892  delta_E= -3.87169e-05  |g|= 0.0263299  2 KF 5 JK
macro= 22  E= -75.3697041699472  delta_E= 3.8705e-05  |g|= 0.0297888  2 KF 5 JK
macro= 23  E= -75.3697428815126  delta_E= -3.87116e-05  |g|= 0.0263291  2 KF 5 JK
macro= 24  E= -75.3697041817721  delta_E= 3.86997e-05  |g|= 0.0297881  2 KF 5 JK
macro= 25  E= -75.3697428880126  delta_E= -3.87062e-05  |g|= 0.0263284  2 KF 5 JK
macro= 26  E= -75.3697041935939  delta_E= 3.86944e-05  |g|= 0.0297873  2 KF 5 JK
macro= 27  E= -75.3697428944913  delta_E= -3.87009e-05  |g|= 0.0263277  2 KF 5 JK
macro= 28  E= -75.3697042054132  delta_E= 3.86891e-05  |g|= 0.0297866  2 KF 5 JK
macro= 29  E= -75.369742900951  delta_E= -3.86955e-05  |g|= 0.026327  2 KF 5 JK
macro= 30  E= -75.3697042172295  delta_E= 3.86837e-05  |g|= 0.0297859  2 KF 5 JK
macro= 31  E= -75.3697429073937  delta_E= -3.86902e-05  |g|= 0.0263263  2 KF 5 JK
macro= 32  E= -75.3697042290426  delta_E= 3.86784e-05  |g|= 0.0297851  2 KF 5 JK
macro= 33  E= -75.3697429138209  delta_E= -3.86848e-05  |g|= 0.0263255  2 KF 5 JK
macro= 34  E= -75.3697042408521  delta_E= 3.8673e-05  |g|= 0.0297844  2 KF 5 JK
macro= 35  E= -75.3697429202339  delta_E= -3.86794e-05  |g|= 0.0263248  2 KF 5 JK
macro= 36  E= -75.3697042526579  delta_E= 3.86676e-05  |g|= 0.0297837  2 KF 5 JK
macro= 37  E= -75.3697429266348  delta_E= -3.8674e-05  |g|= 0.0263241  2 KF 5 JK
macro= 38  E= -75.3697042644602  delta_E= 3.86622e-05  |g|= 0.029783  2 KF 5 JK
macro= 39  E= -75.3697429330243  delta_E= -3.86686e-05  |g|= 0.0263234  2 KF 5 JK
macro= 40  E= -75.3697042762584  delta_E= 3.86568e-05  |g|= 0.0297822  2 KF 5 JK
macro= 41  E= -75.3697429394029  delta_E= -3.86631e-05  |g|= 0.0263226  2 KF 5 JK
macro= 42  E= -75.3697042880528  delta_E= 3.86514e-05  |g|= 0.0297815  2 KF 5 JK
macro= 43  E= -75.3697429457723  delta_E= -3.86577e-05  |g|= 0.0263219  2 KF 5 JK
macro= 44  E= -75.3697042998436  delta_E= 3.86459e-05  |g|= 0.0297808  2 KF 5 JK
macro= 45  E= -75.369742952132  delta_E= -3.86523e-05  |g|= 0.0263212  2 KF 5 JK
macro= 46  E= -75.3697043116294  delta_E= 3.86405e-05  |g|= 0.0297801  2 KF 5 JK
macro= 47  E= -75.3697429584838  delta_E= -3.86469e-05  |g|= 0.0263205  2 KF 5 JK
macro= 48  E= -75.3697043234119  delta_E= 3.86351e-05  |g|= 0.0297794  2 KF 5 JK
macro= 49  E= -75.3697429648274  delta_E= -3.86414e-05  |g|= 0.0263198  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3697429648274  |g|= 0.0263198  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3697429648274
**** SCF Summaries ****
Total Energy =                         -75.369742964827367
Nuclear Repulsion Energy =               5.427458573538462
One-electron Energy =                 -114.491030906806515
Two-electron Energy =                   33.693829368440689
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    1    0    0    0    0    0
single occ                     0    0    1    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.5884111338763  | -20.6053630705441  | -20.5714591972084  occ= 2
MO #2   (A1  #2 ) energy= -1.3846638332822   | -1.45156575107483  | -1.31776191548956  occ= 2
MO #3   (A1  #3 ) energy= -0.708205283103142 | -0.733258495216888 | -0.683152070989397 occ= 2
MO #4   (E1x #1 ) energy= -0.544563293906985 | -0.563872796919076 | -0.525253790894894 occ= 2
MO #5   (E1y #1 ) energy= -0.251951680651981 | -0.651685081588051 | 0.147781720284091  occ= 1
MO #6   (A1  #4 ) energy= 0.0319570623649837 | 0.0314894707741658 | 0.0324246539558012 occ= 0
MO #7   (A1  #5 ) energy= 0.137211042907314  | 0.136612771033074  | 0.137809314781548  occ= 0
MO #8   (E1y #2 ) energy= 0.153445322888797  | 0.148337307713552  | 0.158553338064042  occ= 0
MO #9   (E1x #2 ) energy= 0.156909251222322  | 0.156254171787266  | 0.157564330657379  occ= 0
MO #10  (A1  #6 ) energy= 0.190232967249626  | 0.188183163716147  | 0.192282770783107  occ= 0
MO #11  (A1  #7 ) energy= 0.272995619346001  | 0.271610206878191  | 0.274381031813813  occ= 0
MO #12  (E1y #3 ) energy= 0.282855608469745  | 0.278769073961084  | 0.286942142978407  occ= 0
MO #13  (E1x #3 ) energy= 0.286196016661563  | 0.285684612102721  | 0.286707421220403  occ= 0
MO #14  (A1  #8 ) energy= 0.463847804365038  | 0.460322520846407  | 0.467373087883703  occ= 0
MO #15  (E2x #1 ) energy= 0.649082755621828  | 0.639443782929066  | 0.65872172831459   occ= 0
MO #16  (E2y #1 ) energy= 0.649082755621828  | 0.639443782929067  | 0.658721728314591  occ= 0
MO #17  (A1  #9 ) energy= 0.682813000311133  | 0.676508889787982  | 0.689117110834288  occ= 0
MO #18  (E1y #4 ) energy= 0.729373934671639  | 0.719643102202957  | 0.739104767140325  occ= 0
MO #19  (E1x #4 ) energy= 0.735700663433103  | 0.734371097786117  | 0.737030229080088  occ= 0
MO #20  (E1y #5 ) energy= 0.862718990055764  | 0.836872914855357  | 0.888565065256177  occ= 0
MO #21  (E1x #5 ) energy= 0.864447817778988  | 0.861389943483946  | 0.867505692074026  occ= 0
MO #22  (A1  #10) energy= 0.868329751847912  | 0.863147186369086  | 0.873512317326645  occ= 0
MO #23  (A1  #11) energy= 0.935717423021278  | 0.934594309156268  | 0.936840536886318  occ= 0
MO #24  (E2x #2 ) energy= 0.953462282985464  | 0.952032268700325  | 0.954892297270602  occ= 0
MO #25  (E2y #2 ) energy= 0.953462282985464  | 0.952032268700327  | 0.954892297270604  occ= 0
MO #26  (E1y #6 ) energy= 1.01457895587107   | 0.997596006860914  | 1.03156190488122   occ= 0
MO #27  (E1x #6 ) energy= 1.02393886749107   | 1.02161748326303   | 1.0262602517191    occ= 0
MO #28  (A1  #12) energy= 1.13029788439714   | 1.12321547065928   | 1.13738029813504   occ= 0
MO #29  (E1y #7 ) energy= 1.61857321212225   | 1.59686170918991   | 1.64028471505459   occ= 0
MO #30  (E1x #7 ) energy= 1.62614469219413   | 1.62324794187674   | 1.62904144251152   occ= 0
MO #31  (A1  #13) energy= 1.64898873680637   | 1.63879861198027   | 1.6591788616322    occ= 0
MO #32  (E3x #1 ) energy= 2.04664090486309   | 2.03657987325481   | 2.05670193647136   occ= 0
MO #33  (E3y #1 ) energy= 2.04664090486309   | 2.03657987325481   | 2.05670193647136   occ= 0
MO #34  (E2x #3 ) energy= 2.13646587082466   | 2.10029252136269   | 2.17263922028663   occ= 0
MO #35  (E2y #3 ) energy= 2.13646587082466   | 2.1002925213627    | 2.17263922028663   occ= 0
MO #36  (A1  #14) energy= 2.19706768301037   | 2.18689603440803   | 2.20723933161277   occ= 0
MO #37  (E1y #8 ) energy= 2.32427534274796   | 2.30771100156322   | 2.3408396839327    occ= 0
MO #38  (E1x #8 ) energy= 2.34224808227091   | 2.33938883849574   | 2.34510732604609   occ= 0
MO #39  (A1  #15) energy= 2.38370413996962   | 2.37606616820217   | 2.39134211173725   occ= 0
MO #40  (E2x #4 ) energy= 2.38619478494012   | 2.37872452025678   | 2.39366504962346   occ= 0
MO #41  (E2y #4 ) energy= 2.38619478494012   | 2.37872452025678   | 2.39366504962346   occ= 0
MO #42  (E1y #9 ) energy= 2.7024205597014    | 2.67417188156838   | 2.73066923783443   occ= 0
MO #43  (E1x #9 ) energy= 2.72372301432501   | 2.71896048953066   | 2.72848553911934   occ= 0
MO #44  (A1  #16) energy= 2.75297495496142   | 2.74327191244654   | 2.76267799747635   occ= 0
MO #45  (A1  #17) energy= 3.81636118918259   | 3.81082804706952   | 3.82189433129566   occ= 0
MO #46  (E1y #10) energy= 4.21274224154211   | 4.19446038451076   | 4.23102409857348   occ= 0
MO #47  (E1x #10) energy= 4.22520451049968   | 4.22240579594539   | 4.22800322505398   occ= 0
MO #48  (E2x #5 ) energy= 4.23605010949472   | 4.23175195150512   | 4.24034826748432   occ= 0
MO #49  (E2y #5 ) energy= 4.23605010949472   | 4.23175195150512   | 4.24034826748432   occ= 0
MO #50  (E1y #11) energy= 4.42738542357705   | 4.38846345699826   | 4.46630739015586   occ= 0
MO #51  (E1x #11) energy= 4.43963695543414   | 4.43444651961362   | 4.44482739125466   occ= 0
MO #52  (A1  #18) energy= 4.75076172841878   | 4.74422153959674   | 4.75730191724101   occ= 0
MO #53  (E1y #12) energy= 5.73721566422709   | 5.71695180278326   | 5.75747952567093   occ= 0
MO #54  (E1x #12) energy= 5.7655812152871    | 5.76153128038274   | 5.76963115019147   occ= 0
MO #55  (A1  #19) energy= 5.8987342232142    | 5.88511771259533   | 5.91235073383309   occ= 0
MO #56  (A1  #20) energy= 6.26518771477098   | 6.2530187846629    | 6.27735664487903   occ= 0
MO #57  (E3x #2 ) energy= 6.45399892663244   | 6.42900428378118   | 6.47899356948371   occ= 0
MO #58  (E3y #2 ) energy= 6.45399892663244   | 6.42900428378118   | 6.4789935694837    occ= 0
MO #59  (E2x #6 ) energy= 6.72406484117439   | 6.70543756468189   | 6.74269211766687   occ= 0
MO #60  (E2y #6 ) energy= 6.72406484117437   | 6.70543756468187   | 6.74269211766685   occ= 0
MO #61  (E2x #7 ) energy= 7.00618010821858   | 6.96520566698124   | 7.04715454945593   occ= 0
MO #62  (E2y #7 ) energy= 7.00618010821858   | 6.96520566698124   | 7.04715454945593   occ= 0
MO #63  (E1y #13) energy= 7.05370735803324   | 7.02273243408439   | 7.0846822819821    occ= 0
MO #64  (E1x #13) energy= 7.08661865857718   | 7.08106899384986   | 7.09216832330448   occ= 0
MO #65  (E1y #14) energy= 7.9301376371699    | 7.90538541130697   | 7.95488986303284   occ= 0
MO #66  (E1x #14) energy= 7.96290557857378   | 7.95793620596822   | 7.96787495117934   occ= 0
MO #67  (A1  #21) energy= 8.17026986737231   | 8.16061055734979   | 8.17992917739483   occ= 0
MO #68  (A1  #22) energy= 8.56959272736681   | 8.56365797197879   | 8.57552748275483   occ= 0
MO #69  (A1  #23) energy= 16.9917613646568   | 16.9800786198165   | 17.0034441094974   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.72395
pop of  0 O 3s        0.00733
pop of  0 O 4s        0.00169
pop of  0 O 5s        0.00005
pop of  0 O 2px       1.99191
pop of  0 O 2py       0.99637
pop of  0 O 2pz       1.62840
pop of  0 O 3px       0.00065
pop of  0 O 3py       0.00021
pop of  0 O 3pz       0.00504
pop of  0 O 4px       0.00045
pop of  0 O 4py       0.00045
pop of  0 O 4pz       0.00147
pop of  0 O 5px       0.00010
pop of  0 O 5py       0.00003
pop of  0 O 5pz       0.00031
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00135
pop of  0 O 3dz^2     0.01499
pop of  0 O 3dxz      0.00281
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00014
pop of  0 O 4dz^2     0.00048
pop of  0 O 4dxz      0.00031
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00001
pop of  0 O 5dz^2     0.00026
pop of  0 O 5dxz      0.00001
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00002
pop of  0 O 4f 0      0.00200
pop of  0 O 4f 1      0.00023
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00000
pop of  0 O 5f 0      0.00002
pop of  0 O 5f 1      0.00001
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.57888
pop of  1 H 2s        0.01906
pop of  1 H 3s        0.01298
pop of  1 H 4s        0.00106
pop of  1 H 2px       0.00338
pop of  1 H 2py       0.00069
pop of  1 H 2pz       0.00041
pop of  1 H 3px       0.00010
pop of  1 H 3py       0.00062
pop of  1 H 3pz       0.00001
pop of  1 H 4px       0.00000
pop of  1 H 4py       0.00004
pop of  1 H 4pz       0.00051
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00001
pop of  1 H 3dz^2     0.00070
pop of  1 H 3dxz      0.00000
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00007
pop of  1 H 4dz^2     0.00041
pop of  1 H 4dxz      0.00004
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.38102
charge of  1H =      0.38102
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.60765
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.78/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.78)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:59:04 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        41.99

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpyidnwy_2
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpyidnwy_2
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.251951680651985  LUMO = 0.61603237686136
Initial guess E= -75.3697633692431  |g|= 0.00116563
macro= 0  E= -75.369763911601  delta_E= -5.42358e-07  |g|= 0.00116563  1 KF 4 JK
macro= 1  E= -75.369763911601  delta_E= 0  |g|= 1.02208e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.369763911601  |g|= 1.02208e-07  total 3 KF 9 JK
converged SCF energy = -75.369763911601
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.78/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.78)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:59:08 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        45.12

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpysyosnnn
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpysyosnnn
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.251953303868065  LUMO = 0.616032861842726
Initial guess E= -75.3697633685137  |g|= 0.00116582
macro= 0  E= -75.369763911601  delta_E= -5.43087e-07  |g|= 0.00116582  1 KF 3 JK
macro= 1  E= -75.369763911601  delta_E= -1.42109e-14  |g|= 1.02482e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.369763911601  |g|= 1.02482e-07  total 3 KF 8 JK
converged SCF energy = -75.369763911601
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.78/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.78)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:59:14 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        49.13

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmplb2m0hy_
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmplb2m0hy_
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.252242461157744  LUMO = 0.0319512071434735
Initial guess E= -75.3704413291608  |g|= 0.0128878
macro= 0  E= -75.3704792484123  delta_E= -3.79193e-05  |g|= 0.000453881  2 KF 7 JK
macro= 1  E= -75.3704792484124  delta_E= -9.9476e-14  |g|= 6.83152e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3704792484124  |g|= 6.83152e-06  total 4 KF 12 JK
converged SCF energy = -75.3704792484124
u+d contributions  -0.051204731194923095
uu+dd contributions  -0.08354159177079032
ud contributions  -0.18310345952265208
u+d contributions  -0.00789889182524516
uu+dd contributions  -0.040144066702247384
ud contributions  -0.13955358053006983
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.78/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.78)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:59:36 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        55.55

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpu7fa3qlv
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpu7fa3qlv
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.252788408314089  LUMO = 0.61585755019182
Initial guess E= -75.3697633141874  |g|= 0.00108982
macro= 0  E= -75.369763911601  delta_E= -5.97414e-07  |g|= 0.00108982  1 KF 2 JK
macro= 1  E= -75.369763911601  delta_E= -1.42109e-14  |g|= 1.77585e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.369763911601  |g|= 1.77585e-07  total 3 KF 7 JK
converged SCF energy = -75.369763911601
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.78/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.78)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:59:39 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        59.49

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp1elcnmf0
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp1elcnmf0
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.253076117005217  LUMO = 0.0319669465716162
Initial guess E= -75.3704007802679  |g|= 0.00836742
macro= 0  E= -75.3704236414158  delta_E= -2.28611e-05  |g|= 0.000325051  2 KF 7 JK
macro= 1  E= -75.3704236414158  delta_E= 0  |g|= 4.38888e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3704236414158  |g|= 4.38888e-06  total 4 KF 12 JK
converged SCF energy = -75.3704236414158
u+d contributions  -0.017162198492973794
uu+dd contributions  -0.04228860443604669
ud contributions  -0.109454750039163
u+d contributions  -0.003650764153388489
uu+dd contributions  -0.028765275230587386
ud contributions  -0.0959289665126773
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.737254, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.188971, i_min=0
In the tapering subroutine, i=2, E(i)=-75.369764, i_min=1
In the tapering subroutine, i=3, E(i)=-74.739903, i_min=2
In the tapering subroutine, i=4, E(i)=-75.365575, i_min=2
In the tapering subroutine, i=5, E(i)=-74.729358, i_min=2
In the tapering subroutine, i=6, E(i)=-74.804436, i_min=2
In the tapering subroutine, i=7, E(i)=-74.780618, i_min=2
In the tapering subroutine, i=8, E(i)=-75.188971, i_min=2
In the tapering subroutine, i=9, E(i)=-75.223489, i_min=2
In the tapering subroutine, i=10, E(i)=-74.767766, i_min=2
In the tapering subroutine, i=11, E(i)=-75.369764, i_min=2
In the tapering subroutine, i=12, E(i)=-74.756532, i_min=2
In the tapering subroutine, i=13, E(i)=-75.365575, i_min=2
In the tapering subroutine, i=14, E(i)=-74.780618, i_min=2
In the tapering subroutine, i=15, E(i)=-74.843055, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0036508725206099274
uu+dd contributions  -0.02876535936932459
ud contributions  -0.09591731073855793
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003622963481165356
uu+dd contributions  -0.02873686381814287
ud contributions  -0.09588917550630546
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003622963481165356
uu+dd contributions  -0.02873686381814287
ud contributions  -0.09588917550630546
