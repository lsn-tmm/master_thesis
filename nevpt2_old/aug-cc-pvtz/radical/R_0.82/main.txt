#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.82/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.82)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:34:36 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.820000000000 AA    0.000000000000   0.000000000000   1.549575422143 Bohr

nuclear repulsion = 5.16270449678049
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         5.76
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpx77o8l9u
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpx77o8l9u
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.459027008420755  LUMO (A1) = 0.0297726011209186
Initial guess E= -75.3813262272993  |g|= 0.207264
macro= 0  E= -75.3891704222443  delta_E= -0.00784419  |g|= 0.207264  2 KF 5 JK
macro= 1  E= -75.3900902056977  delta_E= -0.000919783  |g|= 0.0985733  2 KF 5 JK
macro= 2  E= -75.3885632888453  delta_E= 0.00152692  |g|= 0.059698  2 KF 5 JK
macro= 3  E= -75.3900720144545  delta_E= -0.00150873  |g|= 0.108007  2 KF 5 JK
macro= 4  E= -75.3889677504863  delta_E= 0.00110426  |g|= 0.0607366  2 KF 5 JK
macro= 5  E= -75.3900724322734  delta_E= -0.00110468  |g|= 0.101396  2 KF 5 JK
macro= 6  E= -75.3888490953239  delta_E= 0.00122334  |g|= 0.0595951  2 KF 5 JK
macro= 7  E= -75.3900763631615  delta_E= -0.00122727  |g|= 0.103365  2 KF 5 JK
macro= 8  E= -75.3888741410538  delta_E= 0.00120222  |g|= 0.060044  2 KF 5 JK
macro= 9  E= -75.3900794267051  delta_E= -0.00120529  |g|= 0.102995  2 KF 5 JK
macro= 10  E= -75.3888443626543  delta_E= 0.00123506  |g|= 0.0598743  2 KF 5 JK
macro= 11  E= -75.3900824916365  delta_E= -0.00123813  |g|= 0.10352  2 KF 5 JK
macro= 12  E= -75.3888346552922  delta_E= 0.00124784  |g|= 0.0598871  2 KF 5 JK
macro= 13  E= -75.3900855446972  delta_E= -0.00125089  |g|= 0.103721  2 KF 5 JK
macro= 14  E= -75.3888175623323  delta_E= 0.00126798  |g|= 0.0598122  2 KF 5 JK
macro= 15  E= -75.3900886209626  delta_E= -0.00127106  |g|= 0.104037  2 KF 5 JK
macro= 16  E= -75.3888033382721  delta_E= 0.00128528  |g|= 0.0597621  2 KF 5 JK
macro= 17  E= -75.3900916803119  delta_E= -0.00128834  |g|= 0.104304  2 KF 5 JK
macro= 18  E= -75.3887881776465  delta_E= 0.0013035  |g|= 0.0596983  2 KF 5 JK
macro= 19  E= -75.390094750737  delta_E= -0.00130657  |g|= 0.104584  2 KF 5 JK
macro= 20  E= -75.3887735124953  delta_E= 0.00132124  |g|= 0.0596374  2 KF 5 JK
macro= 21  E= -75.3900978141511  delta_E= -0.0013243  |g|= 0.104852  2 KF 5 JK
macro= 22  E= -75.3887588213383  delta_E= 0.00133899  |g|= 0.0595738  2 KF 5 JK
macro= 23  E= -75.3901008780546  delta_E= -0.00134206  |g|= 0.105118  2 KF 5 JK
macro= 24  E= -75.3887443105897  delta_E= 0.00135657  |g|= 0.0595099  2 KF 5 JK
macro= 25  E= -75.3901039367054  delta_E= -0.00135963  |g|= 0.105378  2 KF 5 JK
macro= 26  E= -75.3887299145686  delta_E= 0.00137402  |g|= 0.0594449  2 KF 5 JK
macro= 27  E= -75.3901069907324  delta_E= -0.00137708  |g|= 0.105633  2 KF 5 JK
macro= 28  E= -75.3887156682437  delta_E= 0.00139132  |g|= 0.0593792  2 KF 5 JK
macro= 29  E= -75.3901100377696  delta_E= -0.00139437  |g|= 0.105884  2 KF 5 JK
macro= 30  E= -75.3887015683291  delta_E= 0.00140847  |g|= 0.0593126  2 KF 5 JK
macro= 31  E= -75.3901130768145  delta_E= -0.00141151  |g|= 0.106129  2 KF 5 JK
macro= 32  E= -75.3886876250184  delta_E= 0.00142545  |g|= 0.0592454  2 KF 5 JK
macro= 33  E= -75.3901161062662  delta_E= -0.00142848  |g|= 0.10637  2 KF 5 JK
macro= 34  E= -75.3886738427425  delta_E= 0.00144226  |g|= 0.0591774  2 KF 5 JK
macro= 35  E= -75.390119124805  delta_E= -0.00144528  |g|= 0.106605  2 KF 5 JK
macro= 36  E= -75.3886602273434  delta_E= 0.0014589  |g|= 0.0591087  2 KF 5 JK
macro= 37  E= -75.3901221310131  delta_E= -0.0014619  |g|= 0.106836  2 KF 5 JK
macro= 38  E= -75.3886467834234  delta_E= 0.00147535  |g|= 0.0590394  2 KF 5 JK
macro= 39  E= -75.3901251235455  delta_E= -0.00147834  |g|= 0.107061  2 KF 5 JK
macro= 40  E= -75.3886335153532  delta_E= 0.00149161  |g|= 0.0589695  2 KF 5 JK
macro= 41  E= -75.3901281010614  delta_E= -0.00149459  |g|= 0.107282  2 KF 5 JK
macro= 42  E= -75.388620426918  delta_E= 0.00150767  |g|= 0.058899  2 KF 5 JK
macro= 43  E= -75.3901310622595  delta_E= -0.00151064  |g|= 0.107498  2 KF 5 JK
macro= 44  E= -75.3886075214729  delta_E= 0.00152354  |g|= 0.058828  2 KF 5 JK
macro= 45  E= -75.3901340058673  delta_E= -0.00152648  |g|= 0.107709  2 KF 5 JK
macro= 46  E= -75.388594801911  delta_E= 0.0015392  |g|= 0.0587565  2 KF 5 JK
macro= 47  E= -75.3901369306504  delta_E= -0.00154213  |g|= 0.107915  2 KF 5 JK
macro= 48  E= -75.3885822707003  delta_E= 0.00155466  |g|= 0.0586845  2 KF 5 JK
macro= 49  E= -75.3901398354128  delta_E= -0.00155756  |g|= 0.108117  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3901398354128  |g|= 0.108117  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3901398354128

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpx77o8l9u
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpx77o8l9u
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.272986280523092  LUMO (A1) = 0.0316466340909491
Initial guess E= -75.3915325409937  |g|= 0.0379518
macro= 0  E= -75.3916397341404  delta_E= -0.000107193  |g|= 0.0379518  2 KF 5 JK
macro= 1  E= -75.3916313627353  delta_E= 8.37141e-06  |g|= 0.0229057  2 KF 5 JK
macro= 2  E= -75.3915936088033  delta_E= 3.77539e-05  |g|= 0.0312399  2 KF 5 JK
macro= 3  E= -75.3916445542768  delta_E= -5.09455e-05  |g|= 0.0271726  2 KF 5 JK
macro= 4  E= -75.3916015409031  delta_E= 4.30134e-05  |g|= 0.0300914  2 KF 5 JK
macro= 5  E= -75.3916457724471  delta_E= -4.42315e-05  |g|= 0.0268007  2 KF 5 JK
macro= 6  E= -75.3916014230955  delta_E= 4.43494e-05  |g|= 0.0299161  2 KF 5 JK
macro= 7  E= -75.3916451039773  delta_E= -4.36809e-05  |g|= 0.0268015  2 KF 5 JK
macro= 8  E= -75.3916015064452  delta_E= 4.35975e-05  |g|= 0.0299646  2 KF 5 JK
macro= 9  E= -75.3916451635952  delta_E= -4.36572e-05  |g|= 0.0267972  2 KF 5 JK
macro= 10  E= -75.3916015162572  delta_E= 4.36473e-05  |g|= 0.0299583  2 KF 5 JK
macro= 11  E= -75.3916451558236  delta_E= -4.36396e-05  |g|= 0.0267967  2 KF 5 JK
macro= 12  E= -75.3916015253762  delta_E= 4.36304e-05  |g|= 0.0299586  2 KF 5 JK
macro= 13  E= -75.3916451615819  delta_E= -4.36362e-05  |g|= 0.0267962  2 KF 5 JK
macro= 14  E= -75.3916015335772  delta_E= 4.3628e-05  |g|= 0.0299579  2 KF 5 JK
macro= 15  E= -75.3916451660162  delta_E= -4.36324e-05  |g|= 0.0267958  2 KF 5 JK
macro= 16  E= -75.3916015417509  delta_E= 4.36243e-05  |g|= 0.0299574  2 KF 5 JK
macro= 17  E= -75.3916451706287  delta_E= -4.36289e-05  |g|= 0.0267953  2 KF 5 JK
macro= 18  E= -75.3916015499113  delta_E= 4.36207e-05  |g|= 0.0299569  2 KF 5 JK
macro= 19  E= -75.3916451751672  delta_E= -4.36253e-05  |g|= 0.0267948  2 KF 5 JK
macro= 20  E= -75.3916015580693  delta_E= 4.36171e-05  |g|= 0.0299564  2 KF 5 JK
macro= 21  E= -75.391645179666  delta_E= -4.36216e-05  |g|= 0.0267944  2 KF 5 JK
macro= 22  E= -75.3916015662244  delta_E= 4.36134e-05  |g|= 0.0299559  2 KF 5 JK
macro= 23  E= -75.3916451841281  delta_E= -4.36179e-05  |g|= 0.0267939  2 KF 5 JK
macro= 24  E= -75.3916015743762  delta_E= 4.36098e-05  |g|= 0.0299554  2 KF 5 JK
macro= 25  E= -75.3916451885602  delta_E= -4.36142e-05  |g|= 0.0267934  2 KF 5 JK
macro= 26  E= -75.3916015825239  delta_E= 4.3606e-05  |g|= 0.0299549  2 KF 5 JK
macro= 27  E= -75.3916451929677  delta_E= -4.36104e-05  |g|= 0.0267929  2 KF 5 JK
macro= 28  E= -75.3916015906668  delta_E= 4.36023e-05  |g|= 0.0299544  2 KF 5 JK
macro= 29  E= -75.3916451973548  delta_E= -4.36067e-05  |g|= 0.0267924  2 KF 5 JK
macro= 30  E= -75.391601598805  delta_E= 4.35985e-05  |g|= 0.0299539  2 KF 5 JK
macro= 31  E= -75.3916452017249  delta_E= -4.36029e-05  |g|= 0.0267919  2 KF 5 JK
macro= 32  E= -75.3916016069383  delta_E= 4.35948e-05  |g|= 0.0299534  2 KF 5 JK
macro= 33  E= -75.3916452060804  delta_E= -4.35991e-05  |g|= 0.0267914  2 KF 5 JK
macro= 34  E= -75.3916016150665  delta_E= 4.3591e-05  |g|= 0.029953  2 KF 5 JK
macro= 35  E= -75.3916452104235  delta_E= -4.35954e-05  |g|= 0.026791  2 KF 5 JK
macro= 36  E= -75.3916016231896  delta_E= 4.35872e-05  |g|= 0.0299525  2 KF 5 JK
macro= 37  E= -75.3916452147559  delta_E= -4.35916e-05  |g|= 0.0267905  2 KF 5 JK
macro= 38  E= -75.3916016313071  delta_E= 4.35834e-05  |g|= 0.029952  2 KF 5 JK
macro= 39  E= -75.391645219079  delta_E= -4.35878e-05  |g|= 0.02679  2 KF 5 JK
macro= 40  E= -75.3916016394188  delta_E= 4.35797e-05  |g|= 0.0299515  2 KF 5 JK
macro= 41  E= -75.3916452233936  delta_E= -4.3584e-05  |g|= 0.0267895  2 KF 5 JK
macro= 42  E= -75.3916016475254  delta_E= 4.35759e-05  |g|= 0.029951  2 KF 5 JK
macro= 43  E= -75.3916452277008  delta_E= -4.35802e-05  |g|= 0.026789  2 KF 5 JK
macro= 44  E= -75.3916016556262  delta_E= 4.35721e-05  |g|= 0.0299506  2 KF 5 JK
macro= 45  E= -75.391645232001  delta_E= -4.35764e-05  |g|= 0.0267885  2 KF 5 JK
macro= 46  E= -75.3916016637211  delta_E= 4.35683e-05  |g|= 0.0299501  2 KF 5 JK
macro= 47  E= -75.3916452362949  delta_E= -4.35726e-05  |g|= 0.026788  2 KF 5 JK
macro= 48  E= -75.3916016718106  delta_E= 4.35645e-05  |g|= 0.0299496  2 KF 5 JK
macro= 49  E= -75.3916452405827  delta_E= -4.35688e-05  |g|= 0.0267875  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3916452405827  |g|= 0.0267875  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3916452405827
**** SCF Summaries ****
Total Energy =                         -75.391645240582662
Nuclear Repulsion Energy =               5.162704496780488
One-electron Energy =                 -114.068404836617560
Two-electron Energy =                   33.514055099254406
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    0    1    0    0    0    0
single occ                     0    1    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.5923665772983  | -20.6093113828085  | -20.5754217717881  occ= 2
MO #2   (A1  #2 ) energy= -1.36399149849261  | -1.43164489897399  | -1.29633809801123  occ= 2
MO #3   (A1  #3 ) energy= -0.697654414275272 | -0.721737605326937 | -0.673571223223607 occ= 2
MO #4   (E1y #1 ) energy= -0.541734622856652 | -0.561019214084988 | -0.522450031628317 occ= 2
MO #5   (E1x #1 ) energy= -0.249475858497821 | -0.6488004122631   | 0.149848695267456  occ= 1
MO #6   (A1  #4 ) energy= 0.031707562023638  | 0.0312251195779165 | 0.0321900044693579 occ= 0
MO #7   (A1  #5 ) energy= 0.137578979823299  | 0.136944352152373  | 0.138213607494224  occ= 0
MO #8   (E1x #2 ) energy= 0.154966825800611  | 0.149684232782717  | 0.160249418818505  occ= 0
MO #9   (E1y #2 ) energy= 0.158460480933326  | 0.157782468526393  | 0.15913849334026   occ= 0
MO #10  (A1  #6 ) energy= 0.190128198526461  | 0.188024738346279  | 0.192231658706654  occ= 0
MO #11  (A1  #7 ) energy= 0.270977943628009  | 0.269482231313889  | 0.272473655942135  occ= 0
MO #12  (E1x #3 ) energy= 0.279862518428634  | 0.275962875915038  | 0.28376216094223   occ= 0
MO #13  (E1y #3 ) energy= 0.283195290350889  | 0.282706648885605  | 0.283683931816171  occ= 0
MO #14  (A1  #8 ) energy= 0.458412094225421  | 0.454808616567622  | 0.462015571883067  occ= 0
MO #15  (E2x #1 ) energy= 0.648870875421167  | 0.639250931417073  | 0.658490819425261  occ= 0
MO #16  (E2y #1 ) energy= 0.648870875421167  | 0.639250931417073  | 0.658490819425261  occ= 0
MO #17  (A1  #9 ) energy= 0.674021976452003  | 0.667655418339169  | 0.680388534564853  occ= 0
MO #18  (E1x #4 ) energy= 0.726752123826577  | 0.717233896228294  | 0.73627035142486   occ= 0
MO #19  (E1y #4 ) energy= 0.732872989492761  | 0.731577213038079  | 0.734168765947439  occ= 0
MO #20  (E1x #5 ) energy= 0.866748733621108  | 0.841349156844981  | 0.892148310397237  occ= 0
MO #21  (E1y #5 ) energy= 0.868650188127365  | 0.865621770906511  | 0.871678605348219  occ= 0
MO #22  (A1  #10) energy= 0.878008065649045  | 0.872615590556529  | 0.883400540741547  occ= 0
MO #23  (A1  #11) energy= 0.927705535526636  | 0.926548767383948  | 0.928862303669341  occ= 0
MO #24  (E2x #2 ) energy= 0.95076041530533   | 0.949312871998871  | 0.952207958611794  occ= 0
MO #25  (E2y #2 ) energy= 0.950760415305326  | 0.949312871998864  | 0.952207958611787  occ= 0
MO #26  (E1x #6 ) energy= 1.01443975538536   | 0.99553471435329   | 1.03334479641744   occ= 0
MO #27  (E1y #6 ) energy= 1.023431709346     | 1.02089017796706   | 1.02597324072494   occ= 0
MO #28  (A1  #12) energy= 1.09618452390958   | 1.08959963859285   | 1.10276940922636   occ= 0
MO #29  (E1x #7 ) energy= 1.5936795122629    | 1.57403181046115   | 1.61332721406465   occ= 0
MO #30  (E1y #7 ) energy= 1.60117267540835   | 1.59855389996477   | 1.60379145085193   occ= 0
MO #31  (A1  #13) energy= 1.65544697703128   | 1.64537570958892   | 1.6655182444736    occ= 0
MO #32  (E3x #1 ) energy= 2.04811732723229   | 2.03804167649121   | 2.05819297797338   occ= 0
MO #33  (E3y #1 ) energy= 2.04811732723229   | 2.03804167649121   | 2.05819297797338   occ= 0
MO #34  (E2x #3 ) energy= 2.13656327433976   | 2.10063778383125   | 2.17248876484829   occ= 0
MO #35  (E2y #3 ) energy= 2.13656327433977   | 2.10063778383125   | 2.17248876484829   occ= 0
MO #36  (A1  #14) energy= 2.17583520624613   | 2.16577310690068   | 2.18589730559165   occ= 0
MO #37  (E1x #8 ) energy= 2.31380601911444   | 2.29643337233589   | 2.33117866589298   occ= 0
MO #38  (E1y #8 ) energy= 2.3316195769372    | 2.32865958638639   | 2.33457956748801   occ= 0
MO #39  (E2x #4 ) energy= 2.37395801855199   | 2.36629632565451   | 2.38161971144948   occ= 0
MO #40  (E2y #4 ) energy= 2.37395801855199   | 2.3662963256545    | 2.38161971144947   occ= 0
MO #41  (A1  #15) energy= 2.37998175857705   | 2.37226522442627   | 2.38769829272798   occ= 0
MO #42  (A1  #16) energy= 2.67887350403947   | 2.6696187473769    | 2.68812826070206   occ= 0
MO #43  (E1x #9 ) energy= 2.72222931642578   | 2.69533172349876   | 2.7491269093528    occ= 0
MO #44  (E1y #9 ) energy= 2.74366156962824   | 2.73905849371704   | 2.74826464553942   occ= 0
MO #45  (A1  #17) energy= 3.77000666855249   | 3.76456115216795   | 3.77545218493705   occ= 0
MO #46  (E1x #10) energy= 4.18505634700659   | 4.15733517646633   | 4.21277751754686   occ= 0
MO #47  (E2x #5 ) energy= 4.18548682455692   | 4.1815509121788    | 4.18942273693502   occ= 0
MO #48  (E2y #5 ) energy= 4.18548682455692   | 4.18155091217881   | 4.18942273693502   occ= 0
MO #49  (E1y #10) energy= 4.19670303189331   | 4.19274242408688   | 4.20066363969973   occ= 0
MO #50  (E1x #11) energy= 4.38296330017899   | 4.35379140886106   | 4.41213519149692   occ= 0
MO #51  (E1y #11) energy= 4.39465979963435   | 4.39075545132855   | 4.39856414794015   occ= 0
MO #52  (A1  #18) energy= 4.73997705996921   | 4.7338916846369    | 4.74606243530192   occ= 0
MO #53  (E1x #12) energy= 5.66374030180077   | 5.64381952938252   | 5.683661074219     occ= 0
MO #54  (E1y #12) energy= 5.69137523799709   | 5.68736727500292   | 5.69538320099125   occ= 0
MO #55  (A1  #19) energy= 5.72133073767455   | 5.70788584493025   | 5.73477563041908   occ= 0
MO #56  (A1  #20) energy= 6.20817437684907   | 6.19686633842131   | 6.21948241527695   occ= 0
MO #57  (E3x #2 ) energy= 6.45621314397317   | 6.43122961205205   | 6.48119667589428   occ= 0
MO #58  (E3y #2 ) energy= 6.45621314397317   | 6.43122961205205   | 6.48119667589428   occ= 0
MO #59  (E2x #6 ) energy= 6.69548890816324   | 6.6768871619548    | 6.71409065437169   occ= 0
MO #60  (E2y #6 ) energy= 6.69548890816324   | 6.67688716195479   | 6.71409065437168   occ= 0
MO #61  (E2x #7 ) energy= 7.01089075735898   | 6.96988413269036   | 7.05189738202761   occ= 0
MO #62  (E2y #7 ) energy= 7.01089075735899   | 6.96988413269037   | 7.05189738202761   occ= 0
MO #63  (E1x #13) energy= 7.09578506055413   | 7.06372779686971   | 7.12784232423856   occ= 0
MO #64  (E1y #13) energy= 7.12837213123756   | 7.1227167540626    | 7.13402750841251   occ= 0
MO #65  (E1x #14) energy= 7.71923926701214   | 7.69449898435704   | 7.74397954966724   occ= 0
MO #66  (E1y #14) energy= 7.75219865817437   | 7.74720861623314   | 7.75718870011559   occ= 0
MO #67  (A1  #21) energy= 8.05404672156893   | 8.04358766991273   | 8.06450577322511   occ= 0
MO #68  (A1  #22) energy= 8.1935366423591    | 8.18741678845937   | 8.19965649625883   occ= 0
MO #69  (A1  #23) energy= 16.0774882142892   | 16.065242097292    | 16.089734331286    occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.74557
pop of  0 O 3s        0.00682
pop of  0 O 4s        0.00162
pop of  0 O 5s        0.00008
pop of  0 O 2px       0.99656
pop of  0 O 2py       1.99203
pop of  0 O 2pz       1.60474
pop of  0 O 3px       0.00019
pop of  0 O 3py       0.00073
pop of  0 O 3pz       0.00417
pop of  0 O 4px       0.00045
pop of  0 O 4py       0.00043
pop of  0 O 4pz       0.00155
pop of  0 O 5px       0.00003
pop of  0 O 5py       0.00012
pop of  0 O 5pz       0.00024
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00262
pop of  0 O 3dz^2     0.01336
pop of  0 O 3dxz      0.00126
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00033
pop of  0 O 4dz^2     0.00055
pop of  0 O 4dxz      0.00015
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00002
pop of  0 O 5dz^2     0.00025
pop of  0 O 5dxz      0.00001
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00022
pop of  0 O 4f 0      0.00174
pop of  0 O 4f 1      0.00002
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00002
pop of  0 O 5f 0      0.00004
pop of  0 O 5f 1      0.00001
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.58783
pop of  1 H 2s        0.01791
pop of  1 H 3s        0.01101
pop of  1 H 4s        0.00069
pop of  1 H 2px       0.00067
pop of  1 H 2py       0.00338
pop of  1 H 2pz       0.00049
pop of  1 H 3px       0.00054
pop of  1 H 3py       0.00007
pop of  1 H 3pz       0.00004
pop of  1 H 4px       0.00005
pop of  1 H 4py       0.00000
pop of  1 H 4pz       0.00043
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00000
pop of  1 H 3dz^2     0.00056
pop of  1 H 3dxz      0.00002
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00003
pop of  1 H 4dz^2     0.00031
pop of  1 H 4dxz      0.00006
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.37591
charge of  1H =      0.37591
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.64424
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.82/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.82)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:35:18 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        54.73

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp4cl2gp34
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp4cl2gp34
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.249475858497818  LUMO = 0.574777434986249
Initial guess E= -75.3916680640886  |g|= 0.00117735
macro= 0  E= -75.3916686499775  delta_E= -5.85889e-07  |g|= 0.00117735  1 KF 4 JK
macro= 1  E= -75.3916686499775  delta_E= 1.42109e-14  |g|= 1.20461e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3916686499775  |g|= 1.20461e-07  total 3 KF 9 JK
converged SCF energy = -75.3916686499775
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.82/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.82)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:35:20 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        58.54

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpq6khquh6
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpq6khquh6
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.249477413620718  LUMO = 0.574777945764312
Initial guess E= -75.3916680632902  |g|= 0.00117757
macro= 0  E= -75.3916686499775  delta_E= -5.86687e-07  |g|= 0.00117757  1 KF 3 JK
macro= 1  E= -75.3916686499775  delta_E= -1.42109e-14  |g|= 1.20839e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3916686499775  |g|= 1.20839e-07  total 3 KF 8 JK
converged SCF energy = -75.3916686499775
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.82/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.82)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:35:22 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        63.11

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpdttpryt8
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpdttpryt8
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.249766364988937  LUMO = 0.0317017712071776
Initial guess E= -75.3923436243648  |g|= 0.0131405
macro= 0  E= -75.3923834335944  delta_E= -3.98092e-05  |g|= 0.000464061  2 KF 7 JK
macro= 1  E= -75.3923834335945  delta_E= -1.13687e-13  |g|= 7.33112e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3923834335945  |g|= 7.33112e-06  total 4 KF 12 JK
converged SCF energy = -75.3923834335945
u+d contributions  -0.05239486451132183
uu+dd contributions  -0.08444256924954147
ud contributions  -0.18319739080056788
u+d contributions  -0.00795979542677458
uu+dd contributions  -0.039913245438912025
ud contributions  -0.13850863571583472
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.82/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.82)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:35:29 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        70.21

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpj7c4vhc8
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpj7c4vhc8
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.250309085276708  LUMO = 0.574597770911926
Initial guess E= -75.3916679477892  |g|= 0.00116333
macro= 0  E= -75.3916686499775  delta_E= -7.02188e-07  |g|= 0.00116333  1 KF 2 JK
macro= 1  E= -75.3916686499775  delta_E= -1.42109e-14  |g|= 2.21465e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3916686499775  |g|= 2.21465e-07  total 3 KF 7 JK
converged SCF energy = -75.3916686499775
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.82/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.82)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:35:31 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        74.41

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpez_ftnrw
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpez_ftnrw
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.250596613487363  LUMO = 0.0317172953230378
Initial guess E= -75.3923039046245  |g|= 0.00850615
macro= 0  E= -75.3923278136717  delta_E= -2.3909e-05  |g|= 0.000330742  2 KF 7 JK
macro= 1  E= -75.3923278136717  delta_E= 2.84217e-14  |g|= 4.66866e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3923278136717  |g|= 4.66866e-06  total 4 KF 12 JK
converged SCF energy = -75.3923278136717
u+d contributions  -0.01846446158343665
uu+dd contributions  -0.04335003319908976
ud contributions  -0.10951133552400268
u+d contributions  -0.00398978307461167
uu+dd contributions  -0.02886139999905835
ud contributions  -0.09501968343221949
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.762011, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.213572, i_min=0
In the tapering subroutine, i=2, E(i)=-75.391669, i_min=1
In the tapering subroutine, i=3, E(i)=-74.803325, i_min=2
In the tapering subroutine, i=4, E(i)=-75.387455, i_min=2
In the tapering subroutine, i=5, E(i)=-74.792727, i_min=2
In the tapering subroutine, i=6, E(i)=-74.829027, i_min=2
In the tapering subroutine, i=7, E(i)=-74.845216, i_min=2
In the tapering subroutine, i=8, E(i)=-75.213572, i_min=2
In the tapering subroutine, i=9, E(i)=-75.243501, i_min=2
In the tapering subroutine, i=10, E(i)=-74.830668, i_min=2
In the tapering subroutine, i=11, E(i)=-75.391669, i_min=2
In the tapering subroutine, i=12, E(i)=-74.819369, i_min=2
In the tapering subroutine, i=13, E(i)=-75.387455, i_min=2
In the tapering subroutine, i=14, E(i)=-74.845216, i_min=2
In the tapering subroutine, i=15, E(i)=-74.867596, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003989695813633665
uu+dd contributions  -0.028861323745548152
ud contributions  -0.09500577741044611
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.00388385564052044
uu+dd contributions  -0.028755153751420685
ud contributions  -0.09489826439707177
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.00388385564052044
uu+dd contributions  -0.028755153751420685
ud contributions  -0.09489826439707177
