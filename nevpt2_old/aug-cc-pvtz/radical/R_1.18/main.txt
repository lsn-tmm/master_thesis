#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.18/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.18)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:55:08 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.180000000000 AA    0.000000000000   0.000000000000   2.229876826987 Bohr

nuclear repulsion = 3.5876421079322
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         4.36
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpl5qdtn6n
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpl5qdtn6n
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.412206919365476  LUMO (A1) = 0.0131409912186261
Initial guess E= -75.3661575542971  |g|= 0.215555
macro= 0  E= -75.3801141684492  delta_E= -0.0139566  |g|= 0.215555  2 KF 5 JK
macro= 1  E= -75.3803046796187  delta_E= -0.000190511  |g|= 0.0865961  2 KF 5 JK
macro= 2  E= -75.3788357993509  delta_E= 0.00146888  |g|= 0.0600741  2 KF 5 JK
macro= 3  E= -75.3801385687913  delta_E= -0.00130277  |g|= 0.104304  2 KF 5 JK
macro= 4  E= -75.3787111106382  delta_E= 0.00142746  |g|= 0.0596856  2 KF 5 JK
macro= 5  E= -75.3801493765934  delta_E= -0.00143827  |g|= 0.10525  2 KF 5 JK
macro= 6  E= -75.3788399583467  delta_E= 0.00130942  |g|= 0.0604785  2 KF 5 JK
macro= 7  E= -75.3802016414769  delta_E= -0.00136168  |g|= 0.103522  2 KF 5 JK
macro= 8  E= -75.3787878856894  delta_E= 0.00141376  |g|= 0.0603506  2 KF 5 JK
macro= 9  E= -75.380209727105  delta_E= -0.00142184  |g|= 0.104732  2 KF 5 JK
macro= 10  E= -75.3787623813136  delta_E= 0.00144735  |g|= 0.0601358  2 KF 5 JK
macro= 11  E= -75.3802170558312  delta_E= -0.00145467  |g|= 0.105247  2 KF 5 JK
macro= 12  E= -75.3787319950334  delta_E= 0.00148506  |g|= 0.0599502  2 KF 5 JK
macro= 13  E= -75.3802239939691  delta_E= -0.001492  |g|= 0.10579  2 KF 5 JK
macro= 14  E= -75.3787045283592  delta_E= 0.00151947  |g|= 0.0597738  2 KF 5 JK
macro= 15  E= -75.3802312406075  delta_E= -0.00152671  |g|= 0.106263  2 KF 5 JK
macro= 16  E= -75.3786759822642  delta_E= 0.00155526  |g|= 0.0595808  2 KF 5 JK
macro= 17  E= -75.3802383995066  delta_E= -0.00156242  |g|= 0.106739  2 KF 5 JK
macro= 18  E= -75.3786481315893  delta_E= 0.00159027  |g|= 0.0593845  2 KF 5 JK
macro= 19  E= -75.3802456522256  delta_E= -0.00159752  |g|= 0.107196  2 KF 5 JK
macro= 20  E= -75.3786203824363  delta_E= 0.00162527  |g|= 0.0591813  2 KF 5 JK
macro= 21  E= -75.3802529176956  delta_E= -0.00163254  |g|= 0.107645  2 KF 5 JK
macro= 22  E= -75.3785930078515  delta_E= 0.00165991  |g|= 0.0589728  2 KF 5 JK
macro= 23  E= -75.3802602107629  delta_E= -0.0016672  |g|= 0.108083  2 KF 5 JK
macro= 24  E= -75.3785659617735  delta_E= 0.00169425  |g|= 0.0587589  2 KF 5 JK
macro= 25  E= -75.3802675098992  delta_E= -0.00170155  |g|= 0.10851  2 KF 5 JK
macro= 26  E= -75.3785393104485  delta_E= 0.0017282  |g|= 0.0585401  2 KF 5 JK
macro= 27  E= -75.3802748067163  delta_E= -0.0017355  |g|= 0.108927  2 KF 5 JK
macro= 28  E= -75.3785130750555  delta_E= 0.00176173  |g|= 0.0583167  2 KF 5 JK
macro= 29  E= -75.3802820877395  delta_E= -0.00176901  |g|= 0.109332  2 KF 5 JK
macro= 30  E= -75.3784872892066  delta_E= 0.0017948  |g|= 0.058089  2 KF 5 JK
macro= 31  E= -75.3802893413585  delta_E= -0.00180205  |g|= 0.109726  2 KF 5 JK
macro= 32  E= -75.3784619779377  delta_E= 0.00182736  |g|= 0.0578576  2 KF 5 JK
macro= 33  E= -75.3802965553961  delta_E= -0.00183458  |g|= 0.110108  2 KF 5 JK
macro= 34  E= -75.3784371653015  delta_E= 0.00185939  |g|= 0.0576229  2 KF 5 JK
macro= 35  E= -75.3803037181486  delta_E= -0.00186655  |g|= 0.110479  2 KF 5 JK
macro= 36  E= -75.3784128716303  delta_E= 0.00189085  |g|= 0.0573853  2 KF 5 JK
macro= 37  E= -75.3803108181421  delta_E= -0.00189795  |g|= 0.110839  2 KF 5 JK
macro= 38  E= -75.3783891145634  delta_E= 0.0019217  |g|= 0.0571453  2 KF 5 JK
macro= 39  E= -75.380317844351  delta_E= -0.00192873  |g|= 0.111187  2 KF 5 JK
macro= 40  E= -75.3783659087602  delta_E= 0.00195194  |g|= 0.0569035  2 KF 5 JK
macro= 41  E= -75.3778853722438  delta_E= 0.000480537  |g|= 0.111524  2 KF 5 JK
macro= 42  E= -75.3795555196831  delta_E= -0.00167015  |g|= 0.104134  2 KF 5 JK
macro= 43  E= -75.377772591022  delta_E= 0.00178293  |g|= 0.0936318  2 KF 5 JK
macro= 44  E= -75.379378402753  delta_E= -0.00160581  |g|= 0.105193  2 KF 5 JK
macro= 45  E= -75.3776912592935  delta_E= 0.00168714  |g|= 0.0980508  2 KF 5 JK
macro= 46  E= -75.3793861905944  delta_E= -0.00169493  |g|= 0.106203  2 KF 5 JK
macro= 47  E= -75.3776731717696  delta_E= 0.00171302  |g|= 0.0981418  2 KF 5 JK
macro= 48  E= -75.3793616252697  delta_E= -0.00168845  |g|= 0.106302  2 KF 5 JK
macro= 49  E= -75.3776297555454  delta_E= 0.00173187  |g|= 0.0987799  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3776297555454  |g|= 0.0987799  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3776297555454

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpl5qdtn6n
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpl5qdtn6n
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.27790107972544  LUMO (A1) = 0.0258134919079861
Initial guess E= -75.3806682437405  |g|= 0.0831888
macro= 0  E= -75.3818620388219  delta_E= -0.0011938  |g|= 0.0831888  2 KF 5 JK
macro= 1  E= -75.3818843421587  delta_E= -2.23033e-05  |g|= 0.0227138  2 KF 5 JK
macro= 2  E= -75.3817081196423  delta_E= 0.000176223  |g|= 0.0158811  2 KF 5 JK
macro= 3  E= -75.3818899791053  delta_E= -0.000181859  |g|= 0.0330897  2 KF 5 JK
macro= 4  E= -75.3817438759724  delta_E= 0.000146103  |g|= 0.0114994  2 KF 5 JK
macro= 5  E= -75.3818525049653  delta_E= -0.000108629  |g|= 0.030433  2 KF 5 JK
macro= 6  E= -75.3818130104405  delta_E= 3.94945e-05  |g|= 0.0180655  2 KF 5 JK
macro= 7  E= -75.3818799504753  delta_E= -6.694e-05  |g|= 0.0247757  2 KF 5 JK
macro= 8  E= -75.3817597881444  delta_E= 0.000120162  |g|= 0.0132525  2 KF 5 JK
macro= 9  E= -75.3818701968226  delta_E= -0.000110409  |g|= 0.0304122  2 KF 5 JK
macro= 10  E= -75.381801215378  delta_E= 6.89814e-05  |g|= 0.0147229  2 KF 5 JK
macro= 11  E= -75.3818533127554  delta_E= -5.20974e-05  |g|= 0.0273462  2 KF 5 JK
macro= 12  E= -75.3817668849713  delta_E= 8.64278e-05  |g|= 0.0162515  2 KF 5 JK
macro= 13  E= -75.3818265588661  delta_E= -5.96739e-05  |g|= 0.0291364  2 KF 5 JK
macro= 14  E= -75.3817722899185  delta_E= 5.42689e-05  |g|= 0.0197877  2 KF 5 JK
macro= 15  E= -75.3818135312385  delta_E= -4.12413e-05  |g|= 0.0295976  2 KF 5 JK
macro= 16  E= -75.3817678179778  delta_E= 4.57133e-05  |g|= 0.0204779  2 KF 5 JK
macro= 17  E= -75.3818083771034  delta_E= -4.05591e-05  |g|= 0.0298394  2 KF 5 JK
macro= 18  E= -75.3817717758743  delta_E= 3.66012e-05  |g|= 0.0210251  2 KF 5 JK
macro= 19  E= -75.3818079223418  delta_E= -3.61465e-05  |g|= 0.0297846  2 KF 5 JK
macro= 20  E= -75.3817685084047  delta_E= 3.94139e-05  |g|= 0.0208733  2 KF 5 JK
macro= 21  E= -75.3818073159953  delta_E= -3.88076e-05  |g|= 0.0299222  2 KF 5 JK
macro= 22  E= -75.3817708135484  delta_E= 3.65024e-05  |g|= 0.0210029  2 KF 5 JK
macro= 23  E= -75.3818072457918  delta_E= -3.64322e-05  |g|= 0.02985  2 KF 5 JK
macro= 24  E= -75.3817686898363  delta_E= 3.8556e-05  |g|= 0.0209148  2 KF 5 JK
macro= 25  E= -75.3818067717851  delta_E= -3.80819e-05  |g|= 0.0299495  2 KF 5 JK
macro= 26  E= -75.381770047416  delta_E= 3.67244e-05  |g|= 0.020995  2 KF 5 JK
macro= 27  E= -75.3818065698923  delta_E= -3.65225e-05  |g|= 0.0299067  2 KF 5 JK
macro= 28  E= -75.3817686571571  delta_E= 3.79127e-05  |g|= 0.0209514  2 KF 5 JK
macro= 29  E= -75.3818061618447  delta_E= -3.75047e-05  |g|= 0.0299785  2 KF 5 JK
macro= 30  E= -75.3817694351203  delta_E= 3.67267e-05  |g|= 0.0210032  2 KF 5 JK
macro= 31  E= -75.3818058934145  delta_E= -3.64583e-05  |g|= 0.0299583  2 KF 5 JK
macro= 32  E= -75.3817684933506  delta_E= 3.74001e-05  |g|= 0.0209824  2 KF 5 JK
macro= 33  E= -75.3818055320318  delta_E= -3.70387e-05  |g|= 0.0300119  2 KF 5 JK
macro= 34  E= -75.3817689182673  delta_E= 3.66138e-05  |g|= 0.021017  2 KF 5 JK
macro= 35  E= -75.3818052347367  delta_E= -3.63165e-05  |g|= 0.0300061  2 KF 5 JK
macro= 36  E= -75.3817682523799  delta_E= 3.69824e-05  |g|= 0.0210086  2 KF 5 JK
macro= 37  E= -75.3818049027646  delta_E= -3.66504e-05  |g|= 0.0300479  2 KF 5 JK
macro= 38  E= -75.3817684600834  delta_E= 3.64427e-05  |g|= 0.0210329  2 KF 5 JK
macro= 39  E= -75.3818045956616  delta_E= -3.61356e-05  |g|= 0.030051  2 KF 5 JK
macro= 40  E= -75.3817679662908  delta_E= 3.66294e-05  |g|= 0.0210314  2 KF 5 JK
macro= 41  E= -75.3818042825566  delta_E= -3.63163e-05  |g|= 0.0300853  2 KF 5 JK
macro= 42  E= -75.3817680385284  delta_E= 3.6244e-05  |g|= 0.0210493  2 KF 5 JK
macro= 43  E= -75.3818039753331  delta_E= -3.59368e-05  |g|= 0.030094  2 KF 5 JK
macro= 44  E= -75.3817676538341  delta_E= 3.63215e-05  |g|= 0.0210517  2 KF 5 JK
macro= 45  E= -75.3818036752761  delta_E= -3.60214e-05  |g|= 0.0301233  2 KF 5 JK
macro= 46  E= -75.3817676404928  delta_E= 3.60348e-05  |g|= 0.0210655  2 KF 5 JK
macro= 47  E= -75.3818033728024  delta_E= -3.57323e-05  |g|= 0.0301354  2 KF 5 JK
macro= 48  E= -75.3817673261362  delta_E= 3.60467e-05  |g|= 0.0210699  2 KF 5 JK
macro= 49  E= -75.3818030827267  delta_E= -3.57566e-05  |g|= 0.0301613  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3818030827267  |g|= 0.0301613  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3818030827267
**** SCF Summaries ****
Total Energy =                         -75.381803082726677
Nuclear Repulsion Energy =               3.587642107932204
One-electron Energy =                 -111.203076002080195
Two-electron Energy =                   32.233630811421321
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    0    1    0    0    0    0
single occ                     0    1    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6458833699435  | -20.6628477191733  | -20.6289190207137  occ= 2
MO #2   (A1  #2 ) energy= -1.26236439883095  | -1.33585786255156  | -1.18887093511034  occ= 2
MO #3   (A1  #3 ) energy= -0.605681546452416 | -0.622870377662422 | -0.588492715242409 occ= 2
MO #4   (E1y #1 ) energy= -0.532909298996459 | -0.552138933242738 | -0.513679664750181 occ= 2
MO #5   (E1x #1 ) energy= -0.243193144780587 | -0.642137150790984 | 0.155750861229804  occ= 1
MO #6   (A1  #4 ) energy= 0.0266934187941307 | 0.02570306026876   | 0.0276837773195022 occ= 0
MO #7   (A1  #5 ) energy= 0.129880603094864  | 0.127459235789339  | 0.132301970400391  occ= 0
MO #8   (E1x #2 ) energy= 0.163032601436017  | 0.157047215516471  | 0.169017987355563  occ= 0
MO #9   (E1y #2 ) energy= 0.167396881322461  | 0.166559403100688  | 0.168234359544233  occ= 0
MO #10  (A1  #6 ) energy= 0.170972441361238  | 0.168896168953391  | 0.173048713769084  occ= 0
MO #11  (A1  #7 ) energy= 0.256540164865698  | 0.254035997175965  | 0.25904433255544   occ= 0
MO #12  (E1x #3 ) energy= 0.265197761215008  | 0.262956758579452  | 0.267438763850565  occ= 0
MO #13  (E1y #3 ) energy= 0.268598715680057  | 0.268304112432286  | 0.268893318927825  occ= 0
MO #14  (A1  #8 ) energy= 0.386025106243762  | 0.381844167687262  | 0.390206044800246  occ= 0
MO #15  (A1  #9 ) energy= 0.610787290841985  | 0.60721253838726   | 0.614362043296688  occ= 0
MO #16  (E2x #1 ) energy= 0.645713505990648  | 0.636701920360908  | 0.654725091620387  occ= 0
MO #17  (E2y #1 ) energy= 0.645713505990647  | 0.636701920360908  | 0.654725091620387  occ= 0
MO #18  (E1x #4 ) energy= 0.737567727129392  | 0.728257154027381  | 0.746878300231405  occ= 0
MO #19  (E1y #4 ) energy= 0.743634164349985  | 0.742373951195326  | 0.744894377504642  occ= 0
MO #20  (A1  #10) energy= 0.831828539430917  | 0.829020528711613  | 0.834636550150229  occ= 0
MO #21  (E1x #5 ) energy= 0.903599643204477  | 0.887920394459567  | 0.91927889194939   occ= 0
MO #22  (E1y #5 ) energy= 0.90649086648502   | 0.904398146504037  | 0.908583586466001  occ= 0
MO #23  (E2x #2 ) energy= 0.918813115439533  | 0.916982954851872  | 0.920643276027196  occ= 0
MO #24  (E2y #2 ) energy= 0.918813115439533  | 0.916982954851872  | 0.920643276027195  occ= 0
MO #25  (A1  #11) energy= 0.963518504801725  | 0.961015887574105  | 0.966021122029457  occ= 0
MO #26  (E1x #6 ) energy= 0.972361716124652  | 0.936616137203678  | 1.00810729504563   occ= 0
MO #27  (E1y #6 ) energy= 0.975842598100786  | 0.97160686777953   | 0.980078328422042  occ= 0
MO #28  (A1  #12) energy= 1.00493408682745   | 0.997856397799081  | 1.01201177585583   occ= 0
MO #29  (E1x #7 ) energy= 1.40476720126939   | 1.39923807860581   | 1.41029632393297   occ= 0
MO #30  (E1y #7 ) energy= 1.41416210407056   | 1.41322606773669   | 1.41509814040442   occ= 0
MO #31  (A1  #13) energy= 1.69915301573962   | 1.69262813179714   | 1.70567789968211   occ= 0
MO #32  (A1  #14) energy= 1.8168085188815    | 1.80450084628793   | 1.8291161914751    occ= 0
MO #33  (E3x #1 ) energy= 2.0604122825708    | 2.05022026511622   | 2.0706043000254    occ= 0
MO #34  (E3y #1 ) energy= 2.06041228257081   | 2.05022026511622   | 2.0706043000254    occ= 0
MO #35  (E2x #3 ) energy= 2.13381587030132   | 2.1023009432617    | 2.16533079734094   occ= 0
MO #36  (E2y #3 ) energy= 2.13381587030132   | 2.1023009432617    | 2.16533079734094   occ= 0
MO #37  (E1x #8 ) energy= 2.23877759061375   | 2.20889836496435   | 2.26865681626314   occ= 0
MO #38  (E1y #8 ) energy= 2.25373273538023   | 2.24921412041562   | 2.25825135034484   occ= 0
MO #39  (E2x #4 ) energy= 2.27458162171426   | 2.26246700934213   | 2.2866962340864    occ= 0
MO #40  (E2y #4 ) energy= 2.27458162171426   | 2.26246700934213   | 2.2866962340864    occ= 0
MO #41  (A1  #15) energy= 2.38286991160551   | 2.37457200621978   | 2.39116781699124   occ= 0
MO #42  (E1x #9 ) energy= 2.67886977478633   | 2.66743363759905   | 2.6903059119736    occ= 0
MO #43  (E1y #9 ) energy= 2.69899833014005   | 2.69661111189291   | 2.70138554838719   occ= 0
MO #44  (A1  #16) energy= 2.82473030940791   | 2.81406122552022   | 2.83539939329575   occ= 0
MO #45  (A1  #17) energy= 3.22145245449488   | 3.21858018882263   | 3.22432472016713   occ= 0
MO #46  (E2x #5 ) energy= 3.90080193873335   | 3.89946208127267   | 3.90214179619404   occ= 0
MO #47  (E2y #5 ) energy= 3.90080193873335   | 3.89946208127267   | 3.90214179619403   occ= 0
MO #48  (E1x #10) energy= 4.01483758061043   | 3.96355638350381   | 4.06611877771704   occ= 0
MO #49  (E1y #10) energy= 4.02634878471449   | 4.01944668971156   | 4.03325087971741   occ= 0
MO #50  (A1  #18) energy= 4.2017943219135    | 4.19655823834027   | 4.20703040548674   occ= 0
MO #51  (E1x #11) energy= 4.24807277348779   | 4.24530922981817   | 4.2508363171574    occ= 0
MO #52  (E1y #11) energy= 4.25454872247868   | 4.25407396453969   | 4.25502348041768   occ= 0
MO #53  (E1x #12) energy= 4.73262613412058   | 4.71064016079983   | 4.75461210744131   occ= 0
MO #54  (E1y #12) energy= 4.74869688511333   | 4.74504956185716   | 4.7523442083695    occ= 0
MO #55  (A1  #19) energy= 4.78064541900127   | 4.77755326865365   | 4.78373756934893   occ= 0
MO #56  (A1  #20) energy= 6.19853954092141   | 6.18842851079082   | 6.2086505710521    occ= 0
MO #57  (E3x #2 ) energy= 6.4631559143624    | 6.43811240759571   | 6.4881994211291    occ= 0
MO #58  (E3y #2 ) energy= 6.4631559143624    | 6.43811240759571   | 6.4881994211291    occ= 0
MO #59  (E2x #6 ) energy= 6.55717037721755   | 6.53920346091031   | 6.57513729352479   occ= 0
MO #60  (E2y #6 ) energy= 6.55717037721754   | 6.5392034609103    | 6.57513729352478   occ= 0
MO #61  (E1x #13) energy= 6.80714555784615   | 6.786208921782     | 6.8280821939103    occ= 0
MO #62  (E1y #13) energy= 6.84304773189901   | 6.83829120922138   | 6.84780425457662   occ= 0
MO #63  (E2x #7 ) energy= 7.00378632907613   | 6.96187309115154   | 7.04569956700072   occ= 0
MO #64  (E2y #7 ) energy= 7.00378632907614   | 6.96187309115155   | 7.04569956700073   occ= 0
MO #65  (A1  #21) energy= 7.16522572811511   | 7.15528892741496   | 7.17516252881525   occ= 0
MO #66  (E1x #14) energy= 7.17481727345615   | 7.13516146425781   | 7.21447308265451   occ= 0
MO #67  (E1y #14) energy= 7.20555817077665   | 7.19896355679315   | 7.21215278476014   occ= 0
MO #68  (A1  #22) energy= 7.58159973382312   | 7.56892698833024   | 7.59427247931603   occ= 0
MO #69  (A1  #23) energy= 10.3607145288357   | 10.3444624584938   | 10.3769665991778   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.89134
pop of  0 O 3s        0.00231
pop of  0 O 4s        0.00074
pop of  0 O 5s        0.00021
pop of  0 O 2px       0.99753
pop of  0 O 2py       1.99356
pop of  0 O 2pz       1.43136
pop of  0 O 3px       0.00022
pop of  0 O 3py       0.00141
pop of  0 O 3pz       0.00016
pop of  0 O 4px       0.00077
pop of  0 O 4py       0.00056
pop of  0 O 4pz       0.00151
pop of  0 O 5px       0.00013
pop of  0 O 5py       0.00029
pop of  0 O 5pz       0.00009
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00106
pop of  0 O 3dz^2     0.00445
pop of  0 O 3dxz      0.00053
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00028
pop of  0 O 4dz^2     0.00036
pop of  0 O 4dxz      0.00013
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00005
pop of  0 O 5dz^2     0.00006
pop of  0 O 5dxz      0.00002
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00013
pop of  0 O 4f 0      0.00035
pop of  0 O 4f 1      0.00000
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00005
pop of  0 O 5f 0      0.00006
pop of  0 O 5f 1      0.00001
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.65799
pop of  1 H 2s        0.00587
pop of  1 H 3s        0.00109
pop of  1 H 4s        0.00014
pop of  1 H 2px       0.00024
pop of  1 H 2py       0.00237
pop of  1 H 2pz       0.00123
pop of  1 H 3px       0.00024
pop of  1 H 3py       0.00002
pop of  1 H 3pz       0.00061
pop of  1 H 4px       0.00011
pop of  1 H 4py       0.00002
pop of  1 H 4pz       0.00001
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00018
pop of  1 H 3dz^2     0.00006
pop of  1 H 3dxz      0.00005
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00001
pop of  1 H 4dz^2     0.00000
pop of  1 H 4dxz      0.00000
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.32974
charge of  1H =      0.32974
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.91812
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.18/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.18)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:55:34 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       128.83

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp952__uqh
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp952__uqh
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.243193144780586  LUMO = 0.261463620987835
Initial guess E= -75.3818116361438  |g|= 0.000360602
macro= 0  E= -75.3818117018765  delta_E= -6.57326e-08  |g|= 0.000360602  1 KF 3 JK
macro= 1  E= -75.3818117018765  delta_E= -2.84217e-14  |g|= 8.63583e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3818117018765  |g|= 8.63583e-06  total 3 KF 8 JK
converged SCF energy = -75.3818117018765
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.18/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.18)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:55:35 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       133.76

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp78g7oimi
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp78g7oimi
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.243193181734365  LUMO = 0.261463639189802
Initial guess E= -75.3818116361398  |g|= 0.000360634
macro= 0  E= -75.3818117018764  delta_E= -6.57367e-08  |g|= 0.000360634  1 KF 3 JK
macro= 1  E= -75.3818117018764  delta_E= 0  |g|= 1.54811e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3818117018764  |g|= 1.54811e-08  total 3 KF 8 JK
converged SCF energy = -75.3818117018764
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.18/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.18)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:55:37 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       139.79

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpiiz1btl_
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpiiz1btl_
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.243666906589503  LUMO = 0.0266868330561231
Initial guess E= -75.3825111697112  |g|= 0.0106779
macro= 0  E= -75.3825413525238  delta_E= -3.01828e-05  |g|= 0.000446417  2 KF 7 JK
macro= 1  E= -75.3825413525239  delta_E= -4.26326e-14  |g|= 1.10824e-05  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3825413525239  |g|= 1.10824e-05  total 4 KF 12 JK
converged SCF energy = -75.3825413525239
u+d contributions  -0.05838281404278224
uu+dd contributions  -0.08831193032785717
ud contributions  -0.18013792847782284
u+d contributions  -0.008459318080880487
uu+dd contributions  -0.038284433745670754
ud contributions  -0.1299119098343876
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.18/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.18)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:55:41 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       152.72

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp_v18_3wo
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp_v18_3wo
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.242847769389285  LUMO = 0.261559636679594
Initial guess E= -75.3818115958605  |g|= 0.000398344
macro= 0  E= -75.3818117018765  delta_E= -1.06016e-07  |g|= 0.000398344  1 KF 2 JK
macro= 1  E= -75.3818117018765  delta_E= 0  |g|= 4.18339e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3818117018765  |g|= 4.18339e-08  total 3 KF 7 JK
converged SCF energy = -75.3818117018765
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.18/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.18)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:55:42 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       158.06

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmptjk8ecij
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmptjk8ecij
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.243319650823848  LUMO = 0.0266861889904303
Initial guess E= -75.3824654571877  |g|= 0.00765929
macro= 0  E= -75.3824875086022  delta_E= -2.20514e-05  |g|= 0.000351754  2 KF 7 JK
macro= 1  E= -75.3824875086022  delta_E= -1.42109e-14  |g|= 6.83635e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3824875086022  |g|= 6.83635e-06  total 4 KF 12 JK
converged SCF energy = -75.3824875086022
u+d contributions  -0.02536419997737847
uu+dd contributions  -0.0475704310697864
ud contributions  -0.1043858987030062
u+d contributions  -0.006087380304166451
uu+dd contributions  -0.028260671180406028
ud contributions  -0.08506822997634216
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-75.013308, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.228784, i_min=0
In the tapering subroutine, i=2, E(i)=-75.381812, i_min=1
In the tapering subroutine, i=3, E(i)=-75.109092, i_min=2
In the tapering subroutine, i=4, E(i)=-75.377287, i_min=2
In the tapering subroutine, i=5, E(i)=-75.097506, i_min=2
In the tapering subroutine, i=6, E(i)=-74.831121, i_min=2
In the tapering subroutine, i=7, E(i)=-75.129215, i_min=2
In the tapering subroutine, i=8, E(i)=-75.228784, i_min=2
In the tapering subroutine, i=9, E(i)=-75.224556, i_min=2
In the tapering subroutine, i=10, E(i)=-75.131455, i_min=2
In the tapering subroutine, i=11, E(i)=-75.381812, i_min=2
In the tapering subroutine, i=12, E(i)=-75.119157, i_min=2
In the tapering subroutine, i=13, E(i)=-75.377287, i_min=2
In the tapering subroutine, i=14, E(i)=-75.129215, i_min=2
In the tapering subroutine, i=15, E(i)=-74.869581, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.006087421839714813
uu+dd contributions  -0.028260710167828485
ud contributions  -0.0850347208255295
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.006087326768611203
uu+dd contributions  -0.0282605863141745
ud contributions  -0.08503485593591036
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.006087326768611203
uu+dd contributions  -0.0282605863141745
ud contributions  -0.08503485593591036
