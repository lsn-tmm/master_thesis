#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.84/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.84)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:50:18 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.840000000000 AA    0.000000000000   0.000000000000   1.587369944635 Bohr

nuclear repulsion = 5.03978296114286
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         5.44
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgtewkk27
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgtewkk27
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.454869516253695  LUMO (A1) = 0.0295434847755473
Initial guess E= -75.3889630816455  |g|= 0.207718
macro= 0  E= -75.3970282895325  delta_E= -0.00806521  |g|= 0.207718  2 KF 5 JK
macro= 1  E= -75.3979081288319  delta_E= -0.000879839  |g|= 0.0977975  2 KF 5 JK
macro= 2  E= -75.3963315069657  delta_E= 0.00157662  |g|= 0.0597978  2 KF 5 JK
macro= 3  E= -75.3978724182864  delta_E= -0.00154091  |g|= 0.108418  2 KF 5 JK
macro= 4  E= -75.3967732757557  delta_E= 0.00109914  |g|= 0.0606886  2 KF 5 JK
macro= 5  E= -75.3978782933324  delta_E= -0.00110502  |g|= 0.101405  2 KF 5 JK
macro= 6  E= -75.3966406432653  delta_E= 0.00123765  |g|= 0.0596086  2 KF 5 JK
macro= 7  E= -75.3978814734193  delta_E= -0.00124083  |g|= 0.103571  2 KF 5 JK
macro= 8  E= -75.3966709610864  delta_E= 0.00121051  |g|= 0.0600645  2 KF 5 JK
macro= 9  E= -75.3978848624444  delta_E= -0.0012139  |g|= 0.103121  2 KF 5 JK
macro= 10  E= -75.396637998948  delta_E= 0.00124686  |g|= 0.0598808  2 KF 5 JK
macro= 11  E= -75.397888036819  delta_E= -0.00125004  |g|= 0.103696  2 KF 5 JK
macro= 12  E= -75.3966287366753  delta_E= 0.0012593  |g|= 0.059897  2 KF 5 JK
macro= 13  E= -75.3978912546594  delta_E= -0.00126252  |g|= 0.10389  2 KF 5 JK
macro= 14  E= -75.3966105803645  delta_E= 0.00128067  |g|= 0.0598147  2 KF 5 JK
macro= 15  E= -75.3978944851011  delta_E= -0.0012839  |g|= 0.104223  2 KF 5 JK
macro= 16  E= -75.3965959342978  delta_E= 0.00129855  |g|= 0.0597617  2 KF 5 JK
macro= 17  E= -75.3978977015164  delta_E= -0.00130177  |g|= 0.104496  2 KF 5 JK
macro= 18  E= -75.396580093844  delta_E= 0.00131761  |g|= 0.0596928  2 KF 5 JK
macro= 19  E= -75.3979009307391  delta_E= -0.00132084  |g|= 0.104786  2 KF 5 JK
macro= 20  E= -75.3965648663703  delta_E= 0.00133606  |g|= 0.0596277  2 KF 5 JK
macro= 21  E= -75.3979041527833  delta_E= -0.00133929  |g|= 0.105062  2 KF 5 JK
macro= 22  E= -75.3965495750647  delta_E= 0.00135458  |g|= 0.0595593  2 KF 5 JK
macro= 23  E= -75.3979073765474  delta_E= -0.0013578  |g|= 0.105337  2 KF 5 JK
macro= 24  E= -75.3965344917855  delta_E= 0.00137288  |g|= 0.0594908  2 KF 5 JK
macro= 25  E= -75.3979105950406  delta_E= -0.0013761  |g|= 0.105605  2 KF 5 JK
macro= 26  E= -75.3965195245758  delta_E= 0.00139107  |g|= 0.059421  2 KF 5 JK
macro= 27  E= -75.397913809314  delta_E= -0.00139428  |g|= 0.105868  2 KF 5 JK
macro= 28  E= -75.396504720107  delta_E= 0.00140909  |g|= 0.0593504  2 KF 5 JK
macro= 29  E= -75.3979170164792  delta_E= -0.0014123  |g|= 0.106126  2 KF 5 JK
macro= 30  E= -75.3964900709992  delta_E= 0.00142695  |g|= 0.0592789  2 KF 5 JK
macro= 31  E= -75.3979202155162  delta_E= -0.00143014  |g|= 0.106379  2 KF 5 JK
macro= 32  E= -75.3964755898154  delta_E= 0.00144463  |g|= 0.0592066  2 KF 5 JK
macro= 33  E= -75.3979234045484  delta_E= -0.00144781  |g|= 0.106626  2 KF 5 JK
macro= 34  E= -75.3964612806163  delta_E= 0.00146212  |g|= 0.0591335  2 KF 5 JK
macro= 35  E= -75.3979265821127  delta_E= -0.0014653  |g|= 0.106868  2 KF 5 JK
macro= 36  E= -75.3964471499331  delta_E= 0.00147943  |g|= 0.0590597  2 KF 5 JK
macro= 37  E= -75.3979297465865  delta_E= -0.0014826  |g|= 0.107106  2 KF 5 JK
macro= 38  E= -75.3964332025537  delta_E= 0.00149654  |g|= 0.0589852  2 KF 5 JK
macro= 39  E= -75.3979328964548  delta_E= -0.00149969  |g|= 0.107337  2 KF 5 JK
macro= 40  E= -75.3964194431755  delta_E= 0.00151345  |g|= 0.0589101  2 KF 5 JK
macro= 41  E= -75.3979360301964  delta_E= -0.00151659  |g|= 0.107564  2 KF 5 JK
macro= 42  E= -75.3964058757883  delta_E= 0.00153015  |g|= 0.0588343  2 KF 5 JK
macro= 43  E= -75.3979391463409  delta_E= -0.00153327  |g|= 0.107786  2 KF 5 JK
macro= 44  E= -75.3963925039419  delta_E= 0.00154664  |g|= 0.058758  2 KF 5 JK
macro= 45  E= -75.3979422434506  delta_E= -0.00154974  |g|= 0.108003  2 KF 5 JK
macro= 46  E= -75.3963793306676  delta_E= 0.00156291  |g|= 0.0586811  2 KF 5 JK
macro= 47  E= -75.3979453201324  delta_E= -0.00156599  |g|= 0.108214  2 KF 5 JK
macro= 48  E= -75.3963663585407  delta_E= 0.00157896  |g|= 0.0586038  2 KF 5 JK
macro= 49  E= -75.3979483750387  delta_E= -0.00158202  |g|= 0.108421  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3979483750387  |g|= 0.108421  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3979483750387

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgtewkk27
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgtewkk27
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.271864678899503  LUMO (A1) = 0.0315147280177984
Initial guess E= -75.399337714701  |g|= 0.0381986
macro= 0  E= -75.3994989265078  delta_E= -0.000161212  |g|= 0.0381986  2 KF 5 JK
macro= 1  E= -75.399485136331  delta_E= 1.37902e-05  |g|= 0.0194922  2 KF 5 JK
macro= 2  E= -75.3994910920567  delta_E= -5.95573e-06  |g|= 0.0282697  2 KF 5 JK
macro= 3  E= -75.399483186343  delta_E= 7.90571e-06  |g|= 0.0204392  2 KF 5 JK
macro= 4  E= -75.3994873275116  delta_E= -4.14117e-06  |g|= 0.0281274  2 KF 5 JK
macro= 5  E= -75.399484266712  delta_E= 3.0608e-06  |g|= 0.0208666  2 KF 5 JK
macro= 6  E= -75.3994872591007  delta_E= -2.99239e-06  |g|= 0.0280096  2 KF 5 JK
macro= 7  E= -75.3994838766645  delta_E= 3.38244e-06  |g|= 0.0209005  2 KF 5 JK
macro= 8  E= -75.3994873444315  delta_E= -3.46777e-06  |g|= 0.0280199  2 KF 5 JK
macro= 9  E= -75.399483743962  delta_E= 3.60047e-06  |g|= 0.0209058  2 KF 5 JK
macro= 10  E= -75.3994878362004  delta_E= -4.09224e-06  |g|= 0.0280276  2 KF 5 JK
macro= 11  E= -75.3994835568985  delta_E= 4.2793e-06  |g|= 0.0208901  2 KF 5 JK
macro= 12  E= -75.3994887000708  delta_E= -5.14317e-06  |g|= 0.0280529  2 KF 5 JK
macro= 13  E= -75.3994842180698  delta_E= 4.482e-06  |g|= 0.020893  2 KF 5 JK
macro= 14  E= -75.3994886214806  delta_E= -4.40341e-06  |g|= 0.0280109  2 KF 5 JK
macro= 15  E= -75.3994851916787  delta_E= 3.4298e-06  |g|= 0.0210005  2 KF 5 JK
macro= 16  E= -75.3994880965139  delta_E= -2.90484e-06  |g|= 0.0279191  2 KF 5 JK
macro= 17  E= -75.3994853028645  delta_E= 2.79365e-06  |g|= 0.0210987  2 KF 5 JK
macro= 18  E= -75.3994879084669  delta_E= -2.6056e-06  |g|= 0.0278879  2 KF 5 JK
macro= 19  E= -75.3994852914508  delta_E= 2.61702e-06  |g|= 0.021137  2 KF 5 JK
macro= 20  E= -75.3994878416807  delta_E= -2.55023e-06  |g|= 0.027877  2 KF 5 JK
macro= 21  E= -75.3994852449717  delta_E= 2.59671e-06  |g|= 0.0211516  2 KF 5 JK
macro= 22  E= -75.3994877890278  delta_E= -2.54406e-06  |g|= 0.0278761  2 KF 5 JK
macro= 23  E= -75.3994852113241  delta_E= 2.5777e-06  |g|= 0.0211596  2 KF 5 JK
macro= 24  E= -75.3994877330173  delta_E= -2.52169e-06  |g|= 0.0278775  2 KF 5 JK
macro= 25  E= -75.3994851773422  delta_E= 2.55568e-06  |g|= 0.0211654  2 KF 5 JK
macro= 26  E= -75.3994876767426  delta_E= -2.4994e-06  |g|= 0.0278801  2 KF 5 JK
macro= 27  E= -75.3994851442025  delta_E= 2.53254e-06  |g|= 0.02117  2 KF 5 JK
macro= 28  E= -75.3994876205549  delta_E= -2.47635e-06  |g|= 0.0278832  2 KF 5 JK
macro= 29  E= -75.3994851109522  delta_E= 2.5096e-06  |g|= 0.0211741  2 KF 5 JK
macro= 30  E= -75.3994875645419  delta_E= -2.45359e-06  |g|= 0.0278865  2 KF 5 JK
macro= 31  E= -75.399485077808  delta_E= 2.48673e-06  |g|= 0.021178  2 KF 5 JK
macro= 32  E= -75.3994875086233  delta_E= -2.43082e-06  |g|= 0.0278899  2 KF 5 JK
macro= 33  E= -75.3994850446708  delta_E= 2.46395e-06  |g|= 0.0211818  2 KF 5 JK
macro= 34  E= -75.3994874527971  delta_E= -2.40813e-06  |g|= 0.0278934  2 KF 5 JK
macro= 35  E= -75.3994850115443  delta_E= 2.44125e-06  |g|= 0.0211855  2 KF 5 JK
macro= 36  E= -75.3994873970604  delta_E= -2.38552e-06  |g|= 0.0278968  2 KF 5 JK
macro= 37  E= -75.3994849784139  delta_E= 2.41865e-06  |g|= 0.0211892  2 KF 5 JK
macro= 38  E= -75.3994873414129  delta_E= -2.363e-06  |g|= 0.0279003  2 KF 5 JK
macro= 39  E= -75.3994849452788  delta_E= 2.39613e-06  |g|= 0.0211929  2 KF 5 JK
macro= 40  E= -75.399487285855  delta_E= -2.34058e-06  |g|= 0.0279038  2 KF 5 JK
macro= 41  E= -75.3994849121369  delta_E= 2.37372e-06  |g|= 0.0211966  2 KF 5 JK
macro= 42  E= -75.3994872303861  delta_E= -2.31825e-06  |g|= 0.0279073  2 KF 5 JK
macro= 43  E= -75.3994848789884  delta_E= 2.3514e-06  |g|= 0.0212002  2 KF 5 JK
macro= 44  E= -75.3994871750062  delta_E= -2.29602e-06  |g|= 0.0279108  2 KF 5 JK
macro= 45  E= -75.3994848458324  delta_E= 2.32917e-06  |g|= 0.0212039  2 KF 5 JK
macro= 46  E= -75.3994871197156  delta_E= -2.27388e-06  |g|= 0.0279143  2 KF 5 JK
macro= 47  E= -75.3994848126694  delta_E= 2.30705e-06  |g|= 0.0212075  2 KF 5 JK
macro= 48  E= -75.399487064514  delta_E= -2.25184e-06  |g|= 0.0279178  2 KF 5 JK
macro= 49  E= -75.3994847794993  delta_E= 2.28501e-06  |g|= 0.0212112  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3994847794993  |g|= 0.0212112  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3994847794993
**** SCF Summaries ****
Total Energy =                         -75.399484779499346
Nuclear Repulsion Energy =               5.039782961142858
One-electron Energy =                 -113.858926299628905
Two-electron Energy =                   33.419658558986690
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    1    0    0    0    0    0
single occ                     0    0    1    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.596402473008   | -20.6133856741258  | -20.5794192718903  occ= 2
MO #2   (A1  #2 ) energy= -1.35507234493201  | -1.42315041838644  | -1.28699427147757  occ= 2
MO #3   (A1  #3 ) energy= -0.693033969325187 | -0.716643238625877 | -0.669424700024496 occ= 2
MO #4   (E1x #1 ) energy= -0.540946088351048 | -0.560221988044922 | -0.521670188657174 occ= 2
MO #5   (E1y #1 ) energy= -0.249086703460206 | -0.648699430422845 | 0.150526023502437  occ= 1
MO #6   (A1  #4 ) energy= 0.0315793175590235 | 0.0310866157997757 | 0.0320720193182695 occ= 0
MO #7   (A1  #5 ) energy= 0.137691847065848  | 0.137032535167925  | 0.138351158963762  occ= 0
MO #8   (E1y #2 ) energy= 0.155641496122633  | 0.150249983180604  | 0.161033009064662  occ= 0
MO #9   (E1x #2 ) energy= 0.159203518780545  | 0.158512783614446  | 0.159894253946644  occ= 0
MO #10  (A1  #6 ) energy= 0.189870151274753  | 0.187732563532767  | 0.192007739016744  occ= 0
MO #11  (A1  #7 ) energy= 0.270016721893292  | 0.26846585976528   | 0.271567584021316  occ= 0
MO #12  (E1y #3 ) energy= 0.278493448822842  | 0.274678779067017  | 0.282308118578665  occ= 0
MO #13  (E1x #3 ) energy= 0.281900550140903  | 0.281422945387575  | 0.28237815489423   occ= 0
MO #14  (A1  #8 ) energy= 0.455369109173464  | 0.451703876382287  | 0.459034341964658  occ= 0
MO #15  (E2x #1 ) energy= 0.648670506803548  | 0.639096694034823  | 0.658244319572273  occ= 0
MO #16  (E2y #1 ) energy= 0.648670506803548  | 0.639096694034822  | 0.658244319572273  occ= 0
MO #17  (A1  #9 ) energy= 0.66956059046507   | 0.663209323570908  | 0.675911857359222  occ= 0
MO #18  (E1y #4 ) energy= 0.725486019891364  | 0.716068289578195  | 0.734903750204532  occ= 0
MO #19  (E1x #4 ) energy= 0.731620812317836  | 0.730341524543343  | 0.732900100092328  occ= 0
MO #20  (E1y #5 ) energy= 0.868506692279041  | 0.843348499156317  | 0.893664885401761  occ= 0
MO #21  (E1x #5 ) energy= 0.870674872267451  | 0.867672693679269  | 0.873677050855634  occ= 0
MO #22  (A1  #10) energy= 0.882215845701785  | 0.87677563472968   | 0.887656056674069  occ= 0
MO #23  (A1  #11) energy= 0.923957034692619  | 0.922707437944369  | 0.925206631440855  occ= 0
MO #24  (E2x #2 ) energy= 0.949363550084447  | 0.947906669916003  | 0.950820430252895  occ= 0
MO #25  (E2y #2 ) energy= 0.949363550084453  | 0.947906669916009  | 0.950820430252899  occ= 0
MO #26  (E1y #6 ) energy= 1.01375593170222   | 0.994025713169778  | 1.03348615023465   occ= 0
MO #27  (E1x #6 ) energy= 1.0228648173642    | 1.02019784902686   | 1.02553178570155   occ= 0
MO #28  (A1  #12) energy= 1.08020313075266   | 1.0738860843412    | 1.08652017716406   occ= 0
MO #29  (E1y #7 ) energy= 1.58140488079091   | 1.56281202428752   | 1.59999773729432   occ= 0
MO #30  (E1x #7 ) energy= 1.58897101760735   | 1.58649163186293   | 1.59145040335177   occ= 0
MO #31  (A1  #13) energy= 1.6599899773257    | 1.64998798789131   | 1.66999196676029   occ= 0
MO #32  (E3x #1 ) energy= 2.04872239621273   | 2.03866986810149   | 2.05877492432397   occ= 0
MO #33  (E3y #1 ) energy= 2.04872239621273   | 2.03866986810149   | 2.05877492432397   occ= 0
MO #34  (E2x #3 ) energy= 2.13622200085211   | 2.10043459666216   | 2.17200940504206   occ= 0
MO #35  (E2y #3 ) energy= 2.13622200085211   | 2.10043459666216   | 2.17200940504206   occ= 0
MO #36  (A1  #14) energy= 2.16325777134488   | 2.15320620443687   | 2.17330933825292   occ= 0
MO #37  (E1y #8 ) energy= 2.3080229492637    | 2.29016237400088   | 2.32588352452652   occ= 0
MO #38  (E1x #8 ) energy= 2.32577560593301   | 2.32275737583406   | 2.32879383603197   occ= 0
MO #39  (E2x #4 ) energy= 2.36768098242997   | 2.35992131456857   | 2.37544065029137   occ= 0
MO #40  (E2y #4 ) energy= 2.36768098242997   | 2.35992131456857   | 2.37544065029137   occ= 0
MO #41  (A1  #15) energy= 2.37969820544033   | 2.37195675530855   | 2.3874396555724    occ= 0
MO #42  (A1  #16) energy= 2.6456494937941    | 2.63659538586874   | 2.65470360171942   occ= 0
MO #43  (E1y #9 ) energy= 2.72994555184924   | 2.70384599503876   | 2.75604510865973   occ= 0
MO #44  (E1x #9 ) energy= 2.75148495657583   | 2.74698179798566   | 2.75598811516599   occ= 0
MO #45  (A1  #17) energy= 3.74743163327141   | 3.74206050204827   | 3.75280276449457   occ= 0
MO #46  (E2x #5 ) energy= 4.16164217610022   | 4.15788528787495   | 4.1653990643255    occ= 0
MO #47  (E2y #5 ) energy= 4.16164217610022   | 4.15788528787494   | 4.1653990643255    occ= 0
MO #48  (E1y #10) energy= 4.1701444349762    | 4.13737246565674   | 4.20291640429568   occ= 0
MO #49  (E1x #10) energy= 4.18154475263998   | 4.17696682113486   | 4.18612268414511   occ= 0
MO #50  (E1y #11) energy= 4.36496381162064   | 4.34080620893499   | 4.38912141430629   occ= 0
MO #51  (E1x #11) energy= 4.37644084135879   | 4.37318655578821   | 4.37969512692937   occ= 0
MO #52  (A1  #18) energy= 4.73300462662159   | 4.72714714480118   | 4.73886210844179   occ= 0
MO #53  (E1y #12) energy= 5.61977437589063   | 5.59994985531735   | 5.63959889646389   occ= 0
MO #54  (A1  #19) energy= 5.62915369450598   | 5.61589265338355   | 5.64241473562857   occ= 0
MO #55  (E1x #12) energy= 5.64695723449412   | 5.64297346528151   | 5.65094100370671   occ= 0
MO #56  (A1  #20) energy= 6.18567484903043   | 6.17467949283578   | 6.1966702052252    occ= 0
MO #57  (E3x #2 ) energy= 6.45654915547204   | 6.43154807435815   | 6.48155023658592   occ= 0
MO #58  (E3y #2 ) energy= 6.45654915547204   | 6.43154807435815   | 6.48155023658593   occ= 0
MO #59  (E2x #6 ) energy= 6.68182983808929   | 6.6632456739197    | 6.70041400225888   occ= 0
MO #60  (E2y #6 ) energy= 6.68182983808927   | 6.66324567391968   | 6.70041400225886   occ= 0
MO #61  (E2x #7 ) energy= 7.01165767807192   | 6.97053732146672   | 7.05277803467712   occ= 0
MO #62  (E2y #7 ) energy= 7.01165767807192   | 6.97053732146673   | 7.05277803467712   occ= 0
MO #63  (E1y #13) energy= 7.11347415841845   | 7.08097796276941   | 7.1459703540675    occ= 0
MO #64  (E1x #13) energy= 7.14594288380678   | 7.14023918078751   | 7.15164658682604   occ= 0
MO #65  (E1y #14) energy= 7.62516420063902   | 7.60035322422159   | 7.64997517705644   occ= 0
MO #66  (E1x #14) energy= 7.65819112083844   | 7.65317931051458   | 7.6632029311623    occ= 0
MO #67  (A1  #21) energy= 7.98606842608361   | 7.97584850287805   | 7.99628834928917   occ= 0
MO #68  (A1  #22) energy= 8.04566328658693   | 8.03876278471269   | 8.05256378846117   occ= 0
MO #69  (A1  #23) energy= 15.6237298825345   | 15.6111850532368   | 15.6362747118322   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.75600
pop of  0 O 3s        0.00659
pop of  0 O 4s        0.00159
pop of  0 O 5s        0.00010
pop of  0 O 2px       1.99199
pop of  0 O 2py       0.99668
pop of  0 O 2pz       1.59260
pop of  0 O 3px       0.00082
pop of  0 O 3py       0.00020
pop of  0 O 3pz       0.00375
pop of  0 O 4px       0.00044
pop of  0 O 4py       0.00041
pop of  0 O 4pz       0.00159
pop of  0 O 5px       0.00014
pop of  0 O 5py       0.00003
pop of  0 O 5pz       0.00021
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00121
pop of  0 O 3dz^2     0.01263
pop of  0 O 3dxz      0.00262
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00015
pop of  0 O 4dz^2     0.00057
pop of  0 O 4dxz      0.00038
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00001
pop of  0 O 5dz^2     0.00024
pop of  0 O 5dxz      0.00002
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00002
pop of  0 O 4f 0      0.00161
pop of  0 O 4f 1      0.00020
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00001
pop of  0 O 5f 0      0.00005
pop of  0 O 5f 1      0.00002
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.59279
pop of  1 H 2s        0.01730
pop of  1 H 3s        0.01008
pop of  1 H 4s        0.00055
pop of  1 H 2px       0.00329
pop of  1 H 2py       0.00065
pop of  1 H 2pz       0.00054
pop of  1 H 3px       0.00004
pop of  1 H 3py       0.00051
pop of  1 H 3pz       0.00007
pop of  1 H 4px       0.00000
pop of  1 H 4py       0.00005
pop of  1 H 4pz       0.00039
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00002
pop of  1 H 3dz^2     0.00050
pop of  1 H 3dxz      0.00002
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00006
pop of  1 H 4dz^2     0.00027
pop of  1 H 4dxz      0.00001
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.37285
charge of  1H =      0.37285
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.65752
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.84/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.84)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:50:48 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        81.38

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpn2gpiq6r
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpn2gpiq6r
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.249086703460206  LUMO = 0.554001550434854
Initial guess E= -75.3995004469449  |g|= 0.000943159
macro= 0  E= -75.399500821299  delta_E= -3.74354e-07  |g|= 0.000943159  1 KF 4 JK
macro= 1  E= -75.399500821299  delta_E= -1.42109e-14  |g|= 7.43795e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.399500821299  |g|= 7.43795e-08  total 3 KF 9 JK
converged SCF energy = -75.399500821299
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.84/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.84)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:50:50 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        86.25

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpx7kxo3_w
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpx7kxo3_w
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.249087567748146  LUMO = 0.554001845614027
Initial guess E= -75.3995004466236  |g|= 0.000943256
macro= 0  E= -75.399500821299  delta_E= -3.74675e-07  |g|= 0.000943256  1 KF 3 JK
macro= 1  E= -75.399500821299  delta_E= 1.42109e-14  |g|= 7.45263e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.399500821299  |g|= 7.45263e-08  total 3 KF 8 JK
converged SCF energy = -75.399500821299
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.84/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.84)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:50:53 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        91.69

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpb7jq2gt1
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpb7jq2gt1
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.249376587919215  LUMO = 0.0315733554009214
Initial guess E= -75.4001623005404  |g|= 0.0118737
macro= 0  E= -75.4001936898125  delta_E= -3.13893e-05  |g|= 0.000422006  2 KF 7 JK
macro= 1  E= -75.4001936898125  delta_E= -4.26326e-14  |g|= 7.75862e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4001936898125  |g|= 7.75862e-06  total 4 KF 12 JK
converged SCF energy = -75.4001936898125
u+d contributions  -0.05291179055027211
uu+dd contributions  -0.0848266876515252
ud contributions  -0.1832041665203337
u+d contributions  -0.007977040208029968
uu+dd contributions  -0.03979646335592488
ud contributions  -0.1380157231690774
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.84/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.84)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:50:58 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       101.33

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpa5wv9hz6
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpa5wv9hz6
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.249786405654863  LUMO = 0.553847889031705
Initial guess E= -75.399500368118  |g|= 0.000927508
macro= 0  E= -75.399500821299  delta_E= -4.53181e-07  |g|= 0.000927508  1 KF 2 JK
macro= 1  E= -75.399500821299  delta_E= 0  |g|= 1.46504e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.399500821299  |g|= 1.46504e-07  total 3 KF 7 JK
converged SCF energy = -75.399500821299
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.84/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.84)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:51:00 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       106.43

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpspxc9uh0
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpspxc9uh0
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.250074023172413  LUMO = 0.0315860973719535
Initial guess E= -75.4001202250196  |g|= 0.00781578
macro= 0  E= -75.4001389812123  delta_E= -1.87562e-05  |g|= 0.000304996  2 KF 7 JK
macro= 1  E= -75.4001389812123  delta_E= -2.84217e-14  |g|= 4.76064e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4001389812123  |g|= 4.76064e-06  total 4 KF 12 JK
converged SCF energy = -75.4001389812123
u+d contributions  -0.01906491695863482
uu+dd contributions  -0.04382484354751975
ud contributions  -0.10948581604073326
u+d contributions  -0.004140624161496982
uu+dd contributions  -0.028885512426574583
ud contributions  -0.09454278666143189
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.771558, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.222487, i_min=0
In the tapering subroutine, i=2, E(i)=-75.399501, i_min=1
In the tapering subroutine, i=3, E(i)=-74.832039, i_min=2
In the tapering subroutine, i=4, E(i)=-75.395090, i_min=2
In the tapering subroutine, i=5, E(i)=-74.820844, i_min=2
In the tapering subroutine, i=6, E(i)=-74.837898, i_min=2
In the tapering subroutine, i=7, E(i)=-74.873712, i_min=2
In the tapering subroutine, i=8, E(i)=-75.222487, i_min=2
In the tapering subroutine, i=9, E(i)=-75.250408, i_min=2
In the tapering subroutine, i=10, E(i)=-74.859150, i_min=2
In the tapering subroutine, i=11, E(i)=-75.399501, i_min=2
In the tapering subroutine, i=12, E(i)=-74.847156, i_min=2
In the tapering subroutine, i=13, E(i)=-75.395090, i_min=2
In the tapering subroutine, i=14, E(i)=-74.873712, i_min=2
In the tapering subroutine, i=15, E(i)=-74.876450, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.004140317489328067
uu+dd contributions  -0.028885169451826793
ud contributions  -0.09452779061279042
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.004092237211403724
uu+dd contributions  -0.028837101808372623
ud contributions  -0.09447912752581233
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.004092237211403724
uu+dd contributions  -0.028837101808372623
ud contributions  -0.09447912752581233
