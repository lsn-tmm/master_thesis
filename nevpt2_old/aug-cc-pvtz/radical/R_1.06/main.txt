#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:37:18 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.060000000000 AA    0.000000000000   0.000000000000   2.003109692039 Bohr

nuclear repulsion = 3.99379027109434
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         4.36
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpkmf0z_tj
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpkmf0z_tj
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.422500325012607  LUMO (A1) = 0.0231458829361097
Initial guess E= -75.3932143666238  |g|= 0.212663
macro= 0  E= -75.4044687354986  delta_E= -0.0112544  |g|= 0.212663  2 KF 5 JK
macro= 1  E= -75.4049618359463  delta_E= -0.0004931  |g|= 0.0898684  2 KF 5 JK
macro= 2  E= -75.4033400764734  delta_E= 0.00162176  |g|= 0.0615085  2 KF 5 JK
macro= 3  E= -75.4047426842391  delta_E= -0.00140261  |g|= 0.105632  2 KF 5 JK
macro= 4  E= -75.4032523621058  delta_E= 0.00149032  |g|= 0.059372  2 KF 5 JK
macro= 5  E= -75.4047412083445  delta_E= -0.00148885  |g|= 0.106041  2 KF 5 JK
macro= 6  E= -75.4036315034681  delta_E= 0.0011097  |g|= 0.0614308  2 KF 5 JK
macro= 7  E= -75.4048161859182  delta_E= -0.00118468  |g|= 0.100956  2 KF 5 JK
macro= 8  E= -75.4033711270951  delta_E= 0.00144506  |g|= 0.0604208  2 KF 5 JK
macro= 9  E= -75.4048047688762  delta_E= -0.00143364  |g|= 0.105385  2 KF 5 JK
macro= 10  E= -75.4034492854749  delta_E= 0.00135548  |g|= 0.0608029  2 KF 5 JK
macro= 11  E= -75.4048190019979  delta_E= -0.00136972  |g|= 0.104307  2 KF 5 JK
macro= 12  E= -75.4033780812974  delta_E= 0.00144092  |g|= 0.0603765  2 KF 5 JK
macro= 13  E= -75.4048210271315  delta_E= -0.00144295  |g|= 0.105457  2 KF 5 JK
macro= 14  E= -75.4033750247403  delta_E= 0.001446  |g|= 0.060369  2 KF 5 JK
macro= 15  E= -75.4048285166122  delta_E= -0.00145349  |g|= 0.105567  2 KF 5 JK
macro= 16  E= -75.4033416035169  delta_E= 0.00148691  |g|= 0.0601624  2 KF 5 JK
macro= 17  E= -75.4048335360907  delta_E= -0.00149193  |g|= 0.106115  2 KF 5 JK
macro= 18  E= -75.4033221151899  delta_E= 0.00151142  |g|= 0.0600454  2 KF 5 JK
macro= 19  E= -75.4048397110407  delta_E= -0.0015176  |g|= 0.106453  2 KF 5 JK
macro= 20  E= -75.4032966527061  delta_E= 0.00154306  |g|= 0.0598814  2 KF 5 JK
macro= 21  E= -75.4048454004272  delta_E= -0.00154875  |g|= 0.106871  2 KF 5 JK
macro= 22  E= -75.4032741747307  delta_E= 0.00157123  |g|= 0.059734  2 KF 5 JK
macro= 23  E= -75.4048513339246  delta_E= -0.00157716  |g|= 0.107242  2 KF 5 JK
macro= 24  E= -75.4032507093213  delta_E= 0.00160062  |g|= 0.0595735  2 KF 5 JK
macro= 25  E= -75.4048571750793  delta_E= -0.00160647  |g|= 0.107621  2 KF 5 JK
macro= 26  E= -75.4032280645855  delta_E= 0.00162911  |g|= 0.0594139  2 KF 5 JK
macro= 27  E= -75.4048630640447  delta_E= -0.001635  |g|= 0.107985  2 KF 5 JK
macro= 28  E= -75.4032054690994  delta_E= 0.00165759  |g|= 0.0592489  2 KF 5 JK
macro= 29  E= -75.4048689285128  delta_E= -0.00166346  |g|= 0.108344  2 KF 5 JK
macro= 30  E= -75.4031832961087  delta_E= 0.00168563  |g|= 0.0590817  2 KF 5 JK
macro= 31  E= -75.4048747903313  delta_E= -0.00169149  |g|= 0.108692  2 KF 5 JK
macro= 32  E= -75.4031614086362  delta_E= 0.00171338  |g|= 0.0589111  2 KF 5 JK
macro= 33  E= -75.4048806297817  delta_E= -0.00171922  |g|= 0.109033  2 KF 5 JK
macro= 34  E= -75.4031398927604  delta_E= 0.00174074  |g|= 0.0587381  2 KF 5 JK
macro= 35  E= -75.4048864454804  delta_E= -0.00174655  |g|= 0.109364  2 KF 5 JK
macro= 36  E= -75.4031187335756  delta_E= 0.00176771  |g|= 0.0585625  2 KF 5 JK
macro= 37  E= -75.4048922281554  delta_E= -0.00177349  |g|= 0.109687  2 KF 5 JK
macro= 38  E= -75.4030979580277  delta_E= 0.00179427  |g|= 0.0583847  2 KF 5 JK
macro= 39  E= -75.4048979721652  delta_E= -0.00180001  |g|= 0.11  2 KF 5 JK
macro= 40  E= -75.4030775721642  delta_E= 0.0018204  |g|= 0.058205  2 KF 5 JK
macro= 41  E= -75.4049036705472  delta_E= -0.0018261  |g|= 0.110305  2 KF 5 JK
macro= 42  E= -75.4030575887099  delta_E= 0.00184608  |g|= 0.0580236  2 KF 5 JK
macro= 43  E= -75.404909317219  delta_E= -0.00185173  |g|= 0.110602  2 KF 5 JK
macro= 44  E= -75.4030380150731  delta_E= 0.0018713  |g|= 0.0578409  2 KF 5 JK
macro= 45  E= -75.402792138454  delta_E= 0.000245877  |g|= 0.11089  2 KF 5 JK
macro= 46  E= -75.4041321441047  delta_E= -0.00134001  |g|= 0.0996071  2 KF 5 JK
macro= 47  E= -75.402585632848  delta_E= 0.00154651  |g|= 0.0947085  2 KF 5 JK
macro= 48  E= -75.403984709346  delta_E= -0.00139908  |g|= 0.102515  2 KF 5 JK
macro= 49  E= -75.4025179612564  delta_E= 0.00146675  |g|= 0.0982291  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4025179612564  |g|= 0.0982291  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4025179612564

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpkmf0z_tj
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpkmf0z_tj
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.280009934627709  LUMO (A1) = 0.0286701339837545
Initial guess E= -75.4055009050243  |g|= 0.076821
macro= 0  E= -75.4064640141098  delta_E= -0.000963109  |g|= 0.076821  2 KF 5 JK
macro= 1  E= -75.4064887149555  delta_E= -2.47008e-05  |g|= 0.0226571  2 KF 5 JK
macro= 2  E= -75.4063135823659  delta_E= 0.000175133  |g|= 0.01585  2 KF 5 JK
macro= 3  E= -75.4064907649034  delta_E= -0.000177183  |g|= 0.0332092  2 KF 5 JK
macro= 4  E= -75.4063526945863  delta_E= 0.00013807  |g|= 0.0117083  2 KF 5 JK
macro= 5  E= -75.4064830283044  delta_E= -0.000130334  |g|= 0.0301166  2 KF 5 JK
macro= 6  E= -75.4063276375547  delta_E= 0.000155391  |g|= 0.0176527  2 KF 5 JK
macro= 7  E= -75.4064811461357  delta_E= -0.000153509  |g|= 0.0321517  2 KF 5 JK
macro= 8  E= -75.4063742387571  delta_E= 0.000106907  |g|= 0.0143358  2 KF 5 JK
macro= 9  E= -75.4064761518387  delta_E= -0.000101913  |g|= 0.0293898  2 KF 5 JK
macro= 10  E= -75.4064088162826  delta_E= 6.73356e-05  |g|= 0.0149829  2 KF 5 JK
macro= 11  E= -75.4064765902419  delta_E= -6.7774e-05  |g|= 0.0265125  2 KF 5 JK
macro= 12  E= -75.406387535192  delta_E= 8.9055e-05  |g|= 0.0153048  2 KF 5 JK
macro= 13  E= -75.4064777164751  delta_E= -9.01813e-05  |g|= 0.027868  2 KF 5 JK
macro= 14  E= -75.4063799412027  delta_E= 9.77753e-05  |g|= 0.0156689  2 KF 5 JK
macro= 15  E= -75.4064787825717  delta_E= -9.88414e-05  |g|= 0.028491  2 KF 5 JK
macro= 16  E= -75.4063774387569  delta_E= 0.000101344  |g|= 0.0157581  2 KF 5 JK
macro= 17  E= -75.4064790685951  delta_E= -0.00010163  |g|= 0.0287292  2 KF 5 JK
macro= 18  E= -75.406377426105  delta_E= 0.000101642  |g|= 0.0157494  2 KF 5 JK
macro= 19  E= -75.4064789745659  delta_E= -0.000101548  |g|= 0.0287529  2 KF 5 JK
macro= 20  E= -75.4063778302333  delta_E= 0.000101144  |g|= 0.0157203  2 KF 5 JK
macro= 21  E= -75.4064789133881  delta_E= -0.000101083  |g|= 0.0287326  2 KF 5 JK
macro= 22  E= -75.4063779047906  delta_E= 0.000101009  |g|= 0.0156968  2 KF 5 JK
macro= 23  E= -75.4064789436303  delta_E= -0.000101039  |g|= 0.0287328  2 KF 5 JK
macro= 24  E= -75.4063777283757  delta_E= 0.000101215  |g|= 0.0156821  2 KF 5 JK
macro= 25  E= -75.4064790130461  delta_E= -0.000101285  |g|= 0.0287518  2 KF 5 JK
macro= 26  E= -75.4063774961074  delta_E= 0.000101517  |g|= 0.0156712  2 KF 5 JK
macro= 27  E= -75.406479083893  delta_E= -0.000101588  |g|= 0.0287756  2 KF 5 JK
macro= 28  E= -75.4063772861715  delta_E= 0.000101798  |g|= 0.0156605  2 KF 5 JK
macro= 29  E= -75.4064791475598  delta_E= -0.000101861  |g|= 0.028798  2 KF 5 JK
macro= 30  E= -75.4063770976979  delta_E= 0.00010205  |g|= 0.0156494  2 KF 5 JK
macro= 31  E= -75.4064792074812  delta_E= -0.00010211  |g|= 0.0288186  2 KF 5 JK
macro= 32  E= -75.4063769149352  delta_E= 0.000102293  |g|= 0.0156379  2 KF 5 JK
macro= 33  E= -75.4064792670327  delta_E= -0.000102352  |g|= 0.0288388  2 KF 5 JK
macro= 34  E= -75.406376730665  delta_E= 0.000102536  |g|= 0.0156263  2 KF 5 JK
macro= 35  E= -75.4064793271069  delta_E= -0.000102596  |g|= 0.0288589  2 KF 5 JK
macro= 36  E= -75.4063765446606  delta_E= 0.000102782  |g|= 0.0156147  2 KF 5 JK
macro= 37  E= -75.4064793874316  delta_E= -0.000102843  |g|= 0.0288791  2 KF 5 JK
macro= 38  E= -75.4063763582715  delta_E= 0.000103029  |g|= 0.015603  2 KF 5 JK
macro= 39  E= -75.4064794476918  delta_E= -0.000103089  |g|= 0.0288992  2 KF 5 JK
macro= 40  E= -75.406376172186  delta_E= 0.000103276  |g|= 0.0155913  2 KF 5 JK
macro= 41  E= -75.4064795077889  delta_E= -0.000103336  |g|= 0.0289193  2 KF 5 JK
macro= 42  E= -75.4063759864755  delta_E= 0.000103521  |g|= 0.0155796  2 KF 5 JK
macro= 43  E= -75.4064795677331  delta_E= -0.000103581  |g|= 0.0289393  2 KF 5 JK
macro= 44  E= -75.4063758010596  delta_E= 0.000103767  |g|= 0.0155679  2 KF 5 JK
macro= 45  E= -75.4064796275414  delta_E= -0.000103826  |g|= 0.0289591  2 KF 5 JK
macro= 46  E= -75.4063756159131  delta_E= 0.000104012  |g|= 0.015556  2 KF 5 JK
macro= 47  E= -75.4064796872116  delta_E= -0.000104071  |g|= 0.0289789  2 KF 5 JK
macro= 48  E= -75.4063754310639  delta_E= 0.000104256  |g|= 0.0155442  2 KF 5 JK
macro= 49  E= -75.4064449500807  delta_E= -6.9519e-05  |g|= 0.0289986  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4064449500807  |g|= 0.0289986  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4064449500807
**** SCF Summaries ****
Total Energy =                         -75.406444950080669
Nuclear Repulsion Energy =               3.993790271094340
One-electron Energy =                 -111.957684321223638
Two-electron Energy =                   32.557449100048629
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    0    1    0    0    0    0
single occ                     0    1    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6379362192093  | -20.6547890182318  | -20.6210834201867  occ= 2
MO #2   (A1  #2 ) energy= -1.28641988617787  | -1.35823144625671  | -1.21460832609904  occ= 2
MO #3   (A1  #3 ) energy= -0.638352792959169 | -0.657378214056993 | -0.619327371861346 occ= 2
MO #4   (E1y #1 ) energy= -0.536238042283717 | -0.555401508729207 | -0.517074575838228 occ= 2
MO #5   (E1x #1 ) energy= -0.246999834056659 | -0.64489223986614  | 0.150892571752828  occ= 1
MO #6   (A1  #4 ) energy= 0.0291967940285933 | 0.0284970078095258 | 0.0298965802476593 occ= 0
MO #7   (A1  #5 ) energy= 0.13600260729132   | 0.134652731503612  | 0.137352483079031  occ= 0
MO #8   (E1x #2 ) energy= 0.161061877994576  | 0.15529330700743   | 0.166830448981723  occ= 0
MO #9   (E1y #2 ) energy= 0.165277515906753  | 0.164479721657353  | 0.166075310156153  occ= 0
MO #10  (A1  #6 ) energy= 0.180424529254585  | 0.178008495563411  | 0.182840562945751  occ= 0
MO #11  (A1  #7 ) energy= 0.260389050951757  | 0.25815449326401   | 0.262623608639514  occ= 0
MO #12  (E1x #3 ) energy= 0.268593209339308  | 0.265824242231011  | 0.271362176447606  occ= 0
MO #13  (E1y #3 ) energy= 0.272018730746661  | 0.271657602856208  | 0.272379858637114  occ= 0
MO #14  (A1  #8 ) energy= 0.411755077456117  | 0.407344650465812  | 0.416165504446381  occ= 0
MO #15  (A1  #9 ) energy= 0.627358142075443  | 0.622433123902734  | 0.632283160248095  occ= 0
MO #16  (E2x #1 ) energy= 0.646309633299741  | 0.636996599698857  | 0.655622666900625  occ= 0
MO #17  (E2y #1 ) energy= 0.646309633299742  | 0.636996599698857  | 0.655622666900626  occ= 0
MO #18  (E1x #4 ) energy= 0.726826668042215  | 0.717789222164941  | 0.735864113919489  occ= 0
MO #19  (E1y #4 ) energy= 0.732530359928013  | 0.731313874083367  | 0.733746845772661  occ= 0
MO #20  (A1  #10) energy= 0.856338558241525  | 0.853729796680538  | 0.858947319802516  occ= 0
MO #21  (E1x #5 ) energy= 0.891228629516781  | 0.870986630015905  | 0.911470629017657  occ= 0
MO #22  (E1y #5 ) energy= 0.893887224349957  | 0.891317361551042  | 0.896457087148868  occ= 0
MO #23  (E2x #2 ) energy= 0.930695410458658  | 0.929006739668854  | 0.932384081248468  occ= 0
MO #24  (E2y #2 ) energy= 0.930695410458663  | 0.929006739668858  | 0.932384081248472  occ= 0
MO #25  (A1  #11) energy= 0.959727644957885  | 0.953698592889981  | 0.965756697025797  occ= 0
MO #26  (A1  #12) energy= 0.980265783082529  | 0.976892926220486  | 0.983638639944523  occ= 0
MO #27  (E1x #6 ) energy= 0.992451381522314  | 0.961507179931195  | 1.02339558311344   occ= 0
MO #28  (E1y #6 ) energy= 0.997954481256464  | 0.994148395754638  | 1.00176056675829   occ= 0
MO #29  (E1x #7 ) energy= 1.46082167452702   | 1.4523844362349    | 1.46925891281914   occ= 0
MO #30  (E1y #7 ) energy= 1.46936886031219   | 1.46813242691774   | 1.47060529370664   occ= 0
MO #31  (A1  #13) energy= 1.73408277369257   | 1.7252837912282    | 1.74288175615674   occ= 0
MO #32  (A1  #14) energy= 1.91987362344734   | 1.90899832014894   | 1.93074892674576   occ= 0
MO #33  (E3x #1 ) energy= 2.05592325225131   | 2.04571496449247   | 2.06613154001015   occ= 0
MO #34  (E3y #1 ) energy= 2.05592325225131   | 2.04571496449246   | 2.06613154001015   occ= 0
MO #35  (E2x #3 ) energy= 2.13338692949897   | 2.09979155644727   | 2.16698230255067   occ= 0
MO #36  (E2y #3 ) energy= 2.13338692949897   | 2.09979155644727   | 2.16698230255068   occ= 0
MO #37  (E1x #8 ) energy= 2.25641407687376   | 2.23083015369718   | 2.28199800005033   occ= 0
MO #38  (E1y #8 ) energy= 2.27232383814508   | 2.2683527132849    | 2.27629496300527   occ= 0
MO #39  (E2x #4 ) energy= 2.30447867685313   | 2.29447764313265   | 2.31447971057361   occ= 0
MO #40  (E2y #4 ) energy= 2.30447867685313   | 2.29447764313265   | 2.31447971057361   occ= 0
MO #41  (A1  #15) energy= 2.43178938558002   | 2.4236808930245    | 2.43989787813555   occ= 0
MO #42  (A1  #16) energy= 2.59596828163159   | 2.58708978126743   | 2.60484678199554   occ= 0
MO #43  (E1x #9 ) energy= 2.72951348903564   | 2.71383477364899   | 2.74519220442228   occ= 0
MO #44  (E1y #9 ) energy= 2.75053105036447   | 2.7474702237399    | 2.75359187698903   occ= 0
MO #45  (A1  #17) energy= 3.43294401971282   | 3.429079419933     | 3.43680861949265   occ= 0
MO #46  (E2x #5 ) energy= 3.9646595552146    | 3.96260614528886   | 3.96671296514034   occ= 0
MO #47  (E2y #5 ) energy= 3.9646595552146    | 3.96260614528885   | 3.96671296514034   occ= 0
MO #48  (E1x #10) energy= 4.03301250275035   | 3.97830033005543   | 4.08772467544525   occ= 0
MO #49  (E1y #10) energy= 4.04412660816167   | 4.03681897885434   | 4.051434237469     occ= 0
MO #50  (E1x #11) energy= 4.27785416174033   | 4.2760578928811    | 4.27965043059956   occ= 0
MO #51  (E1y #11) energy= 4.28576139375033   | 4.28540204735988   | 4.2861207401408    occ= 0
MO #52  (A1  #18) energy= 4.47250701139342   | 4.46718707968457   | 4.47782694310226   occ= 0
MO #53  (A1  #19) energy= 4.92563787411611   | 4.91952403790665   | 4.93175171032552   occ= 0
MO #54  (E1x #12) energy= 5.02478228606801   | 5.00454312274295   | 5.04502144939306   occ= 0
MO #55  (E1y #12) energy= 5.04468745448647   | 5.04102544865573   | 5.04834946031722   occ= 0
MO #56  (A1  #20) energy= 6.22090931178821   | 6.21088247550087   | 6.23093614807555   occ= 0
MO #57  (E3x #2 ) energy= 6.45944607616445   | 6.43446700914259   | 6.48442514318629   occ= 0
MO #58  (E3y #2 ) energy= 6.45944607616445   | 6.4344670091426    | 6.4844251431863    occ= 0
MO #59  (E2x #6 ) energy= 6.58231508687257   | 6.5642382136867    | 6.60039196005845   occ= 0
MO #60  (E2y #6 ) energy= 6.58231508687256   | 6.56423821368669   | 6.60039196005844   occ= 0
MO #61  (E1x #13) energy= 6.97086354945667   | 6.95030630423555   | 6.99142079467778   occ= 0
MO #62  (E1y #13) energy= 7.00609625900867   | 7.00144429135172   | 7.0107482266656    occ= 0
MO #63  (E2x #7 ) energy= 7.00686541563185   | 6.96536301237832   | 7.04836781888538   occ= 0
MO #64  (E2y #7 ) energy= 7.00686541563185   | 6.96536301237833   | 7.04836781888538   occ= 0
MO #65  (E1x #14) energy= 7.19671232254805   | 7.15777500121278   | 7.23564964388333   occ= 0
MO #66  (E1y #14) energy= 7.22775106937963   | 7.22127009045681   | 7.23423204830243   occ= 0
MO #67  (A1  #21) energy= 7.26392665058791   | 7.25498358433019   | 7.27286971684556   occ= 0
MO #68  (A1  #22) energy= 7.53041085997965   | 7.51699815371916   | 7.54382356624012   occ= 0
MO #69  (A1  #23) energy= 11.4948187054961   | 11.4800464575527   | 11.5095909534396   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.85264
pop of  0 O 3s        0.00362
pop of  0 O 4s        0.00103
pop of  0 O 5s        0.00022
pop of  0 O 2px       0.99716
pop of  0 O 2py       1.99245
pop of  0 O 2pz       1.47980
pop of  0 O 3px       0.00017
pop of  0 O 3py       0.00146
pop of  0 O 3pz       0.00078
pop of  0 O 4px       0.00075
pop of  0 O 4py       0.00058
pop of  0 O 4pz       0.00162
pop of  0 O 5px       0.00011
pop of  0 O 5py       0.00026
pop of  0 O 5pz       0.00007
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00149
pop of  0 O 3dz^2     0.00646
pop of  0 O 3dxz      0.00073
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00034
pop of  0 O 4dz^2     0.00050
pop of  0 O 4dxz      0.00015
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00004
pop of  0 O 5dz^2     0.00010
pop of  0 O 5dxz      0.00002
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00016
pop of  0 O 4f 0      0.00062
pop of  0 O 4f 1      0.00001
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00005
pop of  0 O 5f 0      0.00011
pop of  0 O 5f 1      0.00001
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.63817
pop of  1 H 2s        0.00956
pop of  1 H 3s        0.00291
pop of  1 H 4s        0.00010
pop of  1 H 2px       0.00040
pop of  1 H 2py       0.00301
pop of  1 H 2pz       0.00098
pop of  1 H 3px       0.00031
pop of  1 H 3py       0.00000
pop of  1 H 3pz       0.00049
pop of  1 H 4px       0.00011
pop of  1 H 4py       0.00001
pop of  1 H 4pz       0.00005
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00013
pop of  1 H 3dz^2     0.00013
pop of  1 H 3dxz      0.00006
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00000
pop of  1 H 4dz^2     0.00003
pop of  1 H 4dxz      0.00000
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.34352
charge of  1H =      0.34352
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.83153
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:38:02 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        65.90

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpxcq92jay
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpxcq92jay
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.246999834056673  LUMO = 0.3480873288314
Initial guess E= -75.4064521538848  |g|= 0.000441817
macro= 0  E= -75.4064522467804  delta_E= -9.28956e-08  |g|= 0.000441817  1 KF 3 JK
macro= 1  E= -75.4064522467804  delta_E= 0  |g|= 9.13386e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4064522467804  |g|= 9.13386e-06  total 3 KF 8 JK
converged SCF energy = -75.4064522467804
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:38:03 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        68.09

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpsaozax1f
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpsaozax1f
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.246999865891868  LUMO = 0.348087343401788
Initial guess E= -75.4064521538853  |g|= 0.000441831
macro= 0  E= -75.4064522467804  delta_E= -9.2895e-08  |g|= 0.000441831  1 KF 3 JK
macro= 1  E= -75.4064522467804  delta_E= 0  |g|= 1.93533e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4064522467804  |g|= 1.93533e-08  total 3 KF 8 JK
converged SCF energy = -75.4064522467804
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:38:06 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        70.70

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp3wtushnl
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp3wtushnl
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.247430756162456  LUMO = 0.0291906310558772
Initial guess E= -75.4071183262225  |g|= 0.00981415
macro= 0  E= -75.4071420161185  delta_E= -2.36899e-05  |g|= 0.00038799  2 KF 7 JK
macro= 1  E= -75.4071420161185  delta_E= -1.42109e-14  |g|= 7.99441e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4071420161185  |g|= 7.99441e-06  total 4 KF 12 JK
converged SCF energy = -75.4071420161185
u+d contributions  -0.057238557864990845
uu+dd contributions  -0.08783403713723902
ud contributions  -0.182036411682831
u+d contributions  -0.00834675756665719
uu+dd contributions  -0.03883876270337027
ud contributions  -0.13285253951678136
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:38:12 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        77.84

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpthluknca
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpthluknca
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.246613264233159  LUMO = 0.348187622712383
Initial guess E= -75.4064521091241  |g|= 0.000471824
macro= 0  E= -75.4064522467804  delta_E= -1.37656e-07  |g|= 0.000471824  1 KF 2 JK
macro= 1  E= -75.4064522467804  delta_E= -1.42109e-14  |g|= 5.24679e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4064522467804  |g|= 5.24679e-08  total 3 KF 7 JK
converged SCF energy = -75.4064522467804
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:38:13 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        82.53

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpiz5qlhnq
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpiz5qlhnq
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.24704209144317  LUMO = 0.0291866620152611
Initial guess E= -75.4070717969974  |g|= 0.00702573
macro= 0  E= -75.4070884863825  delta_E= -1.66894e-05  |g|= 0.000297628  2 KF 7 JK
macro= 1  E= -75.4070884863825  delta_E= 0  |g|= 4.4108e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4070884863825  |g|= 4.4108e-06  total 4 KF 12 JK
converged SCF energy = -75.4070884863825
u+d contributions  -0.02426956628074955
uu+dd contributions  -0.04739891097213398
ud contributions  -0.1072991879529973
u+d contributions  -0.005625296135546434
uu+dd contributions  -0.028727106429334747
ud contributions  -0.08859770439972146
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.938989, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.245529, i_min=0
In the tapering subroutine, i=2, E(i)=-75.406452, i_min=1
In the tapering subroutine, i=3, E(i)=-75.046399, i_min=2
In the tapering subroutine, i=4, E(i)=-75.402029, i_min=2
In the tapering subroutine, i=5, E(i)=-75.034855, i_min=2
In the tapering subroutine, i=6, E(i)=-74.852238, i_min=2
In the tapering subroutine, i=7, E(i)=-75.074788, i_min=2
In the tapering subroutine, i=8, E(i)=-75.245529, i_min=2
In the tapering subroutine, i=9, E(i)=-75.254326, i_min=2
In the tapering subroutine, i=10, E(i)=-75.070184, i_min=2
In the tapering subroutine, i=11, E(i)=-75.406452, i_min=2
In the tapering subroutine, i=12, E(i)=-75.057892, i_min=2
In the tapering subroutine, i=13, E(i)=-75.402029, i_min=2
In the tapering subroutine, i=14, E(i)=-75.074788, i_min=2
In the tapering subroutine, i=15, E(i)=-74.890565, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0056252460449095175
uu+dd contributions  -0.028727205294872552
ud contributions  -0.08859254757042971
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.00572195094208148
uu+dd contributions  -0.028829637980064254
ud contributions  -0.08879706728923847
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.00572195094208148
uu+dd contributions  -0.028829637980064254
ud contributions  -0.08879706728923847
