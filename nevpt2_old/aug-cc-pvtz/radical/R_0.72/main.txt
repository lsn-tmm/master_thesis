#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.72/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.72)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 22:45:22 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.720000000000 AA    0.000000000000   0.000000000000   1.360602809687 Bohr

nuclear repulsion = 5.879746788
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         5.67
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp8lchd4yi
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp8lchd4yi
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.483944099604867  LUMO (A1) = 0.0304806534588045
Initial guess E= -75.3066270611683  |g|= 0.207011
macro= 0  E= -75.3136168002964  delta_E= -0.00698974  |g|= 0.207011  2 KF 5 JK
macro= 1  E= -75.3147761011584  delta_E= -0.0011593  |g|= 0.10259  2 KF 5 JK
macro= 2  E= -75.3134311669266  delta_E= 0.00134493  |g|= 0.0605529  2 KF 5 JK
macro= 3  E= -75.3147675902043  delta_E= -0.00133642  |g|= 0.105397  2 KF 5 JK
macro= 4  E= -75.3137528915024  delta_E= 0.0010147  |g|= 0.0608822  2 KF 5 JK
macro= 5  E= -75.3147701335371  delta_E= -0.00101724  |g|= 0.0999056  2 KF 5 JK
macro= 6  E= -75.3136607866916  delta_E= 0.00110935  |g|= 0.0597568  2 KF 5 JK
macro= 7  E= -75.3147726084569  delta_E= -0.00111182  |g|= 0.101513  2 KF 5 JK
macro= 8  E= -75.3136739022741  delta_E= 0.00109871  |g|= 0.0600971  2 KF 5 JK
macro= 9  E= -75.3147750673423  delta_E= -0.00110117  |g|= 0.101324  2 KF 5 JK
macro= 10  E= -75.3136531090267  delta_E= 0.00112196  |g|= 0.0599747  2 KF 5 JK
macro= 11  E= -75.3147774357264  delta_E= -0.00112433  |g|= 0.101724  2 KF 5 JK
macro= 12  E= -75.3136432419224  delta_E= 0.00113419  |g|= 0.059976  2 KF 5 JK
macro= 13  E= -75.3147798370243  delta_E= -0.0011366  |g|= 0.101937  2 KF 5 JK
macro= 14  E= -75.3136298454553  delta_E= 0.00114999  |g|= 0.0599275  2 KF 5 JK
macro= 15  E= -75.3147822331398  delta_E= -0.00115239  |g|= 0.102207  2 KF 5 JK
macro= 16  E= -75.3136176503835  delta_E= 0.00116458  |g|= 0.0598913  2 KF 5 JK
macro= 17  E= -75.3147846285856  delta_E= -0.00116698  |g|= 0.102455  2 KF 5 JK
macro= 18  E= -75.3136051186615  delta_E= 0.00117951  |g|= 0.0598488  2 KF 5 JK
macro= 19  E= -75.3147870248554  delta_E= -0.00118191  |g|= 0.102706  2 KF 5 JK
macro= 20  E= -75.3135927616036  delta_E= 0.00119426  |g|= 0.0598073  2 KF 5 JK
macro= 21  E= -75.3147894191823  delta_E= -0.00119666  |g|= 0.102951  2 KF 5 JK
macro= 22  E= -75.3135804244036  delta_E= 0.00120899  |g|= 0.0597646  2 KF 5 JK
macro= 23  E= -75.314791812048  delta_E= -0.00121139  |g|= 0.103193  2 KF 5 JK
macro= 24  E= -75.3135681669551  delta_E= 0.00122365  |g|= 0.0597215  2 KF 5 JK
macro= 25  E= -75.3147942021157  delta_E= -0.00122604  |g|= 0.103431  2 KF 5 JK
macro= 26  E= -75.313555979901  delta_E= 0.00123822  |g|= 0.0596779  2 KF 5 JK
macro= 27  E= -75.3147965888615  delta_E= -0.00124061  |g|= 0.103666  2 KF 5 JK
macro= 28  E= -75.3135438753224  delta_E= 0.00125271  |g|= 0.0596337  2 KF 5 JK
macro= 29  E= -75.3147989714026  delta_E= -0.0012551  |g|= 0.103897  2 KF 5 JK
macro= 30  E= -75.3135318580503  delta_E= 0.00126711  |g|= 0.0595891  2 KF 5 JK
macro= 31  E= -75.3148013489975  delta_E= -0.00126949  |g|= 0.104124  2 KF 5 JK
macro= 32  E= -75.3135199346446  delta_E= 0.00128141  |g|= 0.059544  2 KF 5 JK
macro= 33  E= -75.3148037208504  delta_E= -0.00128379  |g|= 0.104347  2 KF 5 JK
macro= 34  E= -75.3135081106255  delta_E= 0.00129561  |g|= 0.0594984  2 KF 5 JK
macro= 35  E= -75.3148060861888  delta_E= -0.00129798  |g|= 0.104566  2 KF 5 JK
macro= 36  E= -75.3134963913234  delta_E= 0.00130969  |g|= 0.0594524  2 KF 5 JK
macro= 37  E= -75.3148084442383  delta_E= -0.00131205  |g|= 0.104781  2 KF 5 JK
macro= 38  E= -75.3134847816316  delta_E= 0.00132366  |g|= 0.0594059  2 KF 5 JK
macro= 39  E= -75.3148107942337  delta_E= -0.00132601  |g|= 0.104993  2 KF 5 JK
macro= 40  E= -75.3134732860896  delta_E= 0.00133751  |g|= 0.0593589  2 KF 5 JK
macro= 41  E= -75.3148131354171  delta_E= -0.00133985  |g|= 0.1052  2 KF 5 JK
macro= 42  E= -75.3134619088664  delta_E= 0.00135123  |g|= 0.0593115  2 KF 5 JK
macro= 43  E= -75.3148154670406  delta_E= -0.00135356  |g|= 0.105404  2 KF 5 JK
macro= 44  E= -75.31345065378  delta_E= 0.00136481  |g|= 0.0592637  2 KF 5 JK
macro= 45  E= -75.314817788367  delta_E= -0.00136713  |g|= 0.105604  2 KF 5 JK
macro= 46  E= -75.3134395243014  delta_E= 0.00137826  |g|= 0.0592154  2 KF 5 JK
macro= 47  E= -75.3148200986725  delta_E= -0.00138057  |g|= 0.1058  2 KF 5 JK
macro= 48  E= -75.313428523568  delta_E= 0.00139158  |g|= 0.0591668  2 KF 5 JK
macro= 49  E= -75.3148223972483  delta_E= -0.00139387  |g|= 0.105992  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3148223972483  |g|= 0.105992  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3148223972483

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp8lchd4yi
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp8lchd4yi
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.279066533631316  LUMO (A1) = 0.0321969521806859
Initial guess E= -75.3162337768119  |g|= 0.0369297
macro= 0  E= -75.3163318731228  delta_E= -9.80963e-05  |g|= 0.0369297  2 KF 5 JK
macro= 1  E= -75.3163156742023  delta_E= 1.61989e-05  |g|= 0.0219968  2 KF 5 JK
macro= 2  E= -75.3162910695998  delta_E= 2.46046e-05  |g|= 0.0308382  2 KF 5 JK
macro= 3  E= -75.3163292032669  delta_E= -3.81337e-05  |g|= 0.025888  2 KF 5 JK
macro= 4  E= -75.3162981363252  delta_E= 3.10669e-05  |g|= 0.0296217  2 KF 5 JK
macro= 5  E= -75.3163298014263  delta_E= -3.16651e-05  |g|= 0.0255735  2 KF 5 JK
macro= 6  E= -75.316298094526  delta_E= 3.17069e-05  |g|= 0.0294847  2 KF 5 JK
macro= 7  E= -75.3163291880828  delta_E= -3.10936e-05  |g|= 0.0255714  2 KF 5 JK
macro= 8  E= -75.3162982769641  delta_E= 3.09111e-05  |g|= 0.029524  2 KF 5 JK
macro= 9  E= -75.3163292005897  delta_E= -3.09236e-05  |g|= 0.0255612  2 KF 5 JK
macro= 10  E= -75.3162982872029  delta_E= 3.09134e-05  |g|= 0.0295191  2 KF 5 JK
macro= 11  E= -75.31632919838  delta_E= -3.09112e-05  |g|= 0.0255616  2 KF 5 JK
macro= 12  E= -75.3162983072439  delta_E= 3.08911e-05  |g|= 0.0295181  2 KF 5 JK
macro= 13  E= -75.3163292054488  delta_E= -3.08982e-05  |g|= 0.0255609  2 KF 5 JK
macro= 14  E= -75.3162983222327  delta_E= 3.08832e-05  |g|= 0.0295169  2 KF 5 JK
macro= 15  E= -75.316329213305  delta_E= -3.08911e-05  |g|= 0.0255602  2 KF 5 JK
macro= 16  E= -75.3162983376461  delta_E= 3.08757e-05  |g|= 0.0295158  2 KF 5 JK
macro= 17  E= -75.3163292213557  delta_E= -3.08837e-05  |g|= 0.0255593  2 KF 5 JK
macro= 18  E= -75.3162983528988  delta_E= 3.08685e-05  |g|= 0.0295148  2 KF 5 JK
macro= 19  E= -75.3163292294963  delta_E= -3.08766e-05  |g|= 0.0255584  2 KF 5 JK
macro= 20  E= -75.3162983681648  delta_E= 3.08613e-05  |g|= 0.0295138  2 KF 5 JK
macro= 21  E= -75.3163292376553  delta_E= -3.08695e-05  |g|= 0.0255575  2 KF 5 JK
macro= 22  E= -75.316298383424  delta_E= 3.08542e-05  |g|= 0.0295128  2 KF 5 JK
macro= 23  E= -75.3163292458192  delta_E= -3.08624e-05  |g|= 0.0255566  2 KF 5 JK
macro= 24  E= -75.3162983986831  delta_E= 3.08471e-05  |g|= 0.0295118  2 KF 5 JK
macro= 25  E= -75.3163292539787  delta_E= -3.08553e-05  |g|= 0.0255556  2 KF 5 JK
macro= 26  E= -75.3162984139414  delta_E= 3.084e-05  |g|= 0.0295108  2 KF 5 JK
macro= 27  E= -75.3163292621301  delta_E= -3.08482e-05  |g|= 0.0255547  2 KF 5 JK
macro= 28  E= -75.3162984291995  delta_E= 3.08329e-05  |g|= 0.0295099  2 KF 5 JK
macro= 29  E= -75.3163292702726  delta_E= -3.08411e-05  |g|= 0.0255537  2 KF 5 JK
macro= 30  E= -75.3162984444575  delta_E= 3.08258e-05  |g|= 0.0295089  2 KF 5 JK
macro= 31  E= -75.3163292784047  delta_E= -3.08339e-05  |g|= 0.0255528  2 KF 5 JK
macro= 32  E= -75.3162984597151  delta_E= 3.08187e-05  |g|= 0.029508  2 KF 5 JK
macro= 33  E= -75.3163292865263  delta_E= -3.08268e-05  |g|= 0.0255518  2 KF 5 JK
macro= 34  E= -75.3162984749724  delta_E= 3.08116e-05  |g|= 0.029507  2 KF 5 JK
macro= 35  E= -75.3163292946378  delta_E= -3.08197e-05  |g|= 0.0255509  2 KF 5 JK
macro= 36  E= -75.3162984902291  delta_E= 3.08044e-05  |g|= 0.029506  2 KF 5 JK
macro= 37  E= -75.3163293027395  delta_E= -3.08125e-05  |g|= 0.0255499  2 KF 5 JK
macro= 38  E= -75.3162985054856  delta_E= 3.07973e-05  |g|= 0.0295051  2 KF 5 JK
macro= 39  E= -75.3163293108308  delta_E= -3.08053e-05  |g|= 0.0255489  2 KF 5 JK
macro= 40  E= -75.3162985207416  delta_E= 3.07901e-05  |g|= 0.0295041  2 KF 5 JK
macro= 41  E= -75.3163293189126  delta_E= -3.07982e-05  |g|= 0.025548  2 KF 5 JK
macro= 42  E= -75.3162985359971  delta_E= 3.07829e-05  |g|= 0.0295032  2 KF 5 JK
macro= 43  E= -75.3163293269845  delta_E= -3.0791e-05  |g|= 0.025547  2 KF 5 JK
macro= 44  E= -75.316298551252  delta_E= 3.07757e-05  |g|= 0.0295022  2 KF 5 JK
macro= 45  E= -75.3163293350476  delta_E= -3.07838e-05  |g|= 0.0255461  2 KF 5 JK
macro= 46  E= -75.3162985665064  delta_E= 3.07685e-05  |g|= 0.0295013  2 KF 5 JK
macro= 47  E= -75.3163293431011  delta_E= -3.07766e-05  |g|= 0.0255451  2 KF 5 JK
macro= 48  E= -75.3162985817604  delta_E= 3.07613e-05  |g|= 0.0295003  2 KF 5 JK
macro= 49  E= -75.3163293511457  delta_E= -3.07694e-05  |g|= 0.0255441  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3163293511457  |g|= 0.0255441  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3163293511457
**** SCF Summaries ****
Total Energy =                         -75.316329351145654
Nuclear Repulsion Energy =               5.879746788000000
One-electron Energy =                 -115.186698842130284
Two-electron Energy =                   33.990622702984624
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    1    0    0    0    0    0
single occ                     0    0    1    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.5822842572733  | -20.5992738216488  | -20.5652946928977  occ= 2
MO #2   (A1  #2 ) energy= -1.41948835164761  | -1.48529348146353  | -1.35368322183168  occ= 2
MO #3   (A1  #3 ) energy= -0.72350772460247  | -0.750064989716338 | -0.696950459488601 occ= 2
MO #4   (E1x #1 ) energy= -0.549191126438941 | -0.568557264986455 | -0.529824987891427 occ= 2
MO #5   (E1y #1 ) energy= -0.255841056422666 | -0.656510516236464 | 0.144828403391129  occ= 1
MO #6   (A1  #4 ) energy= 0.0322837699806424 | 0.0318325850396199 | 0.0327349549216556 occ= 0
MO #7   (A1  #5 ) energy= 0.136414205979127  | 0.135853080477918  | 0.136975331480308  occ= 0
MO #8   (E1y #2 ) energy= 0.150967891943605  | 0.14612554477969   | 0.15581023910752   occ= 0
MO #9   (E1x #2 ) energy= 0.154381073058032  | 0.15376049447428   | 0.155001651641784  occ= 0
MO #10  (A1  #6 ) energy= 0.189842288113152  | 0.18786655299897   | 0.191818023227312  occ= 0
MO #11  (A1  #7 ) energy= 0.276622633495096  | 0.275386370268845  | 0.277858896721328  occ= 0
MO #12  (E1y #3 ) energy= 0.288059198317472  | 0.28367772992902   | 0.292440666705927  occ= 0
MO #13  (E1x #3 ) energy= 0.291416393434782  | 0.290869017024856  | 0.291963769844713  occ= 0
MO #14  (A1  #8 ) energy= 0.470608445884172  | 0.46710204367886   | 0.474114848089413  occ= 0
MO #15  (E2x #1 ) energy= 0.649248810560082  | 0.639622197267714  | 0.658875423852451  occ= 0
MO #16  (E2y #1 ) energy= 0.649248810560081  | 0.639622197267713  | 0.65887542385245   occ= 0
MO #17  (A1  #9 ) energy= 0.696729351394336  | 0.690633294156907  | 0.702825408631768  occ= 0
MO #18  (E1y #4 ) energy= 0.733412859908948  | 0.723261758486001  | 0.743563961331893  occ= 0
MO #19  (E1x #4 ) energy= 0.740071697126739  | 0.738678859823137  | 0.741464534430345  occ= 0
MO #20  (A1  #10) energy= 0.853795242028484  | 0.849005833791583  | 0.858584650265394  occ= 0
MO #21  (E1y #5 ) energy= 0.857541670160328  | 0.831457573916154  | 0.883625766404495  occ= 0
MO #22  (E1x #5 ) energy= 0.859056279444166  | 0.856001779553926  | 0.862110779334415  occ= 0
MO #23  (A1  #11) energy= 0.947411968835479  | 0.946224035548025  | 0.948599902122954  occ= 0
MO #24  (E2x #2 ) energy= 0.957189725260681  | 0.955763307536801  | 0.958616142984559  occ= 0
MO #25  (E2y #2 ) energy= 0.957189725260681  | 0.9557633075368    | 0.958616142984559  occ= 0
MO #26  (E1y #6 ) energy= 1.0135176889412    | 0.99909854262941   | 1.02793683525298   occ= 0
MO #27  (E1x #6 ) energy= 1.02328755299096   | 1.02126641783107   | 1.02530868815085   occ= 0
MO #28  (A1  #12) energy= 1.18477912799357   | 1.17710103674957   | 1.1924572192375    occ= 0
MO #29  (A1  #13) energy= 1.64882520374023   | 1.63844768603394   | 1.65920272144681   occ= 0
MO #30  (E1y #7 ) energy= 1.65763884743877   | 1.63301939893416   | 1.68225829594337   occ= 0
MO #31  (E1x #7 ) energy= 1.66547131520095   | 1.6621707897089    | 1.668771840693     occ= 0
MO #32  (E3x #1 ) energy= 2.04462432261725   | 2.03459649916217   | 2.05465214607234   occ= 0
MO #33  (E3y #1 ) energy= 2.04462432261725   | 2.03459649916217   | 2.05465214607234   occ= 0
MO #34  (E2x #3 ) energy= 2.13645327539285   | 2.09999559461698   | 2.17291095616871   occ= 0
MO #35  (E2y #3 ) energy= 2.13645327539284   | 2.09999559461698   | 2.17291095616871   occ= 0
MO #36  (A1  #14) energy= 2.221344655931     | 2.2108299684149    | 2.23185934344728   occ= 0
MO #37  (E1y #8 ) energy= 2.33830859787518   | 2.32238836396495   | 2.35422883178541   occ= 0
MO #38  (E1x #8 ) energy= 2.35627130943396   | 2.35350356485384   | 2.35903905401407   occ= 0
MO #39  (A1  #15) energy= 2.39344860075687   | 2.38602014413612   | 2.40087705737762   occ= 0
MO #40  (E2x #4 ) energy= 2.40520080085461   | 2.39793137923346   | 2.41247022247577   occ= 0
MO #41  (E2y #4 ) energy= 2.40520080085461   | 2.39793137923346   | 2.41247022247577   occ= 0
MO #42  (E1y #9 ) energy= 2.66620717071349   | 2.63676643838753   | 2.69564790303945   occ= 0
MO #43  (E1x #9 ) energy= 2.68734882600998   | 2.68246210723552   | 2.69223554478445   occ= 0
MO #44  (A1  #16) energy= 2.8866367133781    | 2.87614046208746   | 2.8971329646687    occ= 0
MO #45  (A1  #17) energy= 3.89669824152949   | 3.891162664204     | 3.90223381885502   occ= 0
MO #46  (E1y #10) energy= 4.25093214494432   | 4.24242103853712   | 4.25944325135151   occ= 0
MO #47  (E1x #10) energy= 4.26478043170433   | 4.26319258828024   | 4.26636827512843   occ= 0
MO #48  (E2x #5 ) energy= 4.31865089996341   | 4.31378386115083   | 4.323517938776     occ= 0
MO #49  (E2y #5 ) energy= 4.31865089996342   | 4.31378386115083   | 4.323517938776     occ= 0
MO #50  (E1y #11) energy= 4.52067643241004   | 4.47081177445473   | 4.57054109036535   occ= 0
MO #51  (E1x #11) energy= 4.53395113560935   | 4.52723535885033   | 4.54066691236836   occ= 0
MO #52  (A1  #18) energy= 4.76195799964788   | 4.75475921868537   | 4.76915678061026   occ= 0
MO #53  (E1y #12) energy= 5.80369607260704   | 5.78259677383701   | 5.82479537137704   occ= 0
MO #54  (E1x #12) energy= 5.83242199322127   | 5.82834287996564   | 5.83650110647692   occ= 0
MO #55  (A1  #19) energy= 6.0995647203889    | 6.08640088206067   | 6.11272855871719   occ= 0
MO #56  (A1  #20) energy= 6.40843611505541   | 6.39439252198258   | 6.42247970812823   occ= 0
MO #57  (E3x #2 ) energy= 6.45067757959053   | 6.42565288271996   | 6.47570227646109   occ= 0
MO #58  (E3y #2 ) energy= 6.45067757959053   | 6.42565288271996   | 6.47570227646109   occ= 0
MO #59  (E2x #6 ) energy= 6.77453741498754   | 6.75612367883716   | 6.79295115113794   occ= 0
MO #60  (E2y #6 ) energy= 6.77453741498754   | 6.75612367883716   | 6.79295115113794   occ= 0
MO #61  (E1y #13) energy= 6.98708230574634   | 6.95836750540441   | 7.01579710608828   occ= 0
MO #62  (E2x #7 ) energy= 6.99713627614225   | 6.95592583415201   | 7.0383467181325    occ= 0
MO #63  (E2y #7 ) energy= 6.99713627614225   | 6.955925834152     | 7.0383467181325    occ= 0
MO #64  (E1x #13) energy= 7.02085430204464   | 7.01550017846071   | 7.02620842562857   occ= 0
MO #65  (E1y #14) energy= 8.30925218979681   | 8.28442528308649   | 8.33407909650712   occ= 0
MO #66  (E1x #14) energy= 8.34191526540025   | 8.33696618271668   | 8.34686434808381   occ= 0
MO #67  (A1  #21) energy= 8.37921129113697   | 8.37060151426196   | 8.38782106801196   occ= 0
MO #68  (A1  #22) energy= 9.2686543635289    | 9.26292489342935   | 9.27438383362843   occ= 0
MO #69  (A1  #23) energy= 18.3645367266552   | 18.353655671623    | 18.3754177816879   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.68995
pop of  0 O 3s        0.00791
pop of  0 O 4s        0.00173
pop of  0 O 5s        0.00002
pop of  0 O 2px       1.99183
pop of  0 O 2py       0.99609
pop of  0 O 2pz       1.66556
pop of  0 O 3px       0.00050
pop of  0 O 3py       0.00026
pop of  0 O 3pz       0.00655
pop of  0 O 4px       0.00045
pop of  0 O 4py       0.00044
pop of  0 O 4pz       0.00128
pop of  0 O 5px       0.00008
pop of  0 O 5py       0.00002
pop of  0 O 5pz       0.00043
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00148
pop of  0 O 3dz^2     0.01778
pop of  0 O 3dxz      0.00309
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00012
pop of  0 O 4dz^2     0.00033
pop of  0 O 4dxz      0.00025
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00000
pop of  0 O 5dz^2     0.00024
pop of  0 O 5dxz      0.00001
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00002
pop of  0 O 4f 0      0.00241
pop of  0 O 4f 1      0.00024
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00000
pop of  0 O 5f 0      0.00003
pop of  0 O 5f 1      0.00000
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.56477
pop of  1 H 2s        0.02037
pop of  1 H 3s        0.01620
pop of  1 H 4s        0.00190
pop of  1 H 2px       0.00330
pop of  1 H 2py       0.00070
pop of  1 H 2pz       0.00030
pop of  1 H 3px       0.00016
pop of  1 H 3py       0.00076
pop of  1 H 3pz       0.00007
pop of  1 H 4px       0.00000
pop of  1 H 4py       0.00003
pop of  1 H 4pz       0.00061
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00000
pop of  1 H 3dz^2     0.00097
pop of  1 H 3dxz      0.00002
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00008
pop of  1 H 4dz^2     0.00060
pop of  1 H 4dxz      0.00005
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.38909
charge of  1H =      0.38909
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.55274
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.72/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.72)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 22:47:46 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        42.81

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpola78gfx
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpola78gfx
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.255841056422665  LUMO = 0.67694510307492
Initial guess E= -75.3163462403259  |g|= 0.00112643
macro= 0  E= -75.3163467043786  delta_E= -4.64053e-07  |g|= 0.00112643  1 KF 4 JK
macro= 1  E= -75.3163467043786  delta_E= -4.26326e-14  |g|= 7.74506e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3163467043786  |g|= 7.74506e-08  total 3 KF 9 JK
converged SCF energy = -75.3163467043786
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.72/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.72)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 22:47:49 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        46.02

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmptnr_032i
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmptnr_032i
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.255842763746274  LUMO = 0.676945527692583
Initial guess E= -75.3163462397074  |g|= 0.00112657
macro= 0  E= -75.3163467043786  delta_E= -4.64671e-07  |g|= 0.00112657  1 KF 3 JK
macro= 1  E= -75.3163467043786  delta_E= 0  |g|= 7.75764e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3163467043786  |g|= 7.75764e-08  total 3 KF 8 JK
converged SCF energy = -75.3163467043786
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.72/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.72)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 22:47:53 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        50.05

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp86knaqb8
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp86knaqb8
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.256132386128723  LUMO = 0.0322778241188901
Initial guess E= -75.3170274107244  |g|= 0.0125141
macro= 0  E= -75.3170626016173  delta_E= -3.51909e-05  |g|= 0.000438446  2 KF 7 JK
macro= 1  E= -75.3170626016174  delta_E= -8.52651e-14  |g|= 6.12557e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3170626016174  |g|= 6.12557e-06  total 4 KF 12 JK
converged SCF energy = -75.3170626016174
u+d contributions  -0.049283771740562775
uu+dd contributions  -0.08206905238343024
ud contributions  -0.18283821278361043
u+d contributions  -0.007775013595950171
uu+dd contributions  -0.04047279078692904
ud contributions  -0.14109880097678457
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.72/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.72)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 22:48:08 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        56.18

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpjmamn30c
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpjmamn30c
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.256663762946835  LUMO = 0.676781974491116
Initial guess E= -75.3163462706007  |g|= 0.000950049
macro= 0  E= -75.3163467043786  delta_E= -4.33778e-07  |g|= 0.000950049  1 KF 2 JK
macro= 1  E= -75.3163467043786  delta_E= 0  |g|= 1.15076e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3163467043786  |g|= 1.15076e-07  total 3 KF 7 JK
converged SCF energy = -75.3163467043786
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.72/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.72)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 22:48:11 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        60.10

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp6jsg2mwh
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp6jsg2mwh
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.256951929794082  LUMO = 0.0322932711624012
Initial guess E= -75.3169855941915  |g|= 0.00818152
macro= 0  E= -75.3170070333943  delta_E= -2.14392e-05  |g|= 0.000316962  2 KF 7 JK
macro= 1  E= -75.3170070333943  delta_E= -2.84217e-14  |g|= 4.03849e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3170070333943  |g|= 4.03849e-06  total 4 KF 12 JK
converged SCF energy = -75.3170070333943
u+d contributions  -0.0152215575245644
uu+dd contributions  -0.040647674513730796
ud contributions  -0.10921832037745684
u+d contributions  -0.0031629838645902196
uu+dd contributions  -0.02857992744582821
ud contributions  -0.0971475029468713
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.679076, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.131343, i_min=0
In the tapering subroutine, i=2, E(i)=-75.316347, i_min=1
In the tapering subroutine, i=3, E(i)=-74.625211, i_min=2
In the tapering subroutine, i=4, E(i)=-75.312189, i_min=2
In the tapering subroutine, i=5, E(i)=-74.625024, i_min=2
In the tapering subroutine, i=6, E(i)=-74.746570, i_min=2
In the tapering subroutine, i=7, E(i)=-74.662203, i_min=2
In the tapering subroutine, i=8, E(i)=-75.131343, i_min=2
In the tapering subroutine, i=9, E(i)=-75.172781, i_min=2
In the tapering subroutine, i=10, E(i)=-74.653786, i_min=2
In the tapering subroutine, i=11, E(i)=-75.316347, i_min=2
In the tapering subroutine, i=12, E(i)=-74.642680, i_min=2
In the tapering subroutine, i=13, E(i)=-75.312189, i_min=2
In the tapering subroutine, i=14, E(i)=-74.662203, i_min=2
In the tapering subroutine, i=15, E(i)=-74.785302, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0031629888246368434
uu+dd contributions  -0.028579918875745756
ud contributions  -0.09713998568443799
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0027340789831764786
uu+dd contributions  -0.028191854809903077
ud contributions  -0.09725364282038951
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0027340789831764786
uu+dd contributions  -0.028191854809903077
ud contributions  -0.09725364282038951
