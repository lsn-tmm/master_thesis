#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.94/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.94)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:18:21 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.940000000000 AA    0.000000000000   0.000000000000   1.776342557091 Bohr

nuclear repulsion = 4.50363583761702
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         4.09
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp09vxu6ww
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp09vxu6ww
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.437455516508953  LUMO (A1) = 0.0277398351398876
Initial guess E= -75.4046131882504  |g|= 0.210202
macro= 0  E= -75.4139348636162  delta_E= -0.00932168  |g|= 0.210202  2 KF 5 JK
macro= 1  E= -75.4146597292057  delta_E= -0.000724866  |g|= 0.0941812  2 KF 5 JK
macro= 2  E= -75.4129655546952  delta_E= 0.00169417  |g|= 0.061167  2 KF 5 JK
macro= 3  E= -75.4145068494442  delta_E= -0.00154129  |g|= 0.107911  2 KF 5 JK
macro= 4  E= -75.4130133637697  delta_E= 0.00149349  |g|= 0.0586911  2 KF 5 JK
macro= 5  E= -75.4145545466022  delta_E= -0.00154118  |g|= 0.10802  2 KF 5 JK
macro= 6  E= -75.4133095252865  delta_E= 0.00124502  |g|= 0.0608676  2 KF 5 JK
macro= 7  E= -75.4145476130415  delta_E= -0.00123809  |g|= 0.10336  2 KF 5 JK
macro= 8  E= -75.4131963771024  delta_E= 0.00135124  |g|= 0.0595634  2 KF 5 JK
macro= 9  E= -75.4145534186931  delta_E= -0.00135704  |g|= 0.105217  2 KF 5 JK
macro= 10  E= -75.4132208529786  delta_E= 0.00133257  |g|= 0.0598456  2 KF 5 JK
macro= 11  E= -75.4145573233968  delta_E= -0.00133647  |g|= 0.104912  2 KF 5 JK
macro= 12  E= -75.4131848496662  delta_E= 0.00137247  |g|= 0.059601  2 KF 5 JK
macro= 13  E= -75.4145614667205  delta_E= -0.00137662  |g|= 0.105516  2 KF 5 JK
macro= 14  E= -75.4131732424438  delta_E= 0.00138822  |g|= 0.0595684  2 KF 5 JK
macro= 15  E= -75.4145655278367  delta_E= -0.00139229  |g|= 0.105742  2 KF 5 JK
macro= 16  E= -75.4131518354787  delta_E= 0.00141369  |g|= 0.0594493  2 KF 5 JK
macro= 17  E= -75.4145696648115  delta_E= -0.00141783  |g|= 0.10611  2 KF 5 JK
macro= 18  E= -75.4131346765608  delta_E= 0.00143499  |g|= 0.0593647  2 KF 5 JK
macro= 19  E= -75.4145737535898  delta_E= -0.00143908  |g|= 0.10641  2 KF 5 JK
macro= 20  E= -75.4131160185385  delta_E= 0.00145774  |g|= 0.0592638  2 KF 5 JK
macro= 21  E= -75.4145778710463  delta_E= -0.00146185  |g|= 0.106727  2 KF 5 JK
macro= 22  E= -75.4130982657186  delta_E= 0.00147961  |g|= 0.059168  2 KF 5 JK
macro= 23  E= -75.4145819659804  delta_E= -0.0014837  |g|= 0.107028  2 KF 5 JK
macro= 24  E= -75.4130804284596  delta_E= 0.00150154  |g|= 0.0590681  2 KF 5 JK
macro= 25  E= -75.4145860626461  delta_E= -0.00150563  |g|= 0.107326  2 KF 5 JK
macro= 26  E= -75.41306294065  delta_E= 0.00152312  |g|= 0.0589682  2 KF 5 JK
macro= 27  E= -75.4145901433249  delta_E= -0.0015272  |g|= 0.107616  2 KF 5 JK
macro= 28  E= -75.4130456311316  delta_E= 0.00154451  |g|= 0.0588665  2 KF 5 JK
macro= 29  E= -75.4145942129783  delta_E= -0.00154858  |g|= 0.1079  2 KF 5 JK
macro= 30  E= -75.4130285865026  delta_E= 0.00156563  |g|= 0.0587641  2 KF 5 JK
macro= 31  E= -75.4145982646421  delta_E= -0.00156968  |g|= 0.108176  2 KF 5 JK
macro= 32  E= -75.4130117805401  delta_E= 0.00158648  |g|= 0.0586605  2 KF 5 JK
macro= 33  E= -75.4146022976444  delta_E= -0.00159052  |g|= 0.108446  2 KF 5 JK
macro= 34  E= -75.412995235056  delta_E= 0.00160706  |g|= 0.058556  2 KF 5 JK
macro= 35  E= -75.4146063081379  delta_E= -0.00161107  |g|= 0.108709  2 KF 5 JK
macro= 36  E= -75.4129789494011  delta_E= 0.00162736  |g|= 0.0584506  2 KF 5 JK
macro= 37  E= -75.4146102940167  delta_E= -0.00163134  |g|= 0.108966  2 KF 5 JK
macro= 38  E= -75.4129629317529  delta_E= 0.00164736  |g|= 0.0583445  2 KF 5 JK
macro= 39  E= -75.4146142523911  delta_E= -0.00165132  |g|= 0.109216  2 KF 5 JK
macro= 40  E= -75.4129471851425  delta_E= 0.00166707  |g|= 0.0582377  2 KF 5 JK
macro= 41  E= -75.4146181809067  delta_E= -0.001671  |g|= 0.10946  2 KF 5 JK
macro= 42  E= -75.4129317138344  delta_E= 0.00168647  |g|= 0.0581303  2 KF 5 JK
macro= 43  E= -75.4146220770757  delta_E= -0.00169036  |g|= 0.109697  2 KF 5 JK
macro= 44  E= -75.4129165204554  delta_E= 0.00170556  |g|= 0.0580224  2 KF 5 JK
macro= 45  E= -75.4146259386332  delta_E= -0.00170942  |g|= 0.109928  2 KF 5 JK
macro= 46  E= -75.4129016073773  delta_E= 0.00172433  |g|= 0.0579142  2 KF 5 JK
macro= 47  E= -75.4146297633631  delta_E= -0.00172816  |g|= 0.110153  2 KF 5 JK
macro= 48  E= -75.4128869761216  delta_E= 0.00174279  |g|= 0.0578057  2 KF 5 JK
macro= 49  E= -75.414633549197  delta_E= -0.00174657  |g|= 0.110372  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.414633549197  |g|= 0.110372  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.414633549197

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp09vxu6ww
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp09vxu6ww
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.266553046386212  LUMO (A1) = 0.0307034187624462
Initial guess E= -75.4159955013796  |g|= 0.0391532
macro= 0  E= -75.4161154048595  delta_E= -0.000119903  |g|= 0.0391532  2 KF 5 JK
macro= 1  E= -75.41611883993  delta_E= -3.43507e-06  |g|= 0.0239227  2 KF 5 JK
macro= 2  E= -75.4160641615612  delta_E= 5.46784e-05  |g|= 0.0314853  2 KF 5 JK
macro= 3  E= -75.4161302796379  delta_E= -6.61181e-05  |g|= 0.0285379  2 KF 5 JK
macro= 4  E= -75.4160732231636  delta_E= 5.70565e-05  |g|= 0.0305154  2 KF 5 JK
macro= 5  E= -75.4161322286649  delta_E= -5.90055e-05  |g|= 0.0280856  2 KF 5 JK
macro= 6  E= -75.416073097546  delta_E= 5.91311e-05  |g|= 0.030291  2 KF 5 JK
macro= 7  E= -75.4161314561589  delta_E= -5.83586e-05  |g|= 0.0280858  2 KF 5 JK
macro= 8  E= -75.4160730692661  delta_E= 5.83869e-05  |g|= 0.0303506  2 KF 5 JK
macro= 9  E= -75.4161315564726  delta_E= -5.84872e-05  |g|= 0.0280887  2 KF 5 JK
macro= 10  E= -75.416073082864  delta_E= 5.84736e-05  |g|= 0.0303425  2 KF 5 JK
macro= 11  E= -75.4161315380605  delta_E= -5.84552e-05  |g|= 0.0280875  2 KF 5 JK
macro= 12  E= -75.4160730779973  delta_E= 5.84601e-05  |g|= 0.0303439  2 KF 5 JK
macro= 13  E= -75.4161315381817  delta_E= -5.84602e-05  |g|= 0.0280878  2 KF 5 JK
macro= 14  E= -75.416073075771  delta_E= 5.84624e-05  |g|= 0.030344  2 KF 5 JK
macro= 15  E= -75.4161315359012  delta_E= -5.84601e-05  |g|= 0.028088  2 KF 5 JK
macro= 16  E= -75.4160730730948  delta_E= 5.84628e-05  |g|= 0.0303442  2 KF 5 JK
macro= 17  E= -75.4161315337782  delta_E= -5.84607e-05  |g|= 0.0280881  2 KF 5 JK
macro= 18  E= -75.4160730704633  delta_E= 5.84633e-05  |g|= 0.0303444  2 KF 5 JK
macro= 19  E= -75.4161315315479  delta_E= -5.84611e-05  |g|= 0.0280883  2 KF 5 JK
macro= 20  E= -75.4160730678183  delta_E= 5.84637e-05  |g|= 0.0303446  2 KF 5 JK
macro= 21  E= -75.4161315292695  delta_E= -5.84615e-05  |g|= 0.0280884  2 KF 5 JK
macro= 22  E= -75.4160730651674  delta_E= 5.84641e-05  |g|= 0.0303449  2 KF 5 JK
macro= 23  E= -75.4161315269576  delta_E= -5.84618e-05  |g|= 0.0280886  2 KF 5 JK
macro= 24  E= -75.4160730625103  delta_E= 5.84644e-05  |g|= 0.0303451  2 KF 5 JK
macro= 25  E= -75.4161315246225  delta_E= -5.84621e-05  |g|= 0.0280887  2 KF 5 JK
macro= 26  E= -75.4160730598468  delta_E= 5.84648e-05  |g|= 0.0303453  2 KF 5 JK
macro= 27  E= -75.4161315222718  delta_E= -5.84624e-05  |g|= 0.0280889  2 KF 5 JK
macro= 28  E= -75.4160730571775  delta_E= 5.84651e-05  |g|= 0.0303456  2 KF 5 JK
macro= 29  E= -75.4161315199092  delta_E= -5.84627e-05  |g|= 0.028089  2 KF 5 JK
macro= 30  E= -75.4160730545013  delta_E= 5.84654e-05  |g|= 0.0303458  2 KF 5 JK
macro= 31  E= -75.4161315175384  delta_E= -5.8463e-05  |g|= 0.0280892  2 KF 5 JK
macro= 32  E= -75.4160730518198  delta_E= 5.84657e-05  |g|= 0.030346  2 KF 5 JK
macro= 33  E= -75.4161315151603  delta_E= -5.84633e-05  |g|= 0.0280893  2 KF 5 JK
macro= 34  E= -75.4160730491316  delta_E= 5.8466e-05  |g|= 0.0303463  2 KF 5 JK
macro= 35  E= -75.4161315127764  delta_E= -5.84636e-05  |g|= 0.0280895  2 KF 5 JK
macro= 36  E= -75.4160730464374  delta_E= 5.84663e-05  |g|= 0.0303465  2 KF 5 JK
macro= 37  E= -75.4161315103872  delta_E= -5.84639e-05  |g|= 0.0280896  2 KF 5 JK
macro= 38  E= -75.4160730437373  delta_E= 5.84666e-05  |g|= 0.0303468  2 KF 5 JK
macro= 39  E= -75.4161315079936  delta_E= -5.84643e-05  |g|= 0.0280898  2 KF 5 JK
macro= 40  E= -75.4160730410308  delta_E= 5.8467e-05  |g|= 0.030347  2 KF 5 JK
macro= 41  E= -75.4161315055952  delta_E= -5.84646e-05  |g|= 0.0280899  2 KF 5 JK
macro= 42  E= -75.4160730383185  delta_E= 5.84673e-05  |g|= 0.0303472  2 KF 5 JK
macro= 43  E= -75.4161315031928  delta_E= -5.84649e-05  |g|= 0.0280901  2 KF 5 JK
macro= 44  E= -75.4160730355998  delta_E= 5.84676e-05  |g|= 0.0303475  2 KF 5 JK
macro= 45  E= -75.4161315007861  delta_E= -5.84652e-05  |g|= 0.0280902  2 KF 5 JK
macro= 46  E= -75.4160730328752  delta_E= 5.84679e-05  |g|= 0.0303477  2 KF 5 JK
macro= 47  E= -75.4161314983751  delta_E= -5.84655e-05  |g|= 0.0280904  2 KF 5 JK
macro= 48  E= -75.4160730301444  delta_E= 5.84682e-05  |g|= 0.030348  2 KF 5 JK
macro= 49  E= -75.4161314959601  delta_E= -5.84658e-05  |g|= 0.0280905  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.4161314959601  |g|= 0.0280905  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.4161314959601
**** SCF Summaries ****
Total Energy =                         -75.416131495960059
Nuclear Repulsion Energy =               4.503635837617022
One-electron Energy =                 -112.966792419906341
Two-electron Energy =                   33.047025086329256
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    0    1    0    0    0    0
single occ                     0    1    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6028679852184  | -20.6198523010743  | -20.5858836693625  occ= 2
MO #2   (A1  #2 ) energy= -1.31342453902108  | -1.38329620833231  | -1.24355286970985  occ= 2
MO #3   (A1  #3 ) energy= -0.664822048615189 | -0.686221975957194 | -0.643422121273183 occ= 2
MO #4   (E1y #1 ) energy= -0.534459492475997 | -0.553719221064141 | -0.515199763887853 occ= 2
MO #5   (E1x #1 ) energy= -0.242699468966371 | -0.641594116586755 | 0.156195178654017  occ= 1
MO #6   (A1  #4 ) energy= 0.030745052381483  | 0.0301894872133305 | 0.0313006175496313 occ= 0
MO #7   (A1  #5 ) energy= 0.137920012751998  | 0.137082871459933  | 0.13875715404405   occ= 0
MO #8   (E1x #2 ) energy= 0.158916085074865  | 0.153130027374409  | 0.16470214277532   occ= 0
MO #9   (E1y #2 ) energy= 0.162470791433467  | 0.161726700552842  | 0.163214882314093  occ= 0
MO #10  (A1  #6 ) energy= 0.187622344849776  | 0.185339846297009  | 0.189904843402549  occ= 0
MO #11  (A1  #7 ) energy= 0.265692668373369  | 0.263823431384099  | 0.267561905362625  occ= 0
MO #12  (E1x #3 ) energy= 0.273030517946203  | 0.269661766971159  | 0.276399268921245  occ= 0
MO #13  (E1y #3 ) energy= 0.276353056987431  | 0.275929230529314  | 0.276776883445546  occ= 0
MO #14  (A1  #8 ) energy= 0.437998828253119  | 0.433940969023401  | 0.44205668748283   occ= 0
MO #15  (E2x #1 ) energy= 0.648026751555352  | 0.638560425451298  | 0.657493077659408  occ= 0
MO #16  (E2y #1 ) energy= 0.648026751555352  | 0.638560425451297  | 0.657493077659407  occ= 0
MO #17  (A1  #9 ) energy= 0.64964103333453   | 0.643634540742805  | 0.655647525926224  occ= 0
MO #18  (E1x #4 ) energy= 0.722873892371925  | 0.713820933225177  | 0.73192685151867   occ= 0
MO #19  (E1y #4 ) energy= 0.728591614254218  | 0.727370548317429  | 0.729812680191008  occ= 0
MO #20  (E1x #5 ) energy= 0.879636342475701  | 0.856599364295677  | 0.902673320655719  occ= 0
MO #21  (E1y #5 ) energy= 0.88205837030714   | 0.879236025773851  | 0.88488071484043   occ= 0
MO #22  (A1  #10) energy= 0.88504648342791   | 0.881930390848706  | 0.888162576007095  occ= 0
MO #23  (A1  #11) energy= 0.925759377291584  | 0.92132857062552   | 0.930190183957694  occ= 0
MO #24  (E2x #2 ) energy= 0.94148972667752   | 0.939941487445304  | 0.943037965909737  occ= 0
MO #25  (E2y #2 ) energy= 0.941489726677512  | 0.939941487445297  | 0.943037965909729  occ= 0
MO #26  (E1x #6 ) energy= 1.0084883440346    | 0.983343826240522  | 1.03363286182867   occ= 0
MO #27  (E1y #6 ) energy= 1.01595441975476   | 1.01272721655785   | 1.01918162295166   occ= 0
MO #28  (A1  #12) energy= 1.01825821910047   | 1.01349366447549   | 1.02302277372544   occ= 0
MO #29  (E1x #7 ) energy= 1.52416326603175   | 1.51074054194456   | 1.53758599011893   occ= 0
MO #30  (E1y #7 ) energy= 1.53188860407522   | 1.53006760381079   | 1.53370960433965   occ= 0
MO #31  (A1  #13) energy= 1.69623342494194   | 1.68647418455689   | 1.70599266532711   occ= 0
MO #32  (E3x #1 ) energy= 2.05292613464563   | 2.04283280432608   | 2.06301946496519   occ= 0
MO #33  (E3y #1 ) energy= 2.05292613464563   | 2.04283280432608   | 2.06301946496519   occ= 0
MO #34  (A1  #14) energy= 2.07772473710472   | 2.06751795500993   | 2.08793151919952   occ= 0
MO #35  (E2x #3 ) energy= 2.13723330991582   | 2.10233747064392   | 2.17212914918773   occ= 0
MO #36  (E2y #3 ) energy= 2.13723330991582   | 2.10233747064392   | 2.17212914918772   occ= 0
MO #37  (E1x #8 ) energy= 2.28381340282059   | 2.2628332596596    | 2.30479354598157   occ= 0
MO #38  (E1y #8 ) energy= 2.3007414440791    | 2.2973441160301    | 2.30413877212811   occ= 0
MO #39  (E2x #4 ) energy= 2.33916357647816   | 2.33061098289766   | 2.34771617005867   occ= 0
MO #40  (E2y #4 ) energy= 2.33916357647816   | 2.33061098289766   | 2.34771617005866   occ= 0
MO #41  (A1  #15) energy= 2.42293699680944   | 2.41489640503631   | 2.43097758858272   occ= 0
MO #42  (A1  #16) energy= 2.52115150476261   | 2.51292942119489   | 2.52937358833035   occ= 0
MO #43  (E1x #9 ) energy= 2.75070926509324   | 2.72935366287907   | 2.7720648673074    occ= 0
MO #44  (E1y #9 ) energy= 2.77220405070863   | 2.76832612778126   | 2.77608197363601   occ= 0
MO #45  (A1  #17) energy= 3.62509111917228   | 3.62037437974418   | 3.62980785860039   occ= 0
MO #46  (E2x #5 ) energy= 4.05776450077522   | 4.05484512396671   | 4.06068387758374   occ= 0
MO #47  (E2y #5 ) energy= 4.05776450077522   | 4.05484512396669   | 4.06068387758373   occ= 0
MO #48  (E1x #10) energy= 4.10064520679097   | 4.05052418832152   | 4.15076622526043   occ= 0
MO #49  (E1y #10) energy= 4.11117947565473   | 4.10447751727448   | 4.11788143403499   occ= 0
MO #50  (E1x #11) energy= 4.31070087651646   | 4.30374186533451   | 4.31765988769841   occ= 0
MO #51  (E1y #11) energy= 4.32045623506715   | 4.31941427771502   | 4.32149819241928   occ= 0
MO #52  (A1  #18) energy= 4.67996946522968   | 4.67516094247251   | 4.68477798798683   occ= 0
MO #53  (A1  #19) energy= 5.21944397810731   | 5.20825577577738   | 5.23063218043729   occ= 0
MO #54  (E1x #12) energy= 5.36113513267156   | 5.34134163179      | 5.38092863355312   occ= 0
MO #55  (E1y #12) energy= 5.38515797293732   | 5.3813175764102    | 5.38899836946444   occ= 0
MO #56  (A1  #20) energy= 6.13994009366334   | 6.12978209311918   | 6.15009809420783   occ= 0
MO #57  (E3x #2 ) energy= 6.46251401030416   | 6.43753089222084   | 6.48749712838748   occ= 0
MO #58  (E3y #2 ) energy= 6.46251401030416   | 6.43753089222085   | 6.48749712838748   occ= 0
MO #59  (E2x #6 ) energy= 6.6307968776125    | 6.61246973407853   | 6.64912402114647   occ= 0
MO #60  (E2y #6 ) energy= 6.63079687761249   | 6.61246973407853   | 6.64912402114646   occ= 0
MO #61  (E2x #7 ) energy= 7.01868872213391   | 6.97728684710094   | 7.06009059716689   occ= 0
MO #62  (E2y #7 ) energy= 7.01868872213392   | 6.97728684710094   | 7.0600905971669    occ= 0
MO #63  (E1x #13) energy= 7.17432752740071   | 7.14500136870198   | 7.20365368609943   occ= 0
MO #64  (E1y #13) energy= 7.20741159703581   | 7.20201367832715   | 7.21280951574445   occ= 0
MO #65  (E1x #14) energy= 7.26811894037192   | 7.23874555069475   | 7.29749233004907   occ= 0
MO #66  (E1y #14) energy= 7.30102874951129   | 7.2954809269473    | 7.30657657207528   occ= 0
MO #67  (A1  #21) energy= 7.47125466733905   | 7.462927429727     | 7.47958190495112   occ= 0
MO #68  (A1  #22) energy= 7.77574775215089   | 7.76421678902068   | 7.78727871528111   occ= 0
MO #69  (A1  #23) energy= 13.4913422815448   | 13.4775901641144   | 13.5050943989749   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.80437
pop of  0 O 3s        0.00511
pop of  0 O 4s        0.00133
pop of  0 O 5s        0.00017
pop of  0 O 2px       0.99714
pop of  0 O 2py       1.99272
pop of  0 O 2pz       1.53965
pop of  0 O 3px       0.00016
pop of  0 O 3py       0.00091
pop of  0 O 3pz       0.00215
pop of  0 O 4px       0.00042
pop of  0 O 4py       0.00037
pop of  0 O 4pz       0.00165
pop of  0 O 5px       0.00005
pop of  0 O 5py       0.00016
pop of  0 O 5pz       0.00010
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00203
pop of  0 O 3dz^2     0.00940
pop of  0 O 3dxz      0.00099
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00036
pop of  0 O 4dz^2     0.00061
pop of  0 O 4dxz      0.00017
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00003
pop of  0 O 5dz^2     0.00018
pop of  0 O 5dxz      0.00001
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00019
pop of  0 O 4f 0      0.00107
pop of  0 O 4f 1      0.00001
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00004
pop of  0 O 5f 0      0.00011
pop of  0 O 5f 1      0.00001
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.61235
pop of  1 H 2s        0.01380
pop of  1 H 3s        0.00618
pop of  1 H 4s        0.00018
pop of  1 H 2px       0.00055
pop of  1 H 2py       0.00314
pop of  1 H 2pz       0.00074
pop of  1 H 3px       0.00035
pop of  1 H 3py       0.00001
pop of  1 H 3pz       0.00026
pop of  1 H 4px       0.00006
pop of  1 H 4py       0.00000
pop of  1 H 4pz       0.00020
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00004
pop of  1 H 3dz^2     0.00029
pop of  1 H 3dxz      0.00004
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00001
pop of  1 H 4dz^2     0.00012
pop of  1 H 4dxz      0.00003
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.36165
charge of  1H =      0.36165
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.75194
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.94/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.94)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:18:47 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       106.19

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpubcgwago
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpubcgwago
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.242699468966382  LUMO = 0.456211018722724
Initial guess E= -75.4161619361522  |g|= 0.00114786
macro= 0  E= -75.416162590424  delta_E= -6.54272e-07  |g|= 0.00114786  1 KF 3 JK
macro= 1  E= -75.416162590424  delta_E= 2.84217e-14  |g|= 1.05032e-05  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.416162590424  |g|= 1.05032e-05  total 3 KF 8 JK
converged SCF energy = -75.416162590424
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.94/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.94)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:18:48 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       111.93

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpqaoxp43y
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpqaoxp43y
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.242700774800502  LUMO = 0.456211541810765
Initial guess E= -75.4161619352003  |g|= 0.00114822
macro= 0  E= -75.416162590424  delta_E= -6.55224e-07  |g|= 0.00114822  1 KF 3 JK
macro= 1  E= -75.416162590424  delta_E= 0  |g|= 1.74382e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.416162590424  |g|= 1.74382e-07  total 3 KF 8 JK
converged SCF energy = -75.416162590424
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.94/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.94)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:18:50 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       118.50

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpwq9ptpeb
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpwq9ptpeb
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.242989449118164  LUMO = 0.030739459565096
Initial guess E= -75.4168285578797  |g|= 0.0139119
macro= 0  E= -75.4168743508794  delta_E= -4.5793e-05  |g|= 0.000494467  2 KF 7 JK
macro= 1  E= -75.4168743508795  delta_E= -9.9476e-14  |g|= 8.82394e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4168743508795  |g|= 8.82394e-06  total 4 KF 12 JK
converged SCF energy = -75.4168743508795
u+d contributions  -0.05542245954587981
uu+dd contributions  -0.08665865072242998
ud contributions  -0.18301861818212148
u+d contributions  -0.0080586472869257
uu+dd contributions  -0.039194385674872226
ud contributions  -0.1353804253816057
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.94/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.94)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:18:54 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       131.83

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpzokt4xch
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpzokt4xch
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.2434739721415  LUMO = 0.456029268304022
Initial guess E= -75.4161616605003  |g|= 0.00127896
macro= 0  E= -75.4161625904239  delta_E= -9.29924e-07  |g|= 0.00127896  1 KF 2 JK
macro= 1  E= -75.416162590424  delta_E= -5.68434e-14  |g|= 3.30325e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.416162590424  |g|= 3.30325e-07  total 3 KF 7 JK
converged SCF energy = -75.416162590424
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.94/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.94)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:18:55 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       136.16

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpncdn2thu
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpncdn2thu
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.243761400081947  LUMO = 0.0307525741992661
Initial guess E= -75.416791136127  |g|= 0.00898465
macro= 0  E= -75.4168186670795  delta_E= -2.7531e-05  |g|= 0.000348678  2 KF 7 JK
macro= 1  E= -75.4168186670795  delta_E= 1.42109e-14  |g|= 5.54284e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.4168186670795  |g|= 5.54284e-06  total 4 KF 12 JK
converged SCF energy = -75.4168186670795
u+d contributions  -0.021994033919005923
uu+dd contributions  -0.04602107844534104
ud contributions  -0.10900834352878347
u+d contributions  -0.0048820563229044905
uu+dd contributions  -0.02888817488477037
ud contributions  -0.0918664048936055
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.822007, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.245815, i_min=0
In the tapering subroutine, i=2, E(i)=-75.416163, i_min=1
In the tapering subroutine, i=3, E(i)=-74.947213, i_min=2
In the tapering subroutine, i=4, E(i)=-75.411885, i_min=2
In the tapering subroutine, i=5, E(i)=-74.936535, i_min=2
In the tapering subroutine, i=6, E(i)=-74.860266, i_min=2
In the tapering subroutine, i=7, E(i)=-74.987983, i_min=2
In the tapering subroutine, i=8, E(i)=-75.245815, i_min=2
In the tapering subroutine, i=9, E(i)=-75.262223, i_min=2
In the tapering subroutine, i=10, E(i)=-74.972904, i_min=2
In the tapering subroutine, i=11, E(i)=-75.416163, i_min=2
In the tapering subroutine, i=12, E(i)=-74.961521, i_min=2
In the tapering subroutine, i=13, E(i)=-75.411885, i_min=2
In the tapering subroutine, i=14, E(i)=-74.987983, i_min=2
In the tapering subroutine, i=15, E(i)=-74.898785, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.004882057474356276
uu+dd contributions  -0.028888176728487803
ud contributions  -0.09184935144714003
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.004867653030773218
uu+dd contributions  -0.028874771660473992
ud contributions  -0.09183508019144004
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.004867653030773218
uu+dd contributions  -0.028874771660473992
ud contributions  -0.09183508019144004
