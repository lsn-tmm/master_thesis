#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.76/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.76)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:34:21 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.760000000000 AA    0.000000000000   0.000000000000   1.436191854669 Bohr

nuclear repulsion = 5.57028643073684
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         5.51
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp7swwoy4h
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp7swwoy4h
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.473090530774603  LUMO (A1) = 0.0302732334330929
Initial guess E= -75.3451608165826  |g|= 0.20649
macro= 0  E= -75.3524268360346  delta_E= -0.00726602  |g|= 0.20649  2 KF 5 JK
macro= 1  E= -75.3534860648167  delta_E= -0.00105923  |g|= 0.100985  2 KF 5 JK
macro= 2  E= -75.3520963337615  delta_E= 0.00138973  |g|= 0.0599067  2 KF 5 JK
macro= 3  E= -75.3534893255811  delta_E= -0.00139299  |g|= 0.10634  2 KF 5 JK
macro= 4  E= -75.3524002226116  delta_E= 0.0010891  |g|= 0.060707  2 KF 5 JK
macro= 5  E= -75.3534866460687  delta_E= -0.00108642  |g|= 0.101104  2 KF 5 JK
macro= 6  E= -75.3523150319115  delta_E= 0.00117161  |g|= 0.0596332  2 KF 5 JK
macro= 7  E= -75.35349055271  delta_E= -0.00117552  |g|= 0.102562  2 KF 5 JK
macro= 8  E= -75.3523258452527  delta_E= 0.00116471  |g|= 0.0599914  2 KF 5 JK
macro= 9  E= -75.3534930471824  delta_E= -0.0011672  |g|= 0.102413  2 KF 5 JK
macro= 10  E= -75.3523043540371  delta_E= 0.00118869  |g|= 0.0598716  2 KF 5 JK
macro= 11  E= -75.3534957214091  delta_E= -0.00119137  |g|= 0.10281  2 KF 5 JK
macro= 12  E= -75.3522936477025  delta_E= 0.00120207  |g|= 0.0598699  2 KF 5 JK
macro= 13  E= -75.353498345992  delta_E= -0.0012047  |g|= 0.103028  2 KF 5 JK
macro= 14  E= -75.3522793214529  delta_E= 0.00121902  |g|= 0.0598149  2 KF 5 JK
macro= 15  E= -75.3535009901555  delta_E= -0.00122167  |g|= 0.103303  2 KF 5 JK
macro= 16  E= -75.3522663226894  delta_E= 0.00123467  |g|= 0.059772  2 KF 5 JK
macro= 17  E= -75.3535036225015  delta_E= -0.0012373  |g|= 0.103554  2 KF 5 JK
macro= 18  E= -75.3522529695762  delta_E= 0.00125065  |g|= 0.0597219  2 KF 5 JK
macro= 19  E= -75.3535062584174  delta_E= -0.00125329  |g|= 0.103809  2 KF 5 JK
macro= 20  E= -75.3522398476137  delta_E= 0.00126641  |g|= 0.0596726  2 KF 5 JK
macro= 21  E= -75.3535088895064  delta_E= -0.00126904  |g|= 0.104057  2 KF 5 JK
macro= 22  E= -75.3522267682836  delta_E= 0.00128212  |g|= 0.0596219  2 KF 5 JK
macro= 23  E= -75.3535115183074  delta_E= -0.00128475  |g|= 0.104301  2 KF 5 JK
macro= 24  E= -75.352213805189  delta_E= 0.00129771  |g|= 0.0595708  2 KF 5 JK
macro= 25  E= -75.3535141423817  delta_E= -0.00130034  |g|= 0.104541  2 KF 5 JK
macro= 26  E= -75.3522009429089  delta_E= 0.0013132  |g|= 0.0595189  2 KF 5 JK
macro= 27  E= -75.3535167613759  delta_E= -0.00131582  |g|= 0.104777  2 KF 5 JK
macro= 28  E= -75.3521881952285  delta_E= 0.00132857  |g|= 0.0594665  2 KF 5 JK
macro= 29  E= -75.3535193740606  delta_E= -0.00133118  |g|= 0.105009  2 KF 5 JK
macro= 30  E= -75.3521755656333  delta_E= 0.00134381  |g|= 0.0594135  2 KF 5 JK
macro= 31  E= -75.353521979558  delta_E= -0.00134641  |g|= 0.105237  2 KF 5 JK
macro= 32  E= -75.3521630604182  delta_E= 0.00135892  |g|= 0.0593599  2 KF 5 JK
macro= 33  E= -75.3535245768576  delta_E= -0.00136152  |g|= 0.10546  2 KF 5 JK
macro= 34  E= -75.3521506843904  delta_E= 0.00137389  |g|= 0.0593058  2 KF 5 JK
macro= 35  E= -75.3535271650109  delta_E= -0.00137648  |g|= 0.105679  2 KF 5 JK
macro= 36  E= -75.3521384422799  delta_E= 0.00138872  |g|= 0.0592511  2 KF 5 JK
macro= 37  E= -75.3535297430612  delta_E= -0.0013913  |g|= 0.105894  2 KF 5 JK
macro= 38  E= -75.3521263382981  delta_E= 0.0014034  |g|= 0.059196  2 KF 5 JK
macro= 39  E= -75.3535323100719  delta_E= -0.00140597  |g|= 0.106104  2 KF 5 JK
macro= 40  E= -75.3521143762952  delta_E= 0.00141793  |g|= 0.0591403  2 KF 5 JK
macro= 41  E= -75.35353486512  delta_E= -0.00142049  |g|= 0.10631  2 KF 5 JK
macro= 42  E= -75.3521025597244  delta_E= 0.00143231  |g|= 0.0590842  2 KF 5 JK
macro= 43  E= -75.3535374073009  delta_E= -0.00143485  |g|= 0.106512  2 KF 5 JK
macro= 44  E= -75.3520908916707  delta_E= 0.00144652  |g|= 0.0590277  2 KF 5 JK
macro= 45  E= -75.3535399357308  delta_E= -0.00144904  |g|= 0.10671  2 KF 5 JK
macro= 46  E= -75.3520793748598  delta_E= 0.00146056  |g|= 0.0589707  2 KF 5 JK
macro= 47  E= -75.353542449546  delta_E= -0.00146307  |g|= 0.106904  2 KF 5 JK
macro= 48  E= -75.3520680116723  delta_E= 0.00147444  |g|= 0.0589133  2 KF 5 JK
macro= 49  E= -75.353544947908  delta_E= -0.00147694  |g|= 0.107094  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.353544947908  |g|= 0.107094  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.353544947908

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp7swwoy4h
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp7swwoy4h
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.27652054743764  LUMO (A1) = 0.0319962293343109
Initial guess E= -75.3549471692084  |g|= 0.0372482
macro= 0  E= -75.3550477386692  delta_E= -0.000100569  |g|= 0.0372482  2 KF 5 JK
macro= 1  E= -75.3550345437086  delta_E= 1.3195e-05  |g|= 0.0223688  2 KF 5 JK
macro= 2  E= -75.3550046190029  delta_E= 2.99247e-05  |g|= 0.0310124  2 KF 5 JK
macro= 3  E= -75.3550479539408  delta_E= -4.33349e-05  |g|= 0.0264229  2 KF 5 JK
macro= 4  E= -75.3550119614687  delta_E= 3.59925e-05  |g|= 0.0298207  2 KF 5 JK
macro= 5  E= -75.3550488083386  delta_E= -3.68469e-05  |g|= 0.026092  2 KF 5 JK
macro= 6  E= -75.3550118669116  delta_E= 3.69414e-05  |g|= 0.0296681  2 KF 5 JK
macro= 7  E= -75.3550481887305  delta_E= -3.63218e-05  |g|= 0.0260935  2 KF 5 JK
macro= 8  E= -75.3550120064365  delta_E= 3.61823e-05  |g|= 0.02971  2 KF 5 JK
macro= 9  E= -75.3550482220812  delta_E= -3.62156e-05  |g|= 0.0260861  2 KF 5 JK
macro= 10  E= -75.3550120163718  delta_E= 3.62057e-05  |g|= 0.0297044  2 KF 5 JK
macro= 11  E= -75.355048218628  delta_E= -3.62023e-05  |g|= 0.0260861  2 KF 5 JK
macro= 12  E= -75.3550120326003  delta_E= 3.6186e-05  |g|= 0.029704  2 KF 5 JK
macro= 13  E= -75.3550482259596  delta_E= -3.61934e-05  |g|= 0.0260855  2 KF 5 JK
macro= 14  E= -75.3550120457336  delta_E= 3.61802e-05  |g|= 0.0297029  2 KF 5 JK
macro= 15  E= -75.3550482330517  delta_E= -3.61873e-05  |g|= 0.0260848  2 KF 5 JK
macro= 16  E= -75.3550120591007  delta_E= 3.6174e-05  |g|= 0.029702  2 KF 5 JK
macro= 17  E= -75.3550482403372  delta_E= -3.61812e-05  |g|= 0.026084  2 KF 5 JK
macro= 18  E= -75.355012072387  delta_E= 3.6168e-05  |g|= 0.0297011  2 KF 5 JK
macro= 19  E= -75.3550482476296  delta_E= -3.61752e-05  |g|= 0.0260832  2 KF 5 JK
macro= 20  E= -75.3550120856794  delta_E= 3.6162e-05  |g|= 0.0297003  2 KF 5 JK
macro= 21  E= -75.3550482549124  delta_E= -3.61692e-05  |g|= 0.0260824  2 KF 5 JK
macro= 22  E= -75.3550120989681  delta_E= 3.61559e-05  |g|= 0.0296994  2 KF 5 JK
macro= 23  E= -75.3550482621787  delta_E= -3.61632e-05  |g|= 0.0260816  2 KF 5 JK
macro= 24  E= -75.355012112256  delta_E= 3.61499e-05  |g|= 0.0296986  2 KF 5 JK
macro= 25  E= -75.3550482694268  delta_E= -3.61572e-05  |g|= 0.0260808  2 KF 5 JK
macro= 26  E= -75.3550121255414  delta_E= 3.61439e-05  |g|= 0.0296978  2 KF 5 JK
macro= 27  E= -75.3550482766567  delta_E= -3.61511e-05  |g|= 0.02608  2 KF 5 JK
macro= 28  E= -75.3550121388253  delta_E= 3.61378e-05  |g|= 0.029697  2 KF 5 JK
macro= 29  E= -75.3550482838695  delta_E= -3.6145e-05  |g|= 0.0260792  2 KF 5 JK
macro= 30  E= -75.355012152107  delta_E= 3.61318e-05  |g|= 0.0296961  2 KF 5 JK
macro= 31  E= -75.3550482910664  delta_E= -3.6139e-05  |g|= 0.0260784  2 KF 5 JK
macro= 32  E= -75.3550121653865  delta_E= 3.61257e-05  |g|= 0.0296953  2 KF 5 JK
macro= 33  E= -75.3550482982484  delta_E= -3.61329e-05  |g|= 0.0260775  2 KF 5 JK
macro= 34  E= -75.3550121786636  delta_E= 3.61196e-05  |g|= 0.0296945  2 KF 5 JK
macro= 35  E= -75.3550483054164  delta_E= -3.61268e-05  |g|= 0.0260767  2 KF 5 JK
macro= 36  E= -75.3550121919382  delta_E= 3.61135e-05  |g|= 0.0296937  2 KF 5 JK
macro= 37  E= -75.3550483125717  delta_E= -3.61206e-05  |g|= 0.0260759  2 KF 5 JK
macro= 38  E= -75.3550122052098  delta_E= 3.61074e-05  |g|= 0.0296928  2 KF 5 JK
macro= 39  E= -75.3550483197145  delta_E= -3.61145e-05  |g|= 0.0260751  2 KF 5 JK
macro= 40  E= -75.355012218479  delta_E= 3.61012e-05  |g|= 0.029692  2 KF 5 JK
macro= 41  E= -75.3550483268463  delta_E= -3.61084e-05  |g|= 0.0260743  2 KF 5 JK
macro= 42  E= -75.3550122317454  delta_E= 3.60951e-05  |g|= 0.0296912  2 KF 5 JK
macro= 43  E= -75.3550483339676  delta_E= -3.61022e-05  |g|= 0.0260734  2 KF 5 JK
macro= 44  E= -75.3550122450089  delta_E= 3.6089e-05  |g|= 0.0296904  2 KF 5 JK
macro= 45  E= -75.3550483410786  delta_E= -3.60961e-05  |g|= 0.0260726  2 KF 5 JK
macro= 46  E= -75.3550122582693  delta_E= 3.60828e-05  |g|= 0.0296896  2 KF 5 JK
macro= 47  E= -75.3550483481802  delta_E= -3.60899e-05  |g|= 0.0260718  2 KF 5 JK
macro= 48  E= -75.3550122715266  delta_E= 3.60767e-05  |g|= 0.0296888  2 KF 5 JK
macro= 49  E= -75.3550483552728  delta_E= -3.60837e-05  |g|= 0.026071  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3550483552728  |g|= 0.026071  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3550483552728
**** SCF Summaries ****
Total Energy =                         -75.355048355272771
Nuclear Repulsion Energy =               5.570286430736843
One-electron Energy =                 -114.714291812272052
Two-electron Energy =                   33.788957026262430
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    1    0    0    0    0    0
single occ                     0    0    1    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.5863796904582  | -20.6033402823857  | -20.5694190985306  occ= 2
MO #2   (A1  #2 ) energy= -1.39576116315949  | -1.46229170517557  | -1.32923062114342  occ= 2
MO #3   (A1  #3 ) energy= -0.713380571435301 | -0.738929560634337 | -0.687831582236263 occ= 2
MO #4   (E1x #1 ) energy= -0.546054520164025 | -0.565380181497018 | -0.526728858831032 occ= 2
MO #5   (E1y #1 ) energy= -0.253226164438508 | -0.653225869313169 | 0.146773540436153  occ= 1
MO #6   (A1  #4 ) energy= 0.0320716989713389 | 0.0316102679210701 | 0.0325331300216128 occ= 0
MO #7   (A1  #5 ) energy= 0.136979297666723  | 0.1363953994425    | 0.137563195890966  occ= 0
MO #8   (E1y #2 ) energy= 0.152645645045224  | 0.147625765872012  | 0.157665524218437  occ= 0
MO #9   (E1x #2 ) energy= 0.156093453696416  | 0.155449878242529  | 0.156737029150302  occ= 0
MO #10  (A1  #6 ) energy= 0.190170919529419  | 0.188146669540759  | 0.192195169518101  occ= 0
MO #11  (A1  #7 ) energy= 0.274109105596282  | 0.272775575250506  | 0.275442635942084  occ= 0
MO #12  (E1y #3 ) energy= 0.28449450917183   | 0.280311848337569  | 0.288677170006095  occ= 0
MO #13  (E1x #3 ) energy= 0.287839816607409  | 0.287316692684307  | 0.288362940530512  occ= 0
MO #14  (A1  #8 ) energy= 0.46628387916689   | 0.462778000256248  | 0.469789758077719  occ= 0
MO #15  (E2x #1 ) energy= 0.649162362801841  | 0.639521630778883  | 0.6588030948248    occ= 0
MO #16  (E2y #1 ) energy= 0.649162362801842  | 0.639521630778884  | 0.658803094824801  occ= 0
MO #17  (A1  #9 ) energy= 0.687356779154404  | 0.68110975268183   | 0.693603805627006  occ= 0
MO #18  (E1y #4 ) energy= 0.730760063674337  | 0.720905946257944  | 0.740614181090731  occ= 0
MO #19  (E1x #4 ) energy= 0.737196948829435  | 0.735848292165217  | 0.738545605493653  occ= 0
MO #20  (E1y #5 ) energy= 0.860843360816032  | 0.834854617922805  | 0.886832103709258  occ= 0
MO #21  (E1x #5 ) energy= 0.862492501292755  | 0.8594288391056    | 0.865556163479911  occ= 0
MO #22  (A1  #10) energy= 0.863421931827707  | 0.858365495042516  | 0.868478368613187  occ= 0
MO #23  (A1  #11) energy= 0.939733074535255  | 0.938595921098649  | 0.94087022797191   occ= 0
MO #24  (E2x #2 ) energy= 0.954744595642925  | 0.953319148640616  | 0.956170042645235  occ= 0
MO #25  (E2y #2 ) energy= 0.954744595642944  | 0.953319148640635  | 0.956170042645253  occ= 0
MO #26  (E1y #6 ) energy= 1.01437015233823   | 0.998290463241286  | 1.03044984143517   occ= 0
MO #27  (E1x #6 ) energy= 1.02388562800172   | 1.02166911689374   | 1.02610213910969   occ= 0
MO #28  (A1  #12) energy= 1.14823087198943   | 1.14092976765093   | 1.155531976328     occ= 0
MO #29  (E1y #7 ) energy= 1.63136223420609   | 1.608650879905     | 1.65407358850717   occ= 0
MO #30  (E1x #7 ) energy= 1.63900231716417   | 1.63596839393446   | 1.64203624039388   occ= 0
MO #31  (A1  #13) energy= 1.64758740489049   | 1.63733336376421   | 1.65784144601723   occ= 0
MO #32  (E3x #1 ) energy= 2.04593912792033   | 2.03588754587368   | 2.05599070996698   occ= 0
MO #33  (E3y #1 ) energy= 2.04593912792033   | 2.03588754587368   | 2.05599070996698   occ= 0
MO #34  (E2x #3 ) energy= 2.13644436436045   | 2.10016437127554   | 2.17272435744535   occ= 0
MO #35  (E2y #3 ) energy= 2.13644436436044   | 2.10016437127554   | 2.17272435744534   occ= 0
MO #36  (A1  #14) energy= 2.20625015133079   | 2.19598818891751   | 2.21651211374431   occ= 0
MO #37  (E1y #8 ) energy= 2.32928822259216   | 2.31302349887435   | 2.34555294630997   occ= 0
MO #38  (E1x #8 ) energy= 2.34729692099262   | 2.34447691540349   | 2.35011692658175   occ= 0
MO #39  (A1  #15) energy= 2.38660150349608   | 2.37901805755767   | 2.39418494943504   occ= 0
MO #40  (E2x #4 ) energy= 2.39244264353848   | 2.38505047830647   | 2.39983480877049   occ= 0
MO #41  (E2y #4 ) energy= 2.39244264353848   | 2.38505047830647   | 2.3998348087705    occ= 0
MO #42  (E1y #9 ) energy= 2.69101768760865   | 2.66224763377064   | 2.71978774144667   occ= 0
MO #43  (E1x #9 ) energy= 2.71225445335832   | 2.70743411949828   | 2.71707478721836   occ= 0
MO #44  (A1  #16) energy= 2.79444865714572   | 2.78449844914376   | 2.8043988651477    occ= 0
MO #45  (A1  #17) energy= 3.84131233201183   | 3.83576473420284   | 3.84685992982087   occ= 0
MO #46  (E1y #10) energy= 4.22590682480107   | 4.21163556758451   | 4.24017808201763   occ= 0
MO #47  (E1x #10) energy= 4.23882553858694   | 4.23652308693576   | 4.24112799023813   occ= 0
MO #48  (E2x #5 ) energy= 4.26273042792896   | 4.25824650966121   | 4.26721434619671   occ= 0
MO #49  (E2y #5 ) energy= 4.26273042792895   | 4.2582465096612    | 4.2672143461967    occ= 0
MO #50  (E1y #11) energy= 4.45475154040855   | 4.41153251572262   | 4.49797056509449   occ= 0
MO #51  (E1x #11) energy= 4.46730131457443   | 4.46152831334959   | 4.47307431579926   occ= 0
MO #52  (A1  #18) energy= 4.75530051178569   | 4.74853815992567   | 4.76206286364598   occ= 0
MO #53  (E1y #12) energy= 5.76578506768705   | 5.74528110809437   | 5.7862890272797    occ= 0
MO #54  (E1x #12) energy= 5.79437535211485   | 5.79031011110138   | 5.79844059312831   occ= 0
MO #55  (A1  #19) energy= 5.97785328867849   | 5.96431702798964   | 5.99138954936751   occ= 0
MO #56  (A1  #20) energy= 6.3035178396877    | 6.29077050668313   | 6.31626517269232   occ= 0
MO #57  (E3x #2 ) energy= 6.45288629575211   | 6.42788352647302   | 6.4778890650312    occ= 0
MO #58  (E3y #2 ) energy= 6.45288629575211   | 6.42788352647302   | 6.4778890650312    occ= 0
MO #59  (E2x #6 ) energy= 6.73984683947512   | 6.72124475043231   | 6.75844892851793   occ= 0
MO #60  (E2y #6 ) energy= 6.73984683947512   | 6.72124475043231   | 6.75844892851792   occ= 0
MO #61  (E2x #7 ) energy= 7.00339990819151   | 6.96239688236528   | 7.04440293401774   occ= 0
MO #62  (E2y #7 ) energy= 7.0033999081915    | 6.96239688236528   | 7.04440293401774   occ= 0
MO #63  (E1y #13) energy= 7.0313740283517    | 7.00107441624698   | 7.06167364045641   occ= 0
MO #64  (E1x #13) energy= 7.0645187444752    | 7.05903046123922   | 7.07000702771118   occ= 0
MO #65  (E1y #14) energy= 8.04818406722465   | 8.02340831999907   | 8.07295981445023   occ= 0
MO #66  (E1x #14) energy= 8.08088766363968   | 8.07592582305084   | 8.08584950422851   occ= 0
MO #67  (A1  #21) energy= 8.23345007039811   | 8.22415632598087   | 8.24274381481532   occ= 0
MO #68  (A1  #22) energy= 8.78600102276694   | 8.78015453892263   | 8.79184750661127   occ= 0
MO #69  (A1  #23) energy= 17.4503534234431   | 17.438948006559    | 17.4617588403279   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.71281
pop of  0 O 3s        0.00755
pop of  0 O 4s        0.00171
pop of  0 O 5s        0.00004
pop of  0 O 2px       1.99186
pop of  0 O 2py       0.99627
pop of  0 O 2pz       1.64058
pop of  0 O 3px       0.00060
pop of  0 O 3py       0.00022
pop of  0 O 3pz       0.00551
pop of  0 O 4px       0.00045
pop of  0 O 4py       0.00044
pop of  0 O 4pz       0.00141
pop of  0 O 5px       0.00009
pop of  0 O 5py       0.00002
pop of  0 O 5pz       0.00035
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00140
pop of  0 O 3dz^2     0.01587
pop of  0 O 3dxz      0.00291
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00013
pop of  0 O 4dz^2     0.00043
pop of  0 O 4dxz      0.00029
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00000
pop of  0 O 5dz^2     0.00026
pop of  0 O 5dxz      0.00001
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00002
pop of  0 O 4f 0      0.00213
pop of  0 O 4f 1      0.00023
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00000
pop of  0 O 5f 0      0.00001
pop of  0 O 5f 1      0.00001
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.57426
pop of  1 H 2s        0.01956
pop of  1 H 3s        0.01402
pop of  1 H 4s        0.00130
pop of  1 H 2px       0.00337
pop of  1 H 2py       0.00069
pop of  1 H 2pz       0.00037
pop of  1 H 3px       0.00012
pop of  1 H 3py       0.00066
pop of  1 H 3pz       0.00001
pop of  1 H 4px       0.00000
pop of  1 H 4py       0.00004
pop of  1 H 4pz       0.00055
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00001
pop of  1 H 3dz^2     0.00078
pop of  1 H 3dxz      0.00001
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00007
pop of  1 H 4dz^2     0.00047
pop of  1 H 4dxz      0.00005
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.38366
charge of  1H =      0.38366
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.58933
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.76/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.76)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:36:17 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        42.33

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpeic7vfdk
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpeic7vfdk
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.253226164438512  LUMO = 0.636597761378545
Initial guess E= -75.3550675679089  |g|= 0.00115537
macro= 0  E= -75.355068085525  delta_E= -5.17616e-07  |g|= 0.00115537  1 KF 4 JK
macro= 1  E= -75.3550680855251  delta_E= -1.42109e-14  |g|= 9.35123e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3550680855251  |g|= 9.35123e-08  total 3 KF 9 JK
converged SCF energy = -75.3550680855251
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.76/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.76)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:36:19 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        45.59

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmplbdr7cvt
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmplbdr7cvt
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.253227818231128  LUMO = 0.636598229119226
Initial guess E= -75.3550675672161  |g|= 0.00115554
macro= 0  E= -75.355068085525  delta_E= -5.18309e-07  |g|= 0.00115554  1 KF 3 JK
macro= 1  E= -75.355068085525  delta_E= 0  |g|= 9.37338e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.355068085525  |g|= 9.37338e-08  total 3 KF 8 JK
converged SCF energy = -75.355068085525
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.76/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.76)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:36:23 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        49.68

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpp4toqo8s
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpp4toqo8s
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.253517109520476  LUMO = 0.0320658125234097
Initial guess E= -75.3557466410832  |g|= 0.0127619
macro= 0  E= -75.355783633274  delta_E= -3.69922e-05  |g|= 0.000448736  2 KF 7 JK
macro= 1  E= -75.3557836332741  delta_E= -8.52651e-14  |g|= 6.58815e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3557836332741  |g|= 6.58815e-06  total 4 KF 12 JK
converged SCF energy = -75.3557836332741
u+d contributions  -0.05058110490160901
uu+dd contributions  -0.08306572174800057
ud contributions  -0.18303131219888094
u+d contributions  -0.00786219001728173
uu+dd contributions  -0.0402564771787148
ud contributions  -0.14007301778033637
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.76/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.76)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:36:39 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        55.96

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp3fvichy9
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp3fvichy9
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.254060818057761  LUMO = 0.63642625107936
Initial guess E= -75.3550675427188  |g|= 0.00104685
macro= 0  E= -75.355068085525  delta_E= -5.42806e-07  |g|= 0.00104685  1 KF 2 JK
macro= 1  E= -75.3550680855251  delta_E= -1.42109e-14  |g|= 1.55912e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3550680855251  |g|= 1.55912e-07  total 3 KF 7 JK
converged SCF energy = -75.3550680855251
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.76/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.76)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:36:42 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        59.87

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmplg3jmpgi
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmplg3jmpgi
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.254348654233463  LUMO = 0.0320815354704913
Initial guess E= -75.3557056701312  |g|= 0.00830223
macro= 0  E= -75.3557280360579  delta_E= -2.23659e-05  |g|= 0.000322286  2 KF 7 JK
macro= 1  E= -75.355728036058  delta_E= -4.26326e-14  |g|= 4.26078e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.355728036058  |g|= 4.26078e-06  total 4 KF 12 JK
converged SCF energy = -75.355728036058
u+d contributions  -0.016508393930123932
uu+dd contributions  -0.04174362409563918
ud contributions  -0.10939406292656909
u+d contributions  -0.003482317033669719
uu+dd contributions  -0.028706609836730325
ud contributions  -0.09635444822130351
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.721036, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.172895, i_min=0
In the tapering subroutine, i=2, E(i)=-75.355068, i_min=1
In the tapering subroutine, i=3, E(i)=-74.704516, i_min=2
In the tapering subroutine, i=4, E(i)=-75.350890, i_min=2
In the tapering subroutine, i=5, E(i)=-74.694001, i_min=2
In the tapering subroutine, i=6, E(i)=-74.788314, i_min=2
In the tapering subroutine, i=7, E(i)=-74.744272, i_min=2
In the tapering subroutine, i=8, E(i)=-75.172895, i_min=2
In the tapering subroutine, i=9, E(i)=-75.209718, i_min=2
In the tapering subroutine, i=10, E(i)=-74.732627, i_min=2
In the tapering subroutine, i=11, E(i)=-75.355068, i_min=2
In the tapering subroutine, i=12, E(i)=-74.721432, i_min=2
In the tapering subroutine, i=13, E(i)=-75.350890, i_min=2
In the tapering subroutine, i=14, E(i)=-74.744272, i_min=2
In the tapering subroutine, i=15, E(i)=-74.826965, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0034822984517396327
uu+dd contributions  -0.02870656696160968
ud contributions  -0.09634406369763736
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0026083189449174573
uu+dd contributions  -0.027890553689212172
ud contributions  -0.09614221322233915
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0026083189449174573
uu+dd contributions  -0.027890553689212172
ud contributions  -0.09614221322233915
