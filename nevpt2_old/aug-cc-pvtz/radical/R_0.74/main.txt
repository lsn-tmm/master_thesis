#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.74/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.74)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:10:14 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.740000000000 AA    0.000000000000   0.000000000000   1.398397332178 Bohr

nuclear repulsion = 5.72083471264865
point group symmetry = Coov
num. orbitals of irrep A1 = 23
num. orbitals of irrep E1x = 14
num. orbitals of irrep E1y = 14
num. orbitals of irrep E2x = 7
num. orbitals of irrep E2y = 7
num. orbitals of irrep E3x = 2
num. orbitals of irrep E3y = 2
number of shells = 22
number of NR pGTOs = 83
number of NR cGTOs = 69
basis = aug-cc-pvtz
ecp = {}
CPU time:         6.27
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmptjcsqsy4
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmptjcsqsy4
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.478358841263072  LUMO (A1) = 0.0303879016865149
Initial guess E= -75.3276022012791  |g|= 0.206599
macro= 0  E= -75.3347155208163  delta_E= -0.00711332  |g|= 0.206599  2 KF 5 JK
macro= 1  E= -75.3358249932472  delta_E= -0.00110947  |g|= 0.101797  2 KF 5 JK
macro= 2  E= -75.3344635649366  delta_E= 0.00136143  |g|= 0.0601699  2 KF 5 JK
macro= 3  E= -75.3358248609274  delta_E= -0.0013613  |g|= 0.105832  2 KF 5 JK
macro= 4  E= -75.3347667415393  delta_E= 0.00105812  |g|= 0.0607791  2 KF 5 JK
macro= 5  E= -75.3358239715892  delta_E= -0.00105723  |g|= 0.100605  2 KF 5 JK
macro= 6  E= -75.3346818964743  delta_E= 0.00114208  |g|= 0.059688  2 KF 5 JK
macro= 7  E= -75.3358273099486  delta_E= -0.00114541  |g|= 0.102073  2 KF 5 JK
macro= 8  E= -75.3346922788681  delta_E= 0.00113503  |g|= 0.0600302  2 KF 5 JK
macro= 9  E= -75.3358297535085  delta_E= -0.00113747  |g|= 0.10193  2 KF 5 JK
macro= 10  E= -75.3346717362873  delta_E= 0.00115802  |g|= 0.0599145  2 KF 5 JK
macro= 11  E= -75.3358322766124  delta_E= -0.00116054  |g|= 0.102317  2 KF 5 JK
macro= 12  E= -75.3346612601873  delta_E= 0.00117102  |g|= 0.0599124  2 KF 5 JK
macro= 13  E= -75.3358347835455  delta_E= -0.00117352  |g|= 0.102535  2 KF 5 JK
macro= 14  E= -75.3346474869533  delta_E= 0.0011873  |g|= 0.0598615  2 KF 5 JK
macro= 15  E= -75.3358372986313  delta_E= -0.00118981  |g|= 0.102806  2 KF 5 JK
macro= 16  E= -75.3346348827825  delta_E= 0.00120242  |g|= 0.0598218  2 KF 5 JK
macro= 17  E= -75.3358398073129  delta_E= -0.00120492  |g|= 0.103055  2 KF 5 JK
macro= 18  E= -75.334621968444  delta_E= 0.00121784  |g|= 0.0597758  2 KF 5 JK
macro= 19  E= -75.3358423178709  delta_E= -0.00122035  |g|= 0.103307  2 KF 5 JK
macro= 20  E= -75.334609246714  delta_E= 0.00123307  |g|= 0.0597304  2 KF 5 JK
macro= 21  E= -75.3358448250358  delta_E= -0.00123558  |g|= 0.103552  2 KF 5 JK
macro= 22  E= -75.3345965618357  delta_E= 0.00124826  |g|= 0.0596839  2 KF 5 JK
macro= 23  E= -75.33584733014  delta_E= -0.00125077  |g|= 0.103795  2 KF 5 JK
macro= 24  E= -75.3345839748737  delta_E= 0.00126336  |g|= 0.0596369  2 KF 5 JK
macro= 25  E= -75.3358498314065  delta_E= -0.00126586  |g|= 0.104033  2 KF 5 JK
macro= 26  E= -75.3345714753077  delta_E= 0.00127836  |g|= 0.0595892  2 KF 5 JK
macro= 27  E= -75.3358523283565  delta_E= -0.00128085  |g|= 0.104267  2 KF 5 JK
macro= 28  E= -75.3345590752887  delta_E= 0.00129325  |g|= 0.0595411  2 KF 5 JK
macro= 29  E= -75.3358548199662  delta_E= -0.00129574  |g|= 0.104498  2 KF 5 JK
macro= 30  E= -75.334546779121  delta_E= 0.00130804  |g|= 0.0594924  2 KF 5 JK
macro= 31  E= -75.3358573054238  delta_E= -0.00131053  |g|= 0.104724  2 KF 5 JK
macro= 32  E= -75.3345345930557  delta_E= 0.00132271  |g|= 0.0594431  2 KF 5 JK
macro= 33  E= -75.3358597838383  delta_E= -0.00132519  |g|= 0.104946  2 KF 5 JK
macro= 34  E= -75.334522522194  delta_E= 0.00133726  |g|= 0.0593934  2 KF 5 JK
macro= 35  E= -75.3358622543569  delta_E= -0.00133973  |g|= 0.105164  2 KF 5 JK
macro= 36  E= -75.3345105714679  delta_E= 0.00135168  |g|= 0.0593432  2 KF 5 JK
macro= 37  E= -75.3358647161224  delta_E= -0.00135414  |g|= 0.105378  2 KF 5 JK
macro= 38  E= -75.3344987453473  delta_E= 0.00136597  |g|= 0.0592925  2 KF 5 JK
macro= 39  E= -75.3358671682918  delta_E= -0.00136842  |g|= 0.105588  2 KF 5 JK
macro= 40  E= -75.3344870479416  delta_E= 0.00138012  |g|= 0.0592413  2 KF 5 JK
macro= 41  E= -75.3358696100325  delta_E= -0.00138256  |g|= 0.105794  2 KF 5 JK
macro= 42  E= -75.3344754829823  delta_E= 0.00139413  |g|= 0.0591896  2 KF 5 JK
macro= 43  E= -75.3358720405262  delta_E= -0.00139656  |g|= 0.105996  2 KF 5 JK
macro= 44  E= -75.3344640538425  delta_E= 0.00140799  |g|= 0.0591376  2 KF 5 JK
macro= 45  E= -75.3358744589695  delta_E= -0.00141041  |g|= 0.106194  2 KF 5 JK
macro= 46  E= -75.3344527635459  delta_E= 0.0014217  |g|= 0.0590851  2 KF 5 JK
macro= 47  E= -75.335876864577  delta_E= -0.0014241  |g|= 0.106388  2 KF 5 JK
macro= 48  E= -75.3344416147799  delta_E= 0.00143525  |g|= 0.0590323  2 KF 5 JK
macro= 49  E= -75.3358792565813  delta_E= -0.00143764  |g|= 0.106578  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3358792565813  |g|= 0.106578  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3358792565813

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmptjcsqsy4
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmptjcsqsy4
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.277777112519447  LUMO (A1) = 0.032099358465272
Initial guess E= -75.3372858627548  |g|= 0.037076
macro= 0  E= -75.3373850485458  delta_E= -9.91858e-05  |g|= 0.037076  2 KF 5 JK
macro= 1  E= -75.3373703233934  delta_E= 1.47252e-05  |g|= 0.0221827  2 KF 5 JK
macro= 2  E= -75.3373430582796  delta_E= 2.72651e-05  |g|= 0.0309268  2 KF 5 JK
macro= 3  E= -75.337383793515  delta_E= -4.07352e-05  |g|= 0.0261578  2 KF 5 JK
macro= 4  E= -75.3373502500054  delta_E= 3.35435e-05  |g|= 0.0297225  2 KF 5 JK
macro= 5  E= -75.3373845221201  delta_E= -3.42721e-05  |g|= 0.0258363  2 KF 5 JK
macro= 6  E= -75.3373501778913  delta_E= 3.43442e-05  |g|= 0.0295775  2 KF 5 JK
macro= 7  E= -75.337383908459  delta_E= -3.37306e-05  |g|= 0.0258364  2 KF 5 JK
macro= 8  E= -75.3373503380103  delta_E= 3.35704e-05  |g|= 0.029618  2 KF 5 JK
macro= 9  E= -75.3373839318059  delta_E= -3.35938e-05  |g|= 0.0258277  2 KF 5 JK
macro= 10  E= -75.3373503480245  delta_E= 3.35838e-05  |g|= 0.0296127  2 KF 5 JK
macro= 11  E= -75.3373839291414  delta_E= -3.35811e-05  |g|= 0.0258279  2 KF 5 JK
macro= 12  E= -75.3373503662269  delta_E= 3.35629e-05  |g|= 0.029612  2 KF 5 JK
macro= 13  E= -75.3373839364649  delta_E= -3.35702e-05  |g|= 0.0258272  2 KF 5 JK
macro= 14  E= -75.3373503804257  delta_E= 3.3556e-05  |g|= 0.0296108  2 KF 5 JK
macro= 15  E= -75.3373839440203  delta_E= -3.35636e-05  |g|= 0.0258265  2 KF 5 JK
macro= 16  E= -75.3373503949532  delta_E= 3.35491e-05  |g|= 0.0296098  2 KF 5 JK
macro= 17  E= -75.3373839517699  delta_E= -3.35568e-05  |g|= 0.0258257  2 KF 5 JK
macro= 18  E= -75.3373504093646  delta_E= 3.35424e-05  |g|= 0.0296089  2 KF 5 JK
macro= 19  E= -75.3373839595633  delta_E= -3.35502e-05  |g|= 0.0258248  2 KF 5 JK
macro= 20  E= -75.337350423786  delta_E= 3.35358e-05  |g|= 0.029608  2 KF 5 JK
macro= 21  E= -75.337383967359  delta_E= -3.35436e-05  |g|= 0.0258239  2 KF 5 JK
macro= 22  E= -75.3373504382028  delta_E= 3.35292e-05  |g|= 0.0296071  2 KF 5 JK
macro= 23  E= -75.3373839751475  delta_E= -3.35369e-05  |g|= 0.025823  2 KF 5 JK
macro= 24  E= -75.3373504526189  delta_E= 3.35225e-05  |g|= 0.0296061  2 KF 5 JK
macro= 25  E= -75.337383982923  delta_E= -3.35303e-05  |g|= 0.0258222  2 KF 5 JK
macro= 26  E= -75.3373504670337  delta_E= 3.35159e-05  |g|= 0.0296052  2 KF 5 JK
macro= 27  E= -75.3373839906842  delta_E= -3.35237e-05  |g|= 0.0258213  2 KF 5 JK
macro= 28  E= -75.3373504814475  delta_E= 3.35092e-05  |g|= 0.0296043  2 KF 5 JK
macro= 29  E= -75.3373839984305  delta_E= -3.3517e-05  |g|= 0.0258204  2 KF 5 JK
macro= 30  E= -75.3373504958602  delta_E= 3.35026e-05  |g|= 0.0296034  2 KF 5 JK
macro= 31  E= -75.3373840061625  delta_E= -3.35103e-05  |g|= 0.0258195  2 KF 5 JK
macro= 32  E= -75.3373505102719  delta_E= 3.34959e-05  |g|= 0.0296025  2 KF 5 JK
macro= 33  E= -75.3373840138804  delta_E= -3.35036e-05  |g|= 0.0258186  2 KF 5 JK
macro= 34  E= -75.337350524682  delta_E= 3.34892e-05  |g|= 0.0296016  2 KF 5 JK
macro= 35  E= -75.3373840215854  delta_E= -3.34969e-05  |g|= 0.0258177  2 KF 5 JK
macro= 36  E= -75.3373505390907  delta_E= 3.34825e-05  |g|= 0.0296007  2 KF 5 JK
macro= 37  E= -75.3373840292772  delta_E= -3.34902e-05  |g|= 0.0258168  2 KF 5 JK
macro= 38  E= -75.337350553498  delta_E= 3.34758e-05  |g|= 0.0295999  2 KF 5 JK
macro= 39  E= -75.3373840369566  delta_E= -3.34835e-05  |g|= 0.0258159  2 KF 5 JK
macro= 40  E= -75.337350567904  delta_E= 3.34691e-05  |g|= 0.029599  2 KF 5 JK
macro= 41  E= -75.3373840446242  delta_E= -3.34767e-05  |g|= 0.025815  2 KF 5 JK
macro= 42  E= -75.3373505823081  delta_E= 3.34623e-05  |g|= 0.0295981  2 KF 5 JK
macro= 43  E= -75.3373840522805  delta_E= -3.347e-05  |g|= 0.0258141  2 KF 5 JK
macro= 44  E= -75.3373505967103  delta_E= 3.34556e-05  |g|= 0.0295972  2 KF 5 JK
macro= 45  E= -75.3373840599261  delta_E= -3.34632e-05  |g|= 0.0258132  2 KF 5 JK
macro= 46  E= -75.3373506111112  delta_E= 3.34488e-05  |g|= 0.0295963  2 KF 5 JK
macro= 47  E= -75.3373840675608  delta_E= -3.34564e-05  |g|= 0.0258123  2 KF 5 JK
macro= 48  E= -75.3373506255101  delta_E= 3.34421e-05  |g|= 0.0295954  2 KF 5 JK
macro= 49  E= -75.3373840751856  delta_E= -3.34497e-05  |g|= 0.0258114  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3373840751856  |g|= 0.0258114  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3373840751856
**** SCF Summaries ****
Total Energy =                         -75.337384075185597
Nuclear Repulsion Energy =               5.720834712648649
One-electron Energy =                 -114.946040643730413
Two-electron Energy =                   33.887821855896156
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y
double occ                     3    1    0    0    0    0    0
single occ                     0    0    1    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.5843311322438  | -20.6013041740369  | -20.5673580904507  occ= 2
MO #2   (A1  #2 ) energy= -1.40737017752441  | -1.47353453598594  | -1.34120581906289  occ= 2
MO #3   (A1  #3 ) energy= -0.718482832337466 | -0.744533513969743 | -0.69243215070519  occ= 2
MO #4   (E1x #1 ) energy= -0.547597207792332 | -0.566941694628244 | -0.528252720956419 occ= 2
MO #5   (E1y #1 ) energy= -0.254523292444667 | -0.654834232142168 | 0.145787647252834  occ= 1
MO #6   (A1  #4 ) energy= 0.0321803997493627 | 0.0317244099599933 | 0.0326363895387321 occ= 0
MO #7   (A1  #5 ) energy= 0.136714135394317  | 0.136142519424524  | 0.137285751364098  occ= 0
MO #8   (E1y #2 ) energy= 0.151819856551386  | 0.146888567929057  | 0.156751145173715  occ= 0
MO #9   (E1x #2 ) energy= 0.155250774292577  | 0.154618700477917  | 0.155882848107236  occ= 0
MO #10  (A1  #6 ) energy= 0.190039003516552  | 0.188039451764899  | 0.192038555268195  occ= 0
MO #11  (A1  #7 ) energy= 0.27531302705955   | 0.274029199318374  | 0.276596854800745  occ= 0
MO #12  (E1y #3 ) energy= 0.286228892449304  | 0.281948017696339  | 0.290509767202265  occ= 0
MO #13  (E1x #3 ) energy= 0.289579820083657  | 0.289044714379051  | 0.290114925788262  occ= 0
MO #14  (A1  #8 ) energy= 0.46853516095242   | 0.465035432468023  | 0.472034889436905  occ= 0
MO #15  (E2x #1 ) energy= 0.649219189610614  | 0.639582435802913  | 0.658855943418314  occ= 0
MO #16  (E2y #1 ) energy= 0.649219189610616  | 0.639582435802915  | 0.658855943418316  occ= 0
MO #17  (A1  #9 ) energy= 0.691998781087659  | 0.68582219218214   | 0.698175369993186  occ= 0
MO #18  (E1y #4 ) energy= 0.732125901091476  | 0.722132985555426  | 0.742118816627527  occ= 0
MO #19  (E1x #4 ) energy= 0.7386745271094    | 0.737304906236505  | 0.740044147982301  occ= 0
MO #20  (A1  #10) energy= 0.858562286420363  | 0.85363733331376   | 0.863487239526801  occ= 0
MO #21  (E1y #5 ) energy= 0.859103914094136  | 0.833033748468826  | 0.885174079719438  occ= 0
MO #22  (E1x #5 ) energy= 0.860680779502295  | 0.8576180347738    | 0.863743524230798  occ= 0
MO #23  (A1  #11) energy= 0.943647290072286  | 0.942487346991238  | 0.944807233153345  occ= 0
MO #24  (E2x #2 ) energy= 0.955985472031728  | 0.954561351413567  | 0.957409592649888  occ= 0
MO #25  (E2y #2 ) energy= 0.955985472031729  | 0.954561351413569  | 0.95740959264989   occ= 0
MO #26  (E1y #6 ) energy= 1.0140073816076    | 0.998784259982781  | 1.0292305032324    occ= 0
MO #27  (E1x #6 ) energy= 1.02365945451924   | 1.02154328377948   | 1.025775625259     occ= 0
MO #28  (A1  #12) energy= 1.16646923329593   | 1.15896978197659   | 1.17396868461515   occ= 0
MO #29  (E1y #7 ) energy= 1.64438336215646   | 1.62070101904724   | 1.66806570526566   occ= 0
MO #30  (A1  #13) energy= 1.64750609190903   | 1.63718841766681   | 1.65782376615087   occ= 0
MO #31  (E1x #7 ) energy= 1.65211078128005   | 1.64894200619863   | 1.65527955636148   occ= 0
MO #32  (E3x #1 ) energy= 2.04526577054422   | 2.0352252232119    | 2.05530631787653   occ= 0
MO #33  (E3y #1 ) energy= 2.04526577054422   | 2.0352252232119    | 2.05530631787653   occ= 0
MO #34  (E2x #3 ) energy= 2.13644048117804   | 2.10006559166056   | 2.17281537069553   occ= 0
MO #35  (E2y #3 ) energy= 2.13644048117805   | 2.10006559166056   | 2.17281537069554   occ= 0
MO #36  (A1  #14) energy= 2.21439004887762   | 2.20401364417643   | 2.22476645357877   occ= 0
MO #37  (E1y #8 ) energy= 2.33400897230704   | 2.31796235613089   | 2.35005558848318   occ= 0
MO #38  (E1x #8 ) energy= 2.3520166417175    | 2.34922743284594   | 2.35480585058905   occ= 0
MO #39  (A1  #15) energy= 2.389878959515     | 2.38236468936819   | 2.39739322966161   occ= 0
MO #40  (E2x #4 ) energy= 2.39877802350706   | 2.39145270523054   | 2.40610334178358   occ= 0
MO #41  (E2y #4 ) energy= 2.39877802350706   | 2.39145270523054   | 2.40610334178358   occ= 0
MO #42  (E1y #9 ) energy= 2.67886569699849   | 2.64969428140203   | 2.70803711259493   occ= 0
MO #43  (E1x #9 ) energy= 2.7000459556419    | 2.69518392419524   | 2.70490798708857   occ= 0
MO #44  (A1  #16) energy= 2.83898085642058   | 2.82876648416814   | 2.84919522867303   occ= 0
MO #45  (A1  #17) energy= 3.86799392991699   | 3.86244689263896   | 3.87354096719501   occ= 0
MO #46  (E1y #10) energy= 4.23862117097589   | 4.22763206655513   | 4.24961027539664   occ= 0
MO #47  (E1x #10) energy= 4.25200694420845   | 4.25011156767701   | 4.25390232073989   occ= 0
MO #48  (E2x #5 ) energy= 4.29028314960727   | 4.28560983741011   | 4.29495646180442   occ= 0
MO #49  (E2y #5 ) energy= 4.29028314960727   | 4.28560983741011   | 4.29495646180442   occ= 0
MO #50  (E1y #11) energy= 4.48580120051128   | 4.43891192628835   | 4.53269047473421   occ= 0
MO #51  (E1x #11) energy= 4.49868633270048   | 4.4924018144839    | 4.50497085091707   occ= 0
MO #52  (A1  #18) energy= 4.75909404847074   | 4.75211210482756   | 4.7660759921137    occ= 0
MO #53  (E1y #12) energy= 5.78809978925129   | 5.76731416839202   | 5.80888541011052   occ= 0
MO #54  (E1x #12) energy= 5.81681086038028   | 5.81273546902439   | 5.82088625173617   occ= 0
MO #55  (A1  #19) energy= 6.0455010738047    | 6.03214461721144   | 6.05885753039782   occ= 0
MO #56  (A1  #20) energy= 6.35113062281725   | 6.33772638162851   | 6.36453486400598   occ= 0
MO #57  (E3x #2 ) energy= 6.4517769095036    | 6.42676415086631   | 6.4767896681409    occ= 0
MO #58  (E3y #2 ) energy= 6.4517769095036    | 6.42676415086631   | 6.4767896681409    occ= 0
MO #59  (E2x #6 ) energy= 6.75666705234739   | 6.73813067202499   | 6.77520343266978   occ= 0
MO #60  (E2y #6 ) energy= 6.7566670523474    | 6.73813067202501   | 6.7752034326698    occ= 0
MO #61  (E2x #7 ) energy= 7.00036519593043   | 6.95928881825273   | 7.04144157360813   occ= 0
MO #62  (E2y #7 ) energy= 7.00036519593044   | 6.95928881825274   | 7.04144157360814   occ= 0
MO #63  (E1y #13) energy= 7.00893908734186   | 6.9793960488162    | 7.03848212586752   occ= 0
MO #64  (E1x #13) energy= 7.04237032733167   | 7.03694761857679   | 7.04779303608654   occ= 0
MO #65  (E1y #14) energy= 8.17464579618088   | 8.14984430332251   | 8.19944728903924   occ= 0
MO #66  (E1x #14) energy= 8.20731312133358   | 8.20235794023771   | 8.21226830242945   occ= 0
MO #67  (A1  #21) energy= 8.30252728728528   | 8.29358477906232   | 8.31146979550818   occ= 0
MO #68  (A1  #22) energy= 9.01950944142351   | 9.01373269829123   | 9.02528618455585   occ= 0
MO #69  (A1  #23) energy= 17.9083175568927   | 17.8971807665738   | 17.9194543472119   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.70147
pop of  0 O 3s        0.00775
pop of  0 O 4s        0.00173
pop of  0 O 5s        0.00003
pop of  0 O 2px       1.99184
pop of  0 O 2py       0.99618
pop of  0 O 2pz       1.65297
pop of  0 O 3px       0.00055
pop of  0 O 3py       0.00024
pop of  0 O 3pz       0.00601
pop of  0 O 4px       0.00045
pop of  0 O 4py       0.00044
pop of  0 O 4pz       0.00135
pop of  0 O 5px       0.00009
pop of  0 O 5py       0.00002
pop of  0 O 5pz       0.00039
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00144
pop of  0 O 3dz^2     0.01680
pop of  0 O 3dxz      0.00300
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00012
pop of  0 O 4dz^2     0.00038
pop of  0 O 4dxz      0.00027
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00000
pop of  0 O 5dz^2     0.00025
pop of  0 O 5dxz      0.00001
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00002
pop of  0 O 4f 0      0.00227
pop of  0 O 4f 1      0.00023
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00000
pop of  0 O 5f 0      0.00002
pop of  0 O 5f 1      0.00001
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  1 H 1s        0.56956
pop of  1 H 2s        0.02000
pop of  1 H 3s        0.01510
pop of  1 H 4s        0.00158
pop of  1 H 2px       0.00334
pop of  1 H 2py       0.00070
pop of  1 H 2pz       0.00034
pop of  1 H 3px       0.00014
pop of  1 H 3py       0.00071
pop of  1 H 3pz       0.00003
pop of  1 H 4px       0.00000
pop of  1 H 4py       0.00003
pop of  1 H 4pz       0.00058
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00001
pop of  1 H 3dz^2     0.00087
pop of  1 H 3dxz      0.00001
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00008
pop of  1 H 4dz^2     0.00053
pop of  1 H 4dxz      0.00005
pop of  1 H 4dx2-y2    0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -0.38635
charge of  1H =      0.38635
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.57102
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.74/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.74)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:12:35 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        45.60

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpugefdylw
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpugefdylw
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.254523292444671  LUMO = 0.656952520724289
Initial guess E= -75.3374021127722  |g|= 0.00114222
macro= 0  E= -75.3374026041143  delta_E= -4.91342e-07  |g|= 0.00114222  1 KF 4 JK
macro= 1  E= -75.3374026041143  delta_E= 1.42109e-14  |g|= 8.52281e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3374026041143  |g|= 8.52281e-08  total 3 KF 9 JK
converged SCF energy = -75.3374026041143
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.74/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.74)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:12:38 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        49.28

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpg_mjw8bg
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpg_mjw8bg
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.254524974185619  LUMO = 0.656952968294587
Initial guess E= -75.3374021121166  |g|= 0.00114237
macro= 0  E= -75.3374026041143  delta_E= -4.91998e-07  |g|= 0.00114237  1 KF 3 JK
macro= 1  E= -75.3374026041143  delta_E= 1.42109e-14  |g|= 8.54e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3374026041143  |g|= 8.54e-08  total 3 KF 8 JK
converged SCF energy = -75.3374026041143
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.74/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.74)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:12:43 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        53.85

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpv6tl75_4
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpv6tl75_4
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.254814421163602  LUMO = 0.0321744830312968
Initial guess E= -75.3380822551356  |g|= 0.012637
macro= 0  E= -75.3381183358398  delta_E= -3.60807e-05  |g|= 0.000443574  2 KF 7 JK
macro= 1  E= -75.3381183358399  delta_E= -2.84217e-14  |g|= 6.3521e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3381183358399  |g|= 6.3521e-06  total 4 KF 12 JK
converged SCF energy = -75.3381183358399
u+d contributions  -0.04994027670187306
uu+dd contributions  -0.08257447050454852
ud contributions  -0.18294284633913793
u+d contributions  -0.007820978240394507
uu+dd contributions  -0.04036623858025591
ud contributions  -0.14058860519138827
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.74/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.74)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:12:57 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        60.41

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmps_w4doej
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmps_w4doej
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.25535323406539  LUMO = 0.656784922979166
Initial guess E= -75.3374021161961  |g|= 0.00100009
macro= 0  E= -75.3374026041143  delta_E= -4.87918e-07  |g|= 0.00100009  1 KF 2 JK
macro= 1  E= -75.3374026041143  delta_E= -1.42109e-14  |g|= 1.34946e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3374026041143  |g|= 1.34946e-07  total 3 KF 7 JK
converged SCF energy = -75.3374026041143
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvtz/radical/R_0.74/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.74)]],basis='aug-cc-pvtz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Wed Jan  5 23:13:01 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        64.55

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp1ofdrahi
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp1ofdrahi
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.255641223527146  LUMO = 0.0321901070364727
Initial guess E= -75.3380408603313  |g|= 0.00824014
macro= 0  E= -75.3380627515724  delta_E= -2.18912e-05  |g|= 0.000319588  2 KF 7 JK
macro= 1  E= -75.3380627515724  delta_E= -1.42109e-14  |g|= 4.14331e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3380627515724  |g|= 4.14331e-06  total 4 KF 12 JK
converged SCF energy = -75.3380627515724
u+d contributions  -0.015859729145429304
uu+dd contributions  -0.04119510306347452
ud contributions  -0.10931459205555198
u+d contributions  -0.0033185568444341882
uu+dd contributions  -0.028643900309890277
ud contributions  -0.09676054042962164
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.701784, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.153827, i_min=0
In the tapering subroutine, i=2, E(i)=-75.337403, i_min=1
In the tapering subroutine, i=3, E(i)=-74.666375, i_min=2
In the tapering subroutine, i=4, E(i)=-75.333235, i_min=2
In the tapering subroutine, i=5, E(i)=-74.655892, i_min=2
In the tapering subroutine, i=6, E(i)=-74.769165, i_min=2
In the tapering subroutine, i=7, E(i)=-74.704896, i_min=2
In the tapering subroutine, i=8, E(i)=-75.153827, i_min=2
In the tapering subroutine, i=9, E(i)=-75.192957, i_min=2
In the tapering subroutine, i=10, E(i)=-74.694723, i_min=2
In the tapering subroutine, i=11, E(i)=-75.337403, i_min=2
In the tapering subroutine, i=12, E(i)=-74.683571, i_min=2
In the tapering subroutine, i=13, E(i)=-75.333235, i_min=2
In the tapering subroutine, i=14, E(i)=-74.704896, i_min=2
In the tapering subroutine, i=15, E(i)=-74.807854, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0033185296013212916
uu+dd contributions  -0.028643856197063736
ud contributions  -0.09675161771444561
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003319096932802091
uu+dd contributions  -0.028644402118117168
ud contributions  -0.09675242187305062
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003319096932802091
uu+dd contributions  -0.028644402118117168
ud contributions  -0.09675242187305062
