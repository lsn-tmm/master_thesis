#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:33:28 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.060000000000 AA    0.000000000000   0.000000000000   2.003109692039 Bohr

nuclear repulsion = 3.99379027109434
point group symmetry = Coov
num. orbitals of irrep A1 = 14
num. orbitals of irrep E1x = 7
num. orbitals of irrep E1y = 7
num. orbitals of irrep E2x = 2
num. orbitals of irrep E2y = 2
number of shells = 13
number of NR pGTOs = 46
number of NR cGTOs = 32
basis = aug-cc-pvdz
ecp = {}
CPU time:         4.21
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpfc82rhkt
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpfc82rhkt
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.419760011655153  LUMO (A1) = 0.0272308593636606
Initial guess E= -75.3772317220351  |g|= 0.199231
macro= 0  E= -75.387916759661  delta_E= -0.010685  |g|= 0.199231  2 KF 5 JK
macro= 1  E= -75.3887385185361  delta_E= -0.000821759  |g|= 0.088101  2 KF 5 JK
macro= 2  E= -75.3871014498354  delta_E= 0.00163707  |g|= 0.0511195  2 KF 5 JK
macro= 3  E= -75.3886395506397  delta_E= -0.0015381  |g|= 0.0979673  2 KF 5 JK
macro= 4  E= -75.3871132551489  delta_E= 0.0015263  |g|= 0.0510485  2 KF 5 JK
macro= 5  E= -75.3886484076477  delta_E= -0.00153515  |g|= 0.0976832  2 KF 5 JK
macro= 6  E= -75.3871285847327  delta_E= 0.00151982  |g|= 0.0510075  2 KF 5 JK
macro= 7  E= -75.3886628786101  delta_E= -0.00153429  |g|= 0.0977173  2 KF 5 JK
macro= 8  E= -75.3871321853309  delta_E= 0.00153069  |g|= 0.0508888  2 KF 5 JK
macro= 9  E= -75.3886709130979  delta_E= -0.00153873  |g|= 0.0977711  2 KF 5 JK
macro= 10  E= -75.3871047976311  delta_E= 0.00156612  |g|= 0.0506885  2 KF 5 JK
macro= 11  E= -75.3886753810041  delta_E= -0.00157058  |g|= 0.0981967  2 KF 5 JK
macro= 12  E= -75.3870807249908  delta_E= 0.00159466  |g|= 0.0505272  2 KF 5 JK
macro= 13  E= -75.3886805340013  delta_E= -0.00159981  |g|= 0.0985918  2 KF 5 JK
macro= 14  E= -75.3870608575476  delta_E= 0.00161968  |g|= 0.0503617  2 KF 5 JK
macro= 15  E= -75.3886860790296  delta_E= -0.00162522  |g|= 0.098932  2 KF 5 JK
macro= 16  E= -75.3870411734347  delta_E= 0.00164491  |g|= 0.0501842  2 KF 5 JK
macro= 17  E= -75.3886914734562  delta_E= -0.0016503  |g|= 0.0992621  2 KF 5 JK
macro= 18  E= -75.387021464107  delta_E= 0.00167001  |g|= 0.0500042  2 KF 5 JK
macro= 19  E= -75.3886967414664  delta_E= -0.00167528  |g|= 0.0995865  2 KF 5 JK
macro= 20  E= -75.3870022510325  delta_E= 0.00169449  |g|= 0.0498248  2 KF 5 JK
macro= 21  E= -75.3887019498818  delta_E= -0.0016997  |g|= 0.0999001  2 KF 5 JK
macro= 22  E= -75.3869835592242  delta_E= 0.00171839  |g|= 0.0496456  2 KF 5 JK
macro= 23  E= -75.3887070919684  delta_E= -0.00172353  |g|= 0.100203  2 KF 5 JK
macro= 24  E= -75.3869653238572  delta_E= 0.00174177  |g|= 0.0494664  2 KF 5 JK
macro= 25  E= -75.3887121557823  delta_E= -0.00174683  |g|= 0.100495  2 KF 5 JK
macro= 26  E= -75.3869475402005  delta_E= 0.00176462  |g|= 0.0492878  2 KF 5 JK
macro= 27  E= -75.3887171388728  delta_E= -0.0017696  |g|= 0.100777  2 KF 5 JK
macro= 28  E= -75.3869302125117  delta_E= 0.00178693  |g|= 0.04911  2 KF 5 JK
macro= 29  E= -75.3863994394362  delta_E= 0.000530773  |g|= 0.101049  2 KF 5 JK
macro= 30  E= -75.3880441270746  delta_E= -0.00164469  |g|= 0.0960764  2 KF 5 JK
macro= 31  E= -75.3887936369881  delta_E= -0.00074951  |g|= 0.0840614  2 KF 5 JK
macro= 32  E= -75.386894425329  delta_E= 0.00189921  |g|= 0.047191  2 KF 5 JK
macro= 33  E= -75.3862050255038  delta_E= 0.0006894  |g|= 0.101741  2 KF 5 JK
macro= 34  E= -75.3879821422821  delta_E= -0.00177712  |g|= 0.0985824  2 KF 5 JK
macro= 35  E= -75.3864268822323  delta_E= 0.00155526  |g|= 0.0856789  2 KF 5 JK
macro= 36  E= -75.3879542144316  delta_E= -0.00152733  |g|= 0.0957191  2 KF 5 JK
macro= 37  E= -75.3863992594739  delta_E= 0.00155495  |g|= 0.0863812  2 KF 5 JK
macro= 38  E= -75.387952887391  delta_E= -0.00155363  |g|= 0.0961828  2 KF 5 JK
macro= 39  E= -75.3863803000264  delta_E= 0.00157259  |g|= 0.0864794  2 KF 5 JK
macro= 40  E= -75.3879440738147  delta_E= -0.00156377  |g|= 0.0964518  2 KF 5 JK
macro= 41  E= -75.3863555620915  delta_E= 0.00158851  |g|= 0.0867299  2 KF 5 JK
macro= 42  E= -75.3879354952433  delta_E= -0.00157993  |g|= 0.096811  2 KF 5 JK
macro= 43  E= -75.3863313758045  delta_E= 0.00160412  |g|= 0.0869815  2 KF 5 JK
macro= 44  E= -75.3879266560382  delta_E= -0.00159528  |g|= 0.0971561  2 KF 5 JK
macro= 45  E= -75.3863073689467  delta_E= 0.00161929  |g|= 0.0872397  2 KF 5 JK
macro= 46  E= -75.3879177814694  delta_E= -0.00161041  |g|= 0.0974955  2 KF 5 JK
macro= 47  E= -75.3862836447476  delta_E= 0.00163414  |g|= 0.0874979  2 KF 5 JK
macro= 48  E= -75.3879089001688  delta_E= -0.00162526  |g|= 0.0978282  2 KF 5 JK
macro= 49  E= -75.3862602055036  delta_E= 0.00164869  |g|= 0.0877551  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3862602055036  |g|= 0.0877551  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3862602055036

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpfc82rhkt
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpfc82rhkt
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.280907236555935  LUMO (A1) = 0.0340909968830738
Initial guess E= -75.389067890067  |g|= 0.0711862
macro= 0  E= -75.3900130016014  delta_E= -0.000945112  |g|= 0.0711862  2 KF 5 JK
macro= 1  E= -75.3900745879218  delta_E= -6.15863e-05  |g|= 0.0250545  2 KF 5 JK
macro= 2  E= -75.3899013498296  delta_E= 0.000173238  |g|= 0.0155983  2 KF 5 JK
macro= 3  E= -75.3900787086848  delta_E= -0.000177359  |g|= 0.0304526  2 KF 5 JK
macro= 4  E= -75.3899316551086  delta_E= 0.000147054  |g|= 0.0117173  2 KF 5 JK
macro= 5  E= -75.3900443089914  delta_E= -0.000112654  |g|= 0.0285553  2 KF 5 JK
macro= 6  E= -75.3899769978628  delta_E= 6.73111e-05  |g|= 0.0166764  2 KF 5 JK
macro= 7  E= -75.3900625458723  delta_E= -8.5548e-05  |g|= 0.0256939  2 KF 5 JK
macro= 8  E= -75.3899751786452  delta_E= 8.73672e-05  |g|= 0.0146862  2 KF 5 JK
macro= 9  E= -75.390063099177  delta_E= -8.79205e-05  |g|= 0.0260305  2 KF 5 JK
macro= 10  E= -75.3899642739188  delta_E= 9.88253e-05  |g|= 0.0145184  2 KF 5 JK
macro= 11  E= -75.3900635180087  delta_E= -9.92441e-05  |g|= 0.0264742  2 KF 5 JK
macro= 12  E= -75.3899163093572  delta_E= 0.000147209  |g|= 0.0147167  2 KF 5 JK
macro= 13  E= -75.3900654328747  delta_E= -0.000149124  |g|= 0.0299308  2 KF 5 JK
macro= 14  E= -75.3899166000956  delta_E= 0.000148833  |g|= 0.0151039  2 KF 5 JK
macro= 15  E= -75.3900650707619  delta_E= -0.000148471  |g|= 0.029899  2 KF 5 JK
macro= 16  E= -75.3899153872253  delta_E= 0.000149684  |g|= 0.0150875  2 KF 5 JK
macro= 17  E= -75.3900649401691  delta_E= -0.000149553  |g|= 0.0299903  2 KF 5 JK
macro= 18  E= -75.3899150638568  delta_E= 0.000149876  |g|= 0.0150658  2 KF 5 JK
macro= 19  E= -75.3900649609239  delta_E= -0.000149897  |g|= 0.0300175  2 KF 5 JK
macro= 20  E= -75.389915219501  delta_E= 0.000149741  |g|= 0.0150523  2 KF 5 JK
macro= 21  E= -75.3900650237027  delta_E= -0.000149804  |g|= 0.0300105  2 KF 5 JK
macro= 22  E= -75.3899154496862  delta_E= 0.000149574  |g|= 0.0150432  2 KF 5 JK
macro= 23  E= -75.3900650843411  delta_E= -0.000149635  |g|= 0.0299982  2 KF 5 JK
macro= 24  E= -75.3899156443549  delta_E= 0.00014944  |g|= 0.0150349  2 KF 5 JK
macro= 25  E= -75.3900651381048  delta_E= -0.000149494  |g|= 0.0299883  2 KF 5 JK
macro= 26  E= -75.3899158128336  delta_E= 0.000149325  |g|= 0.0150264  2 KF 5 JK
macro= 27  E= -75.3900651891609  delta_E= -0.000149376  |g|= 0.0299803  2 KF 5 JK
macro= 28  E= -75.3899159742514  delta_E= 0.000149215  |g|= 0.0150176  2 KF 5 JK
macro= 29  E= -75.3900652400358  delta_E= -0.000149266  |g|= 0.0299728  2 KF 5 JK
macro= 30  E= -75.3899161355558  delta_E= 0.000149104  |g|= 0.0150088  2 KF 5 JK
macro= 31  E= -75.3900652912243  delta_E= -0.000149156  |g|= 0.0299652  2 KF 5 JK
macro= 32  E= -75.389916297001  delta_E= 0.000148994  |g|= 0.015  2 KF 5 JK
macro= 33  E= -75.3900653425621  delta_E= -0.000149046  |g|= 0.0299576  2 KF 5 JK
macro= 34  E= -75.3899164576717  delta_E= 0.000148885  |g|= 0.0149912  2 KF 5 JK
macro= 35  E= -75.390065393895  delta_E= -0.000148936  |g|= 0.02995  2 KF 5 JK
macro= 36  E= -75.3899166171213  delta_E= 0.000148777  |g|= 0.0149824  2 KF 5 JK
macro= 37  E= -75.3900654451744  delta_E= -0.000148828  |g|= 0.0299425  2 KF 5 JK
macro= 38  E= -75.3899167752858  delta_E= 0.00014867  |g|= 0.0149735  2 KF 5 JK
macro= 39  E= -75.3900654963985  delta_E= -0.000148721  |g|= 0.029935  2 KF 5 JK
macro= 40  E= -75.3899169322012  delta_E= 0.000148564  |g|= 0.0149646  2 KF 5 JK
macro= 41  E= -75.3900655475696  delta_E= -0.000148615  |g|= 0.0299276  2 KF 5 JK
macro= 42  E= -75.3899170878905  delta_E= 0.00014846  |g|= 0.0149557  2 KF 5 JK
macro= 43  E= -75.3900655986851  delta_E= -0.000148511  |g|= 0.0299202  2 KF 5 JK
macro= 44  E= -75.3899172423554  delta_E= 0.000148356  |g|= 0.0149469  2 KF 5 JK
macro= 45  E= -75.3900656497392  delta_E= -0.000148407  |g|= 0.0299129  2 KF 5 JK
macro= 46  E= -75.3899173955906  delta_E= 0.000148254  |g|= 0.0149379  2 KF 5 JK
macro= 47  E= -75.3900657007256  delta_E= -0.000148305  |g|= 0.0299057  2 KF 5 JK
macro= 48  E= -75.3899175475912  delta_E= 0.000148153  |g|= 0.014929  2 KF 5 JK
macro= 49  E= -75.3900657516382  delta_E= -0.000148204  |g|= 0.0298985  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3900657516382  |g|= 0.0298985  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3900657516382
**** SCF Summaries ****
Total Energy =                         -75.390065751638232
Nuclear Repulsion Energy =               3.993790271094340
One-electron Energy =                 -111.905775037490230
Two-electron Energy =                   32.521919014757664
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    0    0    0
single occ                     0    0    1    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6451721922304  | -20.6619693132047  | -20.628375071256   occ= 2
MO #2   (A1  #2 ) energy= -1.28903972307678  | -1.3606307743036   | -1.21744867184996  occ= 2
MO #3   (A1  #3 ) energy= -0.638952487148993 | -0.657928390052345 | -0.619976584245643 occ= 2
MO #4   (E1x #1 ) energy= -0.535680750339445 | -0.55482278390752  | -0.516538716771371 occ= 2
MO #5   (E1y #1 ) energy= -0.247303305557896 | -0.644246702383656 | 0.149640091267859  occ= 1
MO #6   (A1  #4 ) energy= 0.0347984902077785 | 0.0339083897164958 | 0.0356885906990608 occ= 0
MO #7   (A1  #5 ) energy= 0.18043758238178   | 0.178685425445511  | 0.182189739318049  occ= 0
MO #8   (E1y #2 ) energy= 0.196850277094614  | 0.18798903825277   | 0.205711515936459  occ= 0
MO #9   (E1x #2 ) energy= 0.201550387262778  | 0.200321758303778  | 0.202779016221779  occ= 0
MO #10  (A1  #6 ) energy= 0.218290632633081  | 0.214657335843213  | 0.221923929422952  occ= 0
MO #11  (A1  #7 ) energy= 0.305725454728974  | 0.30230290487264   | 0.309148004585313  occ= 0
MO #12  (E1y #3 ) energy= 0.381348884868709  | 0.375926684150723  | 0.386771085586698  occ= 0
MO #13  (E1x #3 ) energy= 0.385301049144673  | 0.384591356665953  | 0.386010741623393  occ= 0
MO #14  (A1  #8 ) energy= 0.606891225733138  | 0.601083457121716  | 0.61269899434457   occ= 0
MO #15  (A1  #9 ) energy= 0.823678653678017  | 0.817330396444789  | 0.83002691091125   occ= 0
MO #16  (E2x #1 ) energy= 0.978880290040693  | 0.958289724784791  | 0.999470855296595  occ= 0
MO #17  (E2y #1 ) energy= 0.978880290040696  | 0.958289724784793  | 0.999470855296597  occ= 0
MO #18  (E1y #4 ) energy= 1.10728477489913   | 1.08562028034723   | 1.12894926945101   occ= 0
MO #19  (E1x #4 ) energy= 1.116361429506     | 1.11330630048688   | 1.11941655852513   occ= 0
MO #20  (A1  #10) energy= 1.31102930619351   | 1.30494070952701   | 1.31711790286002   occ= 0
MO #21  (E1x #5 ) energy= 1.38122761726028   | 1.37316174314663   | 1.38929349137392   occ= 0
MO #22  (E1y #5 ) energy= 1.38522679560138   | 1.31484896264897   | 1.45560462855378   occ= 0
MO #23  (A1  #11) energy= 1.64297939688396   | 1.63079276197109   | 1.65516603179684   occ= 0
MO #24  (E1y #6 ) energy= 1.96865076052754   | 1.96365971432162   | 1.97364180673346   occ= 0
MO #25  (E1x #6 ) energy= 1.97950250813284   | 1.97849003838272   | 1.98051497788296   occ= 0
MO #26  (A1  #12) energy= 2.32367938356837   | 2.31191108078528   | 2.33544768635146   occ= 0
MO #27  (A1  #13) energy= 2.76263344436068   | 2.75368660203317   | 2.77158028668815   occ= 0
MO #28  (E2x #2 ) energy= 3.53529364798392   | 3.48920217964363   | 3.58138511632422   occ= 0
MO #29  (E2y #2 ) energy= 3.53529364798393   | 3.48920217964363   | 3.58138511632422   occ= 0
MO #30  (E1y #7 ) energy= 3.62569704132434   | 3.58123688312988   | 3.67015719951881   occ= 0
MO #31  (E1x #7 ) energy= 3.64657861574771   | 3.63966694045443   | 3.65349029104099   occ= 0
MO #32  (A1  #14) energy= 3.97023964698601   | 3.95318219031135   | 3.98729710366066   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.85310
pop of  0 O 3s        0.00400
pop of  0 O 4s        0.00132
pop of  0 O 2px       1.99253
pop of  0 O 2py       0.99716
pop of  0 O 2pz       1.47472
pop of  0 O 3px       0.00169
pop of  0 O 3py       0.00015
pop of  0 O 3pz       0.00117
pop of  0 O 4px       0.00086
pop of  0 O 4py       0.00115
pop of  0 O 4pz       0.00111
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00079
pop of  0 O 3dz^2     0.00431
pop of  0 O 3dxz      0.00152
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00017
pop of  0 O 4dz^2     0.00012
pop of  0 O 4dxz      0.00036
pop of  0 O 4dx2-y2    0.00000
pop of  1 H 1s        0.64196
pop of  1 H 2s        0.01182
pop of  1 H 3s        0.00338
pop of  1 H 2px       0.00304
pop of  1 H 2py       0.00035
pop of  1 H 2pz       0.00159
pop of  1 H 3px       0.00000
pop of  1 H 3py       0.00024
pop of  1 H 3pz       0.00141
 ** Mulliken atomic charges  **
charge of  0O =     -0.33621
charge of  1H =      0.33621
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.84313
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:33:31 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:         7.93

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp_g_z6blh
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp_g_z6blh
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.247303305557897  LUMO = 0.34837040195789
Initial guess E= -75.3900708801742  |g|= 0.000384691
macro= 0  E= -75.3900709444015  delta_E= -6.42273e-08  |g|= 0.000384691  1 KF 3 JK
macro= 1  E= -75.3900709444014  delta_E= 1.42109e-14  |g|= 5.3113e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3900709444014  |g|= 5.3113e-06  total 3 KF 8 JK
converged SCF energy = -75.3900709444014
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:33:31 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:         8.77

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpkhryto72
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpkhryto72
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.247303569563951  LUMO = 0.348370522346683
Initial guess E= -75.3900708801521  |g|= 0.000384876
macro= 0  E= -75.3900709444015  delta_E= -6.42494e-08  |g|= 0.000384876  1 KF 3 JK
macro= 1  E= -75.3900709444015  delta_E= 0  |g|= 1.3515e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3900709444015  |g|= 1.3515e-08  total 3 KF 8 JK
converged SCF energy = -75.3900709444015
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:33:31 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:         9.88

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp2peeszgr
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp2peeszgr
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.247424690460456  LUMO = 0.0347966841323747
Initial guess E= -75.3902211449854  |g|= 0.00638572
macro= 0  E= -75.3902341350561  delta_E= -1.29901e-05  |g|= 7.79479e-05  2 KF 7 JK
macro= 1  E= -75.3902341350561  delta_E= -4.26326e-14  |g|= 2.37017e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3902341350561  |g|= 2.37017e-06  total 4 KF 12 JK
converged SCF energy = -75.3902341350561
u+d contributions  -0.05269802329702225
uu+dd contributions  -0.07609393847021637
ud contributions  -0.14149167450596722
u+d contributions  -0.007339948762834906
uu+dd contributions  -0.030636705199144666
ud contributions  -0.09585899364057116
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:33:33 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        16.66

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpa_zv30z1
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpa_zv30z1
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.246942740805628  LUMO = 0.34846491396068
Initial guess E= -75.3900708605872  |g|= 0.000368575
macro= 0  E= -75.3900709444015  delta_E= -8.38143e-08  |g|= 0.000368575  1 KF 2 JK
macro= 1  E= -75.3900709444015  delta_E= 0  |g|= 3.16794e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3900709444015  |g|= 3.16794e-08  total 3 KF 7 JK
converged SCF energy = -75.3900709444015
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:33:33 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        17.24

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmplh0i3kg8
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmplh0i3kg8
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.247062242683282  LUMO = 0.0347919635861837
Initial guess E= -75.3901803532313  |g|= 0.00418149
macro= 0  E= -75.3901890019937  delta_E= -8.64876e-06  |g|= 3.5753e-05  2 KF 6 JK
macro= 1  E= -75.3901890019937  delta_E= 0  |g|= 6.33961e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3901890019937  |g|= 6.33961e-06  total 4 KF 11 JK
converged SCF energy = -75.3901890019937
u+d contributions  -0.02155014835462113
uu+dd contributions  -0.040397442074690725
ud contributions  -0.08673417973469348
u+d contributions  -0.004769014121264486
uu+dd contributions  -0.023589045037556745
ud contributions  -0.06989631187318673
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.922060, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.228632, i_min=0
In the tapering subroutine, i=2, E(i)=-75.390071, i_min=1
In the tapering subroutine, i=3, E(i)=-75.029768, i_min=2
In the tapering subroutine, i=4, E(i)=-75.386027, i_min=2
In the tapering subroutine, i=5, E(i)=-75.018449, i_min=2
In the tapering subroutine, i=6, E(i)=-74.836233, i_min=2
In the tapering subroutine, i=7, E(i)=-75.058212, i_min=2
In the tapering subroutine, i=8, E(i)=-75.228632, i_min=2
In the tapering subroutine, i=9, E(i)=-75.239407, i_min=2
In the tapering subroutine, i=10, E(i)=-75.053485, i_min=2
In the tapering subroutine, i=11, E(i)=-75.390071, i_min=2
In the tapering subroutine, i=12, E(i)=-75.041391, i_min=2
In the tapering subroutine, i=13, E(i)=-75.386027, i_min=2
In the tapering subroutine, i=14, E(i)=-75.058212, i_min=2
In the tapering subroutine, i=15, E(i)=-74.874517, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0047689502893533756
uu+dd contributions  -0.023589118784290437
ud contributions  -0.069891606551138
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.004773825637222639
uu+dd contributions  -0.023595241903161396
ud contributions  -0.06990309922461099
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.004773825637222639
uu+dd contributions  -0.023595241903161396
ud contributions  -0.06990309922461099
