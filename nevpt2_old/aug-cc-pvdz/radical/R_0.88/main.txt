#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.88/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.88)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:07:30 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.880000000000 AA    0.000000000000   0.000000000000   1.662958989617 Bohr

nuclear repulsion = 4.81070191745455
point group symmetry = Coov
num. orbitals of irrep A1 = 14
num. orbitals of irrep E1x = 7
num. orbitals of irrep E1y = 7
num. orbitals of irrep E2x = 2
num. orbitals of irrep E2y = 2
number of shells = 13
number of NR pGTOs = 46
number of NR cGTOs = 32
basis = aug-cc-pvdz
ecp = {}
CPU time:         5.60
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpslnjx3o2
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpslnjx3o2
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.444633562648004  LUMO (A1) = 0.0345739433298763
Initial guess E= -75.3817158007058  |g|= 0.198919
macro= 0  E= -75.3901186200523  delta_E= -0.00840282  |g|= 0.198919  2 KF 5 JK
macro= 1  E= -75.390021421041  delta_E= 9.7199e-05  |g|= 0.0914278  2 KF 5 JK
macro= 2  E= -75.3902189434104  delta_E= -0.000197522  |g|= 0.0732667  2 KF 5 JK
macro= 3  E= -75.3912027279789  delta_E= -0.000983785  |g|= 0.090372  2 KF 5 JK
macro= 4  E= -75.3894655313043  delta_E= 0.0017372  |g|= 0.0496517  2 KF 5 JK
macro= 5  E= -75.3893165647026  delta_E= 0.000148967  |g|= 0.100699  2 KF 5 JK
macro= 6  E= -75.390379949077  delta_E= -0.00106338  |g|= 0.0886673  2 KF 5 JK
macro= 7  E= -75.3912289962496  delta_E= -0.000849047  |g|= 0.0874223  2 KF 5 JK
macro= 8  E= -75.3893740026153  delta_E= 0.00185499  |g|= 0.0488166  2 KF 5 JK
macro= 9  E= -75.3891693163159  delta_E= 0.000204686  |g|= 0.101938  2 KF 5 JK
macro= 10  E= -75.3903105714195  delta_E= -0.00114126  |g|= 0.0907878  2 KF 5 JK
macro= 11  E= -75.3891088947461  delta_E= 0.00120168  |g|= 0.089231  2 KF 5 JK
macro= 12  E= -75.3903814583465  delta_E= -0.00127256  |g|= 0.093036  2 KF 5 JK
macro= 13  E= -75.389122153942  delta_E= 0.0012593  |g|= 0.0879085  2 KF 5 JK
macro= 14  E= -75.390373166043  delta_E= -0.00125101  |g|= 0.0927525  2 KF 5 JK
macro= 15  E= -75.3891059280696  delta_E= 0.00126724  |g|= 0.0880405  2 KF 5 JK
macro= 16  E= -75.3903685442433  delta_E= -0.00126262  |g|= 0.0930067  2 KF 5 JK
macro= 17  E= -75.3890899991968  delta_E= 0.00127855  |g|= 0.0881464  2 KF 5 JK
macro= 18  E= -75.3903639253235  delta_E= -0.00127393  |g|= 0.0932599  2 KF 5 JK
macro= 19  E= -75.389074215859  delta_E= 0.00128971  |g|= 0.0882774  2 KF 5 JK
macro= 20  E= -75.3903590172196  delta_E= -0.0012848  |g|= 0.0935059  2 KF 5 JK
macro= 21  E= -75.3890585545336  delta_E= 0.00130046  |g|= 0.088425  2 KF 5 JK
macro= 22  E= -75.3903538791778  delta_E= -0.00129532  |g|= 0.0937455  2 KF 5 JK
macro= 23  E= -75.3890430149366  delta_E= 0.00131086  |g|= 0.0885813  2 KF 5 JK
macro= 24  E= -75.3903486181916  delta_E= -0.0013056  |g|= 0.0939803  2 KF 5 JK
macro= 25  E= -75.3890276230639  delta_E= 0.001321  |g|= 0.0887415  2 KF 5 JK
macro= 26  E= -75.3903433028556  delta_E= -0.00131568  |g|= 0.0942108  2 KF 5 JK
macro= 27  E= -75.3890123973031  delta_E= 0.00133091  |g|= 0.088903  2 KF 5 JK
macro= 28  E= -75.3903379707278  delta_E= -0.00132557  |g|= 0.0944373  2 KF 5 JK
macro= 29  E= -75.3889973477927  delta_E= 0.00134062  |g|= 0.0890644  2 KF 5 JK
macro= 30  E= -75.390332641431  delta_E= -0.00133529  |g|= 0.0946598  2 KF 5 JK
macro= 31  E= -75.3889824795908  delta_E= 0.00135016  |g|= 0.0892251  2 KF 5 JK
macro= 32  E= -75.3903273252187  delta_E= -0.00134485  |g|= 0.0948785  2 KF 5 JK
macro= 33  E= -75.3889677950237  delta_E= 0.00135953  |g|= 0.0893848  2 KF 5 JK
macro= 34  E= -75.3903220276461  delta_E= -0.00135423  |g|= 0.0950934  2 KF 5 JK
macro= 35  E= -75.3889532950047  delta_E= 0.00136873  |g|= 0.0895433  2 KF 5 JK
macro= 36  E= -75.3903167519495  delta_E= -0.00136346  |g|= 0.0953046  2 KF 5 JK
macro= 37  E= -75.3889389797095  delta_E= 0.00137777  |g|= 0.0897004  2 KF 5 JK
macro= 38  E= -75.3903115002254  delta_E= -0.00137252  |g|= 0.0955121  2 KF 5 JK
macro= 39  E= -75.3889248489111  delta_E= 0.00138665  |g|= 0.0898563  2 KF 5 JK
macro= 40  E= -75.3903062740007  delta_E= -0.00138143  |g|= 0.095716  2 KF 5 JK
macro= 41  E= -75.3889109021431  delta_E= 0.00139537  |g|= 0.0900107  2 KF 5 JK
macro= 42  E= -75.3903010745098  delta_E= -0.00139017  |g|= 0.0959163  2 KF 5 JK
macro= 43  E= -75.3888971387801  delta_E= 0.00140394  |g|= 0.0901638  2 KF 5 JK
macro= 44  E= -75.3902959028258  delta_E= -0.00139876  |g|= 0.096113  2 KF 5 JK
macro= 45  E= -75.3888835580775  delta_E= 0.00141234  |g|= 0.0903155  2 KF 5 JK
macro= 46  E= -75.3902907599233  delta_E= -0.0014072  |g|= 0.0963063  2 KF 5 JK
macro= 47  E= -75.3888701591937  delta_E= 0.0014206  |g|= 0.0904658  2 KF 5 JK
macro= 48  E= -75.3902856467094  delta_E= -0.00141549  |g|= 0.0964962  2 KF 5 JK
macro= 49  E= -75.3888569412016  delta_E= 0.00142871  |g|= 0.0906147  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3888569412016  |g|= 0.0906147  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3888569412016

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpslnjx3o2
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpslnjx3o2
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.287718523001308  LUMO (A1) = 0.0370399562379405
Initial guess E= -75.3917501257549  |g|= 0.0649897
macro= 0  E= -75.3924669052805  delta_E= -0.00071678  |g|= 0.0649897  2 KF 5 JK
macro= 1  E= -75.3925265961489  delta_E= -5.96909e-05  |g|= 0.0243767  2 KF 5 JK
macro= 2  E= -75.3923607801823  delta_E= 0.000165816  |g|= 0.0154594  2 KF 5 JK
macro= 3  E= -75.3925276997468  delta_E= -0.00016692  |g|= 0.0301584  2 KF 5 JK
macro= 4  E= -75.3923811585464  delta_E= 0.000146541  |g|= 0.0121429  2 KF 5 JK
macro= 5  E= -75.3925173145237  delta_E= -0.000136156  |g|= 0.029219  2 KF 5 JK
macro= 6  E= -75.3924275157572  delta_E= 8.97988e-05  |g|= 0.0151986  2 KF 5 JK
macro= 7  E= -75.392517112698  delta_E= -8.95969e-05  |g|= 0.026694  2 KF 5 JK
macro= 8  E= -75.3923714954405  delta_E= 0.000145617  |g|= 0.0140865  2 KF 5 JK
macro= 9  E= -75.3925190838741  delta_E= -0.000147588  |g|= 0.0305753  2 KF 5 JK
macro= 10  E= -75.3923796805071  delta_E= 0.000139403  |g|= 0.0148427  2 KF 5 JK
macro= 11  E= -75.39252013816  delta_E= -0.000140458  |g|= 0.0296404  2 KF 5 JK
macro= 12  E= -75.3923796011937  delta_E= 0.000140537  |g|= 0.0148279  2 KF 5 JK
macro= 13  E= -75.3925200162525  delta_E= -0.000140415  |g|= 0.0295064  2 KF 5 JK
macro= 14  E= -75.3923777646468  delta_E= 0.000142252  |g|= 0.0145608  2 KF 5 JK
macro= 15  E= -75.3925198003673  delta_E= -0.000142036  |g|= 0.0295875  2 KF 5 JK
macro= 16  E= -75.3923772093329  delta_E= 0.000142591  |g|= 0.0145406  2 KF 5 JK
macro= 17  E= -75.39251981977  delta_E= -0.00014261  |g|= 0.0296068  2 KF 5 JK
macro= 18  E= -75.3923774166564  delta_E= 0.000142403  |g|= 0.0145599  2 KF 5 JK
macro= 19  E= -75.3925199043171  delta_E= -0.000142488  |g|= 0.0295844  2 KF 5 JK
macro= 20  E= -75.3923776924035  delta_E= 0.000142212  |g|= 0.0145705  2 KF 5 JK
macro= 21  E= -75.3925199692349  delta_E= -0.000142277  |g|= 0.0295629  2 KF 5 JK
macro= 22  E= -75.3923778651542  delta_E= 0.000142104  |g|= 0.014572  2 KF 5 JK
macro= 23  E= -75.3925200116714  delta_E= -0.000142147  |g|= 0.0295514  2 KF 5 JK
macro= 24  E= -75.3923779795699  delta_E= 0.000142032  |g|= 0.0145683  2 KF 5 JK
macro= 25  E= -75.3925200469204  delta_E= -0.000142067  |g|= 0.029545  2 KF 5 JK
macro= 26  E= -75.3923780846136  delta_E= 0.000141962  |g|= 0.0145621  2 KF 5 JK
macro= 27  E= -75.3925200827081  delta_E= -0.000141998  |g|= 0.0295396  2 KF 5 JK
macro= 28  E= -75.3923781947451  delta_E= 0.000141888  |g|= 0.0145551  2 KF 5 JK
macro= 29  E= -75.3925201198921  delta_E= -0.000141925  |g|= 0.0295339  2 KF 5 JK
macro= 30  E= -75.3923783081155  delta_E= 0.000141812  |g|= 0.0145479  2 KF 5 JK
macro= 31  E= -75.3925201575299  delta_E= -0.000141849  |g|= 0.0295279  2 KF 5 JK
macro= 32  E= -75.392378421462  delta_E= 0.000141736  |g|= 0.0145406  2 KF 5 JK
macro= 33  E= -75.3925201950549  delta_E= -0.000141774  |g|= 0.029522  2 KF 5 JK
macro= 34  E= -75.3923785336785  delta_E= 0.000141661  |g|= 0.0145332  2 KF 5 JK
macro= 35  E= -75.3925202323814  delta_E= -0.000141699  |g|= 0.0295162  2 KF 5 JK
macro= 36  E= -75.3923786448502  delta_E= 0.000141588  |g|= 0.0145258  2 KF 5 JK
macro= 37  E= -75.3925202695715  delta_E= -0.000141625  |g|= 0.0295104  2 KF 5 JK
macro= 38  E= -75.3923787552121  delta_E= 0.000141514  |g|= 0.0145185  2 KF 5 JK
macro= 39  E= -75.3925203066679  delta_E= -0.000141551  |g|= 0.0295046  2 KF 5 JK
macro= 40  E= -75.3923788648543  delta_E= 0.000141442  |g|= 0.0145111  2 KF 5 JK
macro= 41  E= -75.3925203436769  delta_E= -0.000141479  |g|= 0.0294989  2 KF 5 JK
macro= 42  E= -75.3923789737759  delta_E= 0.00014137  |g|= 0.0145037  2 KF 5 JK
macro= 43  E= -75.3925203805918  delta_E= -0.000141407  |g|= 0.0294932  2 KF 5 JK
macro= 44  E= -75.3923790819612  delta_E= 0.000141299  |g|= 0.0144963  2 KF 5 JK
macro= 45  E= -75.3925204174077  delta_E= -0.000141335  |g|= 0.0294875  2 KF 5 JK
macro= 46  E= -75.3923791894041  delta_E= 0.000141228  |g|= 0.014489  2 KF 5 JK
macro= 47  E= -75.3925204541216  delta_E= -0.000141265  |g|= 0.0294819  2 KF 5 JK
macro= 48  E= -75.3923792961057  delta_E= 0.000141158  |g|= 0.0144816  2 KF 5 JK
macro= 49  E= -75.392520490732  delta_E= -0.000141195  |g|= 0.0294763  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.392520490732  |g|= 0.0294763  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.392520490732
**** SCF Summaries ****
Total Energy =                         -75.392520490731968
Nuclear Repulsion Energy =               4.810701917454545
One-electron Energy =                 -113.329432139774923
Two-electron Energy =                   33.126209731588403
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    0    0    0
single occ                     0    0    1    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6315118012267  | -20.6482145886514  | -20.6148090138021  occ= 2
MO #2   (A1  #2 ) energy= -1.34769264276843  | -1.41620039459055  | -1.27918489094631  occ= 2
MO #3   (A1  #3 ) energy= -0.689254555038149 | -0.711817867856491 | -0.666691242219806 occ= 2
MO #4   (E1x #1 ) energy= -0.54403834908836  | -0.563144931142089 | -0.524931767034632 occ= 2
MO #5   (E1y #1 ) energy= -0.255516820082134 | -0.652017980354765 | 0.140984340190499  occ= 1
MO #6   (A1  #4 ) energy= 0.0375015219947773 | 0.0368546186650303 | 0.0381484253245243 occ= 0
MO #7   (A1  #5 ) energy= 0.177393885941844  | 0.176462329531858  | 0.17832544235183   occ= 0
MO #8   (E1y #2 ) energy= 0.192181421195443  | 0.184067556470005  | 0.200295285920882  occ= 0
MO #9   (E1x #2 ) energy= 0.196791844341672  | 0.195678121969246  | 0.197905566714097  occ= 0
MO #10  (A1  #6 ) energy= 0.234564261993607  | 0.231103217191055  | 0.238025306796162  occ= 0
MO #11  (A1  #7 ) energy= 0.337627111869146  | 0.334783034823604  | 0.34047118891468   occ= 0
MO #12  (E1y #3 ) energy= 0.404179282369001  | 0.396988725558045  | 0.411369839179957  occ= 0
MO #13  (E1x #3 ) energy= 0.40832062243394   | 0.407379792954844  | 0.409261451913036  occ= 0
MO #14  (A1  #8 ) energy= 0.648695313466286  | 0.642703927189446  | 0.654686699743108  occ= 0
MO #15  (A1  #9 ) energy= 0.890097766810039  | 0.880204348308659  | 0.899991185311417  occ= 0
MO #16  (E2x #1 ) energy= 0.972285458083142  | 0.951702633893014  | 0.992868282273269  occ= 0
MO #17  (E2y #1 ) energy= 0.972285458083143  | 0.951702633893015  | 0.99286828227327   occ= 0
MO #18  (E1y #4 ) energy= 1.10709478292977   | 1.0834274284968    | 1.13076213736273   occ= 0
MO #19  (E1x #4 ) energy= 1.11561918432656   | 1.11233365869201   | 1.1189047099611    occ= 0
MO #20  (A1  #10) energy= 1.32939573849243   | 1.32319534469006   | 1.33559613229481   occ= 0
MO #21  (E1x #5 ) energy= 1.41369523461577   | 1.40576889359076   | 1.42162157564079   occ= 0
MO #22  (E1y #5 ) energy= 1.4157570065326    | 1.34771450237241   | 1.48379951069279   occ= 0
MO #23  (A1  #11) energy= 1.72072019823808   | 1.70977775621361   | 1.73166264026256   occ= 0
MO #24  (E1y #6 ) energy= 2.07739429211207   | 2.06894292531941   | 2.08584565890473   occ= 0
MO #25  (E1x #6 ) energy= 2.09014371532858   | 2.08866495637028   | 2.09162247428689   occ= 0
MO #26  (A1  #12) energy= 2.65277115475324   | 2.63880030594167   | 2.6667420035648    occ= 0
MO #27  (A1  #13) energy= 2.8348513748549    | 2.82460030062046   | 2.84510244908933   occ= 0
MO #28  (E2x #2 ) energy= 3.52792771198258   | 3.48193580655844   | 3.57391961740673   occ= 0
MO #29  (E2y #2 ) energy= 3.52792771198258   | 3.48193580655843   | 3.57391961740672   occ= 0
MO #30  (E1y #7 ) energy= 3.65644601398804   | 3.61287130987866   | 3.70002071809742   occ= 0
MO #31  (E1x #7 ) energy= 3.67761753253112   | 3.67077118140464   | 3.6844638836576    occ= 0
MO #32  (A1  #14) energy= 4.26922889769868   | 4.25516126595583   | 4.28329652944151   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.77550
pop of  0 O 3s        0.00755
pop of  0 O 4s        0.00147
pop of  0 O 2px       1.99108
pop of  0 O 2py       0.99631
pop of  0 O 2pz       1.56384
pop of  0 O 3px       0.00149
pop of  0 O 3py       0.00013
pop of  0 O 3pz       0.00506
pop of  0 O 4px       0.00097
pop of  0 O 4py       0.00118
pop of  0 O 4pz       0.00044
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00116
pop of  0 O 3dz^2     0.00833
pop of  0 O 3dxz      0.00220
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00015
pop of  0 O 4dz^2     0.00012
pop of  0 O 4dxz      0.00031
pop of  0 O 4dx2-y2    0.00000
pop of  1 H 1s        0.60696
pop of  1 H 2s        0.02020
pop of  1 H 3s        0.00853
pop of  1 H 2px       0.00391
pop of  1 H 2py       0.00056
pop of  1 H 2pz       0.00142
pop of  1 H 3px       0.00004
pop of  1 H 3py       0.00050
pop of  1 H 3pz       0.00059
 ** Mulliken atomic charges  **
charge of  0O =     -0.35729
charge of  1H =      0.35729
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.69940
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.88/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.88)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:07:34 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        18.70

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp32u5rwds
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp32u5rwds
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.255516820082134  LUMO = 0.508687586199
Initial guess E= -75.3925242569044  |g|= 0.000434564
macro= 0  E= -75.3925243282373  delta_E= -7.1333e-08  |g|= 0.000434564  1 KF 4 JK
macro= 1  E= -75.3925243282373  delta_E= 0  |g|= 1.1997e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3925243282373  |g|= 1.1997e-08  total 3 KF 9 JK
converged SCF energy = -75.3925243282373
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.88/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.88)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:07:34 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        19.58

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpel9bx0sa
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpel9bx0sa
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.255517097632691  LUMO = 0.508687689069755
Initial guess E= -75.3925242569104  |g|= 0.000434623
macro= 0  E= -75.3925243282373  delta_E= -7.13269e-08  |g|= 0.000434623  1 KF 3 JK
macro= 1  E= -75.3925243282373  delta_E= 0  |g|= 1.19659e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3925243282373  |g|= 1.19659e-08  total 3 KF 8 JK
converged SCF energy = -75.3925243282373
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.88/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.88)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:07:34 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        20.34

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp6liz7nzp
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp6liz7nzp
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.255629194371362  LUMO = 0.0374993725411271
Initial guess E= -75.392667966923  |g|= 0.0059828
macro= 0  E= -75.3926795443006  delta_E= -1.15774e-05  |g|= 7.35455e-05  2 KF 6 JK
macro= 1  E= -75.3926795443006  delta_E= 0  |g|= 9.99766e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3926795443006  |g|= 9.99766e-06  total 4 KF 11 JK
converged SCF energy = -75.3926795443006
u+d contributions  -0.04910388847868553
uu+dd contributions  -0.0734748276475222
ud contributions  -0.14141365774106623
u+d contributions  -0.00710617564726956
uu+dd contributions  -0.031383525731966885
ud contributions  -0.09916968898273304
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.88/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.88)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:07:37 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        26.64

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp1gen_hys
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp1gen_hys
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.255132479914344  LUMO = 0.508776919926983
Initial guess E= -75.3925242538803  |g|= 0.000370341
macro= 0  E= -75.3925243282373  delta_E= -7.4357e-08  |g|= 0.000370341  1 KF 2 JK
macro= 1  E= -75.3925243282373  delta_E= 0  |g|= 2.51736e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3925243282373  |g|= 2.51736e-08  total 3 KF 7 JK
converged SCF energy = -75.3925243282373
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.88/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.88)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 01:07:37 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        27.50

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpd7ff33r5
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpd7ff33r5
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.255242784296117  LUMO = 0.0374914525488684
Initial guess E= -75.3926271032173  |g|= 0.00389132
macro= 0  E= -75.3926349275334  delta_E= -7.82432e-06  |g|= 3.70972e-05  2 KF 6 JK
macro= 1  E= -75.3926349275334  delta_E= 0  |g|= 4.28064e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3926349275334  |g|= 4.28064e-06  total 4 KF 11 JK
converged SCF energy = -75.3926349275334
u+d contributions  -0.017476596511408645
uu+dd contributions  -0.03751803990637463
ud contributions  -0.08737327355382687
u+d contributions  -0.0036442818198956653
uu+dd contributions  -0.023668814143437644
ud contributions  -0.07351832697788702
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.765360, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.219116, i_min=0
In the tapering subroutine, i=2, E(i)=-75.392524, i_min=1
In the tapering subroutine, i=3, E(i)=-74.870671, i_min=2
In the tapering subroutine, i=4, E(i)=-75.388587, i_min=2
In the tapering subroutine, i=5, E(i)=-74.859469, i_min=2
In the tapering subroutine, i=6, E(i)=-74.830075, i_min=2
In the tapering subroutine, i=7, E(i)=-74.905809, i_min=2
In the tapering subroutine, i=8, E(i)=-75.219116, i_min=2
In the tapering subroutine, i=9, E(i)=-75.250816, i_min=2
In the tapering subroutine, i=10, E(i)=-74.896872, i_min=2
In the tapering subroutine, i=11, E(i)=-75.392524, i_min=2
In the tapering subroutine, i=12, E(i)=-74.884893, i_min=2
In the tapering subroutine, i=13, E(i)=-75.388587, i_min=2
In the tapering subroutine, i=14, E(i)=-74.905809, i_min=2
In the tapering subroutine, i=15, E(i)=-74.868289, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0036442932329884474
uu+dd contributions  -0.023668829930492307
ud contributions  -0.0735033119557988
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0036395420210337437
uu+dd contributions  -0.02366422269611327
ud contributions  -0.07349876613032028
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0036395420210337437
uu+dd contributions  -0.02366422269611327
ud contributions  -0.07349876613032028
