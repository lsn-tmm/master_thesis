#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.86/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.86)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:54:52 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.860000000000 AA    0.000000000000   0.000000000000   1.625164467126 Bohr

nuclear repulsion = 4.92257870623256
point group symmetry = Coov
num. orbitals of irrep A1 = 14
num. orbitals of irrep E1x = 7
num. orbitals of irrep E1y = 7
num. orbitals of irrep E2x = 2
num. orbitals of irrep E2y = 2
number of shells = 13
number of NR pGTOs = 46
number of NR cGTOs = 32
basis = aug-cc-pvdz
ecp = {}
CPU time:         5.75
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpu78t0glc
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpu78t0glc
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.448322059697253  LUMO (A1) = 0.0349616378288168
Initial guess E= -75.3771178035193  |g|= 0.198851
macro= 0  E= -75.3853142143238  delta_E= -0.00819641  |g|= 0.198851  2 KF 5 JK
macro= 1  E= -75.3853258979641  delta_E= -1.16836e-05  |g|= 0.0919593  2 KF 5 JK
macro= 2  E= -75.3854533918923  delta_E= -0.000127494  |g|= 0.0716298  2 KF 5 JK
macro= 3  E= -75.3864249347675  delta_E= -0.000971543  |g|= 0.0903379  2 KF 5 JK
macro= 4  E= -75.3847140241516  delta_E= 0.00171091  |g|= 0.0499696  2 KF 5 JK
macro= 5  E= -75.3846250000952  delta_E= 8.90241e-05  |g|= 0.100511  2 KF 5 JK
macro= 6  E= -75.3856085463807  delta_E= -0.000983546  |g|= 0.0874316  2 KF 5 JK
macro= 7  E= -75.3864539881524  delta_E= -0.000845442  |g|= 0.0874917  2 KF 5 JK
macro= 8  E= -75.3846238856652  delta_E= 0.0018301  |g|= 0.0491231  2 KF 5 JK
macro= 9  E= -75.384482807369  delta_E= 0.000141078  |g|= 0.101736  2 KF 5 JK
macro= 10  E= -75.3855378268449  delta_E= -0.00105502  |g|= 0.0894984  2 KF 5 JK
macro= 11  E= -75.3843970751031  delta_E= 0.00114075  |g|= 0.0893163  2 KF 5 JK
macro= 12  E= -75.3856176458934  delta_E= -0.00122057  |g|= 0.0922497  2 KF 5 JK
macro= 13  E= -75.3844110397696  delta_E= 0.00120661  |g|= 0.0878039  2 KF 5 JK
macro= 14  E= -75.3856080501936  delta_E= -0.00119701  |g|= 0.0919295  2 KF 5 JK
macro= 15  E= -75.3843950650034  delta_E= 0.00121299  |g|= 0.0879479  2 KF 5 JK
macro= 16  E= -75.385603199439  delta_E= -0.00120813  |g|= 0.0921771  2 KF 5 JK
macro= 17  E= -75.3843795619358  delta_E= 0.00122364  |g|= 0.0880508  2 KF 5 JK
macro= 18  E= -75.3855988500721  delta_E= -0.00121929  |g|= 0.0924269  2 KF 5 JK
macro= 19  E= -75.3843643567318  delta_E= 0.00123449  |g|= 0.0881718  2 KF 5 JK
macro= 20  E= -75.3855943166606  delta_E= -0.00122996  |g|= 0.0926684  2 KF 5 JK
macro= 21  E= -75.3843492940629  delta_E= 0.00124502  |g|= 0.0883087  2 KF 5 JK
macro= 22  E= -75.385589564443  delta_E= -0.00124027  |g|= 0.0929034  2 KF 5 JK
macro= 23  E= -75.3843343441629  delta_E= 0.00125522  |g|= 0.088455  2 KF 5 JK
macro= 24  E= -75.3855846763978  delta_E= -0.00125033  |g|= 0.0931337  2 KF 5 JK
macro= 25  E= -75.3843195261187  delta_E= 0.00126515  |g|= 0.088606  2 KF 5 JK
macro= 26  E= -75.3855797194182  delta_E= -0.00126019  |g|= 0.0933598  2 KF 5 JK
macro= 27  E= -75.3843048585217  delta_E= 0.00127486  |g|= 0.0887588  2 KF 5 JK
macro= 28  E= -75.3855747341764  delta_E= -0.00126988  |g|= 0.0935819  2 KF 5 JK
macro= 29  E= -75.3842903529429  delta_E= 0.00128438  |g|= 0.088912  2 KF 5 JK
macro= 30  E= -75.3855697434557  delta_E= -0.00127939  |g|= 0.0938003  2 KF 5 JK
macro= 31  E= -75.3842760156856  delta_E= 0.00129373  |g|= 0.0890647  2 KF 5 JK
macro= 32  E= -75.3855647597425  delta_E= -0.00128874  |g|= 0.094015  2 KF 5 JK
macro= 33  E= -75.3842618499259  delta_E= 0.00130291  |g|= 0.0892167  2 KF 5 JK
macro= 34  E= -75.3855597899715  delta_E= -0.00129794  |g|= 0.094226  2 KF 5 JK
macro= 35  E= -75.3842478571151  delta_E= 0.00131193  |g|= 0.0893676  2 KF 5 JK
macro= 36  E= -75.3855548381683  delta_E= -0.00130698  |g|= 0.0944335  2 KF 5 JK
macro= 37  E= -75.384234037769  delta_E= 0.0013208  |g|= 0.0895174  2 KF 5 JK
macro= 38  E= -75.3855499068532  delta_E= -0.00131587  |g|= 0.0946375  2 KF 5 JK
macro= 39  E= -75.384220391886  delta_E= 0.00132951  |g|= 0.0896659  2 KF 5 JK
macro= 40  E= -75.3855449977641  delta_E= -0.00132461  |g|= 0.0948379  2 KF 5 JK
macro= 41  E= -75.3842069191627  delta_E= 0.00133808  |g|= 0.0898132  2 KF 5 JK
macro= 42  E= -75.3855401122275  delta_E= -0.00133319  |g|= 0.095035  2 KF 5 JK
macro= 43  E= -75.3841936191053  delta_E= 0.00134649  |g|= 0.0899592  2 KF 5 JK
macro= 44  E= -75.385535251345  delta_E= -0.00134163  |g|= 0.0952286  2 KF 5 JK
macro= 45  E= -75.3841804910868  delta_E= 0.00135476  |g|= 0.0901039  2 KF 5 JK
macro= 46  E= -75.3855304160869  delta_E= -0.00134993  |g|= 0.095419  2 KF 5 JK
macro= 47  E= -75.3841675343777  delta_E= 0.00136288  |g|= 0.0902474  2 KF 5 JK
macro= 48  E= -75.3855256073395  delta_E= -0.00135807  |g|= 0.095606  2 KF 5 JK
macro= 49  E= -75.384154748163  delta_E= 0.00137086  |g|= 0.0903895  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.384154748163  |g|= 0.0903895  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.384154748163

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpu78t0glc
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpu78t0glc
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.288369148861384  LUMO (A1) = 0.0372549340666836
Initial guess E= -75.3870139736513  |g|= 0.0638651
macro= 0  E= -75.3876972204406  delta_E= -0.000683247  |g|= 0.0638651  2 KF 5 JK
macro= 1  E= -75.3877565544012  delta_E= -5.9334e-05  |g|= 0.0242858  2 KF 5 JK
macro= 2  E= -75.3875912898045  delta_E= 0.000165265  |g|= 0.0154326  2 KF 5 JK
macro= 3  E= -75.387757070136  delta_E= -0.00016578  |g|= 0.0301822  2 KF 5 JK
macro= 4  E= -75.3876081073807  delta_E= 0.000148963  |g|= 0.0122321  2 KF 5 JK
macro= 5  E= -75.3877469443512  delta_E= -0.000138837  |g|= 0.029585  2 KF 5 JK
macro= 6  E= -75.3876658691423  delta_E= 8.10752e-05  |g|= 0.0148603  2 KF 5 JK
macro= 7  E= -75.3877365654847  delta_E= -7.06963e-05  |g|= 0.0263919  2 KF 5 JK
macro= 8  E= -75.387648242454  delta_E= 8.8323e-05  |g|= 0.0145798  2 KF 5 JK
macro= 9  E= -75.3877204818063  delta_E= -7.22394e-05  |g|= 0.026921  2 KF 5 JK
macro= 10  E= -75.3876466499078  delta_E= 7.38319e-05  |g|= 0.0166049  2 KF 5 JK
macro= 11  E= -75.3877109576949  delta_E= -6.43078e-05  |g|= 0.0271884  2 KF 5 JK
macro= 12  E= -75.3876493549712  delta_E= 6.16027e-05  |g|= 0.0173849  2 KF 5 JK
macro= 13  E= -75.3877068497758  delta_E= -5.74948e-05  |g|= 0.0269965  2 KF 5 JK
macro= 14  E= -75.3876479603054  delta_E= 5.88895e-05  |g|= 0.017738  2 KF 5 JK
macro= 15  E= -75.3877040182726  delta_E= -5.6058e-05  |g|= 0.0270787  2 KF 5 JK
macro= 16  E= -75.3876484983101  delta_E= 5.552e-05  |g|= 0.0180386  2 KF 5 JK
macro= 17  E= -75.3877034095625  delta_E= -5.49113e-05  |g|= 0.0270672  2 KF 5 JK
macro= 18  E= -75.3876480908706  delta_E= 5.53187e-05  |g|= 0.0180874  2 KF 5 JK
macro= 19  E= -75.3877028211042  delta_E= -5.47302e-05  |g|= 0.0270889  2 KF 5 JK
macro= 20  E= -75.3876481396714  delta_E= 5.46814e-05  |g|= 0.0181474  2 KF 5 JK
macro= 21  E= -75.3877025971648  delta_E= -5.44575e-05  |g|= 0.0270967  2 KF 5 JK
macro= 22  E= -75.3876479705174  delta_E= 5.46266e-05  |g|= 0.0181592  2 KF 5 JK
macro= 23  E= -75.3877023105885  delta_E= -5.43401e-05  |g|= 0.0271104  2 KF 5 JK
macro= 24  E= -75.3876479052001  delta_E= 5.44054e-05  |g|= 0.0181807  2 KF 5 JK
macro= 25  E= -75.3877020885073  delta_E= -5.41833e-05  |g|= 0.0271217  2 KF 5 JK
macro= 26  E= -75.3876477902718  delta_E= 5.42982e-05  |g|= 0.0181927  2 KF 5 JK
macro= 27  E= -75.3877018466066  delta_E= -5.40563e-05  |g|= 0.0271341  2 KF 5 JK
macro= 28  E= -75.3876476988809  delta_E= 5.41477e-05  |g|= 0.0182077  2 KF 5 JK
macro= 29  E= -75.3877016185891  delta_E= -5.39197e-05  |g|= 0.0271461  2 KF 5 JK
macro= 30  E= -75.3876475960415  delta_E= 5.40225e-05  |g|= 0.0182205  2 KF 5 JK
macro= 31  E= -75.3877013863464  delta_E= -5.37903e-05  |g|= 0.0271583  2 KF 5 JK
macro= 32  E= -75.3876474985934  delta_E= 5.38878e-05  |g|= 0.018234  2 KF 5 JK
macro= 33  E= -75.3877011580561  delta_E= -5.36595e-05  |g|= 0.0271703  2 KF 5 JK
macro= 34  E= -75.3876473983842  delta_E= 5.37597e-05  |g|= 0.0182469  2 KF 5 JK
macro= 35  E= -75.387700929602  delta_E= -5.35312e-05  |g|= 0.0271823  2 KF 5 JK
macro= 36  E= -75.3876472994058  delta_E= 5.36302e-05  |g|= 0.0182598  2 KF 5 JK
macro= 37  E= -75.3877007029572  delta_E= -5.34036e-05  |g|= 0.0271943  2 KF 5 JK
macro= 38  E= -75.3876471996955  delta_E= 5.35033e-05  |g|= 0.0182725  2 KF 5 JK
macro= 39  E= -75.3877004771464  delta_E= -5.32775e-05  |g|= 0.0272063  2 KF 5 JK
macro= 40  E= -75.3876471002379  delta_E= 5.33769e-05  |g|= 0.0182851  2 KF 5 JK
macro= 41  E= -75.3877002526605  delta_E= -5.31524e-05  |g|= 0.0272182  2 KF 5 JK
macro= 42  E= -75.3876470005438  delta_E= 5.32521e-05  |g|= 0.0182975  2 KF 5 JK
macro= 43  E= -75.3877000292619  delta_E= -5.30287e-05  |g|= 0.02723  2 KF 5 JK
macro= 44  E= -75.3876469008694  delta_E= 5.31284e-05  |g|= 0.0183098  2 KF 5 JK
macro= 45  E= -75.3876998070808  delta_E= -5.29062e-05  |g|= 0.0272419  2 KF 5 JK
macro= 46  E= -75.3876468010896  delta_E= 5.3006e-05  |g|= 0.018322  2 KF 5 JK
macro= 47  E= -75.3876995860598  delta_E= -5.2785e-05  |g|= 0.0272537  2 KF 5 JK
macro= 48  E= -75.3876467012763  delta_E= 5.28848e-05  |g|= 0.018334  2 KF 5 JK
macro= 49  E= -75.3876993662378  delta_E= -5.2665e-05  |g|= 0.0272654  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3876993662378  |g|= 0.0272654  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3876993662378
**** SCF Summaries ****
Total Energy =                         -75.387699366237783
Nuclear Repulsion Energy =               4.922578706232559
One-electron Energy =                 -113.505035030151973
Two-electron Energy =                   33.194756957681626
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    0    0    0
single occ                     0    0    1    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6325272183262  | -20.6491761612732  | -20.6158782753791  occ= 2
MO #2   (A1  #2 ) energy= -1.35706834254344  | -1.42519426074352  | -1.28894242434337  occ= 2
MO #3   (A1  #3 ) energy= -0.695526451018324 | -0.718519658278452 | -0.672533243758197 occ= 2
MO #4   (E1x #1 ) energy= -0.545810425565911 | -0.564904355945791 | -0.526716495186031 occ= 2
MO #5   (E1y #1 ) energy= -0.257485661693112 | -0.653656239880985 | 0.138684916494759  occ= 1
MO #6   (A1  #4 ) energy= 0.0377184166237477 | 0.0370886644688786 | 0.0383481687786178 occ= 0
MO #7   (A1  #5 ) energy= 0.176723615436468  | 0.17582651958045   | 0.177620711292483  occ= 0
MO #8   (E1y #2 ) energy= 0.191452859560559  | 0.183516180470508  | 0.19938953865061   occ= 0
MO #9   (E1x #2 ) energy= 0.196124196742396  | 0.195034103857841  | 0.197214289626951  occ= 0
MO #10  (A1  #6 ) energy= 0.235198627667453  | 0.231796136752325  | 0.238601118582583  occ= 0
MO #11  (A1  #7 ) energy= 0.342260206766224  | 0.339501684193245  | 0.345018729339201  occ= 0
MO #12  (E1y #3 ) energy= 0.407042975358006  | 0.399635284615621  | 0.414450666100391  occ= 0
MO #13  (E1x #3 ) energy= 0.411200742926286  | 0.410231667114597  | 0.412169818737975  occ= 0
MO #14  (A1  #8 ) energy= 0.650778200146543  | 0.64475751892936   | 0.656798881363723  occ= 0
MO #15  (A1  #9 ) energy= 0.9019851609034    | 0.891737848626437  | 0.912232473180357  occ= 0
MO #16  (E2x #1 ) energy= 0.971510380069956  | 0.950889037117494  | 0.992131723022417  occ= 0
MO #17  (E2y #1 ) energy= 0.971510380069956  | 0.950889037117494  | 0.992131723022418  occ= 0
MO #18  (E1y #4 ) energy= 1.10613747574455   | 1.08216384207785   | 1.13011110941124   occ= 0
MO #19  (E1x #4 ) energy= 1.11456385838199   | 1.11124330740635   | 1.11788440935763   occ= 0
MO #20  (A1  #10) energy= 1.33006809922009   | 1.32385207405425   | 1.33628412438594   occ= 0
MO #21  (E1x #5 ) energy= 1.41727600660038   | 1.4093801474325    | 1.42517186576826   occ= 0
MO #22  (E1y #5 ) energy= 1.41912163687727   | 1.35149193451792   | 1.48675133923661   occ= 0
MO #23  (A1  #11) energy= 1.73357738695983   | 1.72272527852766   | 1.744429495392     occ= 0
MO #24  (E1y #6 ) energy= 2.09313793454686   | 2.08402397281265   | 2.10225189628107   occ= 0
MO #25  (E1x #6 ) energy= 2.10603472730801   | 2.10447311861749   | 2.10759633599852   occ= 0
MO #26  (A1  #12) energy= 2.66311763216703   | 2.64970076559688   | 2.67653449873718   occ= 0
MO #27  (A1  #13) energy= 2.87507021819178   | 2.86371304591721   | 2.88642739046637   occ= 0
MO #28  (E2x #2 ) energy= 3.52622681539015   | 3.48027549032246   | 3.57217814045783   occ= 0
MO #29  (E2y #2 ) energy= 3.52622681539015   | 3.48027549032246   | 3.57217814045783   occ= 0
MO #30  (E1y #7 ) energy= 3.66048357496946   | 3.61707998041292   | 3.70388716952601   occ= 0
MO #31  (E1x #7 ) energy= 3.68172291539736   | 3.67489227879114   | 3.6885535520036    occ= 0
MO #32  (A1  #14) energy= 4.30598558893681   | 4.29237265180522   | 4.31959852606841   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.76547
pop of  0 O 3s        0.00802
pop of  0 O 4s        0.00144
pop of  0 O 2px       1.99074
pop of  0 O 2py       0.99607
pop of  0 O 2pz       1.57522
pop of  0 O 3px       0.00146
pop of  0 O 3py       0.00013
pop of  0 O 3pz       0.00573
pop of  0 O 4px       0.00112
pop of  0 O 4py       0.00129
pop of  0 O 4pz       0.00038
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00122
pop of  0 O 3dz^2     0.00901
pop of  0 O 3dxz      0.00230
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00014
pop of  0 O 4dz^2     0.00014
pop of  0 O 4dxz      0.00030
pop of  0 O 4dx2-y2    0.00000
pop of  1 H 1s        0.60241
pop of  1 H 2s        0.02113
pop of  1 H 3s        0.00923
pop of  1 H 2px       0.00403
pop of  1 H 2py       0.00060
pop of  1 H 2pz       0.00136
pop of  1 H 3px       0.00005
pop of  1 H 3py       0.00055
pop of  1 H 3pz       0.00047
 ** Mulliken atomic charges  **
charge of  0O =     -0.36017
charge of  1H =      0.36017
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.67941
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.86/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.86)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:54:56 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        18.45

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp47hib58v
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp47hib58v
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.257485661693107  LUMO = 0.528030058466699
Initial guess E= -75.3877052970778  |g|= 0.000557478
macro= 0  E= -75.3877054183254  delta_E= -1.21248e-07  |g|= 0.000557478  1 KF 3 JK
macro= 1  E= -75.3877054183254  delta_E= 0  |g|= 1.37832e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3877054183254  |g|= 1.37832e-06  total 3 KF 8 JK
converged SCF energy = -75.3877054183254
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.86/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.86)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:54:56 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        19.30

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmplkqdfygk
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmplkqdfygk
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.257485607809638  LUMO = 0.528030039120024
Initial guess E= -75.3877052970721  |g|= 0.000557471
macro= 0  E= -75.3877054183254  delta_E= -1.21253e-07  |g|= 0.000557471  1 KF 3 JK
macro= 1  E= -75.3877054183254  delta_E= 0  |g|= 2.06385e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3877054183254  |g|= 2.06385e-08  total 3 KF 8 JK
converged SCF energy = -75.3877054183254
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.86/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.86)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:54:57 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        20.19

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp3x2jm2lc
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp3x2jm2lc
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.25764293674608  LUMO = 0.0377162311828569
Initial guess E= -75.3878911651492  |g|= 0.00771727
macro= 0  E= -75.3879081308181  delta_E= -1.69657e-05  |g|= 0.00013447  2 KF 7 JK
macro= 1  E= -75.3879081308182  delta_E= -4.26326e-14  |g|= 2.36577e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3879081308182  |g|= 2.36577e-06  total 4 KF 12 JK
converged SCF energy = -75.3879081308182
u+d contributions  -0.048570992005666766
uu+dd contributions  -0.07306890762089387
ud contributions  -0.14130516231809293
u+d contributions  -0.007133046454408602
uu+dd contributions  -0.031538572506819476
ud contributions  -0.09962582774682242
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.86/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.86)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:54:59 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        26.05

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp47bs8i0w
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp47bs8i0w
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.257018400773308  LUMO = 0.528136995692995
Initial guess E= -75.3877052837195  |g|= 0.000502144
macro= 0  E= -75.3877054183254  delta_E= -1.34606e-07  |g|= 0.000502144  1 KF 2 JK
macro= 1  E= -75.3877054183254  delta_E= 0  |g|= 4.46699e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3877054183254  |g|= 4.46699e-08  total 3 KF 7 JK
converged SCF energy = -75.3877054183254
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.86/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.86)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:54:59 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        26.76

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgrk8jqio
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgrk8jqio
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.257172986448398  LUMO = 0.037706500028564
Initial guess E= -75.3878515539046  |g|= 0.00509027
macro= 0  E= -75.3878628966187  delta_E= -1.13427e-05  |g|= 9.42873e-05  2 KF 6 JK
macro= 1  E= -75.3878628966187  delta_E= 0  |g|= 8.08104e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3878628966187  |g|= 8.08104e-06  total 4 KF 11 JK
converged SCF energy = -75.3878628966187
u+d contributions  -0.016900744467891627
uu+dd contributions  -0.03707007943346789
ud contributions  -0.08731692766105048
u+d contributions  -0.003530429527027804
uu+dd contributions  -0.02368404912037537
ud contributions  -0.0739263109049565
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.758927, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.213155, i_min=0
In the tapering subroutine, i=2, E(i)=-75.387705, i_min=1
In the tapering subroutine, i=3, E(i)=-74.846383, i_min=2
In the tapering subroutine, i=4, E(i)=-75.383850, i_min=2
In the tapering subroutine, i=5, E(i)=-74.835317, i_min=2
In the tapering subroutine, i=6, E(i)=-74.823659, i_min=2
In the tapering subroutine, i=7, E(i)=-74.880902, i_min=2
In the tapering subroutine, i=8, E(i)=-75.213155, i_min=2
In the tapering subroutine, i=9, E(i)=-75.248128, i_min=2
In the tapering subroutine, i=10, E(i)=-74.872821, i_min=2
In the tapering subroutine, i=11, E(i)=-75.387705, i_min=2
In the tapering subroutine, i=12, E(i)=-74.860988, i_min=2
In the tapering subroutine, i=13, E(i)=-75.383850, i_min=2
In the tapering subroutine, i=14, E(i)=-74.880902, i_min=2
In the tapering subroutine, i=15, E(i)=-74.861847, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003530441631636808
uu+dd contributions  -0.023684038815227713
ud contributions  -0.07391165611926662
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0035137209571306344
uu+dd contributions  -0.023667451881099744
ud contributions  -0.07389509073635941
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0035137209571306344
uu+dd contributions  -0.023667451881099744
ud contributions  -0.07389509073635941
