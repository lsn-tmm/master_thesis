#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_1.16/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.16)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:40:00 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.160000000000 AA    0.000000000000   0.000000000000   2.192082304495 Bohr

nuclear repulsion = 3.64949800634483
point group symmetry = Coov
num. orbitals of irrep A1 = 14
num. orbitals of irrep E1x = 7
num. orbitals of irrep E1y = 7
num. orbitals of irrep E2x = 2
num. orbitals of irrep E2y = 2
number of shells = 13
number of NR pGTOs = 46
number of NR cGTOs = 32
basis = aug-cc-pvdz
ecp = {}
CPU time:         4.47
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpzujti53q
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpzujti53q
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.410857226773798  LUMO (A1) = 0.0179755705648085
Initial guess E= -75.3559134984029  |g|= 0.200172
macro= 0  E= -75.3684620981012  delta_E= -0.0125486  |g|= 0.200172  2 KF 5 JK
macro= 1  E= -75.3692089264253  delta_E= -0.000746828  |g|= 0.0869905  2 KF 5 JK
macro= 2  E= -75.3675308752501  delta_E= 0.00167805  |g|= 0.0490021  2 KF 5 JK
macro= 3  E= -75.3690403441938  delta_E= -0.00150947  |g|= 0.0970021  2 KF 5 JK
macro= 4  E= -75.3675645046371  delta_E= 0.00147584  |g|= 0.0509209  2 KF 5 JK
macro= 5  E= -75.3690449783983  delta_E= -0.00148047  |g|= 0.096223  2 KF 5 JK
macro= 6  E= -75.3675196262796  delta_E= 0.00152535  |g|= 0.050686  2 KF 5 JK
macro= 7  E= -75.3690497087816  delta_E= -0.00153008  |g|= 0.0969879  2 KF 5 JK
macro= 8  E= -75.3674944399061  delta_E= 0.00155527  |g|= 0.050479  2 KF 5 JK
macro= 9  E= -75.3690587340128  delta_E= -0.00156429  |g|= 0.0974896  2 KF 5 JK
macro= 10  E= -75.3674820803489  delta_E= 0.00157665  |g|= 0.0502645  2 KF 5 JK
macro= 11  E= -75.3690716806955  delta_E= -0.0015896  |g|= 0.0978678  2 KF 5 JK
macro= 12  E= -75.3674846493038  delta_E= 0.00158703  |g|= 0.050055  2 KF 5 JK
macro= 13  E= -75.3690864353219  delta_E= -0.00160179  |g|= 0.0980552  2 KF 5 JK
macro= 14  E= -75.3674813235268  delta_E= 0.00160511  |g|= 0.0498011  2 KF 5 JK
macro= 15  E= -75.3690971600837  delta_E= -0.00161584  |g|= 0.0982447  2 KF 5 JK
macro= 16  E= -75.3674599483689  delta_E= 0.00163721  |g|= 0.049528  2 KF 5 JK
macro= 17  E= -75.3691039839419  delta_E= -0.00164404  |g|= 0.0986092  2 KF 5 JK
macro= 18  E= -75.3674335460757  delta_E= 0.00167044  |g|= 0.0492907  2 KF 5 JK
macro= 19  E= -75.3691099068436  delta_E= -0.00167636  |g|= 0.099027  2 KF 5 JK
macro= 20  E= -75.3674089466695  delta_E= 0.00170096  |g|= 0.0490707  2 KF 5 JK
macro= 21  E= -75.3691160338779  delta_E= -0.00170709  |g|= 0.0994224  2 KF 5 JK
macro= 22  E= -75.3673861920833  delta_E= 0.00172984  |g|= 0.0488509  2 KF 5 JK
macro= 23  E= -75.3691223102075  delta_E= -0.00173612  |g|= 0.0997911  2 KF 5 JK
macro= 24  E= -75.3673643154014  delta_E= 0.00175799  |g|= 0.0486288  2 KF 5 JK
macro= 25  E= -75.3691285379543  delta_E= -0.00176422  |g|= 0.100142  2 KF 5 JK
macro= 26  E= -75.3673429555705  delta_E= 0.00178558  |g|= 0.0484063  2 KF 5 JK
macro= 27  E= -75.3691346459921  delta_E= -0.00179169  |g|= 0.100481  2 KF 5 JK
macro= 28  E= -75.3673221226349  delta_E= 0.00181252  |g|= 0.0481848  2 KF 5 JK
macro= 29  E= -75.3691406347369  delta_E= -0.00181851  |g|= 0.100807  2 KF 5 JK
macro= 30  E= -75.3673018716189  delta_E= 0.00183876  |g|= 0.0479645  2 KF 5 JK
macro= 31  E= -75.3665411669271  delta_E= 0.000760705  |g|= 0.10112  2 KF 5 JK
macro= 32  E= -75.3684921203103  delta_E= -0.00195095  |g|= 0.0998171  2 KF 5 JK
macro= 33  E= -75.3669095849766  delta_E= 0.00158254  |g|= 0.0825551  2 KF 5 JK
macro= 34  E= -75.368434838391  delta_E= -0.00152525  |g|= 0.0942683  2 KF 5 JK
macro= 35  E= -75.3668641507993  delta_E= 0.00157069  |g|= 0.0837836  2 KF 5 JK
macro= 36  E= -75.3684361151602  delta_E= -0.00157196  |g|= 0.095036  2 KF 5 JK
macro= 37  E= -75.366842288573  delta_E= 0.00159383  |g|= 0.0837994  2 KF 5 JK
macro= 38  E= -75.3684249890177  delta_E= -0.0015827  |g|= 0.0953537  2 KF 5 JK
macro= 39  E= -75.3668108747579  delta_E= 0.00161411  |g|= 0.0841141  2 KF 5 JK
macro= 40  E= -75.3684148737614  delta_E= -0.001604  |g|= 0.0958228  2 KF 5 JK
macro= 41  E= -75.3667807556284  delta_E= 0.00163412  |g|= 0.0844164  2 KF 5 JK
macro= 42  E= -75.3684042708385  delta_E= -0.00162352  |g|= 0.0962623  2 KF 5 JK
macro= 43  E= -75.3667506955871  delta_E= 0.00165358  |g|= 0.0847311  2 KF 5 JK
macro= 44  E= -75.3683936363123  delta_E= -0.00164294  |g|= 0.0966967  2 KF 5 JK
macro= 45  E= -75.3667209485068  delta_E= 0.00167269  |g|= 0.0850455  2 KF 5 JK
macro= 46  E= -75.3683829630824  delta_E= -0.00166201  |g|= 0.0971227  2 KF 5 JK
macro= 47  E= -75.3666914920642  delta_E= 0.00169147  |g|= 0.0853592  2 KF 5 JK
macro= 48  E= -75.3683722762443  delta_E= -0.00168078  |g|= 0.097541  2 KF 5 JK
macro= 49  E= -75.3666623439533  delta_E= 0.00170993  |g|= 0.0856714  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3666623439533  |g|= 0.0856714  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3666623439533

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpzujti53q
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpzujti53q
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.277926979913749  LUMO (A1) = 0.0311287271546419
Initial guess E= -75.3693467494228  |g|= 0.074049
macro= 0  E= -75.370415940408  delta_E= -0.00106919  |g|= 0.074049  2 KF 5 JK
macro= 1  E= -75.3704769960686  delta_E= -6.10557e-05  |g|= 0.0252679  2 KF 5 JK
macro= 2  E= -75.3703006906486  delta_E= 0.000176305  |g|= 0.0156195  2 KF 5 JK
macro= 3  E= -75.3704826571229  delta_E= -0.000181966  |g|= 0.0305588  2 KF 5 JK
macro= 4  E= -75.3703311638021  delta_E= 0.000151493  |g|= 0.0116239  2 KF 5 JK
macro= 5  E= -75.3704478399632  delta_E= -0.000116676  |g|= 0.0287916  2 KF 5 JK
macro= 6  E= -75.3703922682225  delta_E= 5.55717e-05  |g|= 0.0167142  2 KF 5 JK
macro= 7  E= -75.3704697570004  delta_E= -7.74888e-05  |g|= 0.0245119  2 KF 5 JK
macro= 8  E= -75.3703583646393  delta_E= 0.000111392  |g|= 0.0134044  2 KF 5 JK
macro= 9  E= -75.3704652497501  delta_E= -0.000106885  |g|= 0.0279652  2 KF 5 JK
macro= 10  E= -75.3703754536149  delta_E= 8.97961e-05  |g|= 0.0141036  2 KF 5 JK
macro= 11  E= -75.3704502364576  delta_E= -7.47828e-05  |g|= 0.0264532  2 KF 5 JK
macro= 12  E= -75.3703621076481  delta_E= 8.81288e-05  |g|= 0.015365  2 KF 5 JK
macro= 13  E= -75.370432792512  delta_E= -7.06849e-05  |g|= 0.0271769  2 KF 5 JK
macro= 14  E= -75.3703522120645  delta_E= 8.05804e-05  |g|= 0.0170269  2 KF 5 JK
macro= 15  E= -75.3704162608605  delta_E= -6.40488e-05  |g|= 0.0279866  2 KF 5 JK
macro= 16  E= -75.3703545707723  delta_E= 6.16901e-05  |g|= 0.0184846  2 KF 5 JK
macro= 17  E= -75.3704116624735  delta_E= -5.70917e-05  |g|= 0.0280109  2 KF 5 JK
macro= 18  E= -75.370352841414  delta_E= 5.88211e-05  |g|= 0.0187582  2 KF 5 JK
macro= 19  E= -75.3704089940899  delta_E= -5.61527e-05  |g|= 0.0280915  2 KF 5 JK
macro= 20  E= -75.37035394495  delta_E= 5.50491e-05  |g|= 0.0190006  2 KF 5 JK
macro= 21  E= -75.3704088365185  delta_E= -5.48916e-05  |g|= 0.0280786  2 KF 5 JK
macro= 22  E= -75.3703529498653  delta_E= 5.58867e-05  |g|= 0.0189659  2 KF 5 JK
macro= 23  E= -75.3704080954708  delta_E= -5.51456e-05  |g|= 0.0281186  2 KF 5 JK
macro= 24  E= -75.3703534745892  delta_E= 5.46209e-05  |g|= 0.0190383  2 KF 5 JK
macro= 25  E= -75.3704080424011  delta_E= -5.45678e-05  |g|= 0.0281137  2 KF 5 JK
macro= 26  E= -75.3703528591677  delta_E= 5.51832e-05  |g|= 0.0190137  2 KF 5 JK
macro= 27  E= -75.3704075504269  delta_E= -5.46913e-05  |g|= 0.0281427  2 KF 5 JK
macro= 28  E= -75.3703530976386  delta_E= 5.44528e-05  |g|= 0.0190554  2 KF 5 JK
macro= 29  E= -75.3704073950351  delta_E= -5.42974e-05  |g|= 0.028145  2 KF 5 JK
macro= 30  E= -75.3703526908675  delta_E= 5.47042e-05  |g|= 0.0190471  2 KF 5 JK
macro= 31  E= -75.3704069963315  delta_E= -5.43055e-05  |g|= 0.0281679  2 KF 5 JK
macro= 32  E= -75.3703527742231  delta_E= 5.42221e-05  |g|= 0.0190755  2 KF 5 JK
macro= 33  E= -75.3704067823739  delta_E= -5.40082e-05  |g|= 0.0281747  2 KF 5 JK
macro= 34  E= -75.370352483182  delta_E= 5.42992e-05  |g|= 0.0190761  2 KF 5 JK
macro= 35  E= -75.3704064345104  delta_E= -5.39513e-05  |g|= 0.0281939  2 KF 5 JK
macro= 36  E= -75.3703524800052  delta_E= 5.39545e-05  |g|= 0.0190972  2 KF 5 JK
macro= 37  E= -75.3704061914438  delta_E= -5.37114e-05  |g|= 0.0282033  2 KF 5 JK
macro= 38  E= -75.3703522546185  delta_E= 5.39368e-05  |g|= 0.0191025  2 KF 5 JK
macro= 39  E= -75.3704058737905  delta_E= -5.36192e-05  |g|= 0.0282202  2 KF 5 JK
macro= 40  E= -75.3703522020941  delta_E= 5.36717e-05  |g|= 0.0191194  2 KF 5 JK
macro= 41  E= -75.3704056171993  delta_E= -5.34151e-05  |g|= 0.0282311  2 KF 5 JK
macro= 42  E= -75.3703520148836  delta_E= 5.36023e-05  |g|= 0.019127  2 KF 5 JK
macro= 43  E= -75.3704053187653  delta_E= -5.33039e-05  |g|= 0.0282466  2 KF 5 JK
macro= 44  E= -75.3703519336687  delta_E= 5.33851e-05  |g|= 0.0191414  2 KF 5 JK
macro= 45  E= -75.3704050569633  delta_E= -5.31233e-05  |g|= 0.0282582  2 KF 5 JK
macro= 46  E= -75.3703517692304  delta_E= 5.32877e-05  |g|= 0.0191502  2 KF 5 JK
macro= 47  E= -75.37040477176  delta_E= -5.30025e-05  |g|= 0.0282729  2 KF 5 JK
macro= 48  E= -75.3703516710702  delta_E= 5.31007e-05  |g|= 0.0191629  2 KF 5 JK
macro= 49  E= -75.3704045092861  delta_E= -5.28382e-05  |g|= 0.0282849  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3704045092861  |g|= 0.0282849  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3704045092861
**** SCF Summaries ****
Total Energy =                         -75.370404509286118
Nuclear Repulsion Energy =               3.649498006344828
One-electron Energy =                 -111.262858191922490
Two-electron Energy =                   32.242955676291544
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    0    1    0    0
single occ                     0    1    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6535593587778  | -20.6703884772782  | -20.6367302402774  occ= 2
MO #2   (A1  #2 ) energy= -1.26881927284539  | -1.34183067331162  | -1.19580787237915  occ= 2
MO #3   (A1  #3 ) energy= -0.611980797542907 | -0.629387368077056 | -0.594574227008759 occ= 2
MO #4   (E1y #1 ) energy= -0.533107388944396 | -0.552295722746381 | -0.513919055142411 occ= 2
MO #5   (E1x #1 ) energy= -0.244570502931206 | -0.642013203118494 | 0.152872197256077  occ= 1
MO #6   (A1  #4 ) energy= 0.0321616550962496 | 0.0309959472909947 | 0.0333273629015054 occ= 0
MO #7   (A1  #5 ) energy= 0.174660585373094  | 0.17125920587294   | 0.178061964873248  occ= 0
MO #8   (E1x #2 ) energy= 0.198554655039385  | 0.189510886767191  | 0.207598423311579  occ= 0
MO #9   (E1y #2 ) energy= 0.20339374828616   | 0.202130643903358  | 0.204656852668961  occ= 0
MO #10  (A1  #6 ) energy= 0.205778073990457  | 0.203281039436072  | 0.208275108544842  occ= 0
MO #11  (A1  #7 ) energy= 0.297940507506959  | 0.294360071576639  | 0.301520943437277  occ= 0
MO #12  (E1x #3 ) energy= 0.370481900764555  | 0.365983099365744  | 0.374980702163367  occ= 0
MO #13  (E1y #3 ) energy= 0.374349154885857  | 0.37375944469282   | 0.374938865078896  occ= 0
MO #14  (A1  #8 ) energy= 0.572534123584317  | 0.567294376518823  | 0.577773870649812  occ= 0
MO #15  (A1  #9 ) energy= 0.818793740639073  | 0.813943657028389  | 0.823643824249761  occ= 0
MO #16  (E2x #1 ) energy= 0.982618896367391  | 0.962020664665042  | 1.00321712806974   occ= 0
MO #17  (E2y #1 ) energy= 0.982618896367394  | 0.962020664665044  | 1.00321712806974   occ= 0
MO #18  (E1x #4 ) energy= 1.10265718541686   | 1.08173384964162   | 1.1235805211921    occ= 0
MO #19  (E1y #4 ) energy= 1.11188501110656   | 1.10891932998469   | 1.11485069222843   occ= 0
MO #20  (A1  #10) energy= 1.28686942957783   | 1.28062060087422   | 1.29311825828144   occ= 0
MO #21  (E1y #5 ) energy= 1.36721136616455   | 1.35915567211672   | 1.37526706021237   occ= 0
MO #22  (E1x #5 ) energy= 1.37183044030652   | 1.30117528591395   | 1.44248559469911   occ= 0
MO #23  (A1  #11) energy= 1.62933059683177   | 1.61660687516486   | 1.64205431849869   occ= 0
MO #24  (E1x #6 ) energy= 1.92501436065684   | 1.92069894013925   | 1.92932978117444   occ= 0
MO #25  (E1y #6 ) energy= 1.93448234248514   | 1.93360047335103   | 1.93536421161925   occ= 0
MO #26  (A1  #12) energy= 2.14175828585547   | 2.13094778776219   | 2.15256878394876   occ= 0
MO #27  (A1  #13) energy= 2.751525468915     | 2.7426836475033    | 2.76036729032668   occ= 0
MO #28  (E2x #2 ) energy= 3.53769882148403   | 3.49152644142784   | 3.58387120154023   occ= 0
MO #29  (E2y #2 ) energy= 3.53769882148403   | 3.49152644142784   | 3.58387120154023   occ= 0
MO #30  (E1x #7 ) energy= 3.61591950592619   | 3.57115904965357   | 3.66067996219883   occ= 0
MO #31  (E1y #7 ) energy= 3.63676367784192   | 3.62983039519262   | 3.64369696049123   occ= 0
MO #32  (A1  #14) energy= 3.84174249740461   | 3.82362740413319   | 3.85985759067602   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        2.00000
pop of  0 O 2s        1.88624
pop of  0 O 3s        0.00258
pop of  0 O 4s        0.00105
pop of  0 O 2px       0.99740
pop of  0 O 2py       1.99335
pop of  0 O 2pz       1.43497
pop of  0 O 3px       0.00019
pop of  0 O 3py       0.00164
pop of  0 O 3pz       0.00028
pop of  0 O 4px       0.00123
pop of  0 O 4py       0.00095
pop of  0 O 4pz       0.00141
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00120
pop of  0 O 3dz^2     0.00323
pop of  0 O 3dxz      0.00062
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00034
pop of  0 O 4dz^2     0.00014
pop of  0 O 4dxz      0.00016
pop of  0 O 4dx2-y2    0.00000
pop of  1 H 1s        0.65764
pop of  1 H 2s        0.00786
pop of  1 H 3s        0.00161
pop of  1 H 2px       0.00024
pop of  1 H 2py       0.00250
pop of  1 H 2pz       0.00151
pop of  1 H 3px       0.00016
pop of  1 H 3py       0.00002
pop of  1 H 3pz       0.00149
 ** Mulliken atomic charges  **
charge of  0O =     -0.32697
charge of  1H =      0.32697
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.91369
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_1.16/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.16)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:40:03 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:         8.33

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp5bbdwprr
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp5bbdwprr
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.244570502931208  LUMO = 0.274772038206699
Initial guess E= -75.3704124670331  |g|= 0.000371082
macro= 0  E= -75.370412533922  delta_E= -6.68889e-08  |g|= 0.000371082  1 KF 4 JK
macro= 1  E= -75.370412533922  delta_E= -1.42109e-14  |g|= 1.54847e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.370412533922  |g|= 1.54847e-08  total 3 KF 9 JK
converged SCF energy = -75.370412533922
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_1.16/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.16)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:40:03 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:         8.91

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpy3a2aqc3
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpy3a2aqc3
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.244570690278056  LUMO = 0.274772129675137
Initial guess E= -75.3704124670193  |g|= 0.00037121
macro= 0  E= -75.3704125339221  delta_E= -6.69028e-08  |g|= 0.00037121  1 KF 3 JK
macro= 1  E= -75.3704125339221  delta_E= 0  |g|= 1.54697e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3704125339221  |g|= 1.54697e-08  total 3 KF 8 JK
converged SCF energy = -75.3704125339221
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_1.16/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.16)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:40:04 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:         9.54

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgf15sdnb
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgf15sdnb
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.244754019878692  LUMO = 0.0321601107585548
Initial guess E= -75.3706179323843  |g|= 0.00822269
macro= 0  E= -75.3706387713804  delta_E= -2.0839e-05  |g|= 0.000154459  2 KF 7 JK
macro= 1  E= -75.3706387713804  delta_E= 0  |g|= 6.03435e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3706387713804  |g|= 6.03435e-06  total 4 KF 12 JK
converged SCF energy = -75.3706387713804
u+d contributions  -0.05368958985280664
uu+dd contributions  -0.07661608072557942
ud contributions  -0.14061100423476958
u+d contributions  -0.007489664841619002
uu+dd contributions  -0.03031689940683844
ud contributions  -0.09412922079837491
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_1.16/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.16)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:40:06 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        14.13

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpmywrft1z
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpmywrft1z
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.244214754379389  LUMO = 0.274870914108634
Initial guess E= -75.3704124308555  |g|= 0.000395667
macro= 0  E= -75.3704125339221  delta_E= -1.03067e-07  |g|= 0.000395667  1 KF 2 JK
macro= 1  E= -75.3704125339221  delta_E= 0  |g|= 4.01105e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3704125339221  |g|= 4.01105e-08  total 3 KF 7 JK
converged SCF energy = -75.3704125339221
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_1.16/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.16)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:40:06 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        14.80

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp3lkra5j8
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp3lkra5j8
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.244396207455015  LUMO = 0.0321585880829039
Initial guess E= -75.3705788270076  |g|= 0.00555953
macro= 0  E= -75.370593200326  delta_E= -1.43733e-05  |g|= 6.51305e-05  2 KF 6 JK
macro= 1  E= -75.370593200326  delta_E= 0  |g|= 1.18116e-05  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.370593200326  |g|= 1.18116e-05  total 4 KF 11 JK
converged SCF energy = -75.370593200326
u+d contributions  -0.022539868210014042
uu+dd contributions  -0.04073085653428518
ud contributions  -0.08514330394305891
u+d contributions  -0.005200276513096469
uu+dd contributions  -0.023359482338055567
ud contributions  -0.06775959678293297
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.986979, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.215914, i_min=0
In the tapering subroutine, i=2, E(i)=-75.370413, i_min=1
In the tapering subroutine, i=3, E(i)=-75.084314, i_min=2
In the tapering subroutine, i=4, E(i)=-75.366382, i_min=2
In the tapering subroutine, i=5, E(i)=-75.073112, i_min=2
In the tapering subroutine, i=6, E(i)=-74.819480, i_min=2
In the tapering subroutine, i=7, E(i)=-75.105672, i_min=2
In the tapering subroutine, i=8, E(i)=-75.215914, i_min=2
In the tapering subroutine, i=9, E(i)=-75.216125, i_min=2
In the tapering subroutine, i=10, E(i)=-75.106810, i_min=2
In the tapering subroutine, i=11, E(i)=-75.370413, i_min=2
In the tapering subroutine, i=12, E(i)=-75.094850, i_min=2
In the tapering subroutine, i=13, E(i)=-75.366382, i_min=2
In the tapering subroutine, i=14, E(i)=-75.105672, i_min=2
In the tapering subroutine, i=15, E(i)=-74.857856, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0052002631621556605
uu+dd contributions  -0.023359523650242388
ud contributions  -0.06773223820461337
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005201144791360555
uu+dd contributions  -0.02336091846981636
ud contributions  -0.06773517264480307
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.005201144791360555
uu+dd contributions  -0.02336091846981636
ud contributions  -0.06773517264480307
