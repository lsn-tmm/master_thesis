#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.82/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.82)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:26:26 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.820000000000 AA    0.000000000000   0.000000000000   1.549575422143 Bohr

nuclear repulsion = 5.16270449678049
point group symmetry = Coov
num. orbitals of irrep A1 = 14
num. orbitals of irrep E1x = 7
num. orbitals of irrep E1y = 7
num. orbitals of irrep E2x = 2
num. orbitals of irrep E2y = 2
number of shells = 13
number of NR pGTOs = 46
number of NR cGTOs = 32
basis = aug-cc-pvdz
ecp = {}
CPU time:         5.68
Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpy6dvgbah
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpy6dvgbah
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.456385874078888  LUMO (A1) = 0.0355774981729883
Initial guess E= -75.362934687586  |g|= 0.198735
macro= 0  E= -75.3707410481798  delta_E= -0.00780636  |g|= 0.198735  2 KF 5 JK
macro= 1  E= -75.3716925497093  delta_E= -0.000951502  |g|= 0.0931401  2 KF 5 JK
macro= 2  E= -75.3704887577407  delta_E= 0.00120379  |g|= 0.0529871  2 KF 5 JK
macro= 3  E= -75.3718469470828  delta_E= -0.00135819  |g|= 0.0973375  2 KF 5 JK
macro= 4  E= -75.370389659649  delta_E= 0.00145729  |g|= 0.0521119  2 KF 5 JK
macro= 5  E= -75.371842952606  delta_E= -0.00145329  |g|= 0.098188  2 KF 5 JK
macro= 6  E= -75.3703278061305  delta_E= 0.00151515  |g|= 0.0521086  2 KF 5 JK
macro= 7  E= -75.3718451184216  delta_E= -0.00151731  |g|= 0.0990236  2 KF 5 JK
macro= 8  E= -75.3703377459454  delta_E= 0.00150737  |g|= 0.0522729  2 KF 5 JK
macro= 9  E= -75.3718496916194  delta_E= -0.00151195  |g|= 0.0989545  2 KF 5 JK
macro= 10  E= -75.3703188639548  delta_E= 0.00153083  |g|= 0.0521437  2 KF 5 JK
macro= 11  E= -75.3718520994195  delta_E= -0.00153324  |g|= 0.0992408  2 KF 5 JK
macro= 12  E= -75.3703086760924  delta_E= 0.00154342  |g|= 0.0520831  2 KF 5 JK
macro= 13  E= -75.3718551604502  delta_E= -0.00154648  |g|= 0.0994234  2 KF 5 JK
macro= 14  E= -75.3702971502482  delta_E= 0.00155801  |g|= 0.0519941  2 KF 5 JK
macro= 15  E= -75.3718580198428  delta_E= -0.00156087  |g|= 0.0996187  2 KF 5 JK
macro= 16  E= -75.3702859284857  delta_E= 0.00157209  |g|= 0.0519053  2 KF 5 JK
macro= 17  E= -75.3718608698408  delta_E= -0.00157494  |g|= 0.0998088  2 KF 5 JK
macro= 18  E= -75.3702750122566  delta_E= 0.00158586  |g|= 0.051816  2 KF 5 JK
macro= 19  E= -75.3718636876034  delta_E= -0.00158868  |g|= 0.0999929  2 KF 5 JK
macro= 20  E= -75.3702642580664  delta_E= 0.00159943  |g|= 0.0517261  2 KF 5 JK
macro= 21  E= -75.3718664681925  delta_E= -0.00160221  |g|= 0.100173  2 KF 5 JK
macro= 22  E= -75.3702537345916  delta_E= 0.00161273  |g|= 0.0516365  2 KF 5 JK
macro= 23  E= -75.3718692149882  delta_E= -0.00161548  |g|= 0.100348  2 KF 5 JK
macro= 24  E= -75.370243414121  delta_E= 0.0016258  |g|= 0.0515471  2 KF 5 JK
macro= 25  E= -75.3718719258725  delta_E= -0.00162851  |g|= 0.100519  2 KF 5 JK
macro= 26  E= -75.3702333016968  delta_E= 0.00163862  |g|= 0.051458  2 KF 5 JK
macro= 27  E= -75.3718746009375  delta_E= -0.0016413  |g|= 0.100685  2 KF 5 JK
macro= 28  E= -75.370223392721  delta_E= 0.00165121  |g|= 0.0513694  2 KF 5 JK
macro= 29  E= -75.3718772396645  delta_E= -0.00165385  |g|= 0.100848  2 KF 5 JK
macro= 30  E= -75.3702136849715  delta_E= 0.00166355  |g|= 0.0512812  2 KF 5 JK
macro= 31  E= -75.3701577558146  delta_E= 5.59292e-05  |g|= 0.101006  2 KF 5 JK
macro= 32  E= -75.3711261352043  delta_E= -0.000968379  |g|= 0.087687  2 KF 5 JK
macro= 33  E= -75.3700954652078  delta_E= 0.00103067  |g|= 0.0876464  2 KF 5 JK
macro= 34  E= -75.3711519484608  delta_E= -0.00105648  |g|= 0.089357  2 KF 5 JK
macro= 35  E= -75.3700942614682  delta_E= 0.00105769  |g|= 0.0869548  2 KF 5 JK
macro= 36  E= -75.3711385433576  delta_E= -0.00104428  |g|= 0.0892219  2 KF 5 JK
macro= 37  E= -75.3700778616985  delta_E= 0.00106068  |g|= 0.087143  2 KF 5 JK
macro= 38  E= -75.3711321705195  delta_E= -0.00105431  |g|= 0.0894698  2 KF 5 JK
macro= 39  E= -75.3700622587266  delta_E= 0.00106991  |g|= 0.0872629  2 KF 5 JK
macro= 40  E= -75.3711279119037  delta_E= -0.00106565  |g|= 0.0897299  2 KF 5 JK
macro= 41  E= -75.3700474677469  delta_E= 0.00108044  |g|= 0.0873751  2 KF 5 JK
macro= 42  E= -75.3711239156986  delta_E= -0.00107645  |g|= 0.0899771  2 KF 5 JK
macro= 43  E= -75.3700329353699  delta_E= 0.00109098  |g|= 0.0874971  2 KF 5 JK
macro= 44  E= -75.3711198345065  delta_E= -0.0010869  |g|= 0.0902172  2 KF 5 JK
macro= 45  E= -75.3700185256476  delta_E= 0.00110131  |g|= 0.0876276  2 KF 5 JK
macro= 46  E= -75.3711156374369  delta_E= -0.00109711  |g|= 0.0904526  2 KF 5 JK
macro= 47  E= -75.3700042244312  delta_E= 0.00111141  |g|= 0.0877635  2 KF 5 JK
macro= 48  E= -75.3711113542942  delta_E= -0.00110713  |g|= 0.090684  2 KF 5 JK
macro= 49  E= -75.369990042483  delta_E= 0.00112131  |g|= 0.0879025  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.369990042483  |g|= 0.0879025  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.369990042483

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 0 electrons in irreps []
    9 free electrons in irreps A1 E1x E1y E2x E2y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpy6dvgbah
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpy6dvgbah
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.288618094952377  LUMO (A1) = 0.0376596259056583
Initial guess E= -75.3726248104129  |g|= 0.0597161
macro= 0  E= -75.3732009019346  delta_E= -0.000576092  |g|= 0.0597161  2 KF 5 JK
macro= 1  E= -75.3732601080294  delta_E= -5.92061e-05  |g|= 0.0241572  2 KF 5 JK
macro= 2  E= -75.3730930178568  delta_E= 0.00016709  |g|= 0.0154029  2 KF 5 JK
macro= 3  E= -75.3732574293178  delta_E= -0.000164411  |g|= 0.030599  2 KF 5 JK
macro= 4  E= -75.3730930287252  delta_E= 0.000164401  |g|= 0.0126867  2 KF 5 JK
macro= 5  E= -75.3732408811666  delta_E= -0.000147852  |g|= 0.0315476  2 KF 5 JK
macro= 6  E= -75.3731764966267  delta_E= 6.43845e-05  |g|= 0.0146703  2 KF 5 JK
macro= 7  E= -75.3732270524139  delta_E= -5.05558e-05  |g|= 0.0258594  2 KF 5 JK
macro= 8  E= -75.3731348980692  delta_E= 9.21543e-05  |g|= 0.0156259  2 KF 5 JK
macro= 9  E= -75.3732612832209  delta_E= -0.000126385  |g|= 0.0281767  2 KF 5 JK
macro= 10  E= -75.3731465450665  delta_E= 0.000114738  |g|= 0.0148239  2 KF 5 JK
macro= 11  E= -75.3732512316974  delta_E= -0.000104687  |g|= 0.0268976  2 KF 5 JK
macro= 12  E= -75.3731643801465  delta_E= 8.68516e-05  |g|= 0.0146238  2 KF 5 JK
macro= 13  E= -75.3732510731  delta_E= -8.6693e-05  |g|= 0.0257985  2 KF 5 JK
macro= 14  E= -75.3731621096314  delta_E= 8.89635e-05  |g|= 0.0143421  2 KF 5 JK
macro= 15  E= -75.3732515377079  delta_E= -8.94281e-05  |g|= 0.0259156  2 KF 5 JK
macro= 16  E= -75.3731076909173  delta_E= 0.000143847  |g|= 0.0144141  2 KF 5 JK
macro= 17  E= -75.3732534153673  delta_E= -0.000145724  |g|= 0.0300553  2 KF 5 JK
macro= 18  E= -75.3731061718453  delta_E= 0.000147244  |g|= 0.0148713  2 KF 5 JK
macro= 19  E= -75.3732527004414  delta_E= -0.000146529  |g|= 0.0301312  2 KF 5 JK
macro= 20  E= -75.3731615557813  delta_E= 9.11447e-05  |g|= 0.0148492  2 KF 5 JK
macro= 21  E= -75.3732513024296  delta_E= -8.97466e-05  |g|= 0.0259441  2 KF 5 JK
macro= 22  E= -75.3731613959153  delta_E= 8.99065e-05  |g|= 0.0143887  2 KF 5 JK
macro= 23  E= -75.3732517068814  delta_E= -9.0311e-05  |g|= 0.0259638  2 KF 5 JK
macro= 24  E= -75.373108370062  delta_E= 0.000143337  |g|= 0.0144055  2 KF 5 JK
macro= 25  E= -75.3732536447068  delta_E= -0.000145275  |g|= 0.0300184  2 KF 5 JK
macro= 26  E= -75.373106954906  delta_E= 0.00014669  |g|= 0.0148308  2 KF 5 JK
macro= 27  E= -75.3732529611796  delta_E= -0.000146006  |g|= 0.0300925  2 KF 5 JK
macro= 28  E= -75.3731608700149  delta_E= 9.20912e-05  |g|= 0.0148043  2 KF 5 JK
macro= 29  E= -75.3732515043857  delta_E= -9.06344e-05  |g|= 0.0260083  2 KF 5 JK
macro= 30  E= -75.3731604284855  delta_E= 9.10759e-05  |g|= 0.014369  2 KF 5 JK
macro= 31  E= -75.3732519233801  delta_E= -9.14949e-05  |g|= 0.0260446  2 KF 5 JK
macro= 32  E= -75.3731092277368  delta_E= 0.000142696  |g|= 0.0143872  2 KF 5 JK
macro= 33  E= -75.3732538817664  delta_E= -0.000144654  |g|= 0.0299714  2 KF 5 JK
macro= 34  E= -75.3731077215929  delta_E= 0.00014616  |g|= 0.0147835  2 KF 5 JK
macro= 35  E= -75.3732532035399  delta_E= -0.000145482  |g|= 0.0300551  2 KF 5 JK
macro= 36  E= -75.3731602136266  delta_E= 9.29899e-05  |g|= 0.0147572  2 KF 5 JK
macro= 37  E= -75.3732517033127  delta_E= -9.14897e-05  |g|= 0.0260714  2 KF 5 JK
macro= 38  E= -75.3731594965202  delta_E= 9.22068e-05  |g|= 0.0143474  2 KF 5 JK
macro= 39  E= -75.3732521416069  delta_E= -9.26451e-05  |g|= 0.0261245  2 KF 5 JK
macro= 40  E= -75.3731100248811  delta_E= 0.000142117  |g|= 0.0143676  2 KF 5 JK
macro= 41  E= -75.3732541070374  delta_E= -0.000144082  |g|= 0.0299277  2 KF 5 JK
macro= 42  E= -75.3731084375063  delta_E= 0.00014567  |g|= 0.0147376  2 KF 5 JK
macro= 43  E= -75.3732534326304  delta_E= -0.000144995  |g|= 0.0300199  2 KF 5 JK
macro= 44  E= -75.3731595697758  delta_E= 9.38629e-05  |g|= 0.0147116  2 KF 5 JK
macro= 45  E= -75.3732519005751  delta_E= -9.23308e-05  |g|= 0.0261334  2 KF 5 JK
macro= 46  E= -75.3731082347395  delta_E= 0.000143666  |g|= 0.0143255  2 KF 5 JK
macro= 47  E= -75.3732539897246  delta_E= -0.000145755  |g|= 0.0300735  2 KF 5 JK
macro= 48  E= -75.373108411658  delta_E= 0.000145578  |g|= 0.0146869  2 KF 5 JK
macro= 49  E= -75.3732536151732  delta_E= -0.000145204  |g|= 0.0300355  2 KF 5 JK
Canonicalize SCF orbitals
macro X = 50  E=-75.3732536151732  |g|= 0.0300355  total 101 KF 301 JK
SCF not converged.
SCF energy = -75.3732536151732
**** SCF Summaries ****
Total Energy =                         -75.373253615173212
Nuclear Repulsion Energy =               5.162704496780488
One-electron Energy =                 -113.905068920392310
Two-electron Energy =                   33.369110808438606
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y
double occ                     3    1    0    0    0
single occ                     0    0    1    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.6264952501102  | -20.6431873473938  | -20.6098031528267  occ= 2
MO #2   (A1  #2 ) energy= -1.37521401117504  | -1.44259976329992  | -1.30782825905016  occ= 2
MO #3   (A1  #3 ) energy= -0.705712971077582 | -0.729654884547465 | -0.681771057607699 occ= 2
MO #4   (E1x #1 ) energy= -0.548061598421684 | -0.567185339450713 | -0.528937857392655 occ= 2
MO #5   (E1y #1 ) energy= -0.259188189453614 | -0.655879641946035 | 0.137503263038805  occ= 1
MO #6   (A1  #4 ) energy= 0.0380485332223346 | 0.0374379552994245 | 0.0386591111452436 occ= 0
MO #7   (A1  #5 ) energy= 0.175392313618509  | 0.174544725907867  | 0.176239901329149  occ= 0
MO #8   (E1y #2 ) energy= 0.190227403370045  | 0.18234643468963   | 0.19810837205046   occ= 0
MO #9   (E1x #2 ) energy= 0.194703676101687  | 0.193632757568333  | 0.19577459463504   occ= 0
MO #10  (A1  #6 ) energy= 0.236016020056509  | 0.232717498044676  | 0.239314542068339  occ= 0
MO #11  (A1  #7 ) energy= 0.351891128792836  | 0.349299195393819  | 0.354483062191846  occ= 0
MO #12  (E1y #3 ) energy= 0.412698253304936  | 0.404887481851904  | 0.420509024757968  occ= 0
MO #13  (E1x #3 ) energy= 0.416896355119007  | 0.415876082902997  | 0.417916627335016  occ= 0
MO #14  (A1  #8 ) energy= 0.653906100371818  | 0.647831202384498  | 0.659980998359086  occ= 0
MO #15  (A1  #9 ) energy= 0.927500809706565  | 0.916668175140073  | 0.938333444273051  occ= 0
MO #16  (E2x #1 ) energy= 0.970228403964646  | 0.949674342717379  | 0.990782465211913  occ= 0
MO #17  (E2y #1 ) energy= 0.970228403964647  | 0.94967434271738   | 0.990782465211914  occ= 0
MO #18  (E1y #4 ) energy= 1.10409592273453   | 1.07966934587939   | 1.12852249958967   occ= 0
MO #19  (E1x #4 ) energy= 1.11237734604539   | 1.10900919725017   | 1.11574549484062   occ= 0
MO #20  (A1  #10) energy= 1.33319321257143   | 1.32692319300708   | 1.33946323213576   occ= 0
MO #21  (E1x #5 ) energy= 1.42536127877081   | 1.41756641499614   | 1.43315614254549   occ= 0
MO #22  (E1y #5 ) energy= 1.42644799987973   | 1.36006854026179   | 1.49282745949766   occ= 0
MO #23  (A1  #11) energy= 1.76265791745063   | 1.75196004590862   | 1.77335578899265   occ= 0
MO #24  (E1y #6 ) energy= 2.12746800559597   | 2.11692007856035   | 2.1380159326316    occ= 0
MO #25  (E1x #6 ) energy= 2.14057491356753   | 2.13884092061574   | 2.14230890651932   occ= 0
MO #26  (A1  #12) energy= 2.66890101826716   | 2.65630691263092   | 2.68149512390336   occ= 0
MO #27  (A1  #13) energy= 2.97730385024807   | 2.963874708        | 2.99073299249615   occ= 0
MO #28  (E2x #2 ) energy= 3.52451363414669   | 3.47851693628069   | 3.5705103320127    occ= 0
MO #29  (E2y #2 ) energy= 3.52451363414669   | 3.47851693628069   | 3.5705103320127    occ= 0
MO #30  (E1y #7 ) energy= 3.67123096992018   | 3.62805650459397   | 3.71440543524639   occ= 0
MO #31  (E1x #7 ) energy= 3.69256313215903   | 3.68575056989521   | 3.69937569442285   occ= 0
MO #32  (A1  #14) energy= 4.38567669032808   | 4.37300003172894   | 4.39835334892719   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.74462
pop of  0 O 3s        0.00904
pop of  0 O 4s        0.00133
pop of  0 O 2px       1.99083
pop of  0 O 2py       0.99606
pop of  0 O 2pz       1.59833
pop of  0 O 3px       0.00133
pop of  0 O 3py       0.00013
pop of  0 O 3pz       0.00719
pop of  0 O 4px       0.00098
pop of  0 O 4py       0.00114
pop of  0 O 4pz       0.00029
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00129
pop of  0 O 3dz^2     0.01051
pop of  0 O 3dxz      0.00243
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00013
pop of  0 O 4dz^2     0.00018
pop of  0 O 4dxz      0.00026
pop of  0 O 4dx2-y2    0.00000
pop of  1 H 1s        0.59355
pop of  1 H 2s        0.02288
pop of  1 H 3s        0.01062
pop of  1 H 2px       0.00408
pop of  1 H 2py       0.00063
pop of  1 H 2pz       0.00122
pop of  1 H 3px       0.00008
pop of  1 H 3py       0.00062
pop of  1 H 3pz       0.00025
 ** Mulliken atomic charges  **
charge of  0O =     -0.36607
charge of  1H =      0.36607
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.64751
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.82/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.82)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:26:32 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        12.95

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpu3eoj6mo
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 4  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpu3eoj6mo
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.259188189453605  LUMO = 0.568403715895792
Initial guess E= -75.3732579172569  |g|= 0.000499267
macro= 0  E= -75.3732580073397  delta_E= -9.00828e-08  |g|= 0.000499267  1 KF 4 JK
macro= 1  E= -75.3732580073397  delta_E= 2.84217e-14  |g|= 1.43694e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3732580073397  |g|= 1.43694e-08  total 3 KF 9 JK
converged SCF energy = -75.3732580073397
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.82/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.82)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:26:32 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        13.30

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpioc8ldzx
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpioc8ldzx
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.259188405898793  LUMO = 0.568403787493907
Initial guess E= -75.3732579172697  |g|= 0.000499277
macro= 0  E= -75.3732580073397  delta_E= -9.007e-08  |g|= 0.000499277  1 KF 3 JK
macro= 1  E= -75.3732580073397  delta_E= 0  |g|= 1.43278e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3732580073397  |g|= 1.43278e-08  total 3 KF 8 JK
converged SCF energy = -75.3732580073397
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.82/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.82)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:26:32 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        13.72

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpw9bbmmq8
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 3  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpw9bbmmq8
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.259291521795908  LUMO = 0.0380462837973082
Initial guess E= -75.3733956438858  |g|= 0.00632915
macro= 0  E= -75.3734071437857  delta_E= -1.14999e-05  |g|= 7.53352e-05  2 KF 6 JK
macro= 1  E= -75.3734071437857  delta_E= 0  |g|= 1.13339e-05  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3734071437857  |g|= 1.13339e-05  total 4 KF 11 JK
converged SCF energy = -75.3734071437857
u+d contributions  -0.047443751966322854
uu+dd contributions  -0.0721683594065421
ud contributions  -0.14094225738876304
u+d contributions  -0.006970947126869316
uu+dd contributions  -0.03160501968566478
ud contributions  -0.10023121129669317
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.82/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.82)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:26:36 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        17.24

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp6yvz8ukl
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp6yvz8ukl
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.258759383282601  LUMO = 0.568499040510961
Initial guess E= -75.3732579220179  |g|= 0.000405882
macro= 0  E= -75.3732580073397  delta_E= -8.53218e-08  |g|= 0.000405882  1 KF 2 JK
macro= 1  E= -75.3732580073397  delta_E= 0  |g|= 2.69822e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3732580073397  |g|= 2.69822e-08  total 3 KF 7 JK
converged SCF energy = -75.3732580073397
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvdz/radical/R_0.82/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.82)]],basis='aug-cc-pvdz',spin=1,charge=0,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64')  Threads 1
Python 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:58:46) 
[Clang 11.1.0 ]
numpy 1.21.2  scipy 1.7.1
Date: Thu Jan  6 00:26:36 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/caltech_entanglement/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        17.62

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.rohf.ROHF'> ********
method = ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmph651d_31
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 2  num. singly occ = 1
******** <class 'pyscf.scf.rohf.ROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmph651d_31
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.258860284394032  LUMO = 0.0380370917202316
Initial guess E= -75.3733552606763  |g|= 0.0041048
macro= 0  E= -75.3733626871053  delta_E= -7.42643e-06  |g|= 5.12796e-05  2 KF 6 JK
macro= 1  E= -75.3733626871053  delta_E= 1.42109e-14  |g|= 5.61348e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 2  E=-75.3733626871053  |g|= 5.61348e-06  total 4 KF 11 JK
converged SCF energy = -75.3733626871053
u+d contributions  -0.015649644111134876
uu+dd contributions  -0.03603958190776811
ud contributions  -0.08701214446901742
u+d contributions  -0.0031334932020524223
uu+dd contributions  -0.023509830091441593
ud contributions  -0.0744794439402253
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.741765, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.195875, i_min=0
In the tapering subroutine, i=2, E(i)=-75.373258, i_min=1
In the tapering subroutine, i=3, E(i)=-74.791258, i_min=2
In the tapering subroutine, i=4, E(i)=-75.369440, i_min=2
In the tapering subroutine, i=5, E(i)=-74.780291, i_min=2
In the tapering subroutine, i=6, E(i)=-74.806767, i_min=2
In the tapering subroutine, i=7, E(i)=-74.825953, i_min=2
In the tapering subroutine, i=8, E(i)=-75.195875, i_min=2
In the tapering subroutine, i=9, E(i)=-75.235033, i_min=2
In the tapering subroutine, i=10, E(i)=-74.818315, i_min=2
In the tapering subroutine, i=11, E(i)=-75.373258, i_min=2
In the tapering subroutine, i=12, E(i)=-74.806591, i_min=2
In the tapering subroutine, i=13, E(i)=-75.369440, i_min=2
In the tapering subroutine, i=14, E(i)=-74.825953, i_min=2
In the tapering subroutine, i=15, E(i)=-74.845014, i_min=2
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.0031334537141173738
uu+dd contributions  -0.023509772525920812
ud contributions  -0.07446590420743547
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003132388341865801
uu+dd contributions  -0.023508658363122534
ud contributions  -0.07446472617015516
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     └───┘
q_2: ─────
          
q_3: ─────
          
u+d contributions  -0.003132388341865801
uu+dd contributions  -0.023508658363122534
ud contributions  -0.07446472617015516
