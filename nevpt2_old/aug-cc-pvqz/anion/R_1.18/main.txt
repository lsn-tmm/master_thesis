#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.18/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.18)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 20:17:18 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.180000000000 AA    0.000000000000   0.000000000000   2.229876826987 Bohr

nuclear repulsion = 3.5876421079322
point group symmetry = Coov
num. orbitals of irrep A1 = 34
num. orbitals of irrep E1x = 23
num. orbitals of irrep E1y = 23
num. orbitals of irrep E2x = 14
num. orbitals of irrep E2y = 14
num. orbitals of irrep E3x = 7
num. orbitals of irrep E3y = 7
num. orbitals of irrep E4x = 2
num. orbitals of irrep E4y = 2
number of shells = 33
number of NR pGTOs = 141
number of NR cGTOs = 126
basis = aug-cc-pvqz
ecp = {}
CPU time:         4.24
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y E4x E4y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpp5uiqbxy
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpp5uiqbxy
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.412761104455358  LUMO (A1) = 0.0122029747358306
Initial guess E= -75.2206159747781  |g|= 0.814855
macro= 0  E= -75.3582143040668  delta_E= -0.137598  |g|= 0.184314  3 KF 18 JK
macro= 1  E= -75.3820414823389  delta_E= -0.0238272  |g|= 0.0338052  3 KF 9 JK
macro= 2  E= -75.3821125433556  delta_E= -7.1061e-05  |g|= 0.00142066  2 KF 9 JK
macro= 3  E= -75.3821125433561  delta_E= -4.9738e-13  |g|= 6.37333e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.3821125433561  |g|= 6.37333e-06  total 10 KF 43 JK
converged SCF energy = -75.3821125433561
**** SCF Summaries ****
Total Energy =                         -75.382112543356143
Nuclear Repulsion Energy =               3.587642107932204
One-electron Energy =                 -114.881654254138752
Two-electron Energy =                   35.911899602850411
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y  E4x  E4y
double occ                     3    1    1    0    0    0    0    0    0
single occ                     0    0    0    0    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.218143585129   | -20.218143585129   | -20.218143585129   occ= 2
MO #2   (A1  #2 ) energy= -0.866375127333127 | -0.86637512733313  | -0.86637512733313  occ= 2
MO #3   (A1  #3 ) energy= -0.205388297047692 | -0.205388297047692 | -0.205388297047692 occ= 2
MO #4   (E1x #1 ) energy= -0.119510257354542 | -0.119510257354542 | -0.119510257354542 occ= 2
MO #5   (E1y #1 ) energy= -0.119510257354545 | -0.119510257354545 | -0.119510257354545 occ= 2
MO #6   (A1  #4 ) energy= 0.171432503688848  | 0.171432503688843  | 0.171432503688843  occ= 0
MO #7   (A1  #5 ) energy= 0.28981228506961   | 0.289812285069606  | 0.289812285069606  occ= 0
MO #8   (E1x #2 ) energy= 0.334478996537267  | 0.334478996537266  | 0.334478996537266  occ= 0
MO #9   (E1y #2 ) energy= 0.33447899653726   | 0.334478996537261  | 0.334478996537261  occ= 0
MO #10  (A1  #6 ) energy= 0.352970586818642  | 0.352970586818642  | 0.352970586818642  occ= 0
MO #11  (E1x #3 ) energy= 0.406807063006324  | 0.406807063006323  | 0.406807063006323  occ= 0
MO #12  (E1y #3 ) energy= 0.406807063006297  | 0.406807063006296  | 0.406807063006296  occ= 0
MO #13  (A1  #7 ) energy= 0.433818166810811  | 0.433818166810808  | 0.433818166810808  occ= 0
MO #14  (A1  #8 ) energy= 0.557812870807887  | 0.557812870807887  | 0.557812870807887  occ= 0
MO #15  (A1  #9 ) energy= 0.744494946185644  | 0.744494946185646  | 0.744494946185646  occ= 0
MO #16  (E2x #1 ) energy= 0.74514894306423   | 0.74514894306423   | 0.74514894306423   occ= 0
MO #17  (E2y #1 ) energy= 0.745148943064232  | 0.745148943064232  | 0.745148943064232  occ= 0
MO #18  (E1x #4 ) energy= 0.787464613043862  | 0.787464613043858  | 0.787464613043858  occ= 0
MO #19  (E1y #4 ) energy= 0.787464613043803  | 0.787464613043801  | 0.787464613043801  occ= 0
MO #20  (A1  #10) energy= 0.869800179069858  | 0.869800179069864  | 0.869800179069864  occ= 0
MO #21  (E1x #5 ) energy= 0.915809953016713  | 0.91580995301671   | 0.91580995301671   occ= 0
MO #22  (E1y #5 ) energy= 0.915809953016689  | 0.915809953016686  | 0.915809953016686  occ= 0
MO #23  (A1  #11) energy= 0.940155230334272  | 0.940155230334244  | 0.940155230334244  occ= 0
MO #24  (E2x #2 ) energy= 0.941654813562206  | 0.941654813562208  | 0.941654813562208  occ= 0
MO #25  (E2y #2 ) energy= 0.941654813562209  | 0.941654813562211  | 0.941654813562211  occ= 0
MO #26  (E1x #6 ) energy= 1.05612829835113   | 1.05612829835113   | 1.05612829835113   occ= 0
MO #27  (E1y #6 ) energy= 1.05612829835111   | 1.05612829835112   | 1.05612829835112   occ= 0
MO #28  (A1  #12) energy= 1.07434346386493   | 1.07434346386495   | 1.07434346386495   occ= 0
MO #29  (E1x #7 ) energy= 1.38061582439494   | 1.38061582439493   | 1.38061582439493   occ= 0
MO #30  (E1y #7 ) energy= 1.38061582439482   | 1.38061582439481   | 1.38061582439481   occ= 0
MO #31  (A1  #13) energy= 1.51837385905313   | 1.51837385905309   | 1.51837385905309   occ= 0
MO #32  (E3x #1 ) energy= 1.64110101451203   | 1.64110101451203   | 1.64110101451203   occ= 0
MO #33  (E3y #1 ) energy= 1.64110101451202   | 1.64110101451202   | 1.64110101451202   occ= 0
MO #34  (A1  #14) energy= 1.64559418710336   | 1.64559418710333   | 1.64559418710333   occ= 0
MO #35  (E2x #3 ) energy= 1.83514330683247   | 1.83514330683247   | 1.83514330683247   occ= 0
MO #36  (E2y #3 ) energy= 1.83514330683247   | 1.83514330683247   | 1.83514330683247   occ= 0
MO #37  (E1x #8 ) energy= 1.84986750249085   | 1.84986750249084   | 1.84986750249084   occ= 0
MO #38  (E1y #8 ) energy= 1.84986750249079   | 1.84986750249079   | 1.84986750249079   occ= 0
MO #39  (E2x #4 ) energy= 1.86796090965536   | 1.86796090965536   | 1.86796090965536   occ= 0
MO #40  (E2y #4 ) energy= 1.86796090965536   | 1.86796090965536   | 1.86796090965536   occ= 0
MO #41  (A1  #15) energy= 1.90470812199701   | 1.904708121997     | 1.904708121997     occ= 0
MO #42  (E3x #2 ) energy= 1.98616021780917   | 1.98616021780918   | 1.98616021780918   occ= 0
MO #43  (E3y #2 ) energy= 1.98616021780917   | 1.98616021780918   | 1.98616021780918   occ= 0
MO #44  (A1  #16) energy= 2.02010682382796   | 2.02010682382793   | 2.02010682382793   occ= 0
MO #45  (E1x #9 ) energy= 2.06833230901188   | 2.06833230901187   | 2.06833230901187   occ= 0
MO #46  (E1y #9 ) energy= 2.06833230901184   | 2.06833230901184   | 2.06833230901184   occ= 0
MO #47  (E2x #5 ) energy= 2.23063859081365   | 2.23063859081365   | 2.23063859081365   occ= 0
MO #48  (E2y #5 ) energy= 2.23063859081366   | 2.23063859081366   | 2.23063859081366   occ= 0
MO #49  (A1  #17) energy= 2.29536806338392   | 2.29536806338393   | 2.29536806338393   occ= 0
MO #50  (E1x #10) energy= 2.3735643779764    | 2.37356437797639   | 2.37356437797639   occ= 0
MO #51  (E1y #10) energy= 2.37356437797632   | 2.37356437797632   | 2.37356437797632   occ= 0
MO #52  (A1  #18) energy= 2.53832564616828   | 2.53832564616826   | 2.53832564616826   occ= 0
MO #53  (E1x #11) energy= 2.97863399864843   | 2.97863399864843   | 2.97863399864843   occ= 0
MO #54  (E1y #11) energy= 2.97863399864838   | 2.97863399864838   | 2.97863399864838   occ= 0
MO #55  (E2x #6 ) energy= 3.02101143745806   | 3.02101143745806   | 3.02101143745806   occ= 0
MO #56  (E2y #6 ) energy= 3.02101143745806   | 3.02101143745806   | 3.02101143745806   occ= 0
MO #57  (E1x #12) energy= 3.16527225848921   | 3.16527225848921   | 3.16527225848921   occ= 0
MO #58  (E1y #12) energy= 3.16527225848915   | 3.16527225848915   | 3.16527225848915   occ= 0
MO #59  (A1  #19) energy= 3.28312656183047   | 3.28312656183042   | 3.28312656183042   occ= 0
MO #60  (A1  #20) energy= 3.74113203897676   | 3.74113203897676   | 3.74113203897676   occ= 0
MO #61  (E1x #13) energy= 4.04487055874652   | 4.04487055874651   | 4.04487055874651   occ= 0
MO #62  (E1y #13) energy= 4.04487055874641   | 4.04487055874641   | 4.04487055874641   occ= 0
MO #63  (E4x #1 ) energy= 4.04488035229126   | 4.04488035229126   | 4.04488035229126   occ= 0
MO #64  (E4y #1 ) energy= 4.04488035229125   | 4.04488035229125   | 4.04488035229125   occ= 0
MO #65  (E3x #3 ) energy= 4.20288095256156   | 4.20288095256156   | 4.20288095256156   occ= 0
MO #66  (E3y #3 ) energy= 4.20288095256155   | 4.20288095256156   | 4.20288095256156   occ= 0
MO #67  (A1  #21) energy= 4.34573100488971   | 4.34573100488975   | 4.34573100488975   occ= 0
MO #68  (E3x #4 ) energy= 4.48421710843342   | 4.48421710843342   | 4.48421710843342   occ= 0
MO #69  (E3y #4 ) energy= 4.48421710843342   | 4.48421710843342   | 4.48421710843342   occ= 0
MO #70  (E2x #7 ) energy= 4.55470739994632   | 4.55470739994632   | 4.55470739994632   occ= 0
MO #71  (E2y #7 ) energy= 4.55470739994632   | 4.55470739994632   | 4.55470739994632   occ= 0
MO #72  (E2x #8 ) energy= 4.57699152558188   | 4.57699152558188   | 4.57699152558188   occ= 0
MO #73  (E2y #8 ) energy= 4.57699152558187   | 4.57699152558187   | 4.57699152558187   occ= 0
MO #74  (E1x #14) energy= 4.57992839242173   | 4.57992839242173   | 4.57992839242173   occ= 0
MO #75  (E1y #14) energy= 4.57992839242173   | 4.57992839242173   | 4.57992839242173   occ= 0
MO #76  (A1  #22) energy= 4.62437738595717   | 4.62437738595717   | 4.62437738595717   occ= 0
MO #77  (A1  #23) energy= 4.66416844901581   | 4.66416844901578   | 4.66416844901578   occ= 0
MO #78  (E1x #15) energy= 4.95788978533055   | 4.95788978533055   | 4.95788978533055   occ= 0
MO #79  (E1y #15) energy= 4.95788978533052   | 4.95788978533052   | 4.95788978533052   occ= 0
MO #80  (E2x #9 ) energy= 5.02439844111925   | 5.02439844111925   | 5.02439844111925   occ= 0
MO #81  (E2y #9 ) energy= 5.02439844111925   | 5.02439844111924   | 5.02439844111924   occ= 0
MO #82  (A1  #24) energy= 5.4749094574589    | 5.47490945745889   | 5.47490945745889   occ= 0
MO #83  (E1x #16) energy= 5.63599149139072   | 5.63599149139073   | 5.63599149139073   occ= 0
MO #84  (E1y #16) energy= 5.63599149139068   | 5.63599149139069   | 5.63599149139069   occ= 0
MO #85  (A1  #25) energy= 5.99817198876304   | 5.99817198876301   | 5.99817198876301   occ= 0
MO #86  (E3x #5 ) energy= 6.92917966536182   | 6.92917966536182   | 6.92917966536182   occ= 0
MO #87  (E3y #5 ) energy= 6.92917966536182   | 6.92917966536182   | 6.92917966536182   occ= 0
MO #88  (E2x #10) energy= 7.5123481845814    | 7.5123481845814    | 7.5123481845814    occ= 0
MO #89  (E2y #10) energy= 7.51234818458141   | 7.51234818458141   | 7.51234818458141   occ= 0
MO #90  (A1  #26) energy= 7.65546320496898   | 7.65546320496898   | 7.65546320496898   occ= 0
MO #91  (E1x #17) energy= 7.98458058641813   | 7.98458058641813   | 7.98458058641813   occ= 0
MO #92  (E1y #17) energy= 7.9845805864181    | 7.9845805864181    | 7.9845805864181    occ= 0
MO #93  (A1  #27) energy= 8.46662307199895   | 8.46662307199896   | 8.46662307199896   occ= 0
MO #94  (E2x #11) energy= 8.85565089353525   | 8.85565089353526   | 8.85565089353526   occ= 0
MO #95  (E2y #11) energy= 8.85565089353527   | 8.85565089353527   | 8.85565089353527   occ= 0
MO #96  (E1x #18) energy= 9.22660574912372   | 9.22660574912372   | 9.22660574912372   occ= 0
MO #97  (E1y #18) energy= 9.22660574912372   | 9.22660574912371   | 9.22660574912371   occ= 0
MO #98  (E1x #19) energy= 9.27845320287694   | 9.27845320287694   | 9.27845320287694   occ= 0
MO #99  (E1y #19) energy= 9.27845320287694   | 9.27845320287695   | 9.27845320287695   occ= 0
MO #100 (A1  #28) energy= 9.79179538930731   | 9.79179538930727   | 9.79179538930727   occ= 0
MO #101 (A1  #29) energy= 10.8630810800847   | 10.8630810800847   | 10.8630810800847   occ= 0
MO #102 (E4x #2 ) energy= 11.0519791833478   | 11.0519791833478   | 11.0519791833478   occ= 0
MO #103 (E4y #2 ) energy= 11.0519791833478   | 11.0519791833478   | 11.0519791833478   occ= 0
MO #104 (E3x #6 ) energy= 11.1160248312247   | 11.1160248312247   | 11.1160248312247   occ= 0
MO #105 (E3y #6 ) energy= 11.1160248312247   | 11.1160248312247   | 11.1160248312247   occ= 0
MO #106 (E1x #20) energy= 11.3116889073215   | 11.3116889073215   | 11.3116889073215   occ= 0
MO #107 (E1y #20) energy= 11.3116889073214   | 11.3116889073215   | 11.3116889073215   occ= 0
MO #108 (E2x #12) energy= 11.320201109138    | 11.3202011091381   | 11.3202011091381   occ= 0
MO #109 (E2y #12) energy= 11.320201109138    | 11.320201109138    | 11.320201109138    occ= 0
MO #110 (E1x #21) energy= 11.626799176384    | 11.626799176384    | 11.626799176384    occ= 0
MO #111 (E1y #21) energy= 11.626799176384    | 11.626799176384    | 11.626799176384    occ= 0
MO #112 (A1  #30) energy= 11.7967936979687   | 11.7967936979687   | 11.7967936979687   occ= 0
MO #113 (A1  #31) energy= 12.2004113319969   | 12.2004113319969   | 12.2004113319969   occ= 0
MO #114 (E3x #7 ) energy= 12.2972857295782   | 12.2972857295782   | 12.2972857295782   occ= 0
MO #115 (E3y #7 ) energy= 12.2972857295782   | 12.2972857295782   | 12.2972857295782   occ= 0
MO #116 (E2x #13) energy= 12.3942384395034   | 12.3942384395034   | 12.3942384395034   occ= 0
MO #117 (E2y #13) energy= 12.3942384395034   | 12.3942384395033   | 12.3942384395033   occ= 0
MO #118 (E1x #22) energy= 12.8749998111934   | 12.8749998111933   | 12.8749998111933   occ= 0
MO #119 (E1y #22) energy= 12.8749998111934   | 12.8749998111934   | 12.8749998111934   occ= 0
MO #120 (E2x #14) energy= 13.1737495696571   | 13.1737495696571   | 13.1737495696571   occ= 0
MO #121 (E2y #14) energy= 13.1737495696571   | 13.1737495696571   | 13.1737495696571   occ= 0
MO #122 (E1x #23) energy= 13.6172027848204   | 13.6172027848204   | 13.6172027848204   occ= 0
MO #123 (E1y #23) energy= 13.6172027848204   | 13.6172027848204   | 13.6172027848204   occ= 0
MO #124 (A1  #32) energy= 13.7126592174975   | 13.7126592174975   | 13.7126592174975   occ= 0
MO #125 (A1  #33) energy= 15.3957173857415   | 15.3957173857415   | 15.3957173857415   occ= 0
MO #126 (A1  #34) energy= 42.711428244948    | 42.7114282449488   | 42.7114282449488   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.88796
pop of  0 O 3s        0.00651
pop of  0 O 4s        0.00049
pop of  0 O 5s        0.00005
pop of  0 O 6s        0.00003
pop of  0 O 2px       1.95048
pop of  0 O 2py       1.95048
pop of  0 O 2pz       1.22650
pop of  0 O 3px       0.03053
pop of  0 O 3py       0.03053
pop of  0 O 3pz       0.00471
pop of  0 O 4px       0.00117
pop of  0 O 4py       0.00117
pop of  0 O 4pz       0.00046
pop of  0 O 5px       0.00003
pop of  0 O 5py       0.00003
pop of  0 O 5pz       0.00007
pop of  0 O 6px       0.00000
pop of  0 O 6py       0.00000
pop of  0 O 6pz       0.00003
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00070
pop of  0 O 3dz^2     0.00189
pop of  0 O 3dxz      0.00070
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00010
pop of  0 O 4dz^2     0.00003
pop of  0 O 4dxz      0.00010
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00000
pop of  0 O 5dz^2     0.00007
pop of  0 O 5dxz      0.00000
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 6dxy      0.00000
pop of  0 O 6dyz      0.00000
pop of  0 O 6dz^2     0.00006
pop of  0 O 6dxz      0.00000
pop of  0 O 6dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00025
pop of  0 O 4f 0      0.00012
pop of  0 O 4f 1      0.00025
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00009
pop of  0 O 5f 0      0.00002
pop of  0 O 5f 1      0.00009
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  0 O 6f-3      0.00000
pop of  0 O 6f-2      0.00000
pop of  0 O 6f-1      0.00002
pop of  0 O 6f 0      0.00003
pop of  0 O 6f 1      0.00002
pop of  0 O 6f 2      0.00000
pop of  0 O 6f 3      0.00000
pop of  0 O 5g-4      0.00000
pop of  0 O 5g-3      0.00000
pop of  0 O 5g-2      0.00000
pop of  0 O 5g-1      0.00003
pop of  0 O 5g 0      0.00002
pop of  0 O 5g 1      0.00003
pop of  0 O 5g 2      0.00000
pop of  0 O 5g 3      0.00000
pop of  0 O 5g 4      0.00000
pop of  0 O 6g-4      0.00000
pop of  0 O 6g-3      0.00000
pop of  0 O 6g-2      0.00000
pop of  0 O 6g-1      0.00002
pop of  0 O 6g 0      0.00002
pop of  0 O 6g 1      0.00002
pop of  0 O 6g 2      0.00000
pop of  0 O 6g 3      0.00000
pop of  0 O 6g 4      0.00000
pop of  1 H 1s        0.86296
pop of  1 H 2s        0.00067
pop of  1 H 3s        0.00046
pop of  1 H 4s        0.00003
pop of  1 H 5s        0.00006
pop of  1 H 2px       0.00860
pop of  1 H 2py       0.00860
pop of  1 H 2pz       0.00079
pop of  1 H 3px       0.00559
pop of  1 H 3py       0.00559
pop of  1 H 3pz       0.00463
pop of  1 H 4px       0.00095
pop of  1 H 4py       0.00095
pop of  1 H 4pz       0.00073
pop of  1 H 5px       0.00024
pop of  1 H 5py       0.00024
pop of  1 H 5pz       0.00015
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00011
pop of  1 H 3dz^2     0.00007
pop of  1 H 3dxz      0.00011
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00028
pop of  1 H 4dz^2     0.00002
pop of  1 H 4dxz      0.00028
pop of  1 H 4dx2-y2    0.00000
pop of  1 H 5dxy      0.00000
pop of  1 H 5dyz      0.00057
pop of  1 H 5dz^2     0.00004
pop of  1 H 5dxz      0.00057
pop of  1 H 5dx2-y2    0.00000
pop of  1 H 4f-3      0.00000
pop of  1 H 4f-2      0.00000
pop of  1 H 4f-1      0.00006
pop of  1 H 4f 0      0.00011
pop of  1 H 4f 1      0.00006
pop of  1 H 4f 2      0.00000
pop of  1 H 4f 3      0.00000
pop of  1 H 5f-3      0.00000
pop of  1 H 5f-2      0.00000
pop of  1 H 5f-1      0.00017
pop of  1 H 5f 0      0.00024
pop of  1 H 5f 1      0.00017
pop of  1 H 5f 2      0.00000
pop of  1 H 5f 3      0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -1.09589
charge of  1H =      0.09589
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  0.45012
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.18/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.18)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 20:17:39 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        55.73

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpr6agyve9
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpr6agyve9
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.119510257354545  LUMO = 0.631779380308154
Initial guess E= -75.3821125433577  |g|= 2.00456e-07
macro= 0  E= -75.3821125433577  delta_E= 0  |g|= 2.00456e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3821125433577  |g|= 2.00456e-07  total 2 KF 4 JK
converged SCF energy = -75.3821125433577
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.18/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.18)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 20:17:57 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        89.50

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpb314kv4_
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpb314kv4_
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.119510257490532  LUMO = 0.631779380405721
Initial guess E= -75.3821125433576  |g|= 2.01098e-07
macro= 0  E= -75.3821125433577  delta_E= -2.84217e-14  |g|= 2.01098e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3821125433577  |g|= 2.01098e-07  total 2 KF 4 JK
converged SCF energy = -75.3821125433577
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.18/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.18)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 20:18:19 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       127.11

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpnws8mibr
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpnws8mibr
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.119510257492014  LUMO = 0.171432503696363
Initial guess E= -75.3821125433678  |g|= 4.0592e-06
macro= 0  E= -75.38211254337  delta_E= -2.20268e-12  |g|= 4.0592e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.38211254337  |g|= 4.0592e-06  total 2 KF 4 JK
converged SCF energy = -75.38211254337
u+d contributions  -0.05724770519141645
uu+dd contributions  -0.1052552480588228
ud contributions  -0.25612715131679126
u+d contributions  -0.002168959140669802
uu+dd contributions  -0.04991229170431354
ud contributions  -0.20022599142036873
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.18/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.18)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 20:18:26 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       141.79

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpt5t7l_d2
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpt5t7l_d2
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.119510078746544  LUMO = 0.631779464589425
Initial guess E= -75.3821125433576  |g|= 1.05212e-07
macro= 0  E= -75.3821125433577  delta_E= -1.42109e-14  |g|= 1.05212e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3821125433577  |g|= 1.05212e-07  total 2 KF 4 JK
converged SCF energy = -75.3821125433577
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.18/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.18)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 20:18:50 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       180.49

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgmacw7vj
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpgmacw7vj
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.119510078747855  LUMO = 0.171432504056267
Initial guess E= -75.3821125433683  |g|= 2.88705e-06
macro= 0  E= -75.3821125433696  delta_E= -1.35003e-12  |g|= 2.88705e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3821125433696  |g|= 2.88705e-06  total 2 KF 4 JK
converged SCF energy = -75.3821125433696
u+d contributions  -0.0343678661216155
uu+dd contributions  -0.07055789979417686
ud contributions  -0.1708382499626038
u+d contributions  -0.003589578532593303
uu+dd contributions  -0.03965619514380037
ud contributions  -0.1396948303935992
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-75.101629, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.176724, i_min=0
In the tapering subroutine, i=2, E(i)=-75.262603, i_min=1
In the tapering subroutine, i=3, E(i)=-75.132494, i_min=2
In the tapering subroutine, i=4, E(i)=-75.262603, i_min=2
In the tapering subroutine, i=5, E(i)=-75.132494, i_min=2
In the tapering subroutine, i=6, E(i)=-74.747883, i_min=2
In the tapering subroutine, i=7, E(i)=-74.979681, i_min=2
In the tapering subroutine, i=8, E(i)=-75.176724, i_min=2
In the tapering subroutine, i=9, E(i)=-75.382113, i_min=2
In the tapering subroutine, i=10, E(i)=-75.155932, i_min=9
In the tapering subroutine, i=11, E(i)=-75.262603, i_min=9
In the tapering subroutine, i=12, E(i)=-75.155932, i_min=9
In the tapering subroutine, i=13, E(i)=-75.262603, i_min=9
In the tapering subroutine, i=14, E(i)=-74.979681, i_min=9
In the tapering subroutine, i=15, E(i)=-74.715785, i_min=9
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
u+d contributions  -0.003589740008530164
uu+dd contributions  -0.03965630885575796
ud contributions  -0.13969490490451192
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
u+d contributions  -0.0035896024397170617
uu+dd contributions  -0.039656163842725495
ud contributions  -0.13969467972276334
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
u+d contributions  -0.0035896024397170617
uu+dd contributions  -0.039656163842725495
ud contributions  -0.13969467972276334
