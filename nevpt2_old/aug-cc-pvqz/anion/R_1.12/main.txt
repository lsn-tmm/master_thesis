#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.12/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.12)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:32:31 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.120000000000 AA    0.000000000000   0.000000000000   2.116493259513 Bohr

nuclear repulsion = 3.77983722085714
point group symmetry = Coov
num. orbitals of irrep A1 = 34
num. orbitals of irrep E1x = 23
num. orbitals of irrep E1y = 23
num. orbitals of irrep E2x = 14
num. orbitals of irrep E2y = 14
num. orbitals of irrep E3x = 7
num. orbitals of irrep E3y = 7
num. orbitals of irrep E4x = 2
num. orbitals of irrep E4y = 2
number of shells = 33
number of NR pGTOs = 141
number of NR cGTOs = 126
basis = aug-cc-pvqz
ecp = {}
CPU time:         4.84
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y E4x E4y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpe9czkosb
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpe9czkosb
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.417427645368415  LUMO (A1) = 0.0177333839628634
Initial guess E= -75.2432106510372  |g|= 0.801514
macro= 0  E= -75.3936800841576  delta_E= -0.150469  |g|= 0.172475  3 KF 18 JK
macro= 1  E= -75.3950326132254  delta_E= -0.00135253  |g|= 6.23852e-05  3 KF 12 JK
macro= 2  E= -75.3950326132255  delta_E= -1.42109e-13  |g|= 1.02866e-05  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 3  E=-75.3950326132255  |g|= 1.02866e-05  total 8 KF 36 JK
converged SCF energy = -75.3950326132255
**** SCF Summaries ****
Total Energy =                         -75.395032613225524
Nuclear Repulsion Energy =               3.779837220857142
One-electron Energy =                 -115.288394998567355
Two-electron Energy =                   36.113525164484685
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y  E4x  E4y
double occ                     3    1    1    0    0    0    0    0    0
single occ                     0    0    0    0    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.2091080233656  | -20.2091080233656  | -20.2091080233656  occ= 2
MO #2   (A1  #2 ) energy= -0.872632849130443 | -0.872632849130446 | -0.872632849130446 occ= 2
MO #3   (A1  #3 ) energy= -0.218039903026577 | -0.218039903026577 | -0.218039903026577 occ= 2
MO #4   (E1x #1 ) energy= -0.115445779638123 | -0.115445779638123 | -0.115445779638123 occ= 2
MO #5   (E1y #1 ) energy= -0.11544577963812  | -0.11544577963812  | -0.11544577963812  occ= 2
MO #6   (A1  #4 ) energy= 0.171135743364054  | 0.171135743364054  | 0.171135743364054  occ= 0
MO #7   (A1  #5 ) energy= 0.2896737473463    | 0.289673747346298  | 0.289673747346298  occ= 0
MO #8   (E1x #2 ) energy= 0.333210604370567  | 0.333210604370567  | 0.333210604370567  occ= 0
MO #9   (E1y #2 ) energy= 0.333210604370559  | 0.333210604370559  | 0.333210604370559  occ= 0
MO #10  (A1  #6 ) energy= 0.354700218375193  | 0.354700218375199  | 0.354700218375199  occ= 0
MO #11  (E1x #3 ) energy= 0.407540586739055  | 0.407540586739059  | 0.407540586739059  occ= 0
MO #12  (E1y #3 ) energy= 0.40754058673906   | 0.407540586739064  | 0.407540586739064  occ= 0
MO #13  (A1  #7 ) energy= 0.432468959493408  | 0.432468959493403  | 0.432468959493403  occ= 0
MO #14  (A1  #8 ) energy= 0.567720511736576  | 0.567720511736598  | 0.567720511736598  occ= 0
MO #15  (E2x #1 ) energy= 0.746130503341694  | 0.746130503341695  | 0.746130503341695  occ= 0
MO #16  (E2y #1 ) energy= 0.746130503341693  | 0.746130503341693  | 0.746130503341693  occ= 0
MO #17  (A1  #9 ) energy= 0.750461903455307  | 0.750461903455296  | 0.750461903455296  occ= 0
MO #18  (E1x #4 ) energy= 0.790148418122907  | 0.79014841812291   | 0.79014841812291   occ= 0
MO #19  (E1y #4 ) energy= 0.790148418122963  | 0.79014841812297   | 0.79014841812297   occ= 0
MO #20  (A1  #10) energy= 0.882800578078493  | 0.882800578078467  | 0.882800578078467  occ= 0
MO #21  (E1x #5 ) energy= 0.91104353112453   | 0.911043531124531  | 0.911043531124531  occ= 0
MO #22  (E1y #5 ) energy= 0.911043531124508  | 0.911043531124508  | 0.911043531124508  occ= 0
MO #23  (E2x #2 ) energy= 0.939697888483581  | 0.939697888483582  | 0.939697888483582  occ= 0
MO #24  (E2y #2 ) energy= 0.939697888483577  | 0.939697888483577  | 0.939697888483577  occ= 0
MO #25  (A1  #11) energy= 0.945758779323052  | 0.945758779323079  | 0.945758779323079  occ= 0
MO #26  (E1x #6 ) energy= 1.06018374969367   | 1.06018374969367   | 1.06018374969367   occ= 0
MO #27  (E1y #6 ) energy= 1.06018374969367   | 1.06018374969368   | 1.06018374969368   occ= 0
MO #28  (A1  #12) energy= 1.06841898662654   | 1.06841898662643   | 1.06841898662643   occ= 0
MO #29  (E1x #7 ) energy= 1.40333881302664   | 1.40333881302664   | 1.40333881302664   occ= 0
MO #30  (E1y #7 ) energy= 1.40333881302675   | 1.40333881302675   | 1.40333881302675   occ= 0
MO #31  (A1  #13) energy= 1.52911166302897   | 1.52911166302893   | 1.52911166302893   occ= 0
MO #32  (E3x #1 ) energy= 1.64423025607904   | 1.64423025607903   | 1.64423025607903   occ= 0
MO #33  (E3y #1 ) energy= 1.64423025607904   | 1.64423025607904   | 1.64423025607904   occ= 0
MO #34  (A1  #14) energy= 1.68785999390906   | 1.68785999390906   | 1.68785999390906   occ= 0
MO #35  (E2x #3 ) energy= 1.84325839358657   | 1.84325839358657   | 1.84325839358657   occ= 0
MO #36  (E2y #3 ) energy= 1.84325839358657   | 1.84325839358657   | 1.84325839358657   occ= 0
MO #37  (E1x #8 ) energy= 1.85586849953394   | 1.85586849953394   | 1.85586849953394   occ= 0
MO #38  (E1y #8 ) energy= 1.85586849953399   | 1.85586849953399   | 1.85586849953399   occ= 0
MO #39  (E2x #4 ) energy= 1.87146340846731   | 1.87146340846731   | 1.87146340846731   occ= 0
MO #40  (E2y #4 ) energy= 1.8714634084673    | 1.87146340846729   | 1.87146340846729   occ= 0
MO #41  (A1  #15) energy= 1.9142089179542    | 1.91420891795418   | 1.91420891795418   occ= 0
MO #42  (A1  #16) energy= 1.99093778497592   | 1.99093778497584   | 1.99093778497584   occ= 0
MO #43  (E3x #2 ) energy= 1.99761452144543   | 1.99761452144543   | 1.99761452144543   occ= 0
MO #44  (E3y #2 ) energy= 1.99761452144543   | 1.99761452144543   | 1.99761452144543   occ= 0
MO #45  (E1x #9 ) energy= 2.04370821748767   | 2.04370821748768   | 2.04370821748768   occ= 0
MO #46  (E1y #9 ) energy= 2.04370821748763   | 2.04370821748763   | 2.04370821748763   occ= 0
MO #47  (E2x #5 ) energy= 2.21281088429907   | 2.21281088429907   | 2.21281088429907   occ= 0
MO #48  (E2y #5 ) energy= 2.21281088429908   | 2.21281088429908   | 2.21281088429908   occ= 0
MO #49  (A1  #17) energy= 2.27177623874382   | 2.27177623874357   | 2.27177623874357   occ= 0
MO #50  (E1x #10) energy= 2.41348892267676   | 2.41348892267677   | 2.41348892267677   occ= 0
MO #51  (E1y #10) energy= 2.41348892267682   | 2.41348892267684   | 2.41348892267684   occ= 0
MO #52  (A1  #18) energy= 2.5982610882242    | 2.59826108822418   | 2.59826108822418   occ= 0
MO #53  (E1x #11) energy= 2.96487280386717   | 2.96487280386716   | 2.96487280386716   occ= 0
MO #54  (E1y #11) energy= 2.96487280386715   | 2.96487280386715   | 2.96487280386715   occ= 0
MO #55  (E2x #6 ) energy= 3.09480423216253   | 3.09480423216253   | 3.09480423216253   occ= 0
MO #56  (E2y #6 ) energy= 3.09480423216253   | 3.09480423216253   | 3.09480423216253   occ= 0
MO #57  (E1x #12) energy= 3.20287700173938   | 3.20287700173938   | 3.20287700173938   occ= 0
MO #58  (E1y #12) energy= 3.20287700173936   | 3.20287700173936   | 3.20287700173936   occ= 0
MO #59  (A1  #19) energy= 3.31698093297891   | 3.31698093297888   | 3.31698093297888   occ= 0
MO #60  (A1  #20) energy= 3.82058261324577   | 3.82058261324562   | 3.82058261324562   occ= 0
MO #61  (E4x #1 ) energy= 4.0461601400136    | 4.0461601400136    | 4.0461601400136    occ= 0
MO #62  (E4y #1 ) energy= 4.0461601400136    | 4.0461601400136    | 4.0461601400136    occ= 0
MO #63  (E1x #13) energy= 4.09758382235145   | 4.09758382235146   | 4.09758382235146   occ= 0
MO #64  (E1y #13) energy= 4.09758382235132   | 4.09758382235133   | 4.09758382235133   occ= 0
MO #65  (E3x #3 ) energy= 4.2293546061648    | 4.2293546061648    | 4.2293546061648    occ= 0
MO #66  (E3y #3 ) energy= 4.2293546061648    | 4.2293546061648    | 4.2293546061648    occ= 0
MO #67  (A1  #21) energy= 4.3495197833331    | 4.349519783333     | 4.349519783333     occ= 0
MO #68  (E3x #4 ) energy= 4.48740604525086   | 4.48740604525086   | 4.48740604525086   occ= 0
MO #69  (E3y #4 ) energy= 4.48740604525086   | 4.48740604525086   | 4.48740604525086   occ= 0
MO #70  (E2x #7 ) energy= 4.55739906497688   | 4.55739906497689   | 4.55739906497689   occ= 0
MO #71  (E2y #7 ) energy= 4.55739906497688   | 4.55739906497688   | 4.55739906497688   occ= 0
MO #72  (E1x #14) energy= 4.59275025478187   | 4.59275025478187   | 4.59275025478187   occ= 0
MO #73  (E1y #14) energy= 4.59275025478184   | 4.59275025478184   | 4.59275025478184   occ= 0
MO #74  (E2x #8 ) energy= 4.6064689573594    | 4.6064689573594    | 4.6064689573594    occ= 0
MO #75  (E2y #8 ) energy= 4.60646895735941   | 4.6064689573594    | 4.6064689573594    occ= 0
MO #76  (A1  #22) energy= 4.61844851248796   | 4.61844851248797   | 4.61844851248797   occ= 0
MO #77  (A1  #23) energy= 4.67254348462537   | 4.67254348462541   | 4.67254348462541   occ= 0
MO #78  (E1x #15) energy= 5.01818831985479   | 5.0181883198548    | 5.0181883198548    occ= 0
MO #79  (E1y #15) energy= 5.01818831985479   | 5.01818831985479   | 5.01818831985479   occ= 0
MO #80  (E2x #9 ) energy= 5.07695080746752   | 5.07695080746751   | 5.07695080746751   occ= 0
MO #81  (E2y #9 ) energy= 5.07695080746751   | 5.07695080746751   | 5.07695080746751   occ= 0
MO #82  (A1  #24) energy= 5.56761074303822   | 5.56761074303821   | 5.56761074303821   occ= 0
MO #83  (E1x #16) energy= 5.69383145186923   | 5.69383145186926   | 5.69383145186926   occ= 0
MO #84  (E1y #16) energy= 5.69383145186909   | 5.69383145186909   | 5.69383145186909   occ= 0
MO #85  (A1  #25) energy= 5.99609835383371   | 5.99609835383382   | 5.99609835383382   occ= 0
MO #86  (E3x #5 ) energy= 6.95534099303507   | 6.95534099303507   | 6.95534099303507   occ= 0
MO #87  (E3y #5 ) energy= 6.95534099303508   | 6.95534099303508   | 6.95534099303508   occ= 0
MO #88  (E2x #10) energy= 7.65815497183891   | 7.65815497183892   | 7.65815497183892   occ= 0
MO #89  (E2y #10) energy= 7.65815497183893   | 7.65815497183894   | 7.65815497183894   occ= 0
MO #90  (A1  #26) energy= 7.74161016279928   | 7.7416101627993    | 7.7416101627993    occ= 0
MO #91  (E1x #17) energy= 8.03353659949491   | 8.0335365994949    | 8.0335365994949    occ= 0
MO #92  (E1y #17) energy= 8.03353659949489   | 8.0335365994949    | 8.0335365994949    occ= 0
MO #93  (A1  #27) energy= 8.56450715874209   | 8.5645071587421    | 8.5645071587421    occ= 0
MO #94  (E2x #11) energy= 8.87525903579153   | 8.87525903579153   | 8.87525903579153   occ= 0
MO #95  (E2y #11) energy= 8.87525903579157   | 8.87525903579156   | 8.87525903579156   occ= 0
MO #96  (E1x #18) energy= 9.20180552838609   | 9.2018055283861    | 9.2018055283861    occ= 0
MO #97  (E1y #18) energy= 9.20180552838605   | 9.20180552838606   | 9.20180552838606   occ= 0
MO #98  (E1x #19) energy= 9.51058554015943   | 9.51058554015943   | 9.51058554015943   occ= 0
MO #99  (E1y #19) energy= 9.51058554015939   | 9.51058554015941   | 9.51058554015941   occ= 0
MO #100 (A1  #28) energy= 9.81831449176881   | 9.81831449176878   | 9.81831449176878   occ= 0
MO #101 (E4x #2 ) energy= 11.054161078289    | 11.054161078289    | 11.054161078289    occ= 0
MO #102 (E4y #2 ) energy= 11.054161078289    | 11.054161078289    | 11.054161078289    occ= 0
MO #103 (E3x #6 ) energy= 11.1336985069287   | 11.1336985069287   | 11.1336985069287   occ= 0
MO #104 (E3y #6 ) energy= 11.1336985069287   | 11.1336985069287   | 11.1336985069287   occ= 0
MO #105 (A1  #29) energy= 11.1506911671795   | 11.1506911671795   | 11.1506911671795   occ= 0
MO #106 (E1x #20) energy= 11.3557964005936   | 11.3557964005936   | 11.3557964005936   occ= 0
MO #107 (E1y #20) energy= 11.3557964005935   | 11.3557964005935   | 11.3557964005935   occ= 0
MO #108 (E2x #12) energy= 11.3689049421691   | 11.3689049421691   | 11.3689049421691   occ= 0
MO #109 (E2y #12) energy= 11.3689049421691   | 11.3689049421691   | 11.3689049421691   occ= 0
MO #110 (E1x #21) energy= 11.7735403024971   | 11.7735403024971   | 11.7735403024971   occ= 0
MO #111 (E1y #21) energy= 11.7735403024971   | 11.7735403024971   | 11.7735403024971   occ= 0
MO #112 (A1  #30) energy= 11.8641581742967   | 11.8641581742967   | 11.8641581742967   occ= 0
MO #113 (A1  #31) energy= 12.2418306384012   | 12.2418306384012   | 12.2418306384012   occ= 0
MO #114 (E3x #7 ) energy= 12.3021989273145   | 12.3021989273145   | 12.3021989273145   occ= 0
MO #115 (E3y #7 ) energy= 12.3021989273145   | 12.3021989273145   | 12.3021989273145   occ= 0
MO #116 (E2x #13) energy= 12.4129177669643   | 12.4129177669643   | 12.4129177669643   occ= 0
MO #117 (E2y #13) energy= 12.4129177669643   | 12.4129177669643   | 12.4129177669643   occ= 0
MO #118 (E1x #22) energy= 12.8597473462193   | 12.8597473462194   | 12.8597473462194   occ= 0
MO #119 (E1y #22) energy= 12.8597473462193   | 12.8597473462193   | 12.8597473462193   occ= 0
MO #120 (E2x #14) energy= 13.1957017164941   | 13.1957017164941   | 13.1957017164941   occ= 0
MO #121 (E2y #14) energy= 13.1957017164941   | 13.1957017164941   | 13.1957017164941   occ= 0
MO #122 (E1x #23) energy= 13.893629039564    | 13.893629039564    | 13.893629039564    occ= 0
MO #123 (E1y #23) energy= 13.893629039564    | 13.893629039564    | 13.893629039564    occ= 0
MO #124 (A1  #32) energy= 13.9102770608696   | 13.9102770608696   | 13.9102770608696   occ= 0
MO #125 (A1  #33) energy= 15.9064237290196   | 15.9064237290196   | 15.9064237290196   occ= 0
MO #126 (A1  #34) energy= 42.7935043568789   | 42.7935043568795   | 42.7935043568795   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.86737
pop of  0 O 3s        0.00741
pop of  0 O 4s        0.00069
pop of  0 O 5s        0.00006
pop of  0 O 6s        0.00002
pop of  0 O 2px       1.94656
pop of  0 O 2py       1.94656
pop of  0 O 2pz       1.28306
pop of  0 O 3px       0.03215
pop of  0 O 3py       0.03215
pop of  0 O 3pz       0.00396
pop of  0 O 4px       0.00119
pop of  0 O 4py       0.00119
pop of  0 O 4pz       0.00034
pop of  0 O 5px       0.00004
pop of  0 O 5py       0.00004
pop of  0 O 5pz       0.00004
pop of  0 O 6px       0.00001
pop of  0 O 6py       0.00001
pop of  0 O 6pz       0.00003
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00098
pop of  0 O 3dz^2     0.00263
pop of  0 O 3dxz      0.00098
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00015
pop of  0 O 4dz^2     0.00009
pop of  0 O 4dxz      0.00015
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00000
pop of  0 O 5dz^2     0.00009
pop of  0 O 5dxz      0.00000
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 6dxy      0.00000
pop of  0 O 6dyz      0.00000
pop of  0 O 6dz^2     0.00006
pop of  0 O 6dxz      0.00000
pop of  0 O 6dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00028
pop of  0 O 4f 0      0.00021
pop of  0 O 4f 1      0.00028
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00009
pop of  0 O 5f 0      0.00001
pop of  0 O 5f 1      0.00009
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  0 O 6f-3      0.00000
pop of  0 O 6f-2      0.00000
pop of  0 O 6f-1      0.00002
pop of  0 O 6f 0      0.00002
pop of  0 O 6f 1      0.00002
pop of  0 O 6f 2      0.00000
pop of  0 O 6f 3      0.00000
pop of  0 O 5g-4      0.00000
pop of  0 O 5g-3      0.00000
pop of  0 O 5g-2      0.00000
pop of  0 O 5g-1      0.00003
pop of  0 O 5g 0      0.00003
pop of  0 O 5g 1      0.00003
pop of  0 O 5g 2      0.00000
pop of  0 O 5g 3      0.00000
pop of  0 O 5g 4      0.00000
pop of  0 O 6g-4      0.00000
pop of  0 O 6g-3      0.00000
pop of  0 O 6g-2      0.00000
pop of  0 O 6g-1      0.00002
pop of  0 O 6g 0      0.00001
pop of  0 O 6g 1      0.00002
pop of  0 O 6g 2      0.00000
pop of  0 O 6g 3      0.00000
pop of  0 O 6g 4      0.00000
pop of  1 H 1s        0.82474
pop of  1 H 2s        0.00196
pop of  1 H 3s        0.00054
pop of  1 H 4s        0.00003
pop of  1 H 5s        0.00008
pop of  1 H 2px       0.00966
pop of  1 H 2py       0.00966
pop of  1 H 2pz       0.00082
pop of  1 H 3px       0.00622
pop of  1 H 3py       0.00622
pop of  1 H 3pz       0.00425
pop of  1 H 4px       0.00109
pop of  1 H 4py       0.00109
pop of  1 H 4pz       0.00062
pop of  1 H 5px       0.00025
pop of  1 H 5py       0.00025
pop of  1 H 5pz       0.00014
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00006
pop of  1 H 3dz^2     0.00015
pop of  1 H 3dxz      0.00006
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00022
pop of  1 H 4dz^2     0.00001
pop of  1 H 4dxz      0.00022
pop of  1 H 4dx2-y2    0.00000
pop of  1 H 5dxy      0.00000
pop of  1 H 5dyz      0.00061
pop of  1 H 5dz^2     0.00004
pop of  1 H 5dxz      0.00061
pop of  1 H 5dx2-y2    0.00000
pop of  1 H 4f-3      0.00000
pop of  1 H 4f-2      0.00000
pop of  1 H 4f-1      0.00011
pop of  1 H 4f 0      0.00015
pop of  1 H 4f 1      0.00011
pop of  1 H 4f 2      0.00000
pop of  1 H 4f 3      0.00000
pop of  1 H 5f-3      0.00000
pop of  1 H 5f-2      0.00000
pop of  1 H 5f-1      0.00024
pop of  1 H 5f 0      0.00034
pop of  1 H 5f 1      0.00024
pop of  1 H 5f 2      0.00000
pop of  1 H 5f 3      0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -1.12920
charge of  1H =      0.12920
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  0.64107
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.12/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.12)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:32:52 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        54.36

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp2u5xx_vh
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp2u5xx_vh
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.115445779638129  LUMO = 0.673298265397455
Initial guess E= -75.395032613229  |g|= 2.27327e-07
macro= 0  E= -75.395032613229  delta_E= -2.84217e-14  |g|= 2.27327e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.395032613229  |g|= 2.27327e-07  total 2 KF 4 JK
converged SCF energy = -75.395032613229
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.12/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.12)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:33:16 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        93.13

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp2k856_4s
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp2k856_4s
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.11544578010721  LUMO = 0.673298265721361
Initial guess E= -75.395032613229  |g|= 2.25304e-07
macro= 0  E= -75.395032613229  delta_E= -4.26326e-14  |g|= 2.25304e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.395032613229  |g|= 2.25304e-07  total 2 KF 4 JK
converged SCF energy = -75.395032613229
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.12/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.12)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:33:44 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       137.13

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpn7jny1jb
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpn7jny1jb
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.115445780108867  LUMO = 0.171135743380315
Initial guess E= -75.3950326132327  |g|= 5.15186e-06
macro= 0  E= -75.3950326132362  delta_E= -3.48166e-12  |g|= 5.15186e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3950326132362  |g|= 5.15186e-06  total 2 KF 4 JK
converged SCF energy = -75.3950326132362
u+d contributions  -0.05664871671942854
uu+dd contributions  -0.10554183890566718
ud contributions  -0.2583268017595455
u+d contributions  -0.002272995573674582
uu+dd contributions  -0.050900012037703515
ud contributions  -0.20313028266545885
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.12/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.12)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:33:51 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       153.23

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpaogrz_3_
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpaogrz_3_
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.115445665483044  LUMO = 0.673298316599301
Initial guess E= -75.3950326132289  |g|= 2.85807e-07
macro= 0  E= -75.395032613229  delta_E= -5.68434e-14  |g|= 2.85807e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.395032613229  |g|= 2.85807e-07  total 2 KF 4 JK
converged SCF energy = -75.395032613229
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.12/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.12)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 19:34:19 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       196.10

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp585oleie
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp585oleie
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.115445665484546  LUMO = 0.171135743292877
Initial guess E= -75.3950326132318  |g|= 3.59923e-06
macro= 0  E= -75.3950326132339  delta_E= -2.11742e-12  |g|= 3.59923e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3950326132339  |g|= 3.59923e-06  total 2 KF 4 JK
converged SCF energy = -75.3950326132339
u+d contributions  -0.033953792813305954
uu+dd contributions  -0.07120189630603661
ud contributions  -0.17388033662303065
u+d contributions  -0.0036725870098240497
uu+dd contributions  -0.04080455489639116
ud contributions  -0.1432550672815361
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-75.064345, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.176993, i_min=0
In the tapering subroutine, i=2, E(i)=-75.279588, i_min=1
In the tapering subroutine, i=3, E(i)=-75.105842, i_min=2
In the tapering subroutine, i=4, E(i)=-75.279588, i_min=2
In the tapering subroutine, i=5, E(i)=-75.105842, i_min=2
In the tapering subroutine, i=6, E(i)=-74.678291, i_min=2
In the tapering subroutine, i=7, E(i)=-74.958739, i_min=2
In the tapering subroutine, i=8, E(i)=-75.176993, i_min=2
In the tapering subroutine, i=9, E(i)=-75.395033, i_min=2
In the tapering subroutine, i=10, E(i)=-75.129339, i_min=9
In the tapering subroutine, i=11, E(i)=-75.279588, i_min=9
In the tapering subroutine, i=12, E(i)=-75.129339, i_min=9
In the tapering subroutine, i=13, E(i)=-75.279588, i_min=9
In the tapering subroutine, i=14, E(i)=-74.958739, i_min=9
In the tapering subroutine, i=15, E(i)=-74.646464, i_min=9
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
u+d contributions  -0.003672591511327914
uu+dd contributions  -0.04080449918904415
ud contributions  -0.14325486990540287
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
u+d contributions  -0.00372044588681748
uu+dd contributions  -0.04085596117218772
ud contributions  -0.14333896518502076
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
u+d contributions  -0.00372044588681748
uu+dd contributions  -0.04085596117218772
ud contributions  -0.14333896518502076
