/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf/lib/misc.py:46: H5pyDeprecationWarning: Using default_file_mode other than 'r' is deprecated. Pass the mode to h5py.File() instead.
  h5py.get_config().default_file_mode = 'a'
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/aqua/__init__.py:86: DeprecationWarning: The package qiskit.aqua is deprecated. It was moved/refactored to qiskit-terra For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_package('aqua', 'qiskit-terra')
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/__init__.py:170: DeprecationWarning: The package qiskit.chemistry is deprecated. It was moved/refactored to qiskit_nature (pip install qiskit-nature). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_package('chemistry', 'qiskit_nature', 'qiskit-nature')
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.10)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 12:31:44 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.100000000000 AA    0.000000000000   0.000000000000   2.078698737022 Bohr

nuclear repulsion = 3.84856153396364
point group symmetry = Coov
num. orbitals of irrep A1 = 34
num. orbitals of irrep E1x = 23
num. orbitals of irrep E1y = 23
num. orbitals of irrep E2x = 14
num. orbitals of irrep E2y = 14
num. orbitals of irrep E3x = 7
num. orbitals of irrep E3y = 7
num. orbitals of irrep E4x = 2
num. orbitals of irrep E4y = 2
number of shells = 33
number of NR pGTOs = 141
number of NR cGTOs = 126
basis = aug-cc-pvqz
ecp = {}
CPU time:         5.16
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y E4x E4y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/tmpwhb6fxia
max_memory 4000 MB (current use 243 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/tmpwhb6fxia
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 243 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.419189601867082  LUMO (A1) = 0.0191423187561423
Initial guess E= -75.2500029401763  |g|= 0.797576
macro= 0  E= -75.3978357981727  delta_E= -0.147833  |g|= 0.172396  3 KF 18 JK
macro= 1  E= -75.3990143765905  delta_E= -0.00117858  |g|= 0.0169543  3 KF 9 JK
macro= 2  E= -75.3990143903341  delta_E= -1.37436e-08  |g|= 2.27418e-05  2 KF 6 JK
macro= 3  E= -75.3990143903339  delta_E= 1.98952e-13  |g|= 7.3878e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.3990143903339  |g|= 7.3878e-06  total 10 KF 40 JK
converged SCF energy = -75.3990143903339
**** SCF Summaries ****
Total Energy =                         -75.399014390333932
Nuclear Repulsion Energy =               3.848561533963636
One-electron Energy =                 -115.430485120885493
Two-electron Energy =                   36.182909196587921
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y  E4x  E4y
double occ                     3    1    1    0    0    0    0    0    0
single occ                     0    0    0    0    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.2060827555204  | -20.2060827555204  | -20.2060827555204  occ= 2
MO #2   (A1  #2 ) energy= -0.875311539360743 | -0.875311539360746 | -0.875311539360746 occ= 2
MO #3   (A1  #3 ) energy= -0.222331624304269 | -0.222331624304269 | -0.222331624304269 occ= 2
MO #4   (E1x #1 ) energy= -0.114303722334699 | -0.114303722334699 | -0.114303722334699 occ= 2
MO #5   (E1y #1 ) energy= -0.114303722334701 | -0.114303722334701 | -0.114303722334701 occ= 2
MO #6   (A1  #4 ) energy= 0.171048253808057  | 0.171048253808052  | 0.171048253808052  occ= 0
MO #7   (A1  #5 ) energy= 0.289652551890953  | 0.289652551890927  | 0.289652551890927  occ= 0
MO #8   (E1x #2 ) energy= 0.332690937558835  | 0.332690937558836  | 0.332690937558836  occ= 0
MO #9   (E1y #2 ) energy= 0.33269093755884   | 0.332690937558839  | 0.332690937558839  occ= 0
MO #10  (A1  #6 ) energy= 0.355135783955322  | 0.355135783955306  | 0.355135783955306  occ= 0
MO #11  (E1x #3 ) energy= 0.407925295455671  | 0.407925295455671  | 0.407925295455671  occ= 0
MO #12  (E1y #3 ) energy= 0.407925295455616  | 0.407925295455617  | 0.407925295455617  occ= 0
MO #13  (A1  #7 ) energy= 0.431992477447755  | 0.431992477447765  | 0.431992477447765  occ= 0
MO #14  (A1  #8 ) energy= 0.570988936898409  | 0.570988936898323  | 0.570988936898323  occ= 0
MO #15  (E2x #1 ) energy= 0.746377147214792  | 0.746377147214791  | 0.746377147214791  occ= 0
MO #16  (E2y #1 ) energy= 0.746377147214795  | 0.746377147214795  | 0.746377147214795  occ= 0
MO #17  (A1  #9 ) energy= 0.75240942207071   | 0.752409422070691  | 0.752409422070691  occ= 0
MO #18  (E1x #4 ) energy= 0.791318068400241  | 0.791318068400243  | 0.791318068400243  occ= 0
MO #19  (E1y #4 ) energy= 0.791318068400114  | 0.791318068400117  | 0.791318068400117  occ= 0
MO #20  (A1  #10) energy= 0.886315611558793  | 0.88631561155878   | 0.88631561155878   occ= 0
MO #21  (E1x #5 ) energy= 0.90924933212125   | 0.90924933212125   | 0.90924933212125   occ= 0
MO #22  (E1y #5 ) energy= 0.909249332121202  | 0.909249332121204  | 0.909249332121204  occ= 0
MO #23  (E2x #2 ) energy= 0.938766282292905  | 0.938766282292905  | 0.938766282292905  occ= 0
MO #24  (E2y #2 ) energy= 0.938766282292903  | 0.938766282292906  | 0.938766282292906  occ= 0
MO #25  (A1  #11) energy= 0.948993945153676  | 0.948993945153694  | 0.948993945153694  occ= 0
MO #26  (E1x #6 ) energy= 1.06101474057155   | 1.06101474057155   | 1.06101474057155   occ= 0
MO #27  (E1y #6 ) energy= 1.06101474057154   | 1.06101474057154   | 1.06101474057154   occ= 0
MO #28  (A1  #12) energy= 1.06688267243666   | 1.0668826724365    | 1.0668826724365    occ= 0
MO #29  (E1x #7 ) energy= 1.41123189776967   | 1.41123189776968   | 1.41123189776968   occ= 0
MO #30  (E1y #7 ) energy= 1.4112318977695    | 1.41123189776951   | 1.41123189776951   occ= 0
MO #31  (A1  #13) energy= 1.53244971068388   | 1.53244971068388   | 1.53244971068388   occ= 0
MO #32  (E3x #1 ) energy= 1.64529821593994   | 1.64529821593994   | 1.64529821593994   occ= 0
MO #33  (E3y #1 ) energy= 1.64529821593994   | 1.64529821593994   | 1.64529821593994   occ= 0
MO #34  (A1  #14) energy= 1.70299159843918   | 1.70299159843918   | 1.70299159843918   occ= 0
MO #35  (E2x #3 ) energy= 1.84409836999416   | 1.84409836999416   | 1.84409836999416   occ= 0
MO #36  (E2y #3 ) energy= 1.84409836999417   | 1.84409836999417   | 1.84409836999417   occ= 0
MO #37  (E1x #8 ) energy= 1.8575830692543    | 1.8575830692543    | 1.8575830692543    occ= 0
MO #38  (E1y #8 ) energy= 1.85758306925424   | 1.85758306925424   | 1.85758306925424   occ= 0
MO #39  (E2x #4 ) energy= 1.87442881692728   | 1.87442881692728   | 1.87442881692728   occ= 0
MO #40  (E2y #4 ) energy= 1.87442881692728   | 1.87442881692728   | 1.87442881692728   occ= 0
MO #41  (A1  #15) energy= 1.91700757608549   | 1.91700757608552   | 1.91700757608552   occ= 0
MO #42  (A1  #16) energy= 1.98182732909636   | 1.98182732909629   | 1.98182732909629   occ= 0
MO #43  (E3x #2 ) energy= 2.00140953832282   | 2.00140953832282   | 2.00140953832282   occ= 0
MO #44  (E3y #2 ) energy= 2.00140953832282   | 2.00140953832282   | 2.00140953832282   occ= 0
MO #45  (E1x #9 ) energy= 2.03566202893161   | 2.03566202893161   | 2.03566202893161   occ= 0
MO #46  (E1y #9 ) energy= 2.03566202893155   | 2.03566202893154   | 2.03566202893154   occ= 0
MO #47  (E2x #5 ) energy= 2.20639528199441   | 2.20639528199441   | 2.20639528199441   occ= 0
MO #48  (E2y #5 ) energy= 2.20639528199441   | 2.20639528199441   | 2.20639528199441   occ= 0
MO #49  (A1  #17) energy= 2.26345326556916   | 2.26345326556913   | 2.26345326556913   occ= 0
MO #50  (E1x #10) energy= 2.42453370116449   | 2.4245337011645    | 2.4245337011645    occ= 0
MO #51  (E1y #10) energy= 2.42453370116446   | 2.42453370116446   | 2.42453370116446   occ= 0
MO #52  (A1  #18) energy= 2.61913690250825   | 2.61913690250825   | 2.61913690250825   occ= 0
MO #53  (E1x #11) energy= 2.96242140789934   | 2.96242140789934   | 2.96242140789934   occ= 0
MO #54  (E1y #11) energy= 2.96242140789932   | 2.96242140789932   | 2.96242140789932   occ= 0
MO #55  (E2x #6 ) energy= 3.12157853139773   | 3.12157853139773   | 3.12157853139773   occ= 0
MO #56  (E2y #6 ) energy= 3.12157853139773   | 3.12157853139772   | 3.12157853139772   occ= 0
MO #57  (E1x #12) energy= 3.21645641445003   | 3.21645641445004   | 3.21645641445004   occ= 0
MO #58  (E1y #12) energy= 3.21645641444996   | 3.21645641444997   | 3.21645641444997   occ= 0
MO #59  (A1  #19) energy= 3.32583301055785   | 3.32583301055776   | 3.32583301055776   occ= 0
MO #60  (A1  #20) energy= 3.84740077645636   | 3.84740077645615   | 3.84740077645615   occ= 0
MO #61  (E4x #1 ) energy= 4.04645411063892   | 4.04645411063893   | 4.04645411063893   occ= 0
MO #62  (E4y #1 ) energy= 4.04645411063894   | 4.04645411063893   | 4.04645411063893   occ= 0
MO #63  (E1x #13) energy= 4.11208412283116   | 4.11208412283117   | 4.11208412283117   occ= 0
MO #64  (E1y #13) energy= 4.11208412283111   | 4.1120841228311    | 4.1120841228311    occ= 0
MO #65  (E3x #3 ) energy= 4.23851925361957   | 4.23851925361956   | 4.23851925361956   occ= 0
MO #66  (E3y #3 ) energy= 4.23851925361956   | 4.23851925361956   | 4.23851925361956   occ= 0
MO #67  (A1  #21) energy= 4.35068533599706   | 4.35068533599702   | 4.35068533599702   occ= 0
MO #68  (E3x #4 ) energy= 4.48835719726447   | 4.48835719726447   | 4.48835719726447   occ= 0
MO #69  (E3y #4 ) energy= 4.48835719726448   | 4.48835719726447   | 4.48835719726447   occ= 0
MO #70  (E2x #7 ) energy= 4.55435893671568   | 4.55435893671569   | 4.55435893671569   occ= 0
MO #71  (E2y #7 ) energy= 4.55435893671569   | 4.55435893671569   | 4.55435893671569   occ= 0
MO #72  (E1x #14) energy= 4.59481338721384   | 4.59481338721384   | 4.59481338721384   occ= 0
MO #73  (E1y #14) energy= 4.59481338721383   | 4.59481338721383   | 4.59481338721383   occ= 0
MO #74  (A1  #22) energy= 4.61616102431593   | 4.61616102431589   | 4.61616102431589   occ= 0
MO #75  (E2x #8 ) energy= 4.61942453927896   | 4.61942453927897   | 4.61942453927897   occ= 0
MO #76  (E2y #8 ) energy= 4.61942453927896   | 4.61942453927897   | 4.61942453927897   occ= 0
MO #77  (A1  #23) energy= 4.67923613810091   | 4.67923613810094   | 4.67923613810094   occ= 0
MO #78  (E1x #15) energy= 5.03681048665552   | 5.03681048665553   | 5.03681048665553   occ= 0
MO #79  (E1y #15) energy= 5.03681048665551   | 5.03681048665551   | 5.03681048665551   occ= 0
MO #80  (E2x #9 ) energy= 5.09458501177471   | 5.09458501177471   | 5.09458501177471   occ= 0
MO #81  (E2y #9 ) energy= 5.09458501177472   | 5.09458501177473   | 5.09458501177473   occ= 0
MO #82  (A1  #24) energy= 5.58976985050972   | 5.58976985050973   | 5.58976985050973   occ= 0
MO #83  (E1x #16) energy= 5.71819682105561   | 5.71819682105562   | 5.71819682105562   occ= 0
MO #84  (E1y #16) energy= 5.71819682105563   | 5.71819682105564   | 5.71819682105564   occ= 0
MO #85  (A1  #25) energy= 5.99667881754778   | 5.99667881754779   | 5.99667881754779   occ= 0
MO #86  (E3x #5 ) energy= 6.9659116604224    | 6.96591166042241   | 6.96591166042241   occ= 0
MO #87  (E3y #5 ) energy= 6.9659116604224    | 6.9659116604224    | 6.9659116604224    occ= 0
MO #88  (E2x #10) energy= 7.71196057560836   | 7.71196057560836   | 7.71196057560836   occ= 0
MO #89  (E2y #10) energy= 7.71196057560836   | 7.71196057560835   | 7.71196057560835   occ= 0
MO #90  (A1  #26) energy= 7.78785344053866   | 7.78785344053866   | 7.78785344053866   occ= 0
MO #91  (E1x #17) energy= 8.04768398402427   | 8.04768398402427   | 8.04768398402427   occ= 0
MO #92  (E1y #17) energy= 8.04768398402424   | 8.04768398402424   | 8.04768398402424   occ= 0
MO #93  (A1  #27) energy= 8.60144338250725   | 8.60144338250725   | 8.60144338250725   occ= 0
MO #94  (E2x #11) energy= 8.88164599215262   | 8.88164599215261   | 8.88164599215261   occ= 0
MO #95  (E2y #11) energy= 8.88164599215263   | 8.88164599215262   | 8.88164599215262   occ= 0
MO #96  (E1x #18) energy= 9.18751562965885   | 9.18751562965886   | 9.18751562965886   occ= 0
MO #97  (E1y #18) energy= 9.18751562965884   | 9.18751562965886   | 9.18751562965886   occ= 0
MO #98  (E1x #19) energy= 9.59771576034349   | 9.59771576034349   | 9.59771576034349   occ= 0
MO #99  (E1y #19) energy= 9.59771576034349   | 9.59771576034349   | 9.59771576034349   occ= 0
MO #100 (A1  #28) energy= 9.8411614343208    | 9.84116143432066   | 9.84116143432066   occ= 0
MO #101 (E4x #2 ) energy= 11.0547480282265   | 11.0547480282265   | 11.0547480282265   occ= 0
MO #102 (E4y #2 ) energy= 11.0547480282265   | 11.0547480282265   | 11.0547480282265   occ= 0
MO #103 (E3x #6 ) energy= 11.139887327068    | 11.139887327068    | 11.139887327068    occ= 0
MO #104 (E3y #6 ) energy= 11.139887327068    | 11.139887327068    | 11.139887327068    occ= 0
MO #105 (A1  #29) energy= 11.2269078893898   | 11.2269078893898   | 11.2269078893898   occ= 0
MO #106 (E1x #20) energy= 11.3640170852288   | 11.3640170852288   | 11.3640170852288   occ= 0
MO #107 (E1y #20) energy= 11.3640170852289   | 11.3640170852289   | 11.3640170852289   occ= 0
MO #108 (E2x #12) energy= 11.3900885227445   | 11.3900885227445   | 11.3900885227445   occ= 0
MO #109 (E2y #12) energy= 11.3900885227445   | 11.3900885227445   | 11.3900885227445   occ= 0
MO #110 (E1x #21) energy= 11.8175947791829   | 11.8175947791829   | 11.8175947791829   occ= 0
MO #111 (E1y #21) energy= 11.8175947791829   | 11.8175947791829   | 11.8175947791829   occ= 0
MO #112 (A1  #30) energy= 11.8796077083753   | 11.8796077083753   | 11.8796077083753   occ= 0
MO #113 (A1  #31) energy= 12.2565917504515   | 12.2565917504515   | 12.2565917504515   occ= 0
MO #114 (E3x #7 ) energy= 12.3037191703954   | 12.3037191703954   | 12.3037191703954   occ= 0
MO #115 (E3y #7 ) energy= 12.3037191703955   | 12.3037191703955   | 12.3037191703955   occ= 0
MO #116 (E2x #13) energy= 12.4184665042564   | 12.4184665042564   | 12.4184665042564   occ= 0
MO #117 (E2y #13) energy= 12.4184665042563   | 12.4184665042563   | 12.4184665042563   occ= 0
MO #118 (E1x #22) energy= 12.8632495415408   | 12.8632495415408   | 12.8632495415408   occ= 0
MO #119 (E1y #22) energy= 12.8632495415409   | 12.8632495415409   | 12.8632495415409   occ= 0
MO #120 (E2x #14) energy= 13.2037455872901   | 13.2037455872901   | 13.2037455872901   occ= 0
MO #121 (E2y #14) energy= 13.2037455872901   | 13.2037455872901   | 13.2037455872901   occ= 0
MO #122 (A1  #32) energy= 13.9924821914521   | 13.9924821914522   | 13.9924821914522   occ= 0
MO #123 (E1x #23) energy= 14.0056734459453   | 14.0056734459453   | 14.0056734459453   occ= 0
MO #124 (E1y #23) energy= 14.0056734459452   | 14.0056734459453   | 14.0056734459453   occ= 0
MO #125 (A1  #33) energy= 16.087128570851    | 16.0871285708511   | 16.0871285708511   occ= 0
MO #126 (A1  #34) energy= 42.8356082290848   | 42.8356082290856   | 42.8356082290856   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.85991
pop of  0 O 3s        0.00771
pop of  0 O 4s        0.00076
pop of  0 O 5s        0.00007
pop of  0 O 6s        0.00002
pop of  0 O 2px       1.94536
pop of  0 O 2py       1.94536
pop of  0 O 2pz       1.30168
pop of  0 O 3px       0.03262
pop of  0 O 3py       0.03262
pop of  0 O 3pz       0.00375
pop of  0 O 4px       0.00120
pop of  0 O 4py       0.00120
pop of  0 O 4pz       0.00032
pop of  0 O 5px       0.00005
pop of  0 O 5py       0.00005
pop of  0 O 5pz       0.00003
pop of  0 O 6px       0.00001
pop of  0 O 6py       0.00001
pop of  0 O 6pz       0.00003
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00109
pop of  0 O 3dz^2     0.00293
pop of  0 O 3dxz      0.00109
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00017
pop of  0 O 4dz^2     0.00012
pop of  0 O 4dxz      0.00017
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00000
pop of  0 O 5dz^2     0.00009
pop of  0 O 5dxz      0.00000
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 6dxy      0.00000
pop of  0 O 6dyz      0.00000
pop of  0 O 6dz^2     0.00006
pop of  0 O 6dxz      0.00000
pop of  0 O 6dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00029
pop of  0 O 4f 0      0.00025
pop of  0 O 4f 1      0.00029
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00009
pop of  0 O 5f 0      0.00001
pop of  0 O 5f 1      0.00009
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  0 O 6f-3      0.00000
pop of  0 O 6f-2      0.00000
pop of  0 O 6f-1      0.00002
pop of  0 O 6f 0      0.00002
pop of  0 O 6f 1      0.00002
pop of  0 O 6f 2      0.00000
pop of  0 O 6f 3      0.00000
pop of  0 O 5g-4      0.00000
pop of  0 O 5g-3      0.00000
pop of  0 O 5g-2      0.00000
pop of  0 O 5g-1      0.00003
pop of  0 O 5g 0      0.00004
pop of  0 O 5g 1      0.00003
pop of  0 O 5g 2      0.00000
pop of  0 O 5g 3      0.00000
pop of  0 O 5g 4      0.00000
pop of  0 O 6g-4      0.00000
pop of  0 O 6g-3      0.00000
pop of  0 O 6g-2      0.00000
pop of  0 O 6g-1      0.00002
pop of  0 O 6g 0      0.00001
pop of  0 O 6g 1      0.00002
pop of  0 O 6g 2      0.00000
pop of  0 O 6g 3      0.00000
pop of  0 O 6g 4      0.00000
pop of  1 H 1s        0.81247
pop of  1 H 2s        0.00253
pop of  1 H 3s        0.00061
pop of  1 H 4s        0.00004
pop of  1 H 5s        0.00009
pop of  1 H 2px       0.00999
pop of  1 H 2py       0.00999
pop of  1 H 2pz       0.00082
pop of  1 H 3px       0.00642
pop of  1 H 3py       0.00642
pop of  1 H 3pz       0.00413
pop of  1 H 4px       0.00114
pop of  1 H 4py       0.00114
pop of  1 H 4pz       0.00059
pop of  1 H 5px       0.00025
pop of  1 H 5py       0.00025
pop of  1 H 5pz       0.00014
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00004
pop of  1 H 3dz^2     0.00018
pop of  1 H 3dxz      0.00004
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00020
pop of  1 H 4dz^2     0.00000
pop of  1 H 4dxz      0.00020
pop of  1 H 4dx2-y2    0.00000
pop of  1 H 5dxy      0.00000
pop of  1 H 5dyz      0.00063
pop of  1 H 5dz^2     0.00004
pop of  1 H 5dxz      0.00063
pop of  1 H 5dx2-y2    0.00000
pop of  1 H 4f-3      0.00000
pop of  1 H 4f-2      0.00000
pop of  1 H 4f-1      0.00013
pop of  1 H 4f 0      0.00017
pop of  1 H 4f 1      0.00013
pop of  1 H 4f 2      0.00000
pop of  1 H 4f 3      0.00000
pop of  1 H 5f-3      0.00000
pop of  1 H 5f-2      0.00000
pop of  1 H 5f-1      0.00026
pop of  1 H 5f 0      0.00037
pop of  1 H 5f 1      0.00026
pop of  1 H 5f 2      0.00000
pop of  1 H 5f 3      0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -1.13967
charge of  1H =      0.13967
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  0.69667
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.10)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 12:31:59 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       120.09

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Overwritten attributes  get_ovlp get_hcore  of <class 'pyscf.soscf.newton_ah.newton.<locals>.SecondOrderRHF'>
Overwritten attributes  get_ovlp get_hcore  of <class 'pyscf.scf.hf.RHF'>




******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/tmpjioah9_u
max_memory 4000 MB (current use 688 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/tmpjioah9_u
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 688 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.114303722334702  LUMO = 0.688118953004827
Initial guess E= -75.3990143903363  |g|= 5.64949e-07
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf/gto/mole.py:1089: UserWarning: Function mol.dumps drops attribute nao_nr because it is not JSON-serializable
  warnings.warn(msg)
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf/gto/mole.py:1089: UserWarning: Function mol.dumps drops attribute energy_nuc because it is not JSON-serializable
  warnings.warn(msg)
macro= 0  E= -75.3990143903365  delta_E= -1.42109e-13  |g|= 5.64949e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3990143903365  |g|= 5.64949e-07  total 2 KF 4 JK
converged SCF energy = -75.3990143903365
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.10)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 12:32:49 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       240.64

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/tmpbob1xjkf
max_memory 4000 MB (current use 610 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/tmpbob1xjkf
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 610 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.114303722158142  LUMO = 0.688118952884728
Initial guess E= -75.3990143903364  |g|= 5.63638e-07
macro= 0  E= -75.3990143903366  delta_E= -1.7053e-13  |g|= 5.63638e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3990143903366  |g|= 5.63638e-07  total 2 KF 4 JK
converged SCF energy = -75.3990143903366
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf/fci/direct_nosym.py:179: UserWarning: direct_nosym.kernel is not able to diagonalize non-Hermitian Hamiltonian. If h1e and h2e is not hermtian, calling symmetric diagonlization in eig can lead to wrong results.
  warnings.warn('direct_nosym.kernel is not able to diagonalize '
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.10)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 12:33:52 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       352.15

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/tmpupddclnx
max_memory 4000 MB (current use 2185 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/tmpupddclnx
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 2185 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.11430372215929  LUMO = 0.171048253802408
Initial guess E= -75.3990143903466  |g|= 1.48125e-06
macro= 0  E= -75.399014390347  delta_E= -3.2685e-13  |g|= 1.48125e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.399014390347  |g|= 1.48125e-06  total 2 KF 4 JK
converged SCF energy = -75.399014390347
u+d contributions  -0.05635410647526151
uu+dd contributions  -0.10554393408550902
ud contributions  -0.25897537582801494
u+d contributions  -0.0023208782380443353
uu+dd contributions  -0.051244658349835805
ud contributions  -0.20412421365372943
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.10)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 12:34:03 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       418.31

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/tmp_kv2sa1r
max_memory 4000 MB (current use 2558 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/tmp_kv2sa1r
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 2558 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.114303490638522  LUMO = 0.688119053610382
Initial guess E= -75.3990143903365  |g|= 2.12962e-07
macro= 0  E= -75.3990143903366  delta_E= -2.84217e-14  |g|= 2.12962e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3990143903366  |g|= 2.12962e-07  total 2 KF 4 JK
converged SCF energy = -75.3990143903366
#INFO: **** input file is /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.10)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='Precision-3520', release='4.4.0-210-generic', version='#242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021', machine='x86_64')  Threads 8
Python 3.9.5 (default, Jun  4 2021, 12:28:51) 
[GCC 7.5.0]
numpy 1.21.1  scipy 1.7.0
Date: Thu Mar 31 12:35:17 2022
PySCF version 1.7.6
PySCF path  /home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       527.87

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/tmpb37r7u8u
max_memory 4000 MB (current use 2250 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/tmpb37r7u8u
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 2250 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.114303490639496  LUMO = 0.171048253441366
Initial guess E= -75.3990143903458  |g|= 1.31155e-06
macro= 0  E= -75.3990143903463  delta_E= -4.68958e-13  |g|= 1.31155e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.3990143903463  |g|= 1.31155e-06  total 2 KF 4 JK
converged SCF energy = -75.3990143903463
/home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/../../../src/qiskit_subroutines.py:25: DeprecationWarning: The package qiskit.aqua.operators is deprecated. It was moved/refactored to qiskit.opflow (pip install qiskit-terra). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  c_list = [WeightedPauliOperator([(0.5,a1),(-0.5j,a2)]) for a1,a2 in a_list]
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/fermionic_operator.py:394: DeprecationWarning: The variable qiskit.aqua.aqua_globals is deprecated. It was moved/refactored to qiskit.utils.algorithm_globals (pip install qiskit-terra). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  task_args=(threshold,), num_processes=aqua_globals.num_processes)
/home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/../../../src/qiskit_subroutines.py:19: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  a_x = np.asarray(zmask,dtype=np.bool)
/home/alessandro/Scrivania/Università/Master Thesis/git/tesi_alessandro_tammaro/nevpt2_old/aug-cc-pvqz/anion/R_1.10/../../../src/qiskit_subroutines.py:20: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  a_z = np.asarray(zeros,dtype=np.bool)
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/quantum_info/operators/symplectic/pauli.py:195: DeprecationWarning: Initializing Pauli from `Pauli(z=z, x=x)` kwargs is deprecated as of version 0.17.0 and will be removed no earlier than 3 months after the release date. Use tuple initialization `Pauli((z, x))` instead.
  base_z, base_x, base_phase = self._from_array_deprecated(z, x)
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/aqua/components/optimizers/optimizer.py:49: DeprecationWarning: The package qiskit.aqua.components.optimizers is deprecated. It was moved/refactored to qiskit.algorithms.optimizers (pip install qiskit-terra). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_package('aqua.components.optimizers',
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/aqua/quantum_instance.py:135: DeprecationWarning: The class qiskit.aqua.QuantumInstance is deprecated. It was moved/refactored to qiskit.utils.QuantumInstance (pip install qiskit-terra). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_class('aqua.QuantumInstance',
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/components/initial_states/hartree_fock.py:56: UserWarning: two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
  warnings.warn('two_qubit_reduction only works with parity qubit mapping '
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/components/initial_states/hartree_fock.py:61: DeprecationWarning: The HartreeFock class is deprecated as of Aqua 0.9 and will be removed no earlier than 3 months after the release date. Instead, all algorithms and circuits accept a plain QuantumCircuit. 
  super().__init__()
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/aqua/components/variational_forms/variational_form.py:48: DeprecationWarning: The package qiskit.aqua.components.variational_forms is deprecated. For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_package('aqua.components.variational_forms')
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/aqua/algorithms/vq_algorithm.py:70: DeprecationWarning: The class qiskit.aqua.algorithms.VQAlgorithm is deprecated. It was moved/refactored to qiskit.algorithms.VariationalAlgorithm (pip install qiskit-terra). For more information see <https://github.com/Qiskit/qiskit-aqua/blob/main/README.md#migration-guide>
  warn_class('aqua.algorithms.VQAlgorithm',
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/components/initial_states/hartree_fock.py:56: UserWarning: two_qubit_reduction only works with parity qubit mapping but you have jordan_wigner. We switch two_qubit_reduction to False.
  warnings.warn('two_qubit_reduction only works with parity qubit mapping '
/home/alessandro/miniconda3/envs/IBM/lib/python3.9/site-packages/qiskit/chemistry/components/initial_states/hartree_fock.py:61: DeprecationWarning: The HartreeFock class is deprecated as of Aqua 0.9 and will be removed no earlier than 3 months after the release date. Instead, all algorithms and circuits accept a plain QuantumCircuit. 
  super().__init__()
u+d contributions  -0.03365547804538697
uu+dd contributions  -0.07126374032266844
ud contributions  -0.1747753180369545
u+d contributions  -0.0036813498566604613
uu+dd contributions  -0.04117657248089045
ud contributions  -0.14446615738143234
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-75.050145, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.176683, i_min=0
In the tapering subroutine, i=2, E(i)=-75.284710, i_min=1
In the tapering subroutine, i=3, E(i)=-75.095578, i_min=2
In the tapering subroutine, i=4, E(i)=-75.284710, i_min=2
In the tapering subroutine, i=5, E(i)=-75.095578, i_min=2
In the tapering subroutine, i=6, E(i)=-74.652946, i_min=2
In the tapering subroutine, i=7, E(i)=-74.950242, i_min=2
In the tapering subroutine, i=8, E(i)=-75.176683, i_min=2
In the tapering subroutine, i=9, E(i)=-75.399014, i_min=2
In the tapering subroutine, i=10, E(i)=-75.119127, i_min=9
In the tapering subroutine, i=11, E(i)=-75.284710, i_min=9
In the tapering subroutine, i=12, E(i)=-75.119127, i_min=9
In the tapering subroutine, i=13, E(i)=-75.284710, i_min=9
In the tapering subroutine, i=14, E(i)=-74.950242, i_min=9
In the tapering subroutine, i=15, E(i)=-74.621200, i_min=9
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
overlap matrix condition number 0.018247379179 0.999523688336 
overlap matrix condition number 0.018247379179 0.999523688336 
overlap matrix condition number 0.000952665369 0.999047334631 
overlap matrix condition number 0.000952665369 0.999047334631 
overlap matrix condition number 0.000065555377 1.008499776303 
u+d contributions  -0.003681345736009589
uu+dd contributions  -0.04117655604435559
ud contributions  -0.14446609301737387
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
overlap matrix condition number 0.018245617642 0.999534370134 
overlap matrix condition number 0.018244861066 0.999534370134 
overlap matrix condition number 0.000933017387 0.999066171703 
overlap matrix condition number 0.000932897323 0.999066171703 
overlap matrix condition number 0.000064321207 1.008409370884 
u+d contributions  -0.0036866031632896016
uu+dd contributions  -0.04118184866155771
ud contributions  -0.1444732713808104
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
overlap matrix condition number 0.018245617642 0.999534370134 
overlap matrix condition number 0.018244861066 0.999534370134 
overlap matrix condition number 0.000933017387 0.999066171703 
overlap matrix condition number 0.000932897323 0.999066171703 
overlap matrix condition number 0.000064321207 1.008409370884 
u+d contributions  -0.0036866031632896016
uu+dd contributions  -0.04118184866155771
ud contributions  -0.1444732713808104
