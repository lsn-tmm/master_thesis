#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.02/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.02)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:19:51 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.020000000000 AA    0.000000000000   0.000000000000   1.927520647056 Bohr

nuclear repulsion = 4.15040949741176
point group symmetry = Coov
num. orbitals of irrep A1 = 34
num. orbitals of irrep E1x = 23
num. orbitals of irrep E1y = 23
num. orbitals of irrep E2x = 14
num. orbitals of irrep E2y = 14
num. orbitals of irrep E3x = 7
num. orbitals of irrep E3y = 7
num. orbitals of irrep E4x = 2
num. orbitals of irrep E4y = 2
number of shells = 33
number of NR pGTOs = 141
number of NR cGTOs = 126
basis = aug-cc-pvqz
ecp = {}
CPU time:         4.55
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y E4x E4y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpxn0_7qny
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpxn0_7qny
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.427449833597091  LUMO (A1) = 0.0232001108983339
Initial guess E= -75.2722676196088  |g|= 0.784774
macro= 0  E= -75.4113869578664  delta_E= -0.139119  |g|= 0.172511  3 KF 18 JK
macro= 1  E= -75.4120942936698  delta_E= -0.000707336  |g|= 6.22309e-05  3 KF 11 JK
macro= 2  E= -75.4120942936699  delta_E= -1.42109e-13  |g|= 6.13511e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 3  E=-75.4120942936699  |g|= 6.13511e-06  total 8 KF 35 JK
converged SCF energy = -75.4120942936699
**** SCF Summaries ****
Total Energy =                         -75.412094293669895
Nuclear Repulsion Energy =               4.150409497411765
One-electron Energy =                 -116.036461647730249
Two-electron Energy =                   36.473957856648582
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y  E4x  E4y
double occ                     3    1    1    0    0    0    0    0    0
single occ                     0    0    0    0    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.1937845291608  | -20.1937845291608  | -20.1937845291608  occ= 2
MO #2   (A1  #2 ) energy= -0.889278129794992 | -0.889278129794993 | -0.889278129794993 occ= 2
MO #3   (A1  #3 ) energy= -0.239696653187347 | -0.239696653187347 | -0.239696653187347 occ= 2
MO #4   (E1x #1 ) energy= -0.110756827536729 | -0.110756827536729 | -0.110756827536729 occ= 2
MO #5   (E1y #1 ) energy= -0.110756827536726 | -0.110756827536726 | -0.110756827536726 occ= 2
MO #6   (A1  #4 ) energy= 0.170739424789599  | 0.170739424789604  | 0.170739424789604  occ= 0
MO #7   (A1  #5 ) energy= 0.289693920223599  | 0.289693920223597  | 0.289693920223597  occ= 0
MO #8   (E1x #2 ) energy= 0.330149435462377  | 0.330149435462378  | 0.330149435462378  occ= 0
MO #9   (E1y #2 ) energy= 0.330149435462386  | 0.330149435462386  | 0.330149435462386  occ= 0
MO #10  (A1  #6 ) energy= 0.356259245868554  | 0.356259245868543  | 0.356259245868543  occ= 0
MO #11  (E1x #3 ) energy= 0.410216145166025  | 0.410216145166018  | 0.410216145166018  occ= 0
MO #12  (E1y #3 ) energy= 0.410216145165962  | 0.410216145165965  | 0.410216145165965  occ= 0
MO #13  (A1  #7 ) energy= 0.430038397907671  | 0.43003839790767   | 0.43003839790767   occ= 0
MO #14  (A1  #8 ) energy= 0.583681537543529  | 0.583681537543559  | 0.583681537543559  occ= 0
MO #15  (E2x #1 ) energy= 0.746902764599323  | 0.746902764599324  | 0.746902764599324  occ= 0
MO #16  (E2y #1 ) energy= 0.746902764599321  | 0.746902764599321  | 0.746902764599321  occ= 0
MO #17  (A1  #9 ) energy= 0.760242876622042  | 0.760242876622044  | 0.760242876622044  occ= 0
MO #18  (E1x #4 ) energy= 0.797240398805227  | 0.797240398805224  | 0.797240398805224  occ= 0
MO #19  (E1y #4 ) energy= 0.797240398805122  | 0.797240398805125  | 0.797240398805125  occ= 0
MO #20  (A1  #10) energy= 0.894064691719094  | 0.894064691719076  | 0.894064691719076  occ= 0
MO #21  (E1x #5 ) energy= 0.90101184799445   | 0.901011847994446  | 0.901011847994446  occ= 0
MO #22  (E1y #5 ) energy= 0.901011847994423  | 0.901011847994422  | 0.901011847994422  occ= 0
MO #23  (E2x #2 ) energy= 0.933857247295491  | 0.933857247295491  | 0.933857247295491  occ= 0
MO #24  (E2y #2 ) energy= 0.933857247295502  | 0.933857247295503  | 0.933857247295503  occ= 0
MO #25  (A1  #11) energy= 0.967771287113266  | 0.967771287113261  | 0.967771287113261  occ= 0
MO #26  (E1x #6 ) energy= 1.06121319542443   | 1.06121319542444   | 1.06121319542444   occ= 0
MO #27  (E1y #6 ) energy= 1.06121319542439   | 1.06121319542439   | 1.06121319542439   occ= 0
MO #28  (A1  #12) energy= 1.06599954048802   | 1.06599954048807   | 1.06599954048807   occ= 0
MO #29  (E1x #7 ) energy= 1.44437891511577   | 1.44437891511576   | 1.44437891511576   occ= 0
MO #30  (E1y #7 ) energy= 1.44437891511553   | 1.44437891511553   | 1.44437891511553   occ= 0
MO #31  (A1  #13) energy= 1.54542509962357   | 1.54542509962345   | 1.54542509962345   occ= 0
MO #32  (E3x #1 ) energy= 1.64970543279288   | 1.64970543279288   | 1.64970543279288   occ= 0
MO #33  (E3y #1 ) energy= 1.64970543279288   | 1.64970543279288   | 1.64970543279288   occ= 0
MO #34  (A1  #14) energy= 1.76499449552321   | 1.76499449552321   | 1.76499449552321   occ= 0
MO #35  (E2x #3 ) energy= 1.84238208508099   | 1.84238208508098   | 1.84238208508098   occ= 0
MO #36  (E2y #3 ) energy= 1.84238208508099   | 1.84238208508099   | 1.84238208508099   occ= 0
MO #37  (E1x #8 ) energy= 1.86223884147096   | 1.86223884147096   | 1.86223884147096   occ= 0
MO #38  (E1y #8 ) energy= 1.8622388414709    | 1.8622388414709    | 1.8622388414709    occ= 0
MO #39  (E2x #4 ) energy= 1.89181331359141   | 1.89181331359141   | 1.89181331359141   occ= 0
MO #40  (E2y #4 ) energy= 1.89181331359142   | 1.89181331359142   | 1.89181331359142   occ= 0
MO #41  (A1  #15) energy= 1.927626306968     | 1.92762630696798   | 1.92762630696798   occ= 0
MO #42  (A1  #16) energy= 1.95221502161416   | 1.95221502161444   | 1.95221502161444   occ= 0
MO #43  (E1x #9 ) energy= 2.00632286940862   | 2.00632286940861   | 2.00632286940861   occ= 0
MO #44  (E1y #9 ) energy= 2.00632286940852   | 2.00632286940851   | 2.00632286940851   occ= 0
MO #45  (E3x #2 ) energy= 2.01637353455783   | 2.01637353455783   | 2.01637353455783   occ= 0
MO #46  (E3y #2 ) energy= 2.01637353455784   | 2.01637353455784   | 2.01637353455784   occ= 0
MO #47  (E2x #5 ) energy= 2.17947777167505   | 2.17947777167504   | 2.17947777167504   occ= 0
MO #48  (E2y #5 ) energy= 2.17947777167507   | 2.17947777167507   | 2.17947777167507   occ= 0
MO #49  (A1  #17) energy= 2.22939394061591   | 2.22939394061579   | 2.22939394061579   occ= 0
MO #50  (E1x #10) energy= 2.44875701844781   | 2.44875701844781   | 2.44875701844781   occ= 0
MO #51  (E1y #10) energy= 2.44875701844761   | 2.44875701844761   | 2.44875701844761   occ= 0
MO #52  (A1  #18) energy= 2.70527239444927   | 2.70527239444927   | 2.70527239444927   occ= 0
MO #53  (E1x #11) energy= 2.97501705796715   | 2.97501705796715   | 2.97501705796715   occ= 0
MO #54  (E1y #11) energy= 2.97501705796711   | 2.97501705796711   | 2.97501705796711   occ= 0
MO #55  (E2x #6 ) energy= 3.23862196313315   | 3.23862196313314   | 3.23862196313314   occ= 0
MO #56  (E2y #6 ) energy= 3.23862196313316   | 3.23862196313316   | 3.23862196313316   occ= 0
MO #57  (E1x #12) energy= 3.27505283833281   | 3.27505283833282   | 3.27505283833282   occ= 0
MO #58  (E1y #12) energy= 3.27505283833275   | 3.27505283833275   | 3.27505283833275   occ= 0
MO #59  (A1  #19) energy= 3.35745162720636   | 3.35745162720636   | 3.35745162720636   occ= 0
MO #60  (A1  #20) energy= 3.93740816136378   | 3.93740816136365   | 3.93740816136365   occ= 0
MO #61  (E4x #1 ) energy= 4.04706273824842   | 4.04706273824843   | 4.04706273824843   occ= 0
MO #62  (E4y #1 ) energy= 4.04706273824842   | 4.04706273824842   | 4.04706273824842   occ= 0
MO #63  (E1x #13) energy= 4.1526967278166    | 4.1526967278166    | 4.1526967278166    occ= 0
MO #64  (E1y #13) energy= 4.1526967278166    | 4.15269672781659   | 4.15269672781659   occ= 0
MO #65  (E3x #3 ) energy= 4.27675016570426   | 4.27675016570426   | 4.27675016570426   occ= 0
MO #66  (E3y #3 ) energy= 4.27675016570426   | 4.27675016570426   | 4.27675016570426   occ= 0
MO #67  (A1  #21) energy= 4.36290934747255   | 4.36290934747255   | 4.36290934747255   occ= 0
MO #68  (E3x #4 ) energy= 4.49182192091635   | 4.49182192091635   | 4.49182192091635   occ= 0
MO #69  (E3y #4 ) energy= 4.49182192091636   | 4.49182192091636   | 4.49182192091636   occ= 0
MO #70  (E2x #7 ) energy= 4.5387455109009    | 4.53874551090091   | 4.53874551090091   occ= 0
MO #71  (E2y #7 ) energy= 4.53874551090089   | 4.5387455109009    | 4.5387455109009    occ= 0
MO #72  (E1x #14) energy= 4.58233764984867   | 4.58233764984867   | 4.58233764984867   occ= 0
MO #73  (E1y #14) energy= 4.58233764984867   | 4.58233764984867   | 4.58233764984867   occ= 0
MO #74  (A1  #22) energy= 4.61858127409088   | 4.61858127409092   | 4.61858127409092   occ= 0
MO #75  (E2x #8 ) energy= 4.67097071042919   | 4.67097071042919   | 4.67097071042919   occ= 0
MO #76  (E2y #8 ) energy= 4.67097071042918   | 4.67097071042919   | 4.67097071042919   occ= 0
MO #77  (A1  #23) energy= 4.71641202466407   | 4.71641202466405   | 4.71641202466405   occ= 0
MO #78  (E1x #15) energy= 5.10794131715018   | 5.10794131715018   | 5.10794131715018   occ= 0
MO #79  (E1y #15) energy= 5.1079413171502    | 5.1079413171502    | 5.1079413171502    occ= 0
MO #80  (E2x #9 ) energy= 5.16405843921098   | 5.16405843921098   | 5.16405843921098   occ= 0
MO #81  (E2y #9 ) energy= 5.16405843921097   | 5.16405843921098   | 5.16405843921098   occ= 0
MO #82  (A1  #24) energy= 5.58327631391502   | 5.58327631391501   | 5.58327631391501   occ= 0
MO #83  (E1x #16) energy= 5.85091257236342   | 5.85091257236343   | 5.85091257236343   occ= 0
MO #84  (E1y #16) energy= 5.8509125723637    | 5.8509125723637    | 5.8509125723637    occ= 0
MO #85  (A1  #25) energy= 6.09903002876739   | 6.09903002876732   | 6.09903002876732   occ= 0
MO #86  (E3x #5 ) energy= 7.01909253344578   | 7.01909253344577   | 7.01909253344577   occ= 0
MO #87  (E3y #5 ) energy= 7.01909253344578   | 7.01909253344577   | 7.01909253344577   occ= 0
MO #88  (E2x #10) energy= 7.95526774348769   | 7.95526774348769   | 7.95526774348769   occ= 0
MO #89  (E2y #10) energy= 7.95526774348769   | 7.95526774348768   | 7.95526774348768   occ= 0
MO #90  (A1  #26) energy= 8.03721270374395   | 8.03721270374397   | 8.03721270374397   occ= 0
MO #91  (E1x #17) energy= 8.09251366270372   | 8.09251366270372   | 8.09251366270372   occ= 0
MO #92  (E1y #17) energy= 8.09251366270366   | 8.09251366270365   | 8.09251366270365   occ= 0
MO #93  (A1  #27) energy= 8.78055306810875   | 8.7805530681088    | 8.7805530681088    occ= 0
MO #94  (E2x #11) energy= 8.90585168513334   | 8.90585168513333   | 8.90585168513333   occ= 0
MO #95  (E2y #11) energy= 8.90585168513335   | 8.90585168513334   | 8.90585168513334   occ= 0
MO #96  (E1x #18) energy= 9.1183279099195    | 9.1183279099195    | 9.1183279099195    occ= 0
MO #97  (E1y #18) energy= 9.11832790991957   | 9.11832790991957   | 9.11832790991957   occ= 0
MO #98  (E1x #19) energy= 9.97480409134859   | 9.97480409134859   | 9.97480409134859   occ= 0
MO #99  (E1y #19) energy= 9.97480409134886   | 9.97480409134886   | 9.97480409134886   occ= 0
MO #100 (A1  #28) energy= 9.9995518988121    | 9.99955189881208   | 9.99955189881208   occ= 0
MO #101 (E4x #2 ) energy= 11.0564872990702   | 11.0564872990702   | 11.0564872990702   occ= 0
MO #102 (E4y #2 ) energy= 11.0564872990701   | 11.0564872990701   | 11.0564872990701   occ= 0
MO #103 (E3x #6 ) energy= 11.1673040589175   | 11.1673040589175   | 11.1673040589175   occ= 0
MO #104 (E3y #6 ) energy= 11.1673040589175   | 11.1673040589175   | 11.1673040589175   occ= 0
MO #105 (A1  #29) energy= 11.2756772046873   | 11.2756772046873   | 11.2756772046873   occ= 0
MO #106 (E1x #20) energy= 11.3554568388529   | 11.3554568388529   | 11.3554568388529   occ= 0
MO #107 (E1y #20) energy= 11.3554568388529   | 11.3554568388529   | 11.3554568388529   occ= 0
MO #108 (E2x #12) energy= 11.5050958086424   | 11.5050958086424   | 11.5050958086424   occ= 0
MO #109 (E2y #12) energy= 11.5050958086424   | 11.5050958086424   | 11.5050958086424   occ= 0
MO #110 (E1x #21) energy= 11.9316403787499   | 11.9316403787499   | 11.9316403787499   occ= 0
MO #111 (E1y #21) energy= 11.9316403787499   | 11.9316403787499   | 11.9316403787499   occ= 0
MO #112 (A1  #30) energy= 11.9523526823342   | 11.9523526823342   | 11.9523526823342   occ= 0
MO #113 (E3x #7 ) energy= 12.3090499614049   | 12.3090499614049   | 12.3090499614049   occ= 0
MO #114 (E3y #7 ) energy= 12.3090499614049   | 12.3090499614049   | 12.3090499614049   occ= 0
MO #115 (A1  #31) energy= 12.405949866273    | 12.405949866273    | 12.405949866273    occ= 0
MO #116 (E2x #13) energy= 12.4379267733869   | 12.4379267733869   | 12.4379267733869   occ= 0
MO #117 (E2y #13) energy= 12.4379267733869   | 12.4379267733869   | 12.4379267733869   occ= 0
MO #118 (E1x #22) energy= 12.9828276887882   | 12.9828276887882   | 12.9828276887882   occ= 0
MO #119 (E1y #22) energy= 12.9828276887883   | 12.9828276887883   | 12.9828276887883   occ= 0
MO #120 (E2x #14) energy= 13.240644737023    | 13.240644737023    | 13.240644737023    occ= 0
MO #121 (E2y #14) energy= 13.240644737023    | 13.240644737023    | 13.240644737023    occ= 0
MO #122 (A1  #32) energy= 14.4168358480504   | 14.4168358480504   | 14.4168358480504   occ= 0
MO #123 (E1x #23) energy= 14.5434355170469   | 14.543435517047    | 14.543435517047    occ= 0
MO #124 (E1y #23) energy= 14.543435517047    | 14.5434355170471   | 14.5434355170471   occ= 0
MO #125 (A1  #33) energy= 16.8217644695162   | 16.8217644695162   | 16.8217644695162   occ= 0
MO #126 (A1  #34) energy= 43.1233096084508   | 43.1233096084481   | 43.1233096084481   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.82691
pop of  0 O 3s        0.00890
pop of  0 O 4s        0.00110
pop of  0 O 5s        0.00013
pop of  0 O 6s        0.00003
pop of  0 O 2px       1.94123
pop of  0 O 2py       1.94123
pop of  0 O 2pz       1.37489
pop of  0 O 3px       0.03402
pop of  0 O 3py       0.03402
pop of  0 O 3pz       0.00306
pop of  0 O 4px       0.00116
pop of  0 O 4py       0.00116
pop of  0 O 4pz       0.00029
pop of  0 O 5px       0.00007
pop of  0 O 5py       0.00007
pop of  0 O 5pz       0.00004
pop of  0 O 6px       0.00001
pop of  0 O 6py       0.00001
pop of  0 O 6pz       0.00004
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00155
pop of  0 O 3dz^2     0.00444
pop of  0 O 3dxz      0.00155
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00023
pop of  0 O 4dz^2     0.00024
pop of  0 O 4dxz      0.00023
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00000
pop of  0 O 5dz^2     0.00012
pop of  0 O 5dxz      0.00000
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 6dxy      0.00000
pop of  0 O 6dyz      0.00000
pop of  0 O 6dz^2     0.00006
pop of  0 O 6dxz      0.00000
pop of  0 O 6dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00032
pop of  0 O 4f 0      0.00048
pop of  0 O 4f 1      0.00032
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00009
pop of  0 O 5f 0      0.00002
pop of  0 O 5f 1      0.00009
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  0 O 6f-3      0.00000
pop of  0 O 6f-2      0.00000
pop of  0 O 6f-1      0.00001
pop of  0 O 6f 0      0.00003
pop of  0 O 6f 1      0.00001
pop of  0 O 6f 2      0.00000
pop of  0 O 6f 3      0.00000
pop of  0 O 5g-4      0.00000
pop of  0 O 5g-3      0.00000
pop of  0 O 5g-2      0.00000
pop of  0 O 5g-1      0.00003
pop of  0 O 5g 0      0.00010
pop of  0 O 5g 1      0.00003
pop of  0 O 5g 2      0.00000
pop of  0 O 5g 3      0.00000
pop of  0 O 5g 4      0.00000
pop of  0 O 6g-4      0.00000
pop of  0 O 6g-3      0.00000
pop of  0 O 6g-2      0.00000
pop of  0 O 6g-1      0.00001
pop of  0 O 6g 0      0.00001
pop of  0 O 6g 1      0.00001
pop of  0 O 6g 2      0.00000
pop of  0 O 6g 3      0.00000
pop of  0 O 6g 4      0.00000
pop of  1 H 1s        0.76603
pop of  1 H 2s        0.00542
pop of  1 H 3s        0.00121
pop of  1 H 4s        0.00005
pop of  1 H 5s        0.00013
pop of  1 H 2px       0.01112
pop of  1 H 2py       0.01112
pop of  1 H 2pz       0.00085
pop of  1 H 3px       0.00714
pop of  1 H 3py       0.00714
pop of  1 H 3pz       0.00358
pop of  1 H 4px       0.00134
pop of  1 H 4py       0.00134
pop of  1 H 4pz       0.00050
pop of  1 H 5px       0.00024
pop of  1 H 5py       0.00024
pop of  1 H 5pz       0.00013
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00000
pop of  1 H 3dz^2     0.00035
pop of  1 H 3dxz      0.00000
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00013
pop of  1 H 4dz^2     0.00001
pop of  1 H 4dxz      0.00013
pop of  1 H 4dx2-y2    0.00000
pop of  1 H 5dxy      0.00000
pop of  1 H 5dyz      0.00069
pop of  1 H 5dz^2     0.00005
pop of  1 H 5dxz      0.00069
pop of  1 H 5dx2-y2    0.00000
pop of  1 H 4f-3      0.00000
pop of  1 H 4f-2      0.00000
pop of  1 H 4f-1      0.00026
pop of  1 H 4f 0      0.00025
pop of  1 H 4f 1      0.00026
pop of  1 H 4f 2      0.00000
pop of  1 H 4f 3      0.00000
pop of  1 H 5f-3      0.00000
pop of  1 H 5f-2      0.00000
pop of  1 H 5f-1      0.00034
pop of  1 H 5f 0      0.00054
pop of  1 H 5f 1      0.00034
pop of  1 H 5f 2      0.00000
pop of  1 H 5f 3      0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -1.17839
charge of  1H =      0.17839
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  0.88138
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.02/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.02)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:20:08 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        48.08

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp1u6y2wpo
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp1u6y2wpo
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.110756827536733  LUMO = 0.752479987079912
Initial guess E= -75.4120942936702  |g|= 8.40171e-08
macro= 0  E= -75.4120942936702  delta_E= 0  |g|= 8.40171e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4120942936702  |g|= 8.40171e-08  total 2 KF 4 JK
converged SCF energy = -75.4120942936702
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.02/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.02)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:20:26 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        82.48

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpobxdjrl1
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpobxdjrl1
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.110756827490879  LUMO = 0.752479987050956
Initial guess E= -75.4120942936702  |g|= 8.37429e-08
macro= 0  E= -75.4120942936702  delta_E= 0  |g|= 8.37429e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4120942936702  |g|= 8.37429e-08  total 2 KF 4 JK
converged SCF energy = -75.4120942936702
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.02/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.02)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:20:52 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       122.61

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpb4kfafgz
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpb4kfafgz
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.110756827491158  LUMO = 0.170739424788589
Initial guess E= -75.4120942936745  |g|= 7.88455e-07
macro= 0  E= -75.4120942936747  delta_E= -1.98952e-13  |g|= 7.88455e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4120942936747  |g|= 7.88455e-07  total 2 KF 4 JK
converged SCF energy = -75.4120942936747
u+d contributions  -0.05463301979821669
uu+dd contributions  -0.10500108121973284
ud contributions  -0.26101930080535685
u+d contributions  -0.0025491359184593057
uu+dd contributions  -0.052655153373618965
ud contributions  -0.20814079685570971
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.02/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.02)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:21:01 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       135.84

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpikzcb_rp
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpikzcb_rp
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.110756777441694  LUMO = 0.752480007127169
Initial guess E= -75.4120942936702  |g|= 1.42277e-08
macro= 0  E= -75.4120942936702  delta_E= 0  |g|= 1.42277e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4120942936702  |g|= 1.42277e-08  total 2 KF 4 JK
converged SCF energy = -75.4120942936702
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.02/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.02)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:21:26 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       175.52

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp00fhg8ue
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp00fhg8ue
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.110756777441959  LUMO = 0.170739424581125
Initial guess E= -75.4120942936741  |g|= 7.30413e-07
macro= 0  E= -75.4120942936742  delta_E= -1.27898e-13  |g|= 7.30413e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4120942936742  |g|= 7.30413e-07  total 2 KF 4 JK
converged SCF energy = -75.4120942936742
u+d contributions  -0.03154596075528769
uu+dd contributions  -0.07060018369383161
ud contributions  -0.17755382415221038
u+d contributions  -0.0035764304179463475
uu+dd contributions  -0.04253312564067811
ud contributions  -0.14929487255258025
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.983156, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.172398, i_min=0
In the tapering subroutine, i=2, E(i)=-75.301337, i_min=1
In the tapering subroutine, i=3, E(i)=-75.046163, i_min=2
In the tapering subroutine, i=4, E(i)=-75.301337, i_min=2
In the tapering subroutine, i=5, E(i)=-75.046163, i_min=2
In the tapering subroutine, i=6, E(i)=-74.585609, i_min=2
In the tapering subroutine, i=7, E(i)=-74.907063, i_min=2
In the tapering subroutine, i=8, E(i)=-75.172398, i_min=2
In the tapering subroutine, i=9, E(i)=-75.412094, i_min=2
In the tapering subroutine, i=10, E(i)=-75.070085, i_min=9
In the tapering subroutine, i=11, E(i)=-75.301337, i_min=9
In the tapering subroutine, i=12, E(i)=-75.070085, i_min=9
In the tapering subroutine, i=13, E(i)=-75.301337, i_min=9
In the tapering subroutine, i=14, E(i)=-74.907063, i_min=9
In the tapering subroutine, i=15, E(i)=-74.617087, i_min=9
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
u+d contributions  -0.00357637494472581
uu+dd contributions  -0.04253311434619171
ud contributions  -0.14929493127307344
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
u+d contributions  -0.0035931829597944456
uu+dd contributions  -0.04254964268090145
ud contributions  -0.1493169473283791
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
u+d contributions  -0.0035931829597944456
uu+dd contributions  -0.04254964268090145
ud contributions  -0.1493169473283791
