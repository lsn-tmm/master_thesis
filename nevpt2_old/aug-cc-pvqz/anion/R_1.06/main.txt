#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:48:52 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   1.060000000000 AA    0.000000000000   0.000000000000   2.003109692039 Bohr

nuclear repulsion = 3.99379027109434
point group symmetry = Coov
num. orbitals of irrep A1 = 34
num. orbitals of irrep E1x = 23
num. orbitals of irrep E1y = 23
num. orbitals of irrep E2x = 14
num. orbitals of irrep E2y = 14
num. orbitals of irrep E3x = 7
num. orbitals of irrep E3y = 7
num. orbitals of irrep E4x = 2
num. orbitals of irrep E4y = 2
number of shells = 33
number of NR pGTOs = 141
number of NR cGTOs = 126
basis = aug-cc-pvqz
ecp = {}
CPU time:         4.49
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y E4x E4y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpc8vm2957
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpc8vm2957
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1x) = -0.423062572592402  LUMO (A1) = 0.0214468141535835
Initial guess E= -75.2622252607258  |g|= 0.790552
macro= 0  E= -75.4053239377441  delta_E= -0.143099  |g|= 0.172341  3 KF 18 JK
macro= 1  E= -75.4062330169444  delta_E= -0.000909079  |g|= 0.0131727  3 KF 9 JK
macro= 2  E= -75.4062330240451  delta_E= -7.10068e-09  |g|= 1.4153e-05  2 KF 6 JK
macro= 3  E= -75.4062330240451  delta_E= 2.84217e-14  |g|= 4.92388e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 4  E=-75.4062330240451  |g|= 4.92388e-06  total 10 KF 40 JK
converged SCF energy = -75.4062330240451
**** SCF Summaries ****
Total Energy =                         -75.406233024045079
Nuclear Repulsion Energy =               3.993790271094340
One-electron Energy =                 -115.725510773635804
Two-electron Energy =                   36.325487478496392
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y  E4x  E4y
double occ                     3    1    1    0    0    0    0    0    0
single occ                     0    0    0    0    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.1999885921884  | -20.1999885921884  | -20.1999885921884  occ= 2
MO #2   (A1  #2 ) energy= -0.881624525195287 | -0.881624525195287 | -0.881624525195287 occ= 2
MO #3   (A1  #3 ) energy= -0.230988825165288 | -0.230988825165288 | -0.230988825165288 occ= 2
MO #4   (E1x #1 ) energy= -0.112332982886298 | -0.112332982886298 | -0.112332982886298 occ= 2
MO #5   (E1y #1 ) energy= -0.1123329828863   | -0.1123329828863   | -0.1123329828863   occ= 2
MO #6   (A1  #4 ) energy= 0.170887046184959  | 0.170887046184962  | 0.170887046184962  occ= 0
MO #7   (A1  #5 ) energy= 0.28964913429691   | 0.289649134296932  | 0.289649134296932  occ= 0
MO #8   (E1x #2 ) energy= 0.331510339482849  | 0.331510339482849  | 0.331510339482849  occ= 0
MO #9   (E1y #2 ) energy= 0.331510339482848  | 0.331510339482848  | 0.331510339482848  occ= 0
MO #10  (A1  #6 ) energy= 0.35581361567163   | 0.355813615671635  | 0.355813615671635  occ= 0
MO #11  (E1x #3 ) energy= 0.408917280010599  | 0.408917280010601  | 0.408917280010601  occ= 0
MO #12  (E1y #3 ) energy= 0.408917280010619  | 0.408917280010616  | 0.408917280010616  occ= 0
MO #13  (A1  #7 ) energy= 0.43101743270452   | 0.431017432704532  | 0.431017432704532  occ= 0
MO #14  (A1  #8 ) energy= 0.577428032563774  | 0.57742803256382   | 0.57742803256382   occ= 0
MO #15  (E2x #1 ) energy= 0.746736650255886  | 0.746736650255887  | 0.746736650255887  occ= 0
MO #16  (E2y #1 ) energy= 0.746736650255887  | 0.746736650255887  | 0.746736650255887  occ= 0
MO #17  (A1  #9 ) energy= 0.756294358920944  | 0.756294358920973  | 0.756294358920973  occ= 0
MO #18  (E1x #4 ) energy= 0.794045750766953  | 0.794045750766953  | 0.794045750766953  occ= 0
MO #19  (E1y #4 ) energy= 0.794045750766991  | 0.79404575076699   | 0.79404575076699   occ= 0
MO #20  (A1  #10) energy= 0.89143689409344   | 0.891436894093391  | 0.891436894093391  occ= 0
MO #21  (E1x #5 ) energy= 0.905333766354397  | 0.905333766354397  | 0.905333766354397  occ= 0
MO #22  (E1y #5 ) energy= 0.905333766354388  | 0.905333766354386  | 0.905333766354386  occ= 0
MO #23  (E2x #2 ) energy= 0.936522136068514  | 0.936522136068517  | 0.936522136068517  occ= 0
MO #24  (E2y #2 ) energy= 0.936522136068527  | 0.936522136068524  | 0.936522136068524  occ= 0
MO #25  (A1  #11) energy= 0.95760377202929   | 0.957603772029301  | 0.957603772029301  occ= 0
MO #26  (E1x #6 ) energy= 1.06177543564137   | 1.06177543564137   | 1.06177543564137   occ= 0
MO #27  (E1y #6 ) energy= 1.06177543564135   | 1.06177543564135   | 1.06177543564135   occ= 0
MO #28  (A1  #12) energy= 1.06503672654371   | 1.06503672654361   | 1.06503672654361   occ= 0
MO #29  (E1x #7 ) energy= 1.42749129487477   | 1.42749129487478   | 1.42749129487478   occ= 0
MO #30  (E1y #7 ) energy= 1.42749129487477   | 1.42749129487476   | 1.42749129487476   occ= 0
MO #31  (A1  #13) energy= 1.53896680457273   | 1.53896680457267   | 1.53896680457267   occ= 0
MO #32  (E3x #1 ) energy= 1.64747387592153   | 1.64747387592153   | 1.64747387592153   occ= 0
MO #33  (E3y #1 ) energy= 1.64747387592153   | 1.64747387592153   | 1.64747387592153   occ= 0
MO #34  (A1  #14) energy= 1.7340949078161    | 1.7340949078161    | 1.7340949078161    occ= 0
MO #35  (E2x #3 ) energy= 1.84381974505384   | 1.84381974505384   | 1.84381974505384   occ= 0
MO #36  (E2y #3 ) energy= 1.84381974505384   | 1.84381974505384   | 1.84381974505384   occ= 0
MO #37  (E1x #8 ) energy= 1.86041344641103   | 1.86041344641104   | 1.86041344641104   occ= 0
MO #38  (E1y #8 ) energy= 1.86041344641106   | 1.86041344641106   | 1.86041344641106   occ= 0
MO #39  (E2x #4 ) energy= 1.88238404837473   | 1.88238404837474   | 1.88238404837474   occ= 0
MO #40  (E2y #4 ) energy= 1.88238404837474   | 1.88238404837474   | 1.88238404837474   occ= 0
MO #41  (A1  #15) energy= 1.92231438577976   | 1.92231438577976   | 1.92231438577976   occ= 0
MO #42  (A1  #16) energy= 1.96527201799998   | 1.96527201799996   | 1.96527201799996   occ= 0
MO #43  (E3x #2 ) energy= 2.00894317757133   | 2.00894317757133   | 2.00894317757133   occ= 0
MO #44  (E3y #2 ) energy= 2.00894317757133   | 2.00894317757133   | 2.00894317757133   occ= 0
MO #45  (E1x #9 ) energy= 2.02024204469693   | 2.02024204469694   | 2.02024204469694   occ= 0
MO #46  (E1y #9 ) energy= 2.02024204469686   | 2.02024204469687   | 2.02024204469687   occ= 0
MO #47  (E2x #5 ) energy= 2.1931070645416    | 2.1931070645416    | 2.1931070645416    occ= 0
MO #48  (E2y #5 ) energy= 2.19310706454162   | 2.19310706454162   | 2.19310706454162   occ= 0
MO #49  (A1  #17) energy= 2.24650495217573   | 2.24650495217567   | 2.24650495217567   occ= 0
MO #50  (E1x #10) energy= 2.44125296298672   | 2.44125296298673   | 2.44125296298673   occ= 0
MO #51  (E1y #10) energy= 2.44125296298673   | 2.44125296298672   | 2.44125296298672   occ= 0
MO #52  (A1  #18) energy= 2.66175076107499   | 2.661750761075     | 2.661750761075     occ= 0
MO #53  (E1x #11) energy= 2.96337146775295   | 2.96337146775295   | 2.96337146775295   occ= 0
MO #54  (E1y #11) energy= 2.96337146775297   | 2.96337146775297   | 2.96337146775297   occ= 0
MO #55  (E2x #6 ) energy= 3.1782104251192    | 3.1782104251192    | 3.1782104251192    occ= 0
MO #56  (E2y #6 ) energy= 3.17821042511921   | 3.1782104251192    | 3.1782104251192    occ= 0
MO #57  (E1x #12) energy= 3.24495279071919   | 3.24495279071919   | 3.24495279071919   occ= 0
MO #58  (E1y #12) energy= 3.24495279071913   | 3.24495279071913   | 3.24495279071913   occ= 0
MO #59  (A1  #19) energy= 3.34173131597401   | 3.34173131597393   | 3.34173131597393   occ= 0
MO #60  (A1  #20) energy= 3.89755381737819   | 3.89755381737773   | 3.89755381737773   occ= 0
MO #61  (E4x #1 ) energy= 4.04686218224054   | 4.04686218224054   | 4.04686218224054   occ= 0
MO #62  (E4y #1 ) energy= 4.04686218224054   | 4.04686218224055   | 4.04686218224055   occ= 0
MO #63  (E1x #13) energy= 4.13602930648192   | 4.13602930648191   | 4.13602930648191   occ= 0
MO #64  (E1y #13) energy= 4.13602930648194   | 4.13602930648193   | 4.13602930648193   occ= 0
MO #65  (E3x #3 ) energy= 4.25733386092796   | 4.25733386092796   | 4.25733386092796   occ= 0
MO #66  (E3y #3 ) energy= 4.25733386092797   | 4.25733386092797   | 4.25733386092797   occ= 0
MO #67  (A1  #21) energy= 4.35457085141057   | 4.35457085141041   | 4.35457085141041   occ= 0
MO #68  (E3x #4 ) energy= 4.49013547645999   | 4.49013547645999   | 4.49013547645999   occ= 0
MO #69  (E3y #4 ) energy= 4.49013547645999   | 4.49013547645999   | 4.49013547645999   occ= 0
MO #70  (E2x #7 ) energy= 4.54702210690002   | 4.54702210690003   | 4.54702210690003   occ= 0
MO #71  (E2y #7 ) energy= 4.54702210690002   | 4.54702210690002   | 4.54702210690002   occ= 0
MO #72  (E1x #14) energy= 4.59327873564759   | 4.59327873564759   | 4.59327873564759   occ= 0
MO #73  (E1y #14) energy= 4.59327873564757   | 4.59327873564757   | 4.59327873564757   occ= 0
MO #74  (A1  #22) energy= 4.61528225367981   | 4.61528225367982   | 4.61528225367982   occ= 0
MO #75  (E2x #8 ) energy= 4.64545238646027   | 4.64545238646028   | 4.64545238646028   occ= 0
MO #76  (E2y #8 ) energy= 4.64545238646027   | 4.64545238646028   | 4.64545238646028   occ= 0
MO #77  (A1  #23) energy= 4.69540593888079   | 4.69540593888078   | 4.69540593888078   occ= 0
MO #78  (E1x #15) energy= 5.07252785488374   | 5.07252785488375   | 5.07252785488375   occ= 0
MO #79  (E1y #15) energy= 5.07252785488374   | 5.07252785488374   | 5.07252785488374   occ= 0
MO #80  (E2x #9 ) energy= 5.12963988011322   | 5.12963988011322   | 5.12963988011322   occ= 0
MO #81  (E2y #9 ) energy= 5.12963988011323   | 5.12963988011323   | 5.12963988011323   occ= 0
MO #82  (A1  #24) energy= 5.60506461495013   | 5.60506461495006   | 5.60506461495006   occ= 0
MO #83  (E1x #16) energy= 5.77703041354506   | 5.77703041354507   | 5.77703041354507   occ= 0
MO #84  (E1y #16) energy= 5.77703041354519   | 5.7770304135452    | 5.7770304135452    occ= 0
MO #85  (A1  #25) energy= 6.02481526841829   | 6.02481526841834   | 6.02481526841834   occ= 0
MO #86  (E3x #5 ) energy= 6.99019266832098   | 6.99019266832098   | 6.99019266832098   occ= 0
MO #87  (E3y #5 ) energy= 6.99019266832098   | 6.99019266832098   | 6.99019266832098   occ= 0
MO #88  (E2x #10) energy= 7.82792044181243   | 7.82792044181243   | 7.82792044181243   occ= 0
MO #89  (E2y #10) energy= 7.82792044181245   | 7.82792044181245   | 7.82792044181245   occ= 0
MO #90  (A1  #26) energy= 7.90257181114932   | 7.90257181114931   | 7.90257181114931   occ= 0
MO #91  (E1x #17) energy= 8.07250956570813   | 8.07250956570813   | 8.07250956570813   occ= 0
MO #92  (E1y #17) energy= 8.07250956570814   | 8.07250956570814   | 8.07250956570814   occ= 0
MO #93  (A1  #27) energy= 8.68393890604805   | 8.68393890604804   | 8.68393890604804   occ= 0
MO #94  (E2x #11) energy= 8.89401476821795   | 8.89401476821794   | 8.89401476821794   occ= 0
MO #95  (E2y #11) energy= 8.89401476821797   | 8.89401476821797   | 8.89401476821797   occ= 0
MO #96  (E1x #18) energy= 9.15428450968079   | 9.1542845096808    | 9.1542845096808    occ= 0
MO #97  (E1y #18) energy= 9.15428450968086   | 9.15428450968086   | 9.15428450968086   occ= 0
MO #98  (E1x #19) energy= 9.78185074762136   | 9.78185074762136   | 9.78185074762136   occ= 0
MO #99  (E1y #19) energy= 9.78185074762139   | 9.7818507476214    | 9.7818507476214    occ= 0
MO #100 (A1  #28) energy= 9.90735206404785   | 9.90735206404782   | 9.90735206404782   occ= 0
MO #101 (E4x #2 ) energy= 11.0557289616039   | 11.0557289616039   | 11.0557289616039   occ= 0
MO #102 (E4y #2 ) energy= 11.0557289616039   | 11.0557289616039   | 11.0557289616039   occ= 0
MO #103 (E3x #6 ) energy= 11.1529530438016   | 11.1529530438016   | 11.1529530438016   occ= 0
MO #104 (E3y #6 ) energy= 11.1529530438016   | 11.1529530438016   | 11.1529530438016   occ= 0
MO #105 (A1  #29) energy= 11.315314504177    | 11.315314504177    | 11.315314504177    occ= 0
MO #106 (E1x #20) energy= 11.368226974533    | 11.368226974533    | 11.368226974533    occ= 0
MO #107 (E1y #20) energy= 11.368226974533    | 11.368226974533    | 11.368226974533    occ= 0
MO #108 (E2x #12) energy= 11.4412828010373   | 11.4412828010373   | 11.4412828010373   occ= 0
MO #109 (E2y #12) energy= 11.4412828010373   | 11.4412828010373   | 11.4412828010373   occ= 0
MO #110 (E1x #21) energy= 11.8886997055477   | 11.8886997055477   | 11.8886997055477   occ= 0
MO #111 (E1y #21) energy= 11.8886997055477   | 11.8886997055478   | 11.8886997055478   occ= 0
MO #112 (A1  #30) energy= 11.909391741725    | 11.909391741725    | 11.909391741725    occ= 0
MO #113 (A1  #31) energy= 12.3047116114446   | 12.3047116114446   | 12.3047116114446   occ= 0
MO #114 (E3x #7 ) energy= 12.3065474639195   | 12.3065474639195   | 12.3065474639195   occ= 0
MO #115 (E3y #7 ) energy= 12.3065474639195   | 12.3065474639195   | 12.3065474639195   occ= 0
MO #116 (E2x #13) energy= 12.4285864791675   | 12.4285864791675   | 12.4285864791675   occ= 0
MO #117 (E2y #13) energy= 12.4285864791675   | 12.4285864791675   | 12.4285864791675   occ= 0
MO #118 (E1x #22) energy= 12.8985476072913   | 12.8985476072914   | 12.8985476072914   occ= 0
MO #119 (E1y #22) energy= 12.8985476072914   | 12.8985476072913   | 12.8985476072913   occ= 0
MO #120 (E2x #14) energy= 13.221147511484    | 13.221147511484    | 13.221147511484    occ= 0
MO #121 (E2y #14) energy= 13.221147511484    | 13.221147511484    | 13.221147511484    occ= 0
MO #122 (A1  #32) energy= 14.1852942073473   | 14.1852942073473   | 14.1852942073473   occ= 0
MO #123 (E1x #23) energy= 14.2576057183035   | 14.2576057183035   | 14.2576057183035   occ= 0
MO #124 (E1y #23) energy= 14.2576057183036   | 14.2576057183036   | 14.2576057183036   occ= 0
MO #125 (A1  #33) energy= 16.4564104644323   | 16.4564104644322   | 16.4564104644322   occ= 0
MO #126 (A1  #34) energy= 42.9535545704297   | 42.953554570432    | 42.953554570432    occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.84404
pop of  0 O 3s        0.00830
pop of  0 O 4s        0.00092
pop of  0 O 5s        0.00010
pop of  0 O 6s        0.00003
pop of  0 O 2px       1.94315
pop of  0 O 2py       1.94315
pop of  0 O 2pz       1.33853
pop of  0 O 3px       0.03341
pop of  0 O 3py       0.03341
pop of  0 O 3pz       0.00337
pop of  0 O 4px       0.00119
pop of  0 O 4py       0.00119
pop of  0 O 4pz       0.00029
pop of  0 O 5px       0.00006
pop of  0 O 5py       0.00006
pop of  0 O 5pz       0.00003
pop of  0 O 6px       0.00001
pop of  0 O 6py       0.00001
pop of  0 O 6pz       0.00004
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00131
pop of  0 O 3dz^2     0.00362
pop of  0 O 3dxz      0.00131
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00020
pop of  0 O 4dz^2     0.00018
pop of  0 O 4dxz      0.00020
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00000
pop of  0 O 5dz^2     0.00011
pop of  0 O 5dxz      0.00000
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 6dxy      0.00000
pop of  0 O 6dyz      0.00000
pop of  0 O 6dz^2     0.00006
pop of  0 O 6dxz      0.00000
pop of  0 O 6dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00031
pop of  0 O 4f 0      0.00035
pop of  0 O 4f 1      0.00031
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00010
pop of  0 O 5f 0      0.00001
pop of  0 O 5f 1      0.00010
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  0 O 6f-3      0.00000
pop of  0 O 6f-2      0.00000
pop of  0 O 6f-1      0.00001
pop of  0 O 6f 0      0.00002
pop of  0 O 6f 1      0.00001
pop of  0 O 6f 2      0.00000
pop of  0 O 6f 3      0.00000
pop of  0 O 5g-4      0.00000
pop of  0 O 5g-3      0.00000
pop of  0 O 5g-2      0.00000
pop of  0 O 5g-1      0.00003
pop of  0 O 5g 0      0.00006
pop of  0 O 5g 1      0.00003
pop of  0 O 5g 2      0.00000
pop of  0 O 5g 3      0.00000
pop of  0 O 5g 4      0.00000
pop of  0 O 6g-4      0.00000
pop of  0 O 6g-3      0.00000
pop of  0 O 6g-2      0.00000
pop of  0 O 6g-1      0.00001
pop of  0 O 6g 0      0.00001
pop of  0 O 6g 1      0.00001
pop of  0 O 6g 2      0.00000
pop of  0 O 6g 3      0.00000
pop of  0 O 6g 4      0.00000
pop of  1 H 1s        0.78872
pop of  1 H 2s        0.00387
pop of  1 H 3s        0.00085
pop of  1 H 4s        0.00004
pop of  1 H 5s        0.00011
pop of  1 H 2px       0.01060
pop of  1 H 2py       0.01060
pop of  1 H 2pz       0.00084
pop of  1 H 3px       0.00680
pop of  1 H 3py       0.00680
pop of  1 H 3pz       0.00386
pop of  1 H 4px       0.00124
pop of  1 H 4py       0.00124
pop of  1 H 4pz       0.00054
pop of  1 H 5px       0.00024
pop of  1 H 5py       0.00024
pop of  1 H 5pz       0.00014
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00001
pop of  1 H 3dz^2     0.00026
pop of  1 H 3dxz      0.00001
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00017
pop of  1 H 4dz^2     0.00000
pop of  1 H 4dxz      0.00017
pop of  1 H 4dx2-y2    0.00000
pop of  1 H 5dxy      0.00000
pop of  1 H 5dyz      0.00066
pop of  1 H 5dz^2     0.00004
pop of  1 H 5dxz      0.00066
pop of  1 H 5dx2-y2    0.00000
pop of  1 H 4f-3      0.00000
pop of  1 H 4f-2      0.00000
pop of  1 H 4f-1      0.00019
pop of  1 H 4f 0      0.00021
pop of  1 H 4f 1      0.00019
pop of  1 H 4f 2      0.00000
pop of  1 H 4f 3      0.00000
pop of  1 H 5f-3      0.00000
pop of  1 H 5f-2      0.00000
pop of  1 H 5f-1      0.00030
pop of  1 H 5f 0      0.00045
pop of  1 H 5f 1      0.00030
pop of  1 H 5f 2      0.00000
pop of  1 H 5f 3      0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -1.15966
charge of  1H =      0.15966
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  0.79626
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:49:13 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        43.35

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpso3sb5ai
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpso3sb5ai
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.112332982886302  LUMO = 0.719276825421121
Initial guess E= -75.4062330240456  |g|= 2.71692e-07
macro= 0  E= -75.4062330240457  delta_E= -5.68434e-14  |g|= 2.71692e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4062330240457  |g|= 2.71692e-07  total 2 KF 4 JK
converged SCF energy = -75.4062330240457
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:49:31 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        77.43

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpci8z9ftl
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpci8z9ftl
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.112332982946265  LUMO = 0.71927682546056
Initial guess E= -75.4062330240457  |g|= 2.71955e-07
macro= 0  E= -75.4062330240457  delta_E= -2.84217e-14  |g|= 2.71955e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4062330240457  |g|= 2.71955e-07  total 2 KF 4 JK
converged SCF energy = -75.4062330240457
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:49:57 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       117.94

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp7l2fxezp
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp7l2fxezp
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.112332982946669  LUMO = 0.170887046186606
Initial guess E= -75.4062330240499  |g|= 8.36142e-07
macro= 0  E= -75.4062330240499  delta_E= -7.10543e-14  |g|= 8.36142e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4062330240499  |g|= 8.36142e-07  total 2 KF 4 JK
converged SCF energy = -75.4062330240499
u+d contributions  -0.05560468061655978
uu+dd contributions  -0.10538641781431281
ud contributions  -0.2601140496996089
u+d contributions  -0.0024296320194871495
uu+dd contributions  -0.051946558981361454
ud contributions  -0.20613037877587495
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:50:03 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       133.01

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmplp5wqmpo
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmplp5wqmpo
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.112332867499859  LUMO = 0.719276873698325
Initial guess E= -75.4062330240457  |g|= 1.14156e-07
macro= 0  E= -75.4062330240457  delta_E= -1.42109e-14  |g|= 1.14156e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4062330240457  |g|= 1.14156e-07  total 2 KF 4 JK
converged SCF energy = -75.4062330240457
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_1.06/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,1.06)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 18:50:28 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       174.15

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp2n4g8xqw
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp2n4g8xqw
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.112332867500219  LUMO = 0.170887045843631
Initial guess E= -75.4062330240494  |g|= 7.43853e-07
macro= 0  E= -75.4062330240497  delta_E= -2.27374e-13  |g|= 7.43853e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4062330240497  |g|= 7.43853e-07  total 2 KF 4 JK
converged SCF energy = -75.4062330240497
u+d contributions  -0.03278798645080224
uu+dd contributions  -0.07112067362250078
ud contributions  -0.176336080880898
u+d contributions  -0.003659386900628646
uu+dd contributions  -0.0418861990328151
ud contributions  -0.14689345274872087
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-75.018799, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.175244, i_min=0
In the tapering subroutine, i=2, E(i)=-75.293900, i_min=1
In the tapering subroutine, i=3, E(i)=-75.072664, i_min=2
In the tapering subroutine, i=4, E(i)=-75.293900, i_min=2
In the tapering subroutine, i=5, E(i)=-75.072664, i_min=2
In the tapering subroutine, i=6, E(i)=-74.598703, i_min=2
In the tapering subroutine, i=7, E(i)=-74.930623, i_min=2
In the tapering subroutine, i=8, E(i)=-75.175244, i_min=2
In the tapering subroutine, i=9, E(i)=-75.406233, i_min=2
In the tapering subroutine, i=10, E(i)=-75.096368, i_min=9
In the tapering subroutine, i=11, E(i)=-75.293900, i_min=9
In the tapering subroutine, i=12, E(i)=-75.096368, i_min=9
In the tapering subroutine, i=13, E(i)=-75.293900, i_min=9
In the tapering subroutine, i=14, E(i)=-74.930623, i_min=9
In the tapering subroutine, i=15, E(i)=-74.606410, i_min=9
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
u+d contributions  -0.0036593873155981293
uu+dd contributions  -0.041886209155162425
ud contributions  -0.14689347770205752
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
u+d contributions  -0.0036598948942714133
uu+dd contributions  -0.04188710373417395
ud contributions  -0.14689552687606383
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
u+d contributions  -0.0036598948942714133
uu+dd contributions  -0.04188710373417395
ud contributions  -0.14689552687606383
