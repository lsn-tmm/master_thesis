#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_0.90/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.90)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 16:58:50 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000   0.900000000000 AA    0.000000000000   0.000000000000   1.700753512109 Bohr

nuclear repulsion = 4.7037974304
point group symmetry = Coov
num. orbitals of irrep A1 = 34
num. orbitals of irrep E1x = 23
num. orbitals of irrep E1y = 23
num. orbitals of irrep E2x = 14
num. orbitals of irrep E2y = 14
num. orbitals of irrep E3x = 7
num. orbitals of irrep E3y = 7
num. orbitals of irrep E4x = 2
num. orbitals of irrep E4y = 2
number of shells = 33
number of NR pGTOs = 141
number of NR cGTOs = 126
basis = aug-cc-pvqz
ecp = {}
CPU time:         3.94
Freeze 0 electrons in irreps []
    10 free electrons in irreps A1 E1x E1y E2x E2y E3x E3y E4x E4y




******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> ********
method = SymAdaptedROHF-ROHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpp0plr0jo
max_memory 4000 MB (current use 0 MB)
num. doubly occ = 5  num. singly occ = 0
******** <class 'pyscf.scf.hf_symm.SymAdaptedROHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpp0plr0jo
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (E1y) = -0.444380342277029  LUMO (A1) = 0.0263047524443836
Initial guess E= -75.2830092796239  |g|= 0.776704
macro= 0  E= -75.4148584953834  delta_E= -0.131849  |g|= 0.176142  3 KF 18 JK
macro= 1  E= -75.4153369400651  delta_E= -0.000478445  |g|= 3.49896e-05  3 KF 11 JK
macro= 2  E= -75.4153369400653  delta_E= -1.98952e-13  |g|= 3.00622e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 3  E=-75.4153369400653  |g|= 3.00622e-06  total 8 KF 35 JK
converged SCF energy = -75.4153369400653
**** SCF Summaries ****
Total Energy =                         -75.415336940065302
Nuclear Repulsion Energy =               4.703797430400000
One-electron Energy =                 -117.084172083693375
Two-electron Energy =                   36.965037713228078
Wave-function symmetry = Coov
occupancy for each irrep:     A1  E1x  E1y  E2x  E2y  E3x  E3y  E4x  E4y
double occ                     3    1    1    0    0    0    0    0    0
single occ                     0    0    0    0    0    0    0    0    0
**** MO energy ****
                          Roothaan           | alpha              | beta
MO #1   (A1  #1 ) energy= -20.1740318411911  | -20.1740318411911  | -20.1740318411911  occ= 2
MO #2   (A1  #2 ) energy= -0.921189555002495 | -0.921189555002496 | -0.921189555002496 occ= 2
MO #3   (A1  #3 ) energy= -0.265552395293689 | -0.265552395293689 | -0.265552395293689 occ= 2
MO #4   (E1x #1 ) energy= -0.108137268565654 | -0.108137268565654 | -0.108137268565654 occ= 2
MO #5   (E1y #1 ) energy= -0.108137268565655 | -0.108137268565655 | -0.108137268565655 occ= 2
MO #6   (A1  #4 ) energy= 0.170314518250674  | 0.170314518250661  | 0.170314518250661  occ= 0
MO #7   (A1  #5 ) energy= 0.289990574420351  | 0.289990574420316  | 0.289990574420316  occ= 0
MO #8   (E1x #2 ) energy= 0.325073974003474  | 0.325073974003475  | 0.325073974003475  occ= 0
MO #9   (E1y #2 ) energy= 0.325073974003471  | 0.325073974003472  | 0.325073974003472  occ= 0
MO #10  (A1  #6 ) energy= 0.356501382334469  | 0.356501382334441  | 0.356501382334441  occ= 0
MO #11  (E1x #3 ) energy= 0.416084175213957  | 0.416084175213957  | 0.416084175213957  occ= 0
MO #12  (E1y #3 ) energy= 0.416084175214074  | 0.416084175214076  | 0.416084175214076  occ= 0
MO #13  (A1  #7 ) energy= 0.427503834852693  | 0.427503834852699  | 0.427503834852699  occ= 0
MO #14  (A1  #8 ) energy= 0.600641165168842  | 0.600641165168739  | 0.600641165168739  occ= 0
MO #15  (E2x #1 ) energy= 0.746001721773237  | 0.746001721773236  | 0.746001721773236  occ= 0
MO #16  (E2y #1 ) energy= 0.746001721773239  | 0.74600172177324   | 0.74600172177324   occ= 0
MO #17  (A1  #9 ) energy= 0.773348058720161  | 0.773348058720164  | 0.773348058720164  occ= 0
MO #18  (E1x #4 ) energy= 0.808434099751138  | 0.808434099751139  | 0.808434099751139  occ= 0
MO #19  (E1y #4 ) energy= 0.808434099751257  | 0.808434099751255  | 0.808434099751255  occ= 0
MO #20  (E1x #5 ) energy= 0.887197834673381  | 0.887197834673387  | 0.887197834673387  occ= 0
MO #21  (E1y #5 ) energy= 0.887197834673473  | 0.887197834673471  | 0.887197834673471  occ= 0
MO #22  (A1  #10) energy= 0.8936575561713    | 0.893657556171297  | 0.893657556171297  occ= 0
MO #23  (E2x #2 ) energy= 0.925168967006213  | 0.925168967006211  | 0.925168967006211  occ= 0
MO #24  (E2y #2 ) energy= 0.925168967006245  | 0.925168967006242  | 0.925168967006242  occ= 0
MO #25  (A1  #11) energy= 0.982008477621987  | 0.982008477621939  | 0.982008477621939  occ= 0
MO #26  (E1x #6 ) energy= 1.05065703093147   | 1.05065703093147   | 1.05065703093147   occ= 0
MO #27  (E1y #6 ) energy= 1.05065703093147   | 1.05065703093147   | 1.05065703093147   occ= 0
MO #28  (A1  #12) energy= 1.10253091021714   | 1.10253091021707   | 1.10253091021707   occ= 0
MO #29  (E1x #7 ) energy= 1.4989556689111    | 1.4989556689111    | 1.4989556689111    occ= 0
MO #30  (E1y #7 ) energy= 1.49895566891118   | 1.49895566891118   | 1.49895566891118   occ= 0
MO #31  (A1  #13) energy= 1.56599569002965   | 1.56599569002946   | 1.56599569002946   occ= 0
MO #32  (E3x #1 ) energy= 1.65667481411866   | 1.65667481411866   | 1.65667481411866   occ= 0
MO #33  (E3y #1 ) energy= 1.65667481411867   | 1.65667481411867   | 1.65667481411867   occ= 0
MO #34  (A1  #14) energy= 1.82913063234745   | 1.82913063234746   | 1.82913063234746   occ= 0
MO #35  (E2x #3 ) energy= 1.84008263927464   | 1.84008263927464   | 1.84008263927464   occ= 0
MO #36  (E2y #3 ) energy= 1.84008263927465   | 1.84008263927465   | 1.84008263927465   occ= 0
MO #37  (E1x #8 ) energy= 1.86003424225797   | 1.86003424225797   | 1.86003424225797   occ= 0
MO #38  (E1y #8 ) energy= 1.86003424225797   | 1.86003424225797   | 1.86003424225797   occ= 0
MO #39  (E2x #4 ) energy= 1.92260863230795   | 1.92260863230795   | 1.92260863230795   occ= 0
MO #40  (E2y #4 ) energy= 1.92260863230795   | 1.92260863230795   | 1.92260863230795   occ= 0
MO #41  (A1  #15) energy= 1.92349637989401   | 1.92349637989378   | 1.92349637989378   occ= 0
MO #42  (A1  #16) energy= 1.98070992993549   | 1.98070992993547   | 1.98070992993547   occ= 0
MO #43  (E1x #9 ) energy= 1.98199244965497   | 1.98199244965496   | 1.98199244965496   occ= 0
MO #44  (E1y #9 ) energy= 1.98199244965484   | 1.98199244965484   | 1.98199244965484   occ= 0
MO #45  (E3x #2 ) energy= 2.03764231947193   | 2.03764231947193   | 2.03764231947193   occ= 0
MO #46  (E3y #2 ) energy= 2.03764231947192   | 2.03764231947192   | 2.03764231947192   occ= 0
MO #47  (E2x #5 ) energy= 2.13917483285895   | 2.13917483285895   | 2.13917483285895   occ= 0
MO #48  (E2y #5 ) energy= 2.13917483285898   | 2.13917483285898   | 2.13917483285898   occ= 0
MO #49  (A1  #17) energy= 2.18150861085328   | 2.18150861085305   | 2.18150861085305   occ= 0
MO #50  (E1x #10) energy= 2.41086314630064   | 2.41086314630065   | 2.41086314630065   occ= 0
MO #51  (E1y #10) energy= 2.41086314630051   | 2.4108631463005    | 2.4108631463005    occ= 0
MO #52  (A1  #18) energy= 2.84259864801811   | 2.84259864801808   | 2.84259864801808   occ= 0
MO #53  (E1x #11) energy= 3.0903035432074    | 3.0903035432074    | 3.0903035432074    occ= 0
MO #54  (E1y #11) energy= 3.09030354320737   | 3.09030354320737   | 3.09030354320737   occ= 0
MO #55  (E1x #12) energy= 3.37237866266088   | 3.37237866266087   | 3.37237866266087   occ= 0
MO #56  (E1y #12) energy= 3.37237866266091   | 3.37237866266091   | 3.37237866266091   occ= 0
MO #57  (A1  #19) energy= 3.42379049956818   | 3.42379049956841   | 3.42379049956841   occ= 0
MO #58  (E2x #6 ) energy= 3.43558501798093   | 3.43558501798093   | 3.43558501798093   occ= 0
MO #59  (E2y #6 ) energy= 3.43558501798093   | 3.43558501798093   | 3.43558501798093   occ= 0
MO #60  (A1  #20) energy= 3.94827106946463   | 3.94827106946505   | 3.94827106946505   occ= 0
MO #61  (E4x #1 ) energy= 4.04679705066318   | 4.04679705066318   | 4.04679705066318   occ= 0
MO #62  (E4y #1 ) energy= 4.04679705066317   | 4.04679705066317   | 4.04679705066317   occ= 0
MO #63  (E1x #13) energy= 4.15181412567839   | 4.15181412567841   | 4.15181412567841   occ= 0
MO #64  (E1y #13) energy= 4.15181412567773   | 4.15181412567773   | 4.15181412567773   occ= 0
MO #65  (E3x #3 ) energy= 4.33757624012043   | 4.33757624012044   | 4.33757624012044   occ= 0
MO #66  (E3y #3 ) energy= 4.33757624012044   | 4.33757624012044   | 4.33757624012044   occ= 0
MO #67  (A1  #21) energy= 4.4164295076149    | 4.41642950761488   | 4.41642950761488   occ= 0
MO #68  (E3x #4 ) energy= 4.49745965389987   | 4.49745965389986   | 4.49745965389986   occ= 0
MO #69  (E3y #4 ) energy= 4.49745965389987   | 4.49745965389986   | 4.49745965389986   occ= 0
MO #70  (E1x #14) energy= 4.50758056810539   | 4.5075805681054    | 4.5075805681054    occ= 0
MO #71  (E1y #14) energy= 4.50758056810537   | 4.50758056810537   | 4.50758056810537   occ= 0
MO #72  (E2x #7 ) energy= 4.51202628363475   | 4.51202628363475   | 4.51202628363475   occ= 0
MO #73  (E2y #7 ) energy= 4.51202628363475   | 4.51202628363475   | 4.51202628363475   occ= 0
MO #74  (A1  #22) energy= 4.59219481762718   | 4.59219481762718   | 4.59219481762718   occ= 0
MO #75  (E2x #8 ) energy= 4.73998256688065   | 4.73998256688066   | 4.73998256688066   occ= 0
MO #76  (E2y #8 ) energy= 4.73998256688065   | 4.73998256688066   | 4.73998256688066   occ= 0
MO #77  (A1  #23) energy= 4.8760531305912    | 4.8760531305912    | 4.8760531305912    occ= 0
MO #78  (E1x #15) energy= 5.22799382087573   | 5.22799382087574   | 5.22799382087574   occ= 0
MO #79  (E1y #15) energy= 5.22799382087564   | 5.22799382087564   | 5.22799382087564   occ= 0
MO #80  (E2x #9 ) energy= 5.2618903826967    | 5.2618903826967    | 5.2618903826967    occ= 0
MO #81  (E2y #9 ) energy= 5.26189038269671   | 5.26189038269671   | 5.26189038269671   occ= 0
MO #82  (A1  #24) energy= 5.51565369286174   | 5.51565369286175   | 5.51565369286175   occ= 0
MO #83  (E1x #16) energy= 6.1597921720155    | 6.15979217201552   | 6.15979217201552   occ= 0
MO #84  (E1y #16) energy= 6.15979217201488   | 6.1597921720149    | 6.1597921720149    occ= 0
MO #85  (A1  #25) energy= 6.47275658306539   | 6.47275658306532   | 6.47275658306532   occ= 0
MO #86  (E3x #5 ) energy= 7.13911701866317   | 7.13911701866317   | 7.13911701866317   occ= 0
MO #87  (E3y #5 ) energy= 7.13911701866318   | 7.13911701866317   | 7.13911701866317   occ= 0
MO #88  (E1x #17) energy= 8.12538328484171   | 8.12538328484172   | 8.12538328484172   occ= 0
MO #89  (E1y #17) energy= 8.12538328484159   | 8.1253832848416    | 8.1253832848416    occ= 0
MO #90  (E2x #10) energy= 8.39170230180356   | 8.39170230180355   | 8.39170230180355   occ= 0
MO #91  (E2y #10) energy= 8.39170230180356   | 8.39170230180356   | 8.39170230180356   occ= 0
MO #92  (A1  #26) energy= 8.41558137541046   | 8.41558137541045   | 8.41558137541045   occ= 0
MO #93  (E2x #11) energy= 8.95080277879951   | 8.95080277879951   | 8.95080277879951   occ= 0
MO #94  (E2y #11) energy= 8.95080277879952   | 8.95080277879952   | 8.95080277879952   occ= 0
MO #95  (E1x #18) energy= 9.04757642103417   | 9.04757642103419   | 9.04757642103419   occ= 0
MO #96  (E1y #18) energy= 9.04757642103399   | 9.04757642103401   | 9.04757642103401   occ= 0
MO #97  (A1  #27) energy= 9.12879507752472   | 9.1287950775248    | 9.1287950775248    occ= 0
MO #98  (A1  #28) energy= 10.4200023478286   | 10.4200023478285   | 10.4200023478285   occ= 0
MO #99  (E1x #19) energy= 10.4939872258558   | 10.4939872258558   | 10.4939872258558   occ= 0
MO #100 (E1y #19) energy= 10.4939872258553   | 10.4939872258554   | 10.4939872258554   occ= 0
MO #101 (A1  #29) energy= 10.6074160854058   | 10.6074160854058   | 10.6074160854058   occ= 0
MO #102 (E4x #2 ) energy= 11.057804366767    | 11.057804366767    | 11.057804366767    occ= 0
MO #103 (E4y #2 ) energy= 11.057804366767    | 11.057804366767    | 11.057804366767    occ= 0
MO #104 (E3x #6 ) energy= 11.2235581838337   | 11.2235581838337   | 11.2235581838337   occ= 0
MO #105 (E3y #6 ) energy= 11.2235581838337   | 11.2235581838337   | 11.2235581838337   occ= 0
MO #106 (E1x #20) energy= 11.311886085904    | 11.311886085904    | 11.311886085904    occ= 0
MO #107 (E1y #20) energy= 11.3118860859038   | 11.3118860859038   | 11.3118860859038   occ= 0
MO #108 (E2x #12) energy= 11.7576254175124   | 11.7576254175124   | 11.7576254175124   occ= 0
MO #109 (E2y #12) energy= 11.7576254175124   | 11.7576254175124   | 11.7576254175124   occ= 0
MO #110 (E1x #21) energy= 11.9559705212535   | 11.9559705212535   | 11.9559705212535   occ= 0
MO #111 (E1y #21) energy= 11.9559705212535   | 11.9559705212535   | 11.9559705212535   occ= 0
MO #112 (A1  #30) energy= 12.071592071567    | 12.071592071567    | 12.071592071567    occ= 0
MO #113 (E3x #7 ) energy= 12.3137671046768   | 12.3137671046768   | 12.3137671046768   occ= 0
MO #114 (E3y #7 ) energy= 12.3137671046768   | 12.3137671046768   | 12.3137671046768   occ= 0
MO #115 (E2x #13) energy= 12.4853372734381   | 12.4853372734381   | 12.4853372734381   occ= 0
MO #116 (E2y #13) energy= 12.4853372734381   | 12.4853372734381   | 12.4853372734381   occ= 0
MO #117 (A1  #31) energy= 13.0924399782437   | 13.0924399782437   | 13.0924399782437   occ= 0
MO #118 (E2x #14) energy= 13.3198259663116   | 13.3198259663116   | 13.3198259663116   occ= 0
MO #119 (E2y #14) energy= 13.3198259663116   | 13.3198259663116   | 13.3198259663116   occ= 0
MO #120 (E1x #22) energy= 13.500540902443    | 13.500540902443    | 13.500540902443    occ= 0
MO #121 (E1y #22) energy= 13.5005409024429   | 13.5005409024429   | 13.5005409024429   occ= 0
MO #122 (A1  #32) energy= 15.3457054289614   | 15.3457054289614   | 15.3457054289614   occ= 0
MO #123 (E1x #23) energy= 15.5374130918175   | 15.5374130918175   | 15.5374130918175   occ= 0
MO #124 (E1y #23) energy= 15.5374130918172   | 15.5374130918172   | 15.5374130918172   occ= 0
MO #125 (A1  #33) energy= 17.6106198866944   | 17.6106198866947   | 17.6106198866947   occ= 0
MO #126 (A1  #34) energy= 43.998041372844    | 43.9980413728455   | 43.9980413728455   occ= 0
 ** Mulliken pop on meta-lowdin orthogonal AOs  **
 ** Mulliken pop  **
pop of  0 O 1s        1.99999
pop of  0 O 2s        1.76789
pop of  0 O 3s        0.01060
pop of  0 O 4s        0.00174
pop of  0 O 5s        0.00023
pop of  0 O 6s        0.00004
pop of  0 O 2px       1.93743
pop of  0 O 2py       1.93743
pop of  0 O 2pz       1.48149
pop of  0 O 3px       0.03463
pop of  0 O 3py       0.03463
pop of  0 O 3pz       0.00259
pop of  0 O 4px       0.00103
pop of  0 O 4py       0.00103
pop of  0 O 4pz       0.00044
pop of  0 O 5px       0.00012
pop of  0 O 5py       0.00012
pop of  0 O 5pz       0.00010
pop of  0 O 6px       0.00002
pop of  0 O 6py       0.00002
pop of  0 O 6pz       0.00007
pop of  0 O 3dxy      0.00000
pop of  0 O 3dyz      0.00233
pop of  0 O 3dz^2     0.00787
pop of  0 O 3dxz      0.00233
pop of  0 O 3dx2-y2    0.00000
pop of  0 O 4dxy      0.00000
pop of  0 O 4dyz      0.00027
pop of  0 O 4dz^2     0.00041
pop of  0 O 4dxz      0.00027
pop of  0 O 4dx2-y2    0.00000
pop of  0 O 5dxy      0.00000
pop of  0 O 5dyz      0.00000
pop of  0 O 5dz^2     0.00018
pop of  0 O 5dxz      0.00000
pop of  0 O 5dx2-y2    0.00000
pop of  0 O 6dxy      0.00000
pop of  0 O 6dyz      0.00000
pop of  0 O 6dz^2     0.00005
pop of  0 O 6dxz      0.00000
pop of  0 O 6dx2-y2    0.00000
pop of  0 O 4f-3      0.00000
pop of  0 O 4f-2      0.00000
pop of  0 O 4f-1      0.00035
pop of  0 O 4f 0      0.00104
pop of  0 O 4f 1      0.00035
pop of  0 O 4f 2      0.00000
pop of  0 O 4f 3      0.00000
pop of  0 O 5f-3      0.00000
pop of  0 O 5f-2      0.00000
pop of  0 O 5f-1      0.00007
pop of  0 O 5f 0      0.00005
pop of  0 O 5f 1      0.00007
pop of  0 O 5f 2      0.00000
pop of  0 O 5f 3      0.00000
pop of  0 O 6f-3      0.00000
pop of  0 O 6f-2      0.00000
pop of  0 O 6f-1      0.00001
pop of  0 O 6f 0      0.00006
pop of  0 O 6f 1      0.00001
pop of  0 O 6f 2      0.00000
pop of  0 O 6f 3      0.00000
pop of  0 O 5g-4      0.00000
pop of  0 O 5g-3      0.00000
pop of  0 O 5g-2      0.00000
pop of  0 O 5g-1      0.00003
pop of  0 O 5g 0      0.00026
pop of  0 O 5g 1      0.00003
pop of  0 O 5g 2      0.00000
pop of  0 O 5g 3      0.00000
pop of  0 O 5g 4      0.00000
pop of  0 O 6g-4      0.00000
pop of  0 O 6g-3      0.00000
pop of  0 O 6g-2      0.00000
pop of  0 O 6g-1      0.00001
pop of  0 O 6g 0      0.00002
pop of  0 O 6g 1      0.00001
pop of  0 O 6g 2      0.00000
pop of  0 O 6g 3      0.00000
pop of  0 O 6g 4      0.00000
pop of  1 H 1s        0.70407
pop of  1 H 2s        0.01090
pop of  1 H 3s        0.00326
pop of  1 H 4s        0.00017
pop of  1 H 5s        0.00019
pop of  1 H 2px       0.01204
pop of  1 H 2py       0.01204
pop of  1 H 2pz       0.00087
pop of  1 H 3px       0.00793
pop of  1 H 3py       0.00793
pop of  1 H 3pz       0.00266
pop of  1 H 4px       0.00164
pop of  1 H 4py       0.00164
pop of  1 H 4pz       0.00044
pop of  1 H 5px       0.00018
pop of  1 H 5py       0.00018
pop of  1 H 5pz       0.00013
pop of  1 H 3dxy      0.00000
pop of  1 H 3dyz      0.00012
pop of  1 H 3dz^2     0.00075
pop of  1 H 3dxz      0.00012
pop of  1 H 3dx2-y2    0.00000
pop of  1 H 4dxy      0.00000
pop of  1 H 4dyz      0.00005
pop of  1 H 4dz^2     0.00011
pop of  1 H 4dxz      0.00005
pop of  1 H 4dx2-y2    0.00000
pop of  1 H 5dxy      0.00000
pop of  1 H 5dyz      0.00077
pop of  1 H 5dz^2     0.00012
pop of  1 H 5dxz      0.00077
pop of  1 H 5dx2-y2    0.00000
pop of  1 H 4f-3      0.00000
pop of  1 H 4f-2      0.00000
pop of  1 H 4f-1      0.00057
pop of  1 H 4f 0      0.00037
pop of  1 H 4f 1      0.00057
pop of  1 H 4f 2      0.00000
pop of  1 H 4f 3      0.00000
pop of  1 H 5f-3      0.00000
pop of  1 H 5f-2      0.00000
pop of  1 H 5f-1      0.00039
pop of  1 H 5f 0      0.00083
pop of  1 H 5f 1      0.00039
pop of  1 H 5f 2      0.00000
pop of  1 H 5f 3      0.00000
 ** Mulliken atomic charges  **
charge of  0O =     -1.22774
charge of  1H =      0.22774
Dipole moment(X, Y, Z, Debye):  0.00000,  0.00000,  1.06240
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_0.90/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.90)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 16:59:07 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        48.33

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpjy5lzmnb
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpjy5lzmnb
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.108137268565649  LUMO = 0.863836132886201
Initial guess E= -75.4153369400652  |g|= 1.15584e-08
macro= 0  E= -75.4153369400652  delta_E= 0  |g|= 1.15584e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4153369400652  |g|= 1.15584e-08  total 2 KF 4 JK
converged SCF energy = -75.4153369400652
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_0.90/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.90)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 16:59:30 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        82.83

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpdrcqaht1
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpdrcqaht1
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.108137268824148  LUMO = 0.863836133024863
Initial guess E= -75.4153369400652  |g|= 6.98343e-09
macro= 0  E= -75.4153369400652  delta_E= 1.42109e-14  |g|= 6.98343e-09  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4153369400652  |g|= 6.98343e-09  total 2 KF 4 JK
converged SCF energy = -75.4153369400652
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_0.90/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.90)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 16:59:58 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       123.17

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpw5t2wrg7
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpw5t2wrg7
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.108137268824222  LUMO = 0.170314518256515
Initial guess E= -75.415336940066  |g|= 4.38935e-07
macro= 0  E= -75.415336940066  delta_E= -5.68434e-14  |g|= 4.38935e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.415336940066  |g|= 4.38935e-07  total 2 KF 4 JK
converged SCF energy = -75.415336940066
u+d contributions  -0.050441465413092815
uu+dd contributions  -0.10250604404878004
ud contributions  -0.26228005096467927
u+d contributions  -0.002900592583138477
uu+dd contributions  -0.054719937500526665
ud contributions  -0.2140100722187869
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_0.90/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.90)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:00:06 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       136.94

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpsoyklrct
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpsoyklrct
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.108137263612313  LUMO = 0.863836134869645
Initial guess E= -75.4153369400652  |g|= 2.18203e-09
macro= 0  E= -75.4153369400652  delta_E= 0  |g|= 2.18203e-09  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4153369400652  |g|= 2.18203e-09  total 2 KF 4 JK
converged SCF energy = -75.4153369400652
#INFO: **** input file is /Users/mario/Documents/GitHub/UniMi/tesi_alessandro_tammaro/nevpt2/aug-cc-pvqz/anion/R_0.90/main.py ****
import numpy as np
import sys
sys.path.append('../../../src/')
from basis_constructor import Basis_Constructor
from bo_class          import BO_class
from bo_solver         import BO_solver
from fci_qse_solver    import FCI_QSE_solver
from fci_solver        import FCI_solver
from vqe_qse_solver    import VQE_QSE_solver
from pyscf             import gto,scf
from VQE_types         import vqe_data

outfile = open('results.txt','w')
mol = gto.M(atom=[['O',(0,0,0)],['H',(0,0,0.90)]],basis='aug-cc-pvqz',spin=0,charge=-1,
            symmetry=True,verbose=4).build()
mf  = scf.ROHF(mol)
mf  = scf.newton(mf)
mf.kernel()
if(not mf.converged):
   mf.kernel(mf.make_rdm1())
mf.analyze()

BC_object = Basis_Constructor(mol,mf)
BC_object.compute_core_valence()
BC_object.compute_external()

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s frozen] FCI energy %.12f \n" % np.nan) 

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s frozen] NEVPT2 energy  %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

BO_IAO = BO_class(mol,mf)
BO_IAO.transform_integrals(BC_object.valence)
BO_IAO = BO_IAO.freeze_orbitals([0,1])
BO_IAO_solver = BO_solver(BO_IAO)
outfile.write("IAO, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_solver.solve_with_scf()[1])
outfile.write("IAO, [1s,2s frozen] FCI energy %.12f \n" % BO_IAO_solver.solve_with_fci()[0])

BO_IAO_external = BO_class(mol,mf)
BO_IAO_external.transform_integrals(BC_object.return_basis())
BO_IAO_external = BO_IAO_external.freeze_orbitals([0,1])
BO_IAO_external_solver = BO_solver(BO_IAO_external)
outfile.write("FULL, [1s,2s frozen] SCF energy %.12f \n" % BO_IAO_external_solver.solve_with_scf()[1])
outfile.write("FULL, [1s,2s frozen] FCI energy %.12f \n" % np.nan)

SOLVER = FCI_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+FCI [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())
SOLVER = FCI_QSE_solver(BO_IAO,BO_IAO_external)
outfile.write("FCI+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

VQE_settings = vqe_data()
SOLVER = VQE_QSE_solver(BO_IAO,BO_IAO_external)
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(q-UCCSD)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_q_uccsd_output.npy',allow_pickle=True).item()
outfile.write("VQE(q-UCCSD) energy %.12f \n" % x['energy'])
VQE_settings.ansatz = 'su2'
VQE_settings.optimizer = 'cg'
VQE_settings.reps = 3
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (I) %.12f \n" % x['energy'])
VQE_settings.instance = 'statevector_simulator'
VQE_settings.optimizer = 'cobyla'
VQE_settings.max_iter = 0
VQE_settings.initial_point = x['opt_params']
SOLVER.set_quantum_variables(VQE_settings)
outfile.write("VQE(Ry)+QSE [1s,2s frozen] NEVPT2 energy %.12f \n" % SOLVER.compute_nevpt2_energy())

#  -----------------------------------------------------------------------------

x = np.load('vqe_su2_output.npy',allow_pickle=True).item()
outfile.write("VQE(Ry) energy (II) %.12f \n" % x['energy'])
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Sun Jan  2 17:00:33 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 0
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:       179.19

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.





******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp22_jk_mu
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf.RHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp22_jk_mu
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
  HOMO = -0.108137263612389  LUMO = 0.17031451822315
Initial guess E= -75.4153369400659  |g|= 3.91613e-07
macro= 0  E= -75.4153369400659  delta_E= -4.26326e-14  |g|= 3.91613e-07  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-75.4153369400659  |g|= 3.91613e-07  total 2 KF 4 JK
converged SCF energy = -75.4153369400659
u+d contributions  -0.02575016357709273
uu+dd contributions  -0.06685151062315342
ud contributions  -0.17903397182521327
u+d contributions  -0.0029202443308967217
uu+dd contributions  -0.043953685168028805
ud contributions  -0.15600275529007124
----- VQE data ------
target_sector:  None
optimizer:  bfgs
max_iter:  1000
instance:  statevector_simulator
shots:  1000
ansatz:  q_uccsd
initial_point:  None


 >>>>> AM I PREPARED?  False
qse operators prepared for  u
qse operators prepared for  d
qse operators prepared for  uu
qse operators prepared for  dd
qse operators prepared for  ud
In the tapering subroutine, i=0, E(i)=-74.845006, i_min=-1
In the tapering subroutine, i=1, E(i)=-75.149785, i_min=0
In the tapering subroutine, i=2, E(i)=-75.307200, i_min=1
In the tapering subroutine, i=3, E(i)=-74.939077, i_min=2
In the tapering subroutine, i=4, E(i)=-75.307200, i_min=2
In the tapering subroutine, i=5, E(i)=-74.939077, i_min=2
In the tapering subroutine, i=6, E(i)=-74.597393, i_min=2
In the tapering subroutine, i=7, E(i)=-74.806083, i_min=2
In the tapering subroutine, i=8, E(i)=-75.149785, i_min=2
In the tapering subroutine, i=9, E(i)=-75.415337, i_min=2
In the tapering subroutine, i=10, E(i)=-74.964002, i_min=9
In the tapering subroutine, i=11, E(i)=-75.307200, i_min=9
In the tapering subroutine, i=12, E(i)=-74.964002, i_min=9
In the tapering subroutine, i=13, E(i)=-75.307200, i_min=9
In the tapering subroutine, i=14, E(i)=-74.806083, i_min=9
In the tapering subroutine, i=15, E(i)=-74.628643, i_min=9
after tapering qubits(H) =  4
qse operators tapered for  hamiltonian
qse operators tapered for  qse_s_u
qse operators tapered for  qse_h_u
qse operators tapered for  qse_s_d
qse operators tapered for  qse_h_d
qse operators tapered for  qse_s_uu
qse operators tapered for  qse_h_uu
qse operators tapered for  qse_s_dd
qse operators tapered for  qse_h_dd
qse operators tapered for  qse_s_ud
qse operators tapered for  qse_h_ud
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
u+d contributions  -0.002920208251949744
uu+dd contributions  -0.04395362344912079
ud contributions  -0.15600261653742226
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
u+d contributions  -0.002924009838869029
uu+dd contributions  -0.04395762104881092
ud contributions  -0.1560080488429641
 >>>>> AM I PREPARED?  True
          
q_0: ─────
     ┌───┐
q_1: ┤ X ├
     ├───┤
q_2: ┤ X ├
     └───┘
q_3: ─────
          
u+d contributions  -0.002924009838869029
uu+dd contributions  -0.04395762104881092
ud contributions  -0.1560080488429641
